プログラミング の こと です ね 。 
cron で の 処理 起動 時 に 「 . bash _ profile 」 読み込ん で まし た っけ ？ 
簡単 に 言え ば プログラミング の 事 です ね 。 
chiaki 7 aaa さん 下記 の 資料 を お勧め し ます 。 他 の 書籍 を 探す に し て も 、 下記 書籍 の 目次 と 比較 し た ほう が 良い でしょ う 。 ・ 書籍 ： 『 ルビィ の ぼうけん 』 http:// www .s hoeisha . co.jp / book / rubynobouken / ・ 書籍 ： たのしい Ruby 第 4 版 ・ 書籍 ： Ruby 2 さまざま な データ と アルゴリズム ( CD-ROM 付 ) ( プログラミング 学習 シリーズ ) 大型 本 ・ サイト ： RHG 第 1 章 Ruby 言語 ミニマム Ｈ ＴＴＰ :// i . loveruby .net / ja / rhg / book / minimum . html この サイト は 、 たった の １ ページ だ が 、 最初 に 覚える べき 最小限 の こと だけ が 書か れ て い て 、 迷い道 に 入り込む 余地 が 少ない 。 ・ サイト ： Ruby ライブラリ の 辞書 的 マニュアル Ｈ ＴＴＰs :// www . ruby - lan g.o rg / ja / documentation / ・ サイト ： Ruby で アルゴリズム を 学ぶ ＨＴＴＰ :// www . mnet . ne.jp /~ tnomura / algorithm . html この ｕｒｌ に は 、 Ｃ 言語 で 記述 さ れ て い た コード を Ｒｕｂｙ に 直訳 し て 、 応用 アルゴリズム が 掲載 さ れ て い ます 。 ・ 対話 型 ruby 実行 環境 ： https :// repl . it / > Vagrant up という コマンド が 上手く 動作 せ ず 、 Ruby を 使う 以前 の レベル で 立ち止まっ て い ます 。 Vagrant 環境 は 、 環境 構築 に 詳しい ティーチング・スタッフ が 準備 し た 環境 を 、 生徒 が 無茶苦茶 に 壊し て も 直に 戻せる よう な 環境 として は 便利 です が 、 全て 独学 の 人 に は 、 敷居が高い だけ です 。 termina l を 開く だけ でも 難しい 場合 、 無理 を する 必要 は あり ませ ん 。 repl . it サイト を 開い て 、 ブラウザ 経由 で ruby コード を 投稿 すれ ば 、 ドットインストール の Ruby 教材 や 、 その他 の 書籍 の 入門 レベル の プログラム は 試す こと が でき ます 。 - - ------------------------- ＜ 補足 ＞ 『 ルビィ の ぼうけん 』 最近 、 『 ルビィ の ぼうけん 』 という 、 小学生 向け の 絵本 に 載っ て い ます 演習 課題 を 、 プログラミング を 学ん で 2年 目 の 大学生 が 1 発 で は 解け なかっ た 人 の 例 を 観 まし た 。 それ は 、 プログラマ に なる 為 に は 、 マズ 「 知的 持久力 （≒ 根気 ） や 洞察 力 が 居る という 、 独学 だけ で は 学び 難い 教訓 を 含ん で い た という 事例 で も あり ます 。 この 絵本 は 、 ソウソウタル 推薦 者 も 居る だけ あっ て 、 結構 深遠 な 侮れ ない 演習問題 が 載っ て いる と 思っ て 良い でしょ う 。 『 ルビィ の ぼうけん 』 より 、 引用 「 下 の 作業 項目 を 、 順序 良く 並べ 替える こと は 出来 ます か ？ a . お さら を ならべる b . スプーン を ならべる c . お たん じょうび ケーキ を 、 テーブル に ならべる d . テーブルクロス を ひろげる 。 」 なお 、 この 設問 に 例示 さ れ た 順 に 並べる と 、 お たん じょうび ケーキ の 上 に テーブルクロス が 被さっ て い て 、 食べる こと が でき ませ ん 。 また 、 この 設問 に 例示 さ れ た 順 で は 、 ケーキ の 下 に スプーン が 隠れる ので 、 スプーン を 持つ こと も 出来 ませ ん 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1216291211 ... 
ruby KCODE で 検索 する だけ で ruby1.9 で 廃止 さ れ た って 説明 が いっぱい 出 て き ます けど … … スクリプト ファイル 内 で エンコーディング を 確認 する 方法 は 、 確か に ちょっと だけ 探し にくい けど 、 ちゃんと で て き ます 。 __ ENCODING __ を 使い ましょ う 。 print (" ENCODING =", __ ENCODING __); とか puts " ENCODING =#{__ ENCODING __}" と か 。 
そう で も ない と 思い ます よ 。 
プログラミング の 事 です ね 
一定 の 時間 で ツイート さ せる に は Linux サーバー や Unix サーバー に 搭載 し て いる crontab という 機能 を 使い ます 。 Windows や Mac 環境 で は その crontab という 機能 は 搭載 さ れ て い ませ ん 。 
その ソート ボタン を 押し た 時 に 、 自分自身 の ページ へ GET で パラメータ を 送り ます 。 例えば 、 この ページ を index . php として 、 nankai で ソート し たけれ ば 、 index . php ? sort = nankai & order = desc とか 、 index . php ? sort = nankai & order = asc とか 、 自分 で わかり やすい よう に 、 ソート する 項目 名 と 、 昇順 降順 どちら か な の か を 送り ます 。 < a href =" index . php ? sort = nankai & order = asc "> 何 階 を 昇順 </ a > で 、 この ページ の SQL 文 の 構築 より 前 で 、 その GET パラメータ を 受け取っ て 、 SQL 文 の order by に 突っ込め ば よい です 。 （ デフォルト は 、 何 を 昇順 / 降順 で やる の か それぞれ 変数 に いれ とい て 、 その 変数 を 上書き する と 良い です ） 
不具合 かも しれ ませ ん ね 。 
そう で も ない ですよ。 
< php function createToken () { $_ SESSION [' token '] = bin 2 hex ( openssl _ random _ pseudo _ bytes ( 16 )); } function validateToken () { $ token = ( string ) filter _ input ( INPUT _ POST , ' token '); if ( empty ($_ SESSION [' token ']) || empty ($ token ) || $ token !== $_ SESSION [' token ']){ echo ' Invald Token !'; } } といった クロスサイトリクエストフォジェリー ( CSRF ） といった 対策 を する 必要 が あり ます 。 $_ SESSION という スーパー グローバル変数 を 使う ので プログラム 中 に ses si on_ start (); と 書い て おき ます 。 if ( $_ SERVER [' REQUEST _ METHOD '] !== ' post ') { createToken (); } else { validateToken (); // コレ 以降 は 書き込み 処理 を 行う } < form > タグ から </ form > に ある 以下 の 文 を 書い て おき ます 。 < input type =" hidden " name =" token " value ="<?= htmlspecialchars ($_ SESSION [' token '], ENT _ QUOTES , " UTF-8 "); ?>"> CSRF 対策 する とこ で 悪意 の ある 書き込み を 防ぐ こと が でき ます 。 
プログラミング の 事 です 
先ずは 、 explode () の 使い方 を 公式 マニュアル で 調べ て ください 。 > $ explode 2 = explode (",",$ file [ 0 ]); > print _ r ($ explode 2 ); この 部分 で の 表示 結果 で 、 分かり そう な もの です が ... ＿ ＿ デバッグ 時 は print _ r () より var _ dump () の 方 が 良い と 思い ます 
客 先 提出 単価 が 600 , 000 / 月 だっ た として 、 そこ から 給料 払う のに 単価 を 抑え たい から 。 なんだかんだ 言っ て も 、 未だに 女性 の 方 が 給料 低く 抑え てる 企業 は 多く 存在 し ます 。 
ago 1m utant さん 下記 条件 で 考え て み た の だ が 、 、 意外と メンドクサイ です 。 ・ utf-8 エンコード の 漢字 とか の 下位 バイト が 偶々 ' N ' と 同じ 文字 コート と ナル 場合 を 除外 し て 、 ' N ' だけ を 数える 。 ・ 改行 文字 が 全く 含ま れ ない かも しれ ない 。 （ gets とか 使え ない ） ・ ’ N ' が 全く 含ま れ ない 場合 、 １ 番目 の ファイル は 0 バイト 。 ・ 最長 の ’ N ' の 続き が ファイル 末 に しか ない 場合 、 ２ 番目 の ファイル は 0 バイト 。 誰 か 、 もう少し エレガント な コード を 求む 。 「 n = 30 inFile = File .new (' a.t xt ',' r : utf-8 ') reqSize = inFile .s ize / 2 bestCount = 0 bestSize = 0 curCount = 0 curSize = 0 inFile . each _ char {| c | curSize += 1 if c == ' N ' curCount += 1 elsif c ='\ n ' || '\ r ' else curCount = 0 end if ( curCount >= n ) && (( curSize - reqSize ). abs < ( bestSize - reqSize ). abs ) bestCount = curCount bestSize = curSize end } inFile . rewind outFile = File .new (' b . txt ',' w +: utf-8 ') curSize = 0 inFile . each _ char {| c | curSize += 1 outFile . write ( c ) if curSize >= bestSize break end } outFile . close outFile = File .new (' c . txt ',' w +: utf-8 ') inFile . each _ char {| c | outFile . write ( c ) } outFile . close inFile . close 」 ちなみに 、 上記 の コード を C言語 に 直訳 など する と 、 冒頭 の 漢字 の 下位 バイト が 偶々 ’ N ' の 場合 に 旨く は動 か ない分 だけ 、 Ruby の 方 が 簡単 だ が 、 、 
単純 に 指定 URI の http を https に 書き換える だけ で 実行 できる か と 思い ます 具体 的 に は 下記 の よう に なるか と 思い ます ================== require ' net / http ' require ' uri ' uri = URI . parse (' https :// www . google . co.jp ') response = Net :: HTTP . get _ response ( uri ) puts response. inspect Net :: HTTP . get _ print ( uri ) # 蛇足 ================== 
モデル の 関連 付け は 上手く でき た よう で 、 嬉しく 思い ます ！ ！ ご 質問 を 上手く 読み取れ て おら ず 、 恐縮 です 。 ご 質問 で 書か れ て いる 「 記事 」 という の は comment クラス という こと で よろしい でしょ う か ？ もし 違っ て いれ ば すいません が 、 comment : 記事 という 前提 で お 応え いたし ます current _ user が User クラス で あれ ば current _ user . comments で urrent _ user と 紐 付い て いる comment の 配列 が 得 られ ます よ って 、 show ページ の 「 <%= comment . body %> 」 の 部分 を 下記 の 用 に する こと で 、 投稿 し た 全て の コメント が 表示 さ れ ます <% current _ user . comments . each do | comment | %> <%= comment . body %> <% end %> ■ うまく 行か なかっ た 場合 ( 1 ) current _ user . comments の 中身 が 入っ て いる か 確認 下記 の コード で 、 「 current _ user . comments 」 の 中身 が ざっくり 表示 さ れ ます 記事 が ある はず な のに 、 nil ( 空 ) だっ た 場合 は 何らかの ミス が ある と 思わ れ ます <%= current _ user . comments . inspect %> ( 2 ) ( 1 ) が 上手く 行か なかっ た 場合 この 場合 、 comment の user _ id が うまく 設定 さ れ て い ない 可能性 が 高い と 思わ れ ます 下記 の よう な コード で 、 user _ id が 設定 さ れ て いる か 、 ご 確認 ください <% comments = Comment . all %> <% comments . each do | comment | %> <%= comment . user _ id % >< br > <%= comment . body %> <% end %> 例えば 、 current _ user . id が 1 の ユーザ が 書き込ん だ Comment は comment . user _ id が 1 と なっ て いる 必要 が あり ます ご 解決 の 助け に なれ ば 幸い です 
Ruby 言語 は 、 単一 言語 で 、 下記 に 示す 5 分野 の 入門 的 コード を 、 他 の 言語 より コンパクト に 記述 できる 稀有 な プログラミング言語 です 。 プログラミング言語 の 種類 を 増やす より 、 応用 分野 の 幅 を 広げ た ほう が 良い と 思い ます 。 (a) サーバ ソフト ( b ) デスクトップ 対話 型 アプリ ( c ) パズル の よう に 、 大量 計算 を 伴う 処理 ( d ) 電卓 として ； (e) 組込み 機器 分野 ； Raspberry Pi と Ruby で LED 制御 ； 上記 の 5 分野 の 入門 的 な 百 行 未満 の コード は 、 下記 の 拙作 回答 の リンク 先 に も 示し て い ます 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1415956970 ... この リンク 先 の 百 行 未満 の コード 、 ５ 種 を 、 「 他 の 単一 言語 で 記述 でき た 」 という 人 、 出 て くる か な ？ そこ に 例示 し て いる Ruby コード を 観 て も 、 ドレ 一つ 自分 が 最も 推奨 する 言語 に 書き直せ ない ” 自称 ｘ ｘ 言語 の 使い手 ” の 言う こと など 、 信じ れ ます か ？ ＜ 補足 ＞ ☆ プログラミング 学習 の ” 伸び なやみ ” の 証拠 ・ 中学生 に も 解ける パズル を 解く の に 向い た プログラミング言語 は ？ http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1113650350 ... こうした パズル を 解く に は 、 抽象 データ構造 や アルゴリズム の 学習 が 居る もの です が 、 その レベル に 達し ない まま ” 伸び悩み ” する 人 も 多い よう です 。 この 御題 に 回答者 を 出し て い ない 言語 など 、 学習 の 優先 度 は 、 ズーット 下げ て 良い でしょ う 。 ・ 言語 自由 お題 で 、 アルゴリズム 虫食い 算 http : / / detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 11145031321 # a3 58109314 この 御題 の 質問者 は 、 自称 PHP の 使い手 の よう だ が 、 Ruby 言語 で 約 ７ ０ 行 の コード を 回答 し た あと カレコレ ２ 年 近く 、 この 御題 の コード を PHP 言語 で は 書け て い ない 。 と 、 かれこれ １ 年 以上 、 挑発 的 に 何 度 か 問いかけ て いる の だ が 、 PHP や C言語 だけ で は なく 、 ” 初学 者 に ｘ ｘ 言語 を 推奨 する 自称 ｘ ｘ 言語 の 使い手 の 方 ” は 、 この 御題 に は 回答 を しよ う と し て い ない 。 
tsucyu さん Ruby 言語 は 、 標準 装備 の クラス の 機能 が 多 機能 な ので 、 class も メソッド も 自作 する 必要 は あり ませ ん 。 ＞ class で 括ら なく て も 、 目的 は 達成 できる の に 同様 に メソッド を 自作 し なく て も 、 大抵 の 目的 は 達成 でき ます 。 下記 URL に 、 Ruby の 手ほどき の コード を ６ 例 、 実行 結果 を 示し て い ます が 、 自作 関数 など 使わ ない で ” 来月 の カレンダー ” 表示 とか 、 １ から 1 万 まで の 逆数 の 和 とか 計算 でき て いる でしょ う 。 http :// ideone . c om / 41 yUao この コード は 、 普通 の 入門書 だ と ５ ０ ページ 位 読み通し て 、 ヨウヤク 解る レベル だ と 思い ます 。 ＞ 使わ ない で も とりあえず の 処理 が でき て いる ので 、 ＞ わざわざ 行 を 増やす 意味 が 分から ない と 、 どうも 前 に 進 覚える こと を 最小 化 する の は 、 それ は ソレ デ 、 良い 事 です 。 そう ゆう 場合 に 良い 参考 資料 も あり ます 。 ・ 第 1 章 Ruby 言語 ミニマム http:// loveruby .net / ja / rhg / book / minimum . html A . オブジェクト に対して は メソッド が 呼べる 。 p " content ". upcase () B . メソッド 呼び出し は （ オブジェクト を 返す ので ） 、 連鎖 し て よい 。 " content ". upcase (). downcase () 覚える べき 最小限 の こと は 、 コレ だけ です 。 if 文 も for 文 も 、 実は 覚え なく て 良い です 。 それ より 、 標準 装備 さ れ た map とか select とか の メソッド の 使い かた の 方 を 覚え た ほう が 良い です 。 例えば 、 「 １ から 1 万 まで の 逆数 の 和 」 は 、 「 （ １ から 1 万 まで の 数 ( n )） を 、 分子 が １ 分 で 分母 が n の 分数 （ Rational ) に 変換 し た 並び に 、 演算子 （:+) を 挟ん だ （ inject ) 式 の 計算 結果 を 、 表示 （ P ) する 」 という 風 に 、 和文 に １ 対 １ に 対応 する よう な コード が かけ ます 。 p ( 1 .. 10000 ). map {| n | Rational ( 1 , n )}. inject (:+) これ を 理解 する のに 、 上記 の A . と B だけ で 済ん だ でしょ う ーー ーー ーーーーーーーーーーーーーーーーーーーーーーーーー 一応 、 Ruby 言語 の マニュアル も 引用 し て おこ う 。 http:// docs . ruby - lan g.o rg / ja / 2 . 1 . 0 / doc / spec = 2 fdef . html # method 引用 「 ◆ メソッド 定義 文法 : def メソッド 名 ['(' [ arg 0 ['=' default 0 ]] ... [',' '*' rest _ args [, post ...]] [',' key 1 : [ val 1 ]] ... [',' '**' kwrest ] [',' '&' block _ arg ]`)'] 式 .. ( body ) [ rescue [ error _ type ,..] [=> evar ] [ then ] 式 ..].. [ else 式 ..] [ ensure 式 ..] end この 定義 の ある 場所 に メソッド を 定義 し ます 。 すなわち 、 クラス / モジュール 定義 中 なら ば その クラス / モジュール の メソッド を 定義 し ます 。 トップレベル なら ば どこ から でも 呼べる メソッド を 定義 し ます 。 この よう な メソッド は 結果 として 他 の 言語 における 「 関数 」 の よう に 使え ます 。 」 引用 終わり で も 、 この 説明 より 、 少し だけ 覚える こと を 少なく する なら 、 「 トップレベル の 開始 直前 、 実は 隠れ て 匿名 の class 文 が 実行 さ れ て いる の だ 。 だから 、 トップレベル で の def 文 は 、 その 匿名 クラス の メソッド を 定義 し て いる の あっ て 、 普通に class 文 と end 文 に 挟ん だ def 文 と 何ら 変わら ない 」 と 覚え て おく と 、 将来 、 並列 処理 （ マルチ プロセス ） の コード を 書い た とき に 、 役に立つ でしょ う 。 
リクエスト ありがとう ござい ます 。 マスク し た 下 の 部分 の 表記 は 上野東京ライン 開通 時 から あり まし た が ( 表記 は 【 東海道 線 品川 横浜 大船 方面 】 だっ た と 思い ます )、 途中 から マスク し た みたい です 。 理由 は わから ない の です が 、 上野東京ライン 運行 時 は 7 ･ 8 番線 ホーム から 横浜 方面 の 列車 は 発車 し ない ため 誤 乗車 防止 の 為 と 思わ れ ます 。 
今回 は あまり 意味 を 感じ ない かも しれ ませ ん が 、 たとえば 、 何度も 使う と し ます 。 for 文 でも 使っ て 、 それ 以外 の ところ でも 使っ て ... 数値 そのままで 指定 する と 、 変更 毎 に 設定 し なおさ なけれ ば なり ませ ん 。 たとえば 、 メソッド A から メソッド D で 使う と する と 、 少なくとも 4 箇所 は 定義 し なおさ なけれ ば なり ませ ん 。 です が 、 定数 に する と 一 箇所 で 済み ます 。 変数 で も いいじゃない か ... と 思う かも 知れ ませ ん が 、 考え て み て ください 。 変数 だ と 書き換え が 可能 です ね 。 たとえば 、 @ test = 100 print ( @ test ) # ここ で は 100 の つもり @ test = 1 # なんらかの 手違い により 100 が 1 に なっ た と する print ( @ test ) # ここ で は 100 の つもり だ が 、 上記 の 理由 で 1 に . こういう 風 に 、 なんらかの ミス によって 値 が 変更 さ れる 可能性 が あり ます 。 自分 は そんな くだらない ミス し ない ... そう か も しれ ませ ん が 、 ミス も あり うる ので 。 
ary =[ 2 , 9 , 4 , 7 , 8 , 8 , 7 , 2 , 1 , 4 , 3 , 7 ] rand ( ary .s ize ). times {    ary [ rand ( ary .s ize )]= 55 } p   ary 
each _ cons で 任意 範囲 を 取得 し つつ ループ http:// docs . ruby - lan g.o rg / ja / 2.0 . 0 / class / Enumerable . html # I _ EACH _ CON ... each _ slice と共に 稀 に 使う かも #// ide on e.c om / bdjuVw # a =[ 1 , 3 , 5 , 7 ] p a . each _ cons ( 2 ). map {| x , y | y - x } 
デスクトップ に 、 print (" hello \ n ") と 記述 し た ファイル を 置い て ください 。 名前 は 「 test . rb 」 とか 適当 に 。 そして 、 LXterminal 等 の シェル を 起動 し て ください 。 ( 多分 アクセサリ の ところ に ある と 思い ます 。 ) そこで 、 cd Desktop ruby test . rb と 行 ごと に 入力 すれ ば いける と 思い ます 。 
monster _ dearib さん いろいろ 学ん で みる 。 目的 を 実現 する 方法 は 、 同じ よう な もの 1 . 目的 医学 ・ 物理学 ・ 経営 言語 中国語 ・ 英語 ・ 日本語 ・ 独語 2 . 目的 ゲーム ・ 科学 計算 ・ ネット 言語 C , C++ , basic , java , javascript , html 
Rails の ハマり ポイント です よ ね has _ many , belongs _ to の 使い方 は 逆 に なり ます 。 また 、 has _ many で 指定 する 場合 は クラス 名 を 複数形 belongs _ to で 指定 する 場合 は 単数形 に する 必要 が あり ます つまり 、 下記 の 用 に クラス 定義 し ます ------------------------ class User < Application Record # User クラス は 複数 の entrepreneurs と comments を 持っ て いる ( has _ many ) has _ many : entrepreneurs # 注 : has _ many な ので 複数 系 has _ many : comments # 注 : has _ many な ので 複数 系 end ------------------------ class Comment < Application Record # Comment クラス は user に 属する belongs _ to : user end ------------------------ class Entrepreneur < Application Record # Entrepreneur クラス は user に 属する belongs _ to : user end ------------------------ また 、 Comment , Entrepreneur は それぞれ user _ id ( integer ) の フィールド が 必要 です 具体 的 な チェック 例 を 下記 に 示し ます ( 1 ) モデル 宣言 & マイ グレート rails generate model User name : string tel : string rails generate model Comment user _ id title : string content : string rails generate model Entrepreneur user _ id name : string rake db : migrate * user _ id 以外 の データ フィールド は 適当 です ( 2 ) rails c を 起動 し て 動作 確認 user = User .new (: name => ' 氏名 ', : tel => ' 000 - 0000 - 0000 ') # 親 の User を 宣言 user . comments . build (: title => ' タイトル ', : content => ' コンテンツ ' ) # 子 の コメント を 新規作成 user . entrepreneurs . build (: name => ' 企業名 ') # 子 の 起業家 を 新規作成 user .s ave # 保存 user . inspect # User を 表示 user . comments . inspect # コメント を 表示 ( 配列 に なっ て いる こと に 注意 ) user . entrepreneurs . inspect # 起業家 を 表示 ( 配列 に なっ て いる こと に 注意 ) ■ ハマリ ポイント は ( 1 ) has _ many , belongs _ to 複数形 ・ 単数形 が 違う ( 2 ) 親 の ID 保存 フィールド が ない ( 今回 は user _ id ) あたり か と 思い ます has _ many , belongs _ to は 英語 の 意味 を 捉える と 理解 し やすい か と 思い ます 下記 の サイト は 丁寧 に 解説 し て いる と 思い ます http:// www .s tonedot . com / lecture 6 . html で は 、 楽しい プログラミング を !! 
写真 よーく 見 て み たら 、 エラー 吐い てる ね 。 読め ない 。 Ruby を 勉強 し 始め た と いう より 、 Rails 始め た の ね 〜 。 ターミナル で rails new hogehoge し て 出来上がっ た hogehoge ディレクトリ に cd し たら 、 rails s ブラウザ で http:// localhost : 3000 開け ば 普通 は デフォルト の welcome ページ が 開ける の よ 。 
＞ 編集 し たい の に 開け ませ ん 右クリックメニュー の 「 送る ( N )」（ SendTo ） に 、 Terapad の ショートカット を 入れ て おき ます 。 ＊ ＊ ＊ windows で は ショートカット の 名前 や メニュー の 頭文字 を キーボード 入力 で 選択 できる ので 、 「 右クリック → N → T 」 と 押す と 、 マウス を 動かさ ず に ラク に テキストエディタ で 開く こと が でき ます 。 
yankee 13500 kt さん Ruby の gsub 関数 と 、 ハッシュ と を 組み合わせる と 簡単 です ね 。 「 textDic ={} textDic [' A '] = ' AADA と パターン 。' textDic [' BB '] = ' ビー に 対応 する パターン B 。' textDic [' CCC '] = ' シー に 対応 する パターン C 。' replatePattern = Regexp . union ( textDic . keys ) sample =' A text is CCC cC BB AA B other ' sample . gsub ( replatePattern , textDic ) STDIN . each {| line | puts line . gsub ( replatePattern , textDic ) } 」 sample の 出力 は 、 「 " AADA と パターン 。 text is シー に 対応 する パターン C 。 cC ビー に 対応 する パターン B 。 AADA と パターン 。 AADA と パターン 。 B other " 」 ここ で は 、 textDic は 、 メモリ 上 に 組み立てる 連想配列 だ が 、 「 operator [' A ']」 お 部分 を 差し替える こと が できる Ruby で は 、 textDic オブジェクト を redis など の key - values 型 の データベース に 差し替え て 、 大規模化 し て も 、 上記 の メイン ルーチン は 、 殆ど 変更 し なく て 済み ます 。 これ は 、 「 トップダウン 設計 の 後退 が 無く て 、 インクリメンタル 設計 が 容易 」 と 言える でしょ う 。 一方 、 C言語 や EXCEL - VBA など の 、 古い 言語 だ と 、 「 operator [' A ']」 の 部分 を 差し替える こと が 出来 ない ので 、 「 将来 大規模化 し たい カモ しれ ない 」 の で あれ ば 、 「 operator [' A ']」 の 部分 を 最初 から データベース Access 関数 で 書か なけれ ば なら なら ない の です 。 それ は 、 「 トップダウン 設計 しよ う として も 後退 が 予見 さ れる ので 、 ボトムアップ 設計 しか でき ない 。 インクリメンタル 設計 不能 」 という 、 スタートアップ に 不向き な 特性 です 。 この よう に 、 開発 方法論 や 、 段階 的 な 機能拡張 の し やすさ に 及ぼす 影響 まで 、 言語 仕様 を 深く 理解 し て いる 人 は 、 自称 ” C言語 の 使い手 ” とか 、 初学 者 に EXCEL - VBA を 推奨 する 程度 に ” 自称 識者 ” を 名乗る 人 に は 出 て こ ない もの だろ う か ？ 
お 使い の 端末 に は SQLite ( リレーショナル データベース ね ) は インストール さ れ てる の ？ Mac なら 最初 から インストール さ れ てる けど windows は インストール さ れ て ないと 思う なー 
https :// blog . techstars .jp / rails - book 938383 / 「 10日 で 覚える Ruby on Rails 入門 教室 」 「 改訂 3 版 基礎 Ruby on Rails 」 で 初歩 的 な 所 を 学ん だ うえ で 、 「 パーフェクト Ruby on Rails 」 「 Ruby on Rails 4 アプリケーション プログラミング 」 に ステップアップ する 感じ です か ね 。 
この サイト の 通り に やっ て み たら 出来 まし た よ 。 http:// hyottokoaloha . hatena blog . com / entry / 2015 / 04 / 25 / 100605 sudo apt - get update sudo apt - get install libssl - dev sudo apt - get install ruby - dev が 、 足り ない の で は ？ ちなみに 、 Raspbian jessie で やり まし た 。 
キャド と 読み ます 。 。 。 。 
しっかり CAD について 勉強 すれ ば でき ます よ 。 
> プログラミング 初心者 にとって この 本 は いい の でしょ う か わたし の 直感 に より ます と 、 教科書 に は ２ 種類 あり ます 教師 ・ 先生 ・ コーチ が 必要 な もの と 、 独学 専用 の もの です ＊ ＊ ＊ 前者 の 書籍 は 、 買う 人が 先生 な ので 、 内容 は 教える 側 が 優位 に 立てる よう な 内容 です 。 教師 の 側 が 「 教え て い て 楽しい 」 と なる 内容 から 構成 さ れ て い ます 。 教える 人間 の 存在 を 前提 を し て いる ので 、 書い て い ない こと が ある かも しれ ませ ん 。 問題集 に 答え が ない … … など の つくり に なっ て いる 教科書 は 、 教師 を 必要 と する 傾向 が 高い ハズ だ と 推測 でき ます 。 この 時 、 教師 は 学生 の 提出 し た 答案 を 添削 できる から です 。 この 辺り は 、 柄谷行人 の 『 「 教える － 学ぶ 」 の 非対称性 』 について 書か れ た 「 探求 Ｉ 」 を 読ん で ください 。 ＊ ＊ ＊ つまり 、 『 独学 専用 に 作ら れ て いる 教科書 』 なる もの が 本当に 存在 する 場合 、 その 書籍 は 教師 を 排除 し て しまう ので 、 教師 は その よう な 本 を 忌避 し ます 。 なぜなら 、 その 本 を 買え ば 学習者 は 独学 で 習得 可能 な ので 、 教師 が 要ら なく なる から です 。 その よう な 本 は 、 教師 は （ 学校 で は ） 教科書 として 選ば れ ませ ん 。 「 学校 」 という システム に すら 、 権威 が 無くなっ て しまう から です 。 ここ に は 二項対立 が ある こと が 分かり ます が 、 その 解消 は わたし に は 思い付き ませ ん 。 
> hahahaha _ 0714 さん 同じ よう な 質問 を 過去 に 見かけ た 事 が 有る ので 、 過去ログ を 検索 する と 良い と 思い ます 。 
よう 、 誰 に対して も 、 虐め 殺し たり 等々 の 数々 の 重犯 罪 を も 犯し 、 其の 罪 を も 着せ てる 事 とか を 完全 に 棚 に 上げ て 己 の 都合 の 悪い 時 丈 は 、 復讐 法 とか を 否定 し てる 之 以上 無い 程 の 極悪人 の 偽善者 の 犯罪者 の 貴様 等 塵 屑 さんよ 然 遣っ て 、 図 に 乗り 、 明らか に 沢山 の 人様 から も 、 悲しま れ てる 植松 聖 に 直接 殺さ れ た 彼 の 被害者 の 皆様 を も 誹謗中傷 し てる が 故に 、 尚更 、 誰 から も 、 何時も 何時 も 、 毎日 毎日 、 ずっと 、 ずっと 、 完璧 に 報復 等 々 含め て 、 色々 、 さ れ 続け 剰え 、 何れ 程 、 悲惨 な 目と か に 遭わ さ れ て も 、 だーーー れ から も 、 同情 、 共感 、 心配 等々 は 例え 、 天地 が ひっくり返っ て も 、 全然 無い 惨め な 屑 共 の 一 人 で 在る 貴様 等 塵 屑 さんよ 其れ 程 の 惨め な 雑魚 の 分際 が 、 何 、 偉 そう に 人様 の 不幸 を 笑える の ？ 気色 悪い し 、 胸糞 悪い と しか 言い様 が 無い ね 勿論 、 僕 も 植松 聖 に は 死刑 を 望ん でる が 、 だ と し たら 如何 為る ？ 植松 聖 も 、 其れ を 慕う お前 等 も 、 拘置所 で も 凄惨 な 虐め を も 受け て 誰 から も 見捨て られ て 、 とっとと 、 無様 に 果て ちまい な 
＞ ドットインストール の Rubyonrails を 最初 から 最後 の 講座 を 学習 し たら どの 程度 の アプリ 作成 が 可能 です か ？ カテ 違い な ので お断りします 。 
CAD ( キャド computer - aided design ) は 、 コンピュータ 支援 設計 と も 訳さ れ 、 コンピュータ を 用い て 設計 を する こと 、 あるいは コンピュータ による 設計 支援 ツール の こと （ CAD システム ） 。 人 の 手 によって 行わ れ て い た 設計 作業 を コンピュータ によって 支援 し 、 効率 を 高める という 目的 から き た 言葉 です 。 
csv [: post _ date ]. each _ with _ index do | date , i | これ が 、 そもそも 不味い と 思い ます 。 これ で は 、 値 を 得 て いる の で あっ て 、 列 が 特定 出来 ませ ん 。 row の オブジェクト で ループ を 作る 必要 が あり ます 。 別 ファイル に 書く として 、 こんな 感じ に し まし た 。 #!/ usr / bin / env ruby require ' csv ' file _ csv = './ csv / postcsv ' file _ csvw = './ csv / postcsvw ' csv = CSV . table ( file _ csv ) csv . each do | row | if row [: post _ date ] =~ /\ d { 4 }-\ d { 2 }- 01 / row [: category ] = ' beginning _ month ' end end csvw = CSV . open ( file _ csvw ,' wb ') csvw << csv . headers csv . each do | row | csvw << row end 
プログラミング の 事 です 。 
この 質問者 は 多数 の カテゴリ において 以下 の アカウント で 投稿 し て いる こと から 多重 アカウント の 疑い が あり ます 。 html _ css _ kannrenn javascript _ kannrenn rudy _ puroguramu php _ puroguramu cpuroguramugenngo c _ pura _ pura csya _ pu de _ tabe _ su _ puroguraminngugenngo html _ puroguraminngugenngo java _ puroguraminngugenngo javascript _ puroguraminngugenngo swift _ puroguraminngugenngo rudy _ puroguraminngugenngo python _ puroguraminngugenngo php _ puroguraminngugenngo perl _ puroguraminngugenngo csya _ pu _ puroguraminngugenngo 
覚えれ ば 簡単 です よ 。 
a = 99 ; print ( a / 2 ). round * 2 
以前 の バージョン で は 、 use _ ssl = true とか が 必要 でし た が 、 2 . 3 . 0 あたり は 、 もう 、 単に 、 require ' net / http ' res = Net :: HTTP . get _ response ( URI (' https :// nanco . co /')) puts res. body なんて 、 感じ で 簡単 に でき ます 。 
代入 文 で データ は 作れる の だ が 、 何 を 難しい と 思っ て いる の でしょ う ？ 例えば 、 ３ ０ 個 の データ の 合計 なら 、 カギカッコ （[]） で 囲む だけ 。 「 kyuuryou =[ 11 , 12 , 13 , 14 , 15 , 0 , 0 , 101 , 102 , 103 , 104 , 105 , 0 , 0 , 111 , 112 , 113 , 114 , 115 , 0 , 0 , 121 , 122 , 123 , 124 , 125 , 0 , 0 , 131 , 132 , 133 ] p kyuuryou . inject (:+) 」 これ を 、 下記 サイト の Ruby 実行 環境 に 貼り 付ける と 、 合計 2156 が 表示 さ れ ます 。 https :// repl . it / 
設計 用 の コンピュータ ツール 一般 を 指す 用語 です 。 ただ 、 最近 は 製図 用 の お絵かき ソフト など は この 範疇 から 除外 し ます 。 （ あくまで 、 補助 ツール の ため です 。 回路図 エディタ とか 、 シュミレーション の 結果 表示 部 など も 、 同様 に 除外 する よう に なっ て ます 。 ） 
設計 用 の コンピュータ ツール 一般 を 指す 用語 です 。 ただ 、 最近 は 製図 用 の お絵かき ソフト など は この 範疇 から 除外 し ます 。 （ あくまで 、 補助 ツール の ため です 。 回路図 エディタ とか 、 シュミレーション の 結果 表示 部 など も 、 同様 に 除外 する よう に なっ て ます 。 ） 
下記 の 可能性 が 有り ます ので 、 寸法 の レイヤー について 確認 し て み て ください 。 １ ． 寸法 の 属する 画 層 （ レイヤー ） が Defpoint に なっ て いる 。 ２ ． 寸法 の 属する 画 層 （ レイヤー ） が 印刷 禁止 に なっ て いる 。 （ 画 層 の プロパティ 管理 で 確認 でき ます 。 ） 
PDF to DXF という 変換 ソフト を 勧め ます 。 これ は 一つ DXF ファイル として 保存 する こと が できる ソフト です 。 無料 で ダウ ロード できる 先 ： http:// pdf - to - dxf . brother soft .jp / 
＞ この ファイル を 開く に は 、 その ため の プログラム が 必要 です 。 の とき 、 「 プログラム の 一覧 から 探す 」 という よう な 選択肢 が ある はず な ので 、 そちら を 選択 すれ ば あなた の 持っ てる エディタ ( メモ帳 など ) で 開く よう に 設定 できる ウィンドウ が 開き ます よ 。 設定 し て しまう の が 嫌 なら ( そんな 状況 は 考え にくい です が )、 エディタ を 開い て から そこ に ドラッグ すれ ば 開け ます 。 という か 一応 言っ て おく と 、 これ くらい 自分 で 検索 し て 見つける とか でき ない と プログラミング なんて でき ませ ん よ 。 【 補足 に対して 】 ＞ 開い て 起動 さ せ たい ん です が 「 開く 」 の と 「 実行 する 」 の は 全く 意味 が 違い ます 。 言葉 は 正確 に 使っ て ください 。 Ruby の プログラム を 実行 する に は Rubyのインストール が 必要 です 。 実行 環境 を インストール し ない と プログラム は 実行 でき ませ ん 。 http:// www . ruby - lan g.o rg / ja / 公式サイト から インストーラ を ダウンロード し て ください 。 インストール し た 後 コマンドプロンプト から 実行 する など の 方法 で プログラム を 動かす こと が 出来 ます 。 また 、 メモ帳 で やっ て いく の は 無理 が ある ので 、 サクラエディタ など 、 色 変え や 補完 の 機能 が ある エディタ を 導入 し た ほう が いい です 。 特に 初心者 の うち は 。 … という か 、 初歩 の 講座 くらい 自分 で 見つけ て 読ん で ください よ 。 補足 前 に も 同じ よう な こと を 言っ た けど 、 「 講座 」 で ググる こと すら 出来 ない 人 に プログラム は 扱え ませ ん 。 
別 に 問題 ない です 。 それで いいんじゃない でしょ う か ？ 
def , if , for に対する end が 無い よう です が 。 http:// www . namaraii . com / rubytips /?% C 0 % A9 % B 8 % E 6 % B 9 % BD % C 2 % A 4 
> どう すれ ば 動き ます か ？ ステータスバー の 右端 の あたり に 表示 さ れ てる の は SJIS です か それとも UTF-8 です か （ こちら から 見る と 肝心 の ところ が 撮影 さ れ て ない ） 
Java SE の 機能 範囲 の 中 でも 、 可也 限定 し た 機能 範囲 しか 使わ ない コード なら Ruby 言語 に 直訳 でき ます 。 でも 、 Java 2 Enterprise Edition の 機能 範囲 や 、 OSS として 頒布 さ れ て いる 様々 な Java ライブラリ を 使っ た コード と なる と 、 Ruby で 記述 でき ない こと は ある もの です 。 例えば 、 DB の XA トランザクション 処理 とか 、 DB コネクション ・ プーリング 機能 とか 、 DB コネクション の 解法 漏れ の 自動 close 機能 とか 、 Ruby に は 未だ 無い ライブラリ の 機能 は あり ます 。 逆 に 、 Ruby 側 で は 簡素 に 記述 できる コード を 、 Java で 書こ う と する と 、 トテモ 長い コード に なる という こと も 、 多い です 。 
Windows は デフォルト で ssh が 使え ませ ん 。 TeraTerm という ソフト を ダウンロード し ましょ う ^ ^ 
Windows は デフォルト で ssh が 使え ませ ん 。 TeraTerm という ソフト を ダウンロード し ましょ う 
Ruby / Tk で は ボタン を 押さ れ た とき の 処理 ( proc {} 内の 処理 ) は メイン スレッド にて 実行 さ れ ます 。 その 為 、 この 処理 が 終了 する まで は その他 の イベント 処理 を 行う こと が 出来 ませ ん 。 つまり 上記 の プログラム で は ボタン を 押さ れ た 後 の 20 秒間 は Window が 全く 動作 し ない 状態 に なっ て しまっ て い ます 。 （ リスト ボックス が 更新 さ れ ない の は その 為 です ） sleep の 代わり に TkAfter ( TkTimer ) を 使用 し て ください 。 require ' t k' require ' tkafter ' list = TkListbox .new ( nil , width : 50 , height : 20 ). pack (' side ' => ' bottom ', ' fill ' => ' x ') tk = TkButton .new ( nil , text : " button ", command : proc { list . insert (' end '," start waiting ") puts " start waiting " TkAfter .s tart ( 20000 , 1 ){ # 20 秒 後 に 1回 実行 する puts " end " list . insert (' end '," end ") } }). pack () Tk . mainloop 
故意 に セーブ データ を 消し た なら 、 それ は 器物損壊 に 相当 する の で は なかっ た か と 。 仮に 損害賠償 請求 さ れ たら 応じ なけれ ば なら ない と 思い ます よ 。 殴ら れ た みたい だ から 、 それ で 相殺 さ れる の が オチ です か ね … 。 そして … なんで や 、 ポケモン は 関係 ない やろ www 
https :// www . ruby - lan g.o rg / ja / documentation / 
de _ tabe _ su _ puroguraminngugenngo html _ puroguraminngugenngo java _ puroguraminngugenngo javascript _ puroguraminngugenngo swift _ puroguraminngugenngo rudy _ puroguraminngugenngo python _ puroguraminngugenngo php _ puroguraminngugenngo perl _ puroguraminngugenngo csya _ pu _ puroguraminngugenngo 通報 し まし た 。 
Java SE の 機能 範囲 の 中 でも 、 可也 限定 し た 機能 範囲 しか 使わ ない コード なら Ruby 言語 に 直訳 でき ます 。 でも 、 Java 2 Enterprise Edition の 機能 範囲 や 、 OSS として 頒布 さ れ て いる 様々 な Java ライブラリ を 使っ た コード と なる と 、 Ruby で 記述 でき ない こと は ある もの です 。 例えば 、 DB の XA トランザクション 処理 とか 、 DB コネクション ・ プーリング 機能 とか 、 DB コネクション の 解法 漏れ の 自動 close 機能 とか 、 Ruby に は 未だ 無い ライブラリ の 機能 は あり ます 。 逆 に 、 Ruby 側 で は 簡素 に 記述 できる コード を 、 Java で 書こ う と する と 、 トテモ 長い コード に なる という こと も 、 多い です 。 
sudo apt - get update sudo apt - get install ruby - dev sudo apt - get install wiringpi sudo gem install wiringpi を やっ て み て ください 。 
Windows は デフォルト で ssh が 使え ませ ん 。 TeraTerm という ソフト を ダウンロード し ましょ う 
Ruby と いう か RoR です よ ね 。 Web 画面 上 で 自動的 に フォーカス を 入れる という 設定 です 。 true に する と 生成 さ れる input タグ に autofocus =" autofocus " が 追加 さ れ ます 。 
意味 ・ ・ ・ です か ？ google検索 https :// www . google . co.jp # q = rails + link _ to & gws _ rd = cr 
http:// www . rubylife .jp / regexp / option / index 2 . html で 説明 さ れ て ます ね 。 質問 の 内容 から は 外れ ます が 、 rNum は aryDate . count や aryDate . length など に 置き換え た ほう が 良い と 思い ます 。 ruby の 変数 名 は 小文字 の アンダーバー 区切り が 一般的 です 。 自分 なり に 色々 変え て み た ``` ary _ date = [" n ", " N ", " AN ", 123 , 465 ] ary _ date . map (&: to_s ) . map {| s | (/ N / i =~ s )? "" : s } . each _ with _ index {| item , i | puts "#{ i }\ t #{ item }" } ``` 出力 さ れる の は ``` 0 1 2 3 123 4 465 ``` です 
あなた の よう な ゲイ の 方々 で は 割と 多い みたい です よ 。 女友達 は ノンケ だっ た ので そう 答え た の でしょ う 。 
p Math . lo g10 ( 1234 ). to_i + 1 p ( 1234 ). to_s .s ize 
大学 の 授業 など で 使用 さ れる の でしょ う か ？ その 場合 、 大学 側 の 環境 に 合わせる こと も 必要 かも しれ ませ ん 。 
DB に いれ ちゃえ ば ？ そしたら キー （ 1 _ 1 とか ） やら データ （ 東京 、 新宿区 とか ） の 追加 変更 も プログラム に は 影響 うけ ない し 。 
> どう すれ ば 動き ます か ？ ステータスバー の 右端 の あたり に 表示 さ れ てる の は SJIS です か それとも UTF-8 です か （ こちら から 見る と 肝心 の ところ が 撮影 さ れ て ない ） 
> 2つ 目 の 文字列 は " 正解 " か " 不正解 " である 文字コード は どうしてますか 
エラーメッセージ は 何 が 表示 さ れ て い ます か ？ 
オヤ 、 Ruby カテ へ の 御題 な ので 、 Ruby で 応え ね ば 、 、 awk 版 と 同様 、 各行 が string オブジェクト に 収まる 程度 に 長 すぎ ない 文字 長だ として 、 ドコ で 改行 さ れる か 不定 とか も 想定 する と 、 コウ でしょ う 。 「 matchRegExp = Regexp . compile ([' clusterA ',' clusterC ']. map {| s | '^>' + s }. join ('|')) f = - 1 STDIN . each {| line | if hd = matchRegExp . match ( line ) f = 0 puts hd elsif line [ 0 ] == '>' f = - 1 elsif f >= 0 puts line end } 」 http :// ideone . c o m / Z 1 rUYm 悔しい が 、 各行 が 改行 文字 を 含ま ない で 数 億 文字 に なり うる 場合 、 awk で 無理 な 領域 でも 大丈夫 な コード は 、 、 Ruby なら できる ハズ だ が 、 、 直に は 思いつか ない 、 、 、 
404 ステータス は URL に ページ が 存在 し ない という こと です 。 つまり ルーティング でき て い ませ ん 。 account _ activations /: id / edit (.: format ) の : id は 1 とか 2 とか 自動 で 振ら れる integer 型 で は ？ Pe 6 Y 8 rtdfdaEtKG 6 JHGSzw は 違う 気 が 
ruby の ファイル 名 を abc . rb と し た 場合 、 abc . rb を ruby プログラム として 起動 する に は 「 ruby abc . rb 」 と 実行 し ます 。 実行 する とき に は 、 カレントディレクトリ に abc . rb が ある 状態 ( ls を 実行 する と abc . rb が 表示 さ れる 状態 ） に し て 実行 し て ください 。 cygwin で あれ ば 他 にも 方法 が あり ます が 、 いくつ か 手順 が 必要 な ので 、 とりあえず これ で いい と 思い ます 。 
どういう ふう に 表示 し たら いい の でしょ う か ・ ・ ・ 
puts gets .s plit ("+"). map {| n | n . to_i }. inject (:+) こんな 感じ です よ ( 苦笑 ) 笑わせ て もらい まし た 。 頑張っ て ください ！ ( それ じゃ コンピューター を 使っ て いる 意味 が あり ませ ん よ 。 動的 に やり ましょ う 。 ) ちなみに gets は 標準入力 から 文字 を 取っ て き て split ("+") は `+` で 分割 し て (" 2 + 3 " なら [" 2 ", " 3 "] に する ) map {| n | n . to_i } は それ を 文字 から 整数 に 直し て ([" 2 ", " 3 "] から [ 2 , 3 ]) inject (:+) は それ を 合計 し て い ます ([ 2 , 3 ] から 5 ) puts は でき た 数字 を 標準出力 から 出力 し て い ます 
#// ide on e.c om / Tv 2T pC # コンナ 感じ か ねぇ while   ARGF . gets    $_. sub !(/\..+ GT : AD : DP : GQ : PL \ s /,"")    $_. gsub !(/(\ d +\/\ d +):(\ d +),(\ d +):(\ d +)[:,\ d ]+/,"\\ 1 \ t \\ 2 \ t \\ 3 \ t \\ 4 ")    print   $_ end 
{ sex : " man "} だ と キー が シンボル に なり ます ので 、 質問 欄 の よう に なり ます 。 キー を 文字列 に する に は {" sex "=>" man "} と し ます user [" sex "]=" man " とすれば 追加 さ れる はず です 。 
この あたり を 参考 に http:// railsguides .jp / active _ record _ querying . html いろいろ な 書き方 が でき ます 。 SQL を ほぼ そのまま 書く こと も 
どの バージョン の Python な の か は 分かり ませ ん が http:// docs . python .jp / 3 / library / http . client . html PHP 、 Ruby 、 Python の http クライアント ライブラリ は 恐らく 通常 は cURL の ラップ だ と 思い ます ので タイムアウト オプション は 常に 設定 可能 か と 思わ れ ます 。 
え ？ ２ 行 じゃ ない です が 、 こんな 感じ で は ？ require ' da te' def get _ days ( year , month ) month _ days = [ 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 ] if month == 2 and Date. new ( year ). leap ? return 29 end return month _ days [ month - 1 ] end puts " 年 を 入力 し て ください ：" year = gets . to_i puts " 月 を 入力 し て ください ：" month = gets . to_i days = get _ days ( year , month ) puts "#{ year } 年 #{ month } 月 は #{ days } 日間 あり ます " 
配列 の 先頭 は 0 番 から です 。 message s [ 3 ]=[" A "," B "," C " ] [ 3 ] は 0 番 から 2 番 まで の 3つ を 用意 し なさい という 意味 に なり ます 。 message s [ 0 ] に は A message s [ 1 ] に は B message s [ 2 ] に は C に なり ます 。 message s [ 3 ] に は C言語 を する と 理解 でき ます が 、 配列 外 です 。 という こと で 、 message s [ 1 ] という の は 配列 で 2 番目 に 格納 さ れ て いる もの です 。 
> ungehdgsjmwiaszrawi さん 2016 / 5 / 3017 : 09 : 08 > 初心者 で も 理解 が できる Ruby の サイト や 本 など は あり ます か ？ 有り ます よ 。 
金箔 を まぶし て ください ね 〜 〜 (=ﾟωﾟ)ﾉ 
とりあえず コマンドプロンプト から Ruby を 立ち 上げる こと は 出来 て い ます か ? だっ たら 、 irb と 入力 すれ ば 「 対話 的 Ruby 」 が 立ち上がる と 思い ます が 。 # 私 は cygwin から Ruby を 入れ て い て 質問者 さん と は 状況 が 違う ので 「 とりあえず なんとか する 」 方法 だけ 
ruby カテ という こと は 、 ruby の プログラム で 良い の です よ ね 。 perl 風 に 書き まし た が 、 そこそこ 簡単 に 書け ます 。 ちょっと 、 改行 処理 に トリック を 使っ て い ます 。 #!/ usr / bin / env ruby cr ="" while line = gets if line =~ /^>(.*)$/ then print cr print $1 cr ="\ n " else if line =~ /^.+>(.*)\.\.\..*/ then print "\ t "+$ 1 end end end print cr text . rb に 入れ て 、 chmod + x text . rb cat input . txt |./ text . rb > output . txt なんて 実行 し て ね 。 
「 3 番目 の a 」 と は ? 「 3 番目 の 文字 ( が たまたま a )」 な の か 「 3 番目 に 出現 し た a 」 な の か 「 連続 する a の うち 3 番目 」 な の か " caaaaad " だっ たら そのまま な の ? " caabaad " に する の ? " cabaaad " に する の ? " caacacaad " だっ たら そのまま な の ? " cabcacaad " に する の ? " caacbcaad " に する の ? 
数値積分 なら sciruby の 中 に ある か と 。 http:// www . rubydoc . info / gems / integration / 0 . 1 . 4 区間 数 は オプション initial _ step , step で 調整 可 
``` def divisors num divisor _ list = [ 1 , 2 ] for i in 3 .. num / 2 if ( num . to _ f % i )== 0 divisor _ list . push i end end divisor _ list end print " 数字 を 入力 >" input = gets . chomp . to_i i = input loop do break if i == divisors ( i ). inject (:+) i += 1 end puts i puts divisors ( i ). join (" ") ``` こんな 感じ です か ね 。 変数 名 に は もっと いい 名前 を つけ ましょ う 。 一文字 は やめ ましょ う 。 ( この 長 さ でも 読み づらい 。) http:// d . hatena . ne.jp / asakichy / 20140620 / 1403215047 ここ を 見 て み て は 。 頑張っ て ください 。 
原因 ： 書か れ て い ない ので わかり ませ ん が plot に 与える オプション が 間違っ て い ます 。 質問 文中 に は ない ので ただ の 勘 です が 。 。 。 対策 ： ・ データ を テキストファイル で もらっ て き て ください 。 or ・ plot の binary オプション を 「 正しく 」 「 漏れ なく 」 「 正確 に 」 記述 し て ください → 質問 文中 に 何 も 書か れ て い ない ので 絶対 に 無理 と 思わ れ ます 。 
今 さ な なぜ VB ? って 気 も する が 、 個人的 に は Ruby は 飽きる と 思う 。 ので 、 この 二 択 なら 、 VB . Net 。 グラフィカル に ソフト を 開発 できる し ね 。 なん で 頑 なに Ruby 、 VB に 必死 な の ！ ？ 
google翻訳 に かけ たり 、 そのまま ググっ たり し たら 出 て くる の で は 。 何 回 も エラー を 起こせ ば 慣れ ます 。 
その ため に は 、 お金 を 払っ て スクール に 通い ます 。 初心者 に も わかる よう な 具体 的 な 情報 が 、 簡単 に 無料 で 手 に 入る という 認識 を 改める の が 先 です 。 
現在 の フォルダ が workspace なら cd app / views / layouts で 移動 でき ます 
正しい コトバ を つかう こと 。 日本語 で も 、 英語 で も 。 打ち 間違い 、 つづり の 間違い が あっ たら ( まぁ 、 最近 は " これ じゃ ない ?" 言っ て くる こと も あり ます けど ) ヒット し ませ ん から 。 ruby を rubu と 書い たり 、 アンドロイド を あん ろ い ど では ... http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1415893848 ... http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 15917029 ... 
フツー に 動く が 、 、 、 何 が 分からん の か 不明 #// ide on e.c om / ZxTPfy    p   Rational ( 3 , 4 )+ Rational ( 1 , 5 ) #// code pa d.o rg / obyEbSPj 
> giggsister 1996 さん 2016 / 5 / 1720 : 07 : 06 > 名前 つき ルート ってな ん の ため に ある の ？ ノード を 特定 する ため です 。 
game 1 . rb の 方 です が ， 変数 system と 変数 judgement が if ブロック 内 で の 宣言 に なっ て おり ， if ブロック 外 で は 未 宣言 に なっ て いる と 思わ れ ます ． な ので ， それぞれ if ブロック の 前 で ， system = nil とか judgement = nil など の 宣言 を し て ください ． それから ， judgement == " draw " じゃなくて ， judgement = " draw " ね ． ちなみに ， そこら 辺 を 少し 書き直し た もの # システム 側 の 出す もの を 決める system = [" gu ", " cyo ", " pa "]. sample # 等 確率 なら こう かける # 勝敗 の 判定 judgement = [ user , system ]. tap do | u , s | __ break " draw " if u == s __ case u __ when " gu " ____ break s == " cyo " ? " win " : " lose " __ when " cyo " ____ break s == " pa " ? " win " : " lose " __ when " pa " ____ break s == " gu " ? " win " : " lose " __ end __ break " undefined " end 
まず 「 ruby で の operator [] は 、 配列 参照 で は ない 」 モット 汎用 的 で 「 クラス や オブジェクト 毎 に 、 最も operator [] に 付与 する こと が 相応しい と 思わ れ た 機能 が 付与 さ れ た メソッド だ 」 と 覚え ましょ う 。 " string data "[ 5 .. 7 ] は 、 " string data ". send ("[]". to_s ym , 5 .. 7 ) と 等価 で 、 レンジ ・ オブジェクト （ 5 .. 7 ) を 引数 に し て いる operator [] の メソッド 呼び出し です 。 operator [] も 、 単なる メソッド な ので 、 自分 用 の クラス で は 、 自分 用 に 特別 な 機能 を 付与 し て も 良い 。 例えば 、 ” 素数 か否 か ” という boolean の 配列 の 様 に 観 える 自分 用 の クラス なら 、 下記 の 様に 定義 できる 。 「 require ' prime ' class MyPrimeChecker def []( n ) if n . class == 1 . class return P ri me. prime ?( n ) else return false end end end c = MyPrimeChecker .new c [ 3 ] # true が 帰る c [ 4 ] # false が 帰る h =[ c , c , c ] h [ 2 ][ 7 ] # true が 帰る 」 上記 も 、 二つ の 原則 で 理解 できる でしょ う 。 「 ・ オブジェクト は メソッド 呼び出し が できる 。 ・ オブジェクト の メソッド 実行 結果 は オブジェクト な ので 、 メソッド 呼び出し は 連鎖 できる 。 」 if 文 で すら 、 「 条件 オブジェクト . then メソッド { 条件 が true の 場合 に 遅延 実行 する ブロック }. else { 条件 が false の 場合 に 遅延 実行 する ブロック }」 という メソッド の 連鎖 だ と 考える 、 とか 、 、 結局 ruby の 文 は 、 全て コノ 二つ の 原則 の 組み合わせ 。 
arduino UNO の マイコン は 、 ATmaga 328 P です 、 I/O ポート は digital port 0 ～ 7 = PORTD 0 ～ 7 ビット digital port 8 ～ 13 = PORTB 0 ～ 5 ビット analog port 0 ～ 5 = PORTC 0 ～ 5 ビット ( digital port 14 ～ 19 として も 使用 可 ） に 対応 し ます 対応 ポート に 直接 データ を 出力 すれ ば 、 PORTD 8 ビット PORTB / PORTC なら ５ ビット 単位 の 出力 が 可能 です データ 読み込み は 、 PIND , PINB , PINC で 行い ます 1 , 2 ピン に HIGH を 出力 する なら PORTD = PIND | 0 B 00000110 ; // OR ビット演算 1 , 2 ピン に LOW を 出力 する なら PORTD = PIND & 0 B 11111001 ; // AND ビット演算 が 必要 です （ 入出力 が ８ ビット 単位 も 為 、 他 の ビット を 変化 さ せ ない よう に ） 例 13 ピン BLINK void setup (){ digital Write ( 13 , LOW ); pinMode ( 13 , OUTPUT ); } void loop (){ PORTB = PINB | 0 B 00100000 ; // digital Write ( 13 , HIGH ); delay ( 500 ); PORTB = PINB & 0 B 11011111 ; // digital Write ( 13 , LOW ); delay ( 500 ); } 
なんで y を 打つ と 思っ た の です か ？ 落ち着い て 英文 を 読ん で み て ください 。 また 、 ssh や ssh - keygen が 何 を する もの か ご存知 です よ ね ？ で 、 なぜ git を 使う のに ssh が 必要 な の かも 。 
class MessagesController < Application Controller __ def index ____@ message = Message .new ____# Message を 全て 取得 する 。 ____@ messages = Message . all __ end # ここ __ def create ____@ message = Message .new ( message _ params ) ____ if @ message .s ave ______ redirect _ to root _ path , notice : ' メッセージ を 保存 し まし た ' ____ else ______# メッセージ が 保存 でき なかっ た 時 ______@ messages = Message . all ______ flash . now [: alert ] = " メッセージ の 保存 に 失敗 し まし た 。 " ______ render ' index ' ____ end # ここ （ 正直 else 句 が たぶん いら ない ので ， なくす こと も できる ） __ end # ここ end # ここ 基本的 に すべて の ブロック に end が 必要 です （ class で も def で も if でも ） 
何 を 言っ て いる の か 、 意味不明 です 。 具体 的 な プログラム を 示し て 質問 し て ください 。 
> プロ ゲート の ruby で ファイル ふ ぉるだ ー が なかなか 見つから ない ので 見つかる 方法 教え て ください 大勢 で 探す の が 早く 見つける コツ です 。 
・ 問 １ と ２ は ほぼ 似 て いる ので まとめ まし た 。 print " 実数 １ ：" num 1 = gets . chomp . to_i print " 実数 ２ ：" num 2 = gets . chomp . to_i puts " 和 ：#{ num 1 + num 2 }" puts " 差 ：#{ num 1 - num 2 }" puts " 積 ：#{ num 1 * num 2 }" puts " 商 ：#{ num 1 / num 2 } あまり ：#{ num 1 % num 2 }" ・ 問 ３ print " 底面 の 半径 ：" r = gets . chomp . to_i print " 高さ ：" height = gets . chomp . to_i teimennseki = r * r * ( Math :: PI ) taiseki = teimennseki * height / 3 puts " 体積 ：#{ taiseki }" 問 ４ 、 ５ print " 実数 ：" a = gets . chomp . to_i puts "#{ a / 10 }" puts "#{ a * 0 . 1 }" 問 ６ print " 実数 ：" num = gets . chomp . to_i puts Math .s qrt ( num ) プログラム は こんな 感じ で 理解 いただける と 思い ます 。 気づい た こと について です が 、 おそらく 丸め誤差 や 情報 落ち で 検索 し て いただけれ ば わかる か と 思い ます 。 例えば 問 ４ 、 ５ について 3 を 入力 する と a / 10 は 0 に なっ て しまい a * 0 . 1 は 0 . 30000 ・ ・ ・ と なる こと を 意味 し て い ます 。 その よう な こと に 気付い て 欲しい という 趣旨 の 問題 か と 思い ます 。 
こんにちは。 第 ２ 版 https :// tanoshiiruby . github . io / 2 / 第 ５ 版 https :// tanoshiiruby . github . io / 5 / 第 ２ 版 の 正誤表 を 見る 限り 練習問題 に 間違い が あり ます 。 また 、 2006 / 08 / 07 に 出版 さ れ た もの で 、 本 自体 は 問題 ありません が 、 Ruby の バージョン が 当時 の もの で なけれ ば なり ませ ん 。 こう いっ た 書籍 は 言語 や 使う 環境 、 OS 等 常に 技術 的 な 進化 が ある 為 、 常に 最新 の もの で なけれ ば 、 動作 し なかっ たり 、 今 の 新しい バージョン で は 違う やり方 が ある のに 、 それ に 出来 なかっ たり し ます 。 つまり 古い バージョン を 使わ なけれ ば なら ない 場合 に は 有効 です が 、 これから 勉強 する の で あれ ば 、 一番 新しい もの を 使う 必要 が ある という 事 です 。 ではでは 。 
その プログラム が 書か れ て いる ファイル が Shift-JIS で 保存 さ れ て いる か 確認 し て ください 。 ファイル 自体 の エンコーディング と 、 マジック コメント は 一致 さ せる 必要 が あり ます 。 例 ： --------- # coding : utf-8 p " この ファイル は Shift-JIS です " #=> エラー に なる --------- # coding : cp932 p " この ファイル は UTF-8 です " #=> エラー に なる --------- # coding : cp932 p " この ファイル は Shift-JIS です " #=> エラー に なら ない --------- # coding : utf-8 p " この ファイル は UTF-8 です " #=> エラー に なら ない 
入力 は 文字列 な ので 文字列 メソッド split を 使っ て 空白 で 区切り 配列 に 変換 する こと が でき ます 。 ruby の 多重 代入 の 仕組み を 使え ば 改行 区切り で 入力 する の と 同じ よう に 変数 に 代入 でき ます 。 例 s1 , s2 , s3 = gets .s plit (' ') puts s2 + s3 
解決 方法 が 書い て ある ページ を 自分 で 挙げ て いる ので 、 なに に つま づい て いる の か わから ない の です が 。 
どの OS で 何と 言う バージョン の Ruby を 動かし た の か 解ら ない ので 、 対処 方法 も 解ら ない が 、 、 、 「 # encode : windows 31 - j print " 日本語 ". encoding print " 日本語 " p RUBY _ VERSION p Encoding . default _ external p Encoding . default _ internal p Encoding . locale _ charmap p Encoding . aliases .s ort 」 これ を IRB の 画面 に コピー ＆ ペースト し たら 、 どう ゆう メッセージ が 出 ます か ？ 
こんばんは 。 相性 は とても 良い と 言え ます 。 素人 と あり ます が 、 極 小規模 の 会社 で 一 人 で 管理 さ れ 、 １ 日 の 取引 が そんなに 無い なら access で も 管理 出来 そう です が … それとも それなり の 規模 で 100人 単位 で 処理 が あり 開発 会社 と の 折衝 さ れる の でしょ う か 。 ある程度 の 規模 なら サーバー は ミラーリング し 、 バックアップ も 作る 必要 が あり ます 。 また 、 その 場合 言語 は java が 好ましい です 。 java の 技術者 は 多い し 、 情報 が 豊富 、 db は SQLserver か 、 oracle あたり が 標準 です 。 予算 、 コスパ を 考え 、 決める 必要 が ある ので 、 良い でしょ う か と 言う より 、 開発 を 任せる なら 何 社 か 見積り で 競合 さ せ て 情報 を 引っ張り 出し たり 、 ご 自身 で やら れる なら 、 安く 済ませ 、 ミラーリング の 組み方 、 バックアップ の 復元 まで 体制 を よく 考えれ ば java と mysql で も 良い か と 思い ます 。 java で 作れる 方 が ruby を 使う の は 良い です が 、 いきなり ruby を 使う の は 私 は おすすめ でき ませ ん 。 
・ 独習 Ruby が おすすめ です 。 初心者 向け に 書か れ て い て 、 章 末 に 問題 も ある ので 復習 も サポート さ れ て い ます 。 少し 慣れ て き たら ・ Ruby レシピ ブック 303 の 技 を お勧め し ます 。 レシピ を 実際 叩い て いく こと で 、 自分 で 膨大 な プログラム を 書こ う と し た 時 に 使える もの が 出 て き ます 。 資格 に関して は 、 重箱の隅をつつく メソッド や 、 大して 使わ ない 機能 を 求める ところ が ある ので 、 プログラミング を できる よう に は なり ませ ん でし た 。 （ 体験談 ） Ruby 初心者 で も 、 他 の 言語 を やっ た こと が ある 人 なら ば 、 いきなり レシピ ブック に 入る こと も あり だ と 思い ます 。 ただし 、 オブジェクト指向 だけ は 理解 し て おき ましょ う 。 頑張っ て ください 。 
> 空白 の あと の 「 J 」 を 抜き出し た の い グループ を 使い ます \ s ([ a - zA - Z ]) この 正規表現 だ と 括弧 に 囲ま れ た 部分 が グループ に なる ので 、 perl など の $1 で の 参照 と おなじ よう な こと を 、 . group () でし ます 要するに 、 マッチ さ せ て から さらに 後で . group () で 抜き出し ます 
Ruby の 間違い で は ？ http:// www . amazon.co.jp / ruby -% E 5 % 85 % A5 % E 9 % 96 % 80 -% E 6 % 9 C % AC / s ? ie = UT F8 ... 
どの 言語 で ？ -- C # include < stdio . h > int main ( void ) { __ printf (" computer \ n "); __ return 0 ; } -- C++ # include < io stream > int main ( void ) { __ std :: cout << " computer " << std :: endl ; __ return 0 ; } -- D import std .s tdio ; void main () { __" computer ". writeln ; } -- Ruby puts " computer " -- Python print (" computer ") -- HTML or PHP computer 
もし Ruby に 挫折 し たら 、 PHP に おいで 。 PHP なら 、 知恵袋 で も わから ない 点 で も 、 回答 し て くれる ひと が 多い から 。 全く の 初心者 なら 、 仲間 が 多い ほう が いい でしょ 。 Ruby に は 利点 も 多い ので 、 続ける の は 、 否定 し ない けど 。 本 は 、 大きめ の 本屋 で 立ち 読ん で から 、 わかり そう な の を 買え ！ が 持論 。 人 の 意見 は 、 変 な バイアス が かかっ て いる こと が ある から 、 当て に する と 痛い 目 を み たり も する 。 
hoge (); fuga (); piyo (); を // hoge (); // fuga (); // piyo (); の よう に コメント で （ 一時的 に ） 無効 に する の を コメントアウト っていう ん です よ 。 開発 ツール によって は キーボード 一 発 で でき たり する ので 、 探し て み て ね 。 
え えーと 、 投稿 さ れ た 画像 は 小さ すぎ て エラーメッセージ が 見え ませ ん が ・ ・ ・ 、 恐らく 権限 の 問題 で は ない でしょ う か ？ sudo gem install rails この よう に し て み て ください 。 
「 アルゴリズム と データ構造 」 関連 の 本 が ある と いい です ね 。 プログラミング言語 を 学ん で から 何 を 作る か 迷う こと が 多い ので … … あと は やっぱり 公式 ドキュメント を 読む 習慣 は つけ た ほう が いい です ね 。 https :// www . ruby - lan g.o rg / ja / documentation / 
沢山 あり 過ぎる の だ が 、 、 P 配列 名 配列 名 . each {| e | p e } 配列 名 . count . times {| index | p 配列 名 [ index ] } 
ウェブ 系 の 開発 なら 、 rails が ある Ruby の 方 が 優れ て いる し 、 ゲーム の 開発 なら 、 Java の 方 が 優れ て いる でしょ う 
> amakusayuuyuu さん 2016 / 5 / 307 : 21 : 44 > 6 こ ある 要素 を 数字 以外 で 1 こ ずつ 取り出す 方法 教え て ください その よう な 基本 的 な 事 は 書籍 に 必ず 書い て あり ます し 、 検索 で いくら で も 出 て き ます 。 調べ ず に 学習 せ ず に 目的 を 達成 し たい なら 外注 すれ ば 良い と 思い ます 。 
array . each {| e | puts e } 
肝心 の エラー が 書い て ませ ん 。 これ は 、 何処 に エラー が ある か ？ の 部分 です 。 ○○○. rb の 203 行 目 と 、 209 行 目 あたり です 。 と 書い て あり ます 。 どっち か は 、 影響 で 出 た エラー で 本物 で は ない かも しれ ませ ん 。 
配列 と コメント は 、 全く 関係 が 有り ませ ん 。 
できる から ね 、 ！ ！ ！ 
解決 法 で は ありません が 、 ミニツク は 現在 サービス 停止 し て いる よう です 。 ミニツクオフィシャル Twitter - https :// twitter . com / minituku / status / 725526520144392192 諸 事情 が 、 何 を 示し て いる か は 不明 です が 、 現在 は ネットワーク 応用 通信研究所 から 情報 が 出 て くる の を 待つ しか ない 状態 です 。 http:// www .net lab. jp / 
> Rails の 最新 の 本 って ない の ？ Amazon を 見れ ば いいんじゃない か な 。 
> sw 677777 さん 2016 / 4/3 021 : 37 : 47 > ruby の 意味 おしえ て ください 検索 を せ ず に 頭 に 浮かん だ 事 を 次々 知り たい 場合 は 、 リファレンス 本 を 購入 し ましょ う 。 
おはよう ござい ます 。 h = {" Name " => " undefined ", " Data " => 999 } h [" Name "] = " sw 677777 " という 感じ です 。 参考 http:// docs . ruby - lan g.o rg / ja / 2 . 1 . 0 / class / Hash . html 
> sw 677777 さん 2016 / 4/3 008 : 44 : 32 > ruby で 出力 の コード わから ず おしえ て ください まずは 必要 以外 の 言語 より 先 に 、 主語 等 、 日本語 を 学ぶ 所 から 始め 、 その後 ほか の 言語 を 学ん だ 方 が いい と 思い ます 。 
> sw 677777 さん > るび ー で unless は どの よう な こと で 使う か おしえ て ください ” asss " . upese が 失敗 する ん です が " " は たとえば どんな の いれ たら いい です か 文字 うち 練習 なら 何 を 入れ て も いい と 思い ます 。 
> sw 677777 さん > 一つ の 要素 ごと に 改行 する 形 で 出力 さ せ た の は どう 意味 か おしえ て ください る びー まずは 必要 以外 の 言語 より 先 に 、 主語 等 、 日本語 を 学ぶ 所 から 始め 、 その後 ほか の 言語 を 学ん だ 方 が いい と 思い ます 。 
> sw 677777 さん 2016 / 4/3 021 : 37 : 47 > 日本語 だ と 表示 でき なく 教え て ください まずは 日本語 を 学ぶ 所 から 始め 、 その後 ほか の 言語 を 学ん だ 方 が いい と 思い ます 。 
> sw 677777 さん 2016 / 4/3 011 : 05 : 50 > ruby test rb おしえ て ください 目的 が 無けれ ば 判る こと だけ で 組め ば いい と 思い ます 。 
画面 に 出力 ？ で よいん ？ ここ とか 参照 。 http:// qiita . com / machu / items / 91038 f4 d4 a3 b 9 b 5 bd 6 f1 一 年 前 だ から 古い か 。 私 も そう だ が 、 みんな Ruby って 、 まだ 知名度 ほど は 知ら ない 言語 な ん です ね 。 PHP なら 、 ３分 後 に 回答 が つい て も おかしく ない のに 。 
> sw 677777 さん > 配列 の きそ しか わから ず おしえ て ください 目的 が 無い の なら 基礎 だけ 覚え て おけ ば 十分 です 。 
> resource : project s 「 resources 」 で は ない でしょ う か ？ 
sw 677777 さん elsif は 使わ なく て も 、 下記 と 同じ 動き に なる プログラム は 作る こと も でき ます 。 ＞ これ の 使い方 が いまいち 分から ず 教え て ください で は 、 貴方 の 解る 方法 で 、 下記 と 同じ 動き に なる プログラム を 作っ て み ましょ う 。 「 tuki = gets . chop . to_i if tuki == 12 || ( 1 <= tsuki && tsuki <= 2 ) puts " 冬 です " elsif ( 3 <= tsuki && tsuki <= 5 ) puts " 春 です " elsif ( 6 <= tsuki && tsuki <= 8 ) puts " 暑い でしょ う " elsif ( 9 <= tsuki && tsuki <= 11 ) puts " 秋 です " else puts " 1 から 12 の 月 で は 無かっ た です " end 」 動作 を 確認 する に は 、 上記 コード を 下記 URL の 画面 に 入力 し て " run " ボタン を 押せ ば 、 確認 でき ます 。 https :// repl . it / 
hatiken _ l _ elf さん の 回答 が あまりに も 的外れ で 笑え ます ね … Ruby に は 構造体 も 関数 も 存在 し ない と いう のに … クラス メソッド は 、 インスタンス 変数 を 使用 せ ず 、 メソッド と いう より は 関数 に 近い 処理 を する 場合 など に 使わ れ ます 。 ( そして 、 基本的 に は クラス 内 に インスタンス 変数 が 一つも 存在 せ ず 、 メソッド が 全て クラス メソッド として 実装 可能 な 場合 に 用い られ ます ) 例えば Math モジュール の 実装 を 見る と 参考 に なる かも しれ ませ ん 。 クラス 変数 は 、 「 変数 を 複数 の インスタンス の 間 で 共有 し たい 」 場合 や 、 「 クラス の インスタンス が 一つ しか 存在 し ない こと が 保障 さ れ て いる 」 場合 など に 使い ます が 、 多く の 場合 は バッドノウハウ だ と 判断 さ れ ます 。 クラス メソッド は 良い の です が 、 特別 な 理由 が 無い 限り クラス 変数 は 使用 し ない で ください 。 すみません 、 インスタンス メソッド の 利用 を 制限 する … は 意味 が わかり かね ます ので 、 もう少し 詳しく 書い て いただけ ます か 。 
クラス の インスタンス を 生成 する 際 に initialize メソッド が 呼ば れる こと を 解説 し て い ます 。 例えば 、 shop = Shop .new (" apple ") など と し た とき に 、 initialize メソッド の 中身 が 実行 さ れ ます 。 
> sw 677777 さん 2016 / 4 / 2919 : 38 : 38 > rubu の if は どの よう な 使い道 ある ん です か 何 も 学習 し ない 人 に は 使い道 は 有り ませ ん 。 
> あと なに が あれ ば ruby で 開発 でき ます か 視認 性 の よい フォント です 下記 の サイト から フォント を インストール し て 下さい 見 やすい プログラミング 用 フォント 「 Ricty Diminished 」 を Windows に インストール し て Sublime Text で 利用 する 方法 http:// nelog .jp / how - to - use - ricty - diminished - font もちろん 、 他 の フォント を 探し て 入れる の でも 結構 です 。 しかして 、 良い フォント は カネ が かかり ます 。 ＊ ＊ ＊ あと は 、 アンチエイリアス が 効い て ない 環境 なら ば 、 MacType など も 必要 でしょ う プログラミング で は 長時間 に 渡っ て 文字 を 見つめ て いる ので 、 文字 が クソ で ダメ だっ たら 、 あなた の やる気 が 削が れ ます 。 な ので 、 私 は 文字 表示 を 良く する MacType という もの を 入れ て い ます が 、 Windows10 だ と Mac 並み に 文字 の 表示 が 宜しい かも しれ ない ので 、 入れる 必要 が ない かも しれ ませ ん 。 Windows10 の フォント 描画 を 綺麗 に しよ う ！ ～ MacType の 適用 と システム フォント の 変更 - カモメ の リズム http:// www . kamomer . com / entry / windows10 - font - mactype ＊ ＊ ＊ まずは 見 映え から キ め る の が この 業界 の 掟 です 。 往々 に し て 、 見 映え （ 見 てる モノ ） が 脳 に 作用 する ので 、 ソースコード の 出来 不出来 を 決め て しまい ます 。 あと は サクラエディタ の シンタックスハイライト を 使いこなす と 、 視覚 的 に 有利 な プログラミング が でき ます 。 それ を 使いこなす に は 正規表現 の 知識 が 必要 です が 、 それ は perl とか ruby で 学ぶ こと が 出来 ます 。 
hash は 、 辞書 の 見出し みたい に 短い key と 、 その 辞書 の 用語 説明 みたい に 長い value の 対応 付け を 記録 する ため に 使用 し ます 。 「 p =" 3.14 15926535 " myHash 1 ={} p . each _ char . with _ index {| c , i | myHash 1 [ c ]= i } p myHash 1 myHash 1 . each _ pair {| key , value | puts "#{ key } は #{ value } 番 目 の 文字 でし た "} 」 上記 を 実行 する と 、 「 ” 1 は 4 番目 の 文字 でし た ” 」 等 が 表示 さ れ ます 。 
> rails は 本当に 難しい 具体 的 に 分から ない こと を 洗い出す ところ から やっ て みる の は どうでしょう か 。 質問者 さん は Java や PHP について は 理解 できる という こと です ので 、 Rails の " 設定より規約 " という ところ が つまずき ポイント な の で は と 思い ます 。 （ ＝ ルール を 知ら ない と 使え ない 。 その 代わり 設定 は 少ない 。 ） これ は もう 覚える しか ない ので 、 分から ない こと を 洗い出し 、 1つ ずつ 覚え て いく という の が 遠回り の よう に 見え て 一番 の 近道 か と 思い ます 。 
一般的 に 、 [ ] で 囲ま れ て いる 部分 は 省略 可能 という 意味 で 使わ れる こと が 多い です 。 逆 に 、 [ ] で 囲ま れ て い ない " 文字列 "（ リンク の 表示 部分 ） と " パス "（ リンク 先 ） は 省略 する こと が でき ませ ん 。 Google で 検索 する 限り 「 link _ to ( 文字列 , パス [, オプション , HTML オプション ])」 は railsdoc . com から 拾っ て き た もの と 思わ れ ます が 、 内容 に 不 正確 な 点 が あっ たり 、 さらに 管理者 が 不明 で ある など 、 正直 参考 に する の は お勧め できる もの で は あり ませ ん 。 個人的 に は 公式 の ドキュメント の 翻訳 で ある railsguide .jp を お勧め し て おき ます 。 http:// railsguides .jp / 
実行 する 際 に コマンドプロンプト に ドラック & ドロップ し た と の こと です が ruby プログラム の 実行 方法 は 、 ruby filename . rb ( filename : 自分 の プログラム の 名前 , . rb は 拡張子 です 。 プログラミング 初心者 と の こと です が 、 どの 程度 初心者 か は わかり ませ ん が 実行 方法 が わから ない の で あれ ば 、 Hello world ! という 誰 も が 一番 最初 に 書く コード が あり ます 。 まずは それ を 参照 し て み て は いかが でしょ う か ？ http:// magazine . rubyist .net /? 0002 - FirstProgramming 少し 本題 から 外れ まし た が この プログラム の エラー として は 、 `( バックスラッシュ ： shift 押し ながら @) を 使っ て いる こと です 。 puts や obj .new () の （） の 中 は 、 ` では なく 、 '( シングルコーテーション ： shift 押し ながら 7 ) や "( ダブルコーテーション ： shift 押し ながら ２ ) を 用い ます 。 ４ ６ 、 ４ ７ 行 目 を puts (' Unmo System prototype : proto ') # 5 proto = Unmo .new (' proto ') 上記 を コピペ し て 書き換え て み て ください 。 エラー が なくなる はず です よ 。 頑張っ て ください 。 
for i in ( 0 .. 10 ). to _ a . reverse puts i end おそらく 質問者 さん と 同じ サイト の 問題 を やっ て い ます が 、 元 コード に 一 番手 を 加える 量 が 少ない の は こんな 感じ です ね 。 この サイト だ と 出力 結果 を 自分 で 確認 出来 ない の です が 、 print で は 改行 なし 、 puts は 改行 あり で 出力 する という こと は しっかり 覚え て おい た ほう が 良い です 。 
Ruby の インスタンス 変数 （@ ivar ） は Java の インスタンス 変数 に 相当 し ます 。 ローカル 変数 も 同じ です 。 です から インスタンス 変数 に アクセス できる の は その インスタンス の 中 から 、 ローカル 変数 に アクセス できる の は その メソッド の 中 から のみ です 。 Rails で コントローラ で 設定 し た はず の インスタンス 変数 が ビュー から 見 られる の は 特殊 な 例 で 、 レンダリング の 前 に in stance _ variable _ get を 利用 し て コントローラ から インスタンス 変数 を コピー し て い ます （ かなり むりやり です ね ） 。 https :// github . com / rails / rails / blob / v 4 . 2 . 6 / actionpack / lib / abstract _... https :// github . com / rails / rails / blob / v 4 . 2 . 6 / actionview / lib / action _ vi ... Ruby の シンボル に 相当 する もの は Java に は 存在 し ない ので わかり にくい かも しれ ませ ん が ...。 シンボル は 任意 の 文字列 と 1 対 1 で 対応 する オブジェクト です 。 「 1 対 1 」 という ところ が 重要 で 、 どの よう に 生成 さ れ た 場合 でも 同一 の オブジェクト と なり ます 。 その ため 、 シンボル 同士 の 比較 で は 文字列 の 中身 を 比較 する 必要 が なく 高速 に 行え たり 、 新しい オブジェクト を 生成 し なく て 済む ので メモリ や GC に 優しい など の 理由 で 、 Hash の キー や enum の 代わり として 様々 な ところ で 利用 さ れ ます 。 例えば 、 次 の コード で は 合計 20 個 の String が 生成 さ れ 、 10 回 の 文字列 比較 が 必要 です : 10 . times { " abc " == " abc " } が 、 次 の コード で は Symbol は 1 個 しか 生成 さ れ ず 、 10 回 の 整数 比較 で 済み ます : 10 . times { : abc == : abc } 
法律 、 消費者問題 の カテゴリ で 相談 さ れ た 方 が 良い よう に 思い ます 。 知恵袋 トップ > 暮らし と 生活 ガイド > 法律 、 消費者問題 http:// chiebukuro . yahoo . co.jp / dir / list / d2 078297944 / 
母 種 ？ 募集 の 間違い で は ？ 
どれ も 一般的 に 行なわ れ て いる か と 思い ます が 、 場合 によって 使い分け ます 。 * オープンクラス メリット : 最も 手軽 デメリット : 問題 が 起き た 際 の 切り分け が し づらい 、 上流 の バージョンアップ で 壊れ やすい * モジュール を 作り include さ せる メリット : 手軽 、 特に Rails なら ActiveSupport :: Concern が 使える デメリット : オープンクラス と ほぼ 同様 * gem を fork する メリット : 予想 外 の 挙動 を し づらい デメリット : 面倒 、 上流 の 変更 に 追いつく の が 大変 で ある 書き換え たい メソッド の 内容 、 その メソッド を 使用 する 場面 に も より ます が 、 もし Refinement が 使える の なら ば 使用 する べき です 。 もちろん 書き換え ない で 済む の が 一番 です から 、 もし 自分 以外 に も 役立ち そう な 変更 で あれ ば 、 上流 に 直接 パッチ を 投げ て も 良い と 思い ます が 。 
amakusayuuyuu さん , sw 677777 さん Ruby の 問題集 の 書籍 は 在る に は 在る が 、 「 ひらがな を 覚え た 後 で ない と 、 国語辞典 を 引く こと すら でき ない 」 という 段階 に 相当 する 、 基本 文法 を 学ぶ こと が でき そう な 問題集 は 在り ませ ん 。 ・ Ruby 技術者 認定試験 合格 教本 Silver / Gold 対応 Ruby 公式 資格 教科書 単行 本 （ ソフトカバー ） – 2015 / 8 / 21 書籍 を 購入 する 前 に 、 下記 の 問題集 の 例題 位 は 、 irb コマンド で 実行 さ せ て み た ほう が 良い でしょ う 。 ・ Ruby 手ほどき ６ 題 http :// ideone . com / 41 yUao ・ Ruby プログラミング ５ ０ 題 http:// klis . tsukuba . ac.jp / klib / index . php ? plugin = attach & refer = KISL % 2 ... また 、 色々 な 参考 書 を 読む 前 に 、 下記 の URL の 記事 を 流し 読み し て おい た ほう が 良い でしょ う 。 引用 「 ・ 第 1 章 Ruby 言語 ミニマム http:// loveruby .net / ja / rhg / book / minimum . html ★ オブジェクト に対して は メソッド が 呼べる 。 " content ". upcase () ここ で は 文字列 オブジェクト （ 内容 は 「 content 」 ） に対して upcase メソッド を 呼び出し て いる 。 upcase は アルファベット の 小文字 を 大文字 に し た 新しい 文 字 列 を 返す メソッド な ので 、 次 の よう な 結果 に なる 。 p (" content ". upcase ()) # " CONTENT " と 表示 さ れる ★ メソッド 呼び出し は 連鎖 し て よい 。 " content ". upcase (). downcase () この 場合 、 " content ". upcase () の 返り 値 の オブジェクト に対して downcase メソッ ド を 呼ぶ 、 という こと に なる 。 」 引用 終わり この サイト は 、 Ruby を 作っ た 人たち の 一員 が 書い た 資料 で 、 「 これ で Ruby の 全て で 、 他 の 資料 に 書か れ て いる こと は 、 この 応用 か 、 単なる 補足 説明 で 文章 が 膨らん で ある 内容 だ 」 と も 言える 、 高密度 な 資料 です 。 if 文 や for 文 で すら メソッド 呼び出し の 記法 を 簡略 化 し た もの だ と 解釈 できれ ば 、 覚える べき こと を 随分 減らす こと が でき ます 。 
その 現象 が 発生 する とき 、 共通 の 何 か が あり ませ ん か ？ 特定 の コード を 実行 し た とき と か 。 手元 の 環境 だ と 特に 何 も ない の です が 。 。 。 
エラー 文 の 通り です 。 rails new コマンド は 引数 （ APP _ PATH ） として Rails アプリケーション の テンプレート を 生成 する 先 の パス を 要求 し ます 。 詳しく は rails new -- help を 実行 し て ください 。 % rails new test _ app        create        create README . rdoc        create Rakefile        ... こう する と 、 test _ app という ディレクトリ が 生成 さ れ 、 その 中 に Rails アプリケーション の テンプレート が 展開 さ れ ます 。 
> / var / lib / gems / 2 . 1 . 0 / gems / execjs - 2 . 6 . 0 / lib / execjs / runtimes . rb : 48 : in ` autodetect ': Could not find a JavaScript run time. See https :// github . com / rails / execjs for a list of avail able runtimes . ( ExecJS :: RuntimeUnavailable ) JavaScript の 処理系 の インストール が 必要 です 。 対応 する 処理系 は いくつ か あり ます が 、 最近 で は Node.js が おすすめ です 。 なんらかの 方法 で Node.js を インストール する と 動作 する よう に なるか と 思い ます 。 使用 し て いる OS に も より ます が 、 公式 パッケージ リポジトリ に ある 場合 が 多い の で は ない でしょ う か 。 
year >= 1926 && year <= 1988 か な 。 
公開 プロパティ を 先 に 教えれ ば いい 。 プロパティ を 非公開 に する 方法 を 教えれ ば 、 非公開 の プロパティ だ が 外 から その 値 を 参照 し たい 、 という 場合 どう する の か 、 という 話 に 自然 と なる はず だ 。 まあ 、 ゲッター なんぞ なく とも プログラム は 書ける けど な 。 
postgres は デフォルト の クライアント エンコーディング は OS 依存 と なり ます 。 その ため 、 Windows 環境 の 場合 は Shift-JIS ( MS 932 ) で エラーメッセージ が 出力 さ れ て しまい ます 。 postgresql . conf の client _ encoding に UT F8 を 設定 し て み て ください 。 
こちら は 見 られ まし た か ？ http:// d . hatena . ne.jp / iriya _ 0624 / 20130424 / 1366783019 
こちら で 回答 済み 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1415767101 ... 
if ( の中 ) は 複数 の 論理 値 は 受け付け ませ ん 。 ifelse の 方 なら 可能 です 。 # 私 なら apply 系 関数 [ 他 言語 で 言う Map 処理 ] で 処理 し ます が 、 seiseki   <-   data .fr ame (    ID = 1 : 5 ,    tensu = c ( 89 L ,   70 L ,   58 L ,   42 L ,   16 L ),    flag = rep ( 0 L , 5 )       ) seiseki $ flag   <-    sapply ( seiseki $ tensu , function ( x )         if ( 80 <= x )   5 L    else   if ( 60 <= x )   4 L    else   if ( 40 <= x )   3 L    else   if ( 20 <= x )   2 L    else             1 L   ) # やろう と 思え ば 別に ifelse で も 処理 可 。 seiseki $ flag   <-    ifelse ( 80 <= seiseki $ tensu , 5 L ,      ifelse ( 60 <= seiseki $ tensu , 4 L ,        ifelse ( 40 <= seiseki $ tensu , 3 L ,          ifelse ( 20 <= seiseki $ tensu , 2 L ,            1 L )   )   )   ) ちなみに 、 if ( 60 <= x < 80 )～ ↑ コレ も 不可能 な ので 、 if ( 60 <= x && x < 80 )～ の よう に 書く 必要 あり 。 [ 前者 を 受け付ける 環境 ( Python , Mathematica 等 ) は 少ない ] 
https :// www . ruby - lan g.o rg / ja / documentation / quickstart / 本家 が いい の で は ？ 
InData =[ 0 , 3 , 0 , 0 , 1 , 2 , 0 , 3 , 1 , 2 , 2 , 0 ] t =[] t [ 0 ]=[ 0 ] t [ 1 ]=[ 1 , 2 , 3 , 4 , 5 ] t [ 2 ]=[ 6 , 7 , 8 , 9 , 10 ] t [ 3 ]=[" a "," b "," C "," d "," g "] p t . map {| e | t [ e ]. choice } 
num を ソート し て 、 上 から 順番 に 拾っ て いけ ば 問題 なく 動く か と 思い ます 。 今 、 v [ 1 ] から v [ 5 ] って 恐らく 敏捷 値 だけ か と 思い ます が 、 代入 の 際 に アクター の id を 一緒 に 入れ て やっ て ください 。 v [ 1 ] = [ 敏捷 値 , アクター id ] 取り出す 時 は v [ 1 ][ 1 ] が アクター id です 。 一 人 目 の id なら 、 num [ 0 ][ 1 ]、 二 人 目 なら num [ 1 ][ 1 ] です 。 似 た よう な の を 先日 回答 し て ます んで 、 そちら の 自分 の 回答 も ご 参考 に さ れ て み て ください 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1215837248 ... ---------------------- GYM （ 音源 作っ たり R GS S3 素材 を 配布 し たり し て い ます ） http:// gymaterials .jp / ---------------------- 
end の 位置 が 悪い def listID ( na , num ) の 後ろ に end が ある けど ， class Log を 閉じる ため に は 前 に 必要 ． class Log __ attr _ accessor : name ,: pass ,: ch __ def initialize ( name , pass ) ____@ name = name ____@ pass = pass __ end __ def disp ____ puts " 名前 : #{@ name } 番号 : #{@ pass }" __ end end # これ ね def listID ( na , num ) __ lists ={} __ lists [ na ]= num end # end # これ は 要ら ない あと ， 知恵袋 で コード 乗せる とき は 半角 アンダースコア （"_"） で インデント を 加える こと が 多い ． その 方 が 見 やすい ので 親切 
Ruby っていう か 、 一部 の Ruby 至上主義 ユーザー が う ざいので 、 スカラ に 乗っ取ら れ て い て 、 １ ０ 年 後 に は 、 「 Ruby って 言語 が 一時期 流行っ た よ ねー 」 的 な 使い に なっ て いる こと を 希望 。 ｗｗｗ 
> Too many open files - socket ( 2 ) OS は 何 を 使用 し て い ます か ？ 一般 的 な Linux ディストリビューション で は 、 プロセス あたり の ファイルディスクリプタ 数 の 上限 が 1024 に 設定 さ れ て い ます ( ulimit - n で 確認 でき ます )。 つまり 、 同時に 開ける ファイル ・ ソケット の 数 が 1024 に 制限 さ れ て い ます 。 ( Linux で あれ ば ) / etc / security / limits . conf に * soft nofile 65535 * hard nofile 65535 と 追記 し 、 再度 ログイン し なおせ ば 上限 を 65535 まで 上げる こと が でき ます 。 # ただ Ruby の 場合 GVL が あり ます から 2500 スレッド 生成 し た ところ で 同時に 実行 さ れる スレッド は 1 つ だけ な ので 、 何 か 設計 が 間違っ て いる よう な 気 は し ます 。 スレッド 生成 コスト って かなり 高い です し ... # 大量 に スレッド を 生成 せ ず 大量 の ファイルディスクリプタ を 操作 する ( 非同期 IO ) ライブラリ は いくつ か ある ので 、 それ を 試し て み て も 良い と 思い ます ( EventMachine や Celluloid :: IO など ) 
こんにちは。 eclipse や xampp 等 の 統合 環境 を 使え ば 良い ですよ。 ruby on rails eclipse ruby on rails xampp 等 の 検索 ワード で 様々 な 環境 構築 方法 が 拾え ます し 初めて で あれ ば 、 関連 書籍 （ なるべく 新しい もの ） も 沢山 あり ます ので 御 自身 で 分かり やすい 入門書 を 入手 する の が 良い と 思い ます 。 参考 http:// tikuflower . blogspot .jp / 2015 / 01 / ruby - on - rails - 4 windows eclipse ... 
下記 URL に 、 Ruby で 書か れ た ゲーム が あっ て 、 ” RUN ” ボタン を 押せ ば 遊べる し 、 " CODE " ボタン を 押せ ば プログラム の 内容 を 見る こと が でき ます 。 http:// www . playmycode . com / play / game / cainy 393 / crappy - bird 何 種類 も の ゲーム の プログラム が 掲載 さ れ て いる ので 、 試し て み て 、 「 面白い と 感じる ゲーム の プログラム は 、 何 行 位 か ？ 」 数え て みれ ば 、 自分 で 作る 大変 さ が 解る でしょ う 。 そこで 挫折 し なけれ ば 、 ようやく 、 プログラミング に 入門 できる でしょ う 。 
どうも なり ませ ん が 。 
あなた が 何 を し たい の か に より ます 。 
Rails だっ たら https :// c 9. io / > オフライン で 書い た コード を テスト できる ソフト 同じく Cloud 9 上 で 可能 だ と 思い ます 。 
3 つめ の 例 で 出る エラー は TypeError : no implicit conversion of Fixnum into String で は ない でしょ う か 。 Ruby で は 文字列 （ String ） と 整数 （ この 場合 は Fixnum ） は 直接 + で 連結 する こと は でき ませ ん 。 です ので 、 先 に 整数 を to_s メソッド によって 文字列 に 変換 し て しまえ ば 良い です 。 str = " nya " num = 123 puts str + num . to_s # => nya 123 今回 は 文字列 が リテラル な ので 、 式 展開 を 使う こと も でき ます 。 こちら で あれ ば 明示 的 な to_s は 不要 です 。 num = 123 puts " nya #{ num }" # => nya 123 式 展開 について は るり ま の ページ も どうぞ : http:// docs . ruby - lan g.o rg / ja / 2 . 3 . 0 / doc / spec = 2 fliteral . html # exp 
もう １ ０ 年 後 Ruby が まだ あっ たら 、 就職 に も 有利 です 。 たぶん 。 現状 まだ 、 Ruby って ベンチャー 案件 でしょ 。 で 、 ベンチャー って どういう 意味 だ ？ と 改めて 調べ たら 、 /// ベンチャー と は 、 ベンチャー企業 、 ベンチャービジネス の 略 で あり 、 新 技術 や 高度 な 知識 を 軸 に 、 大企業 で は 実施 し にくく なる 。 /// と の こと 。 あと 、 ひとつ の 言語 のみ で は 、 就職 は 難しい か 、 Ruby 好き な 会社 じゃ ない と 無理 な 気 が し ます 。 しかし 、 言語 的 に は 優れ て いる らしい ので 、 知っ て おく と 便利 は 便利 な の かも しれ ない です 。 
> 付属 の テキスト を 読め ば 上記 の 仕様 に 変え られ ます か ？ まず 無理 です ね 。 RUBY の ソース が 読め ない と 改造 は 難しい です 。 キャラ を 1 . 5 マス から 2 マス に する の は キャラ チップ の 大き さ の 問題 です ので 、 それ は すぐ できる と 思い ます 。 
答え は 自分 で 書い てる じゃ ない です か 。 。 。 - でも 整数 として 管理 さ れる -> シンボル は メモリ が 経済的 - シンボル を 変更 は 出来 ない 
Ruby 言語 を 入門書 を 見 ながら 試し で 使う だけ なら 、 何 も インストール する 必要 は 無く 、 ブラウザ 操作 だけ でも 済み ます 。 (a) ブラウザ の 向こう 側 で Ruby を 動かす 方法 ； 下記 ＵＲＬ を 開い て Ruby コード を ” １ 行 づつ ” コピー ＆ ペースト すれ ば 、 Ruby コード が 動い た 結果 を ブラウザ 上 で 見る こと が でき ます 。 この リンク 先 の ” 来月 の カレンダ 表示 ” の 例題 コード を 、 貴方 なり に 改造 し て 、 ブラウザ 越し で 動け ば 良い でしょ う 。 転記 元 ： http :// ideone . com / 41 yUao 転記 先 ： https : // repl . it / ペースト する 前 に 、 ” 行番号 を 取る ” 位 は 考え て ネ 。 ( b ) グラフィカル な 動き を スマホ で も 見 たい 場合 下記 の サイト の アカウント を 作っ て 、 知恵袋 へ の 投稿 の よう に 、 コード を 入力 し て RUN ボタン を 押す だけ です 。 http :// www . playmycode . com / build / edit / 11810 ( c ) mac の termina l の 中 で Ruby を 動かし たい 場合 ； 上記 まで やっ て み て 、 物足りな さ を 感じ たら 、 いよいよ 、 mac の termina l の 中 で ruby の IRB コマンド を 起動 し て 、 Ruby コード を 入力 すれ ば 良い でしょ う 。 
> taketoshisama さん 2016 / 4 / 1202 : 00 : 02 > sublime tex t3 で rails を コーディング し て いる の です が 、 その 際 に ><%◯◯◯%> と 記載 する 文章 を ショートカットキー で 作る 手段 って ない です か ？ ドキュメント に 書い て い ない の なら 無い と 思い ましょ う 。 
こんばんは 。 １ ． iPhone ブラウザ ( Safari )- フォーム 入力 画面 ２ ． CGI （ DB 処理 ） ３ ． iPhone ブラウザ （ 完了 画面 ） といった 感じ でしょ う か 。 iPhone ブラウザ ( Safari ) から する と 、 送信 し た あと 、 結果 の HTML が 分から ない 状態 に なっ て いる よう です ね 。 状況 により 様々 考え られ ます が 。 考え られる 原因 １ ． の 入力 画面 で 送信 する 時 の 処理 に 問題 が ある パターン → １ の 送信 時 に javascript を 使用 し て いる 場合 、 submit は さ れ た が 遷移 が 出来 なかっ た 可能性 。 ２ ． の DB 処理 後 、 確認 の HTML を 生成 し て いる が 、 その 際 の ヘッダー 処理 が iPhone ブラウザ ( Safari ) が 許容 し ない 内容 で あっ た 可能性 。 ２ ． の DB 処理 後 、 iPhone ブラウザ ( Safari ) が 解釈 でき ない HTML 構文 を 書い て い た 可能性 。 iPhone ブラウザ ( Safari ) 自体 の 動作 不良 （ キャッシュ を 消す なり アプリ を 入れ直す なり ） iPhone ブラウザ ( Safari ) 自体 の 仕様 を 超える ページ で 合っ た 場合 （ ページ 容量 が 大き すぎ た 等 ） 参考 まで 。 ではでは 。 
それら は ローカル 変数 で は なく 、 Seat クラス の インスタンス メソッド です 。 つまり レシーバ の 省略 さ れ た メソッド 呼び出し です 。 です から この 場合 は self . baggage () > self . flight (). baggage _ allowance () の よう に 、 self . と () を 補っ て も 動作 する はず です 。 正確 に は xxx による メソッド 呼び出し （ 関数 形式 と 呼ば れ ます ） と self . xxx による 呼び出し は 違う の です が 、 今回 は baggage も flight も 呼び出し 制限 （ visibility ） が public です から 違い は あり ませ ん 。 
情報 が 足り なく て よく わから ない の です が .... この コード の year に は 2016 の よう な 数字 が 格納 さ れる もの と 考え ます ね 。 でし たら 、 100 で 割っ た とき の 剰余 を 取れ ば よい でしょ う 。 year 2 = year % 100 #=> 16 ただ この 場合 、 例えば year が 2008 で あっ た 場合 year 2 は 8 に なっ て しまい ます が 、 実際 は " 08 " と なっ て ほしい でしょ う から 、 String #% を 使っ て year 2 _ str = "% 02 d " % year 2 #=> " 08 " で どうでしょう 。 String #% について 詳しく は るり ま を 参照 し て ください http:// docs . ruby - lan g.o rg / ja / 2 . 3 . 0 / method / String / i /= 25 . html 
> なに か 仕事 あり ます か ？ ハローワーク に 行け ば 沢山 有り ます 。 
Ruby 本体 に は あり ませ ん 。 です が 、 標準 添付 さ れる RubyGems （ gem コマンド ） の 設定ファイル は 存在 し ます 。 通常 は / etc / gemrc と ~/. gemrc が 読み込ま れ ます 。 php . ini と 違っ て 変更 する 機会 は めったに ない か と 思い ます が ...。 標準 で 使用 する gem リポジトリ や 、 各 gem サブ コマンド を 実行 し た 際 に デフォルト で 有効 に する オプション が 設定 でき ます 。 http:// guides . rubygems . org / command - reference /# gem - environment Rails に も グローバルな 設定ファイル は 存在 し ませ ん 。 個々 の Rails アプリケーション は それぞれ 独立 し た アプリケーション です から 。 
> C , Java , Ruby で の 書き方 まず perl だ と 下 の よう に なり ます use strict ; use warning s ; my @ array = ( 1 .. 10 ); print join " ", @ array , "\ n " ; ＊ ＊ ＊ なので ruby だ と さらに 下 の よう に なり ます arr = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] puts arr . join (" ") ＊ ＊ ＊ 従っ て perl だ と 1 から 10 まで を 足す とき は " 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 " という 文字列 を 作っ て eval する と 晴れて 55 が 出 ます 文字列 を わざわざ つくっ て 評価 し て いる ところ が スゴ い です ね 。 use strict ; use warning s ; my @ array = ( 1 .. 10 ); print eval ( join "+", @ array ) , "\ n " ; ＊ ＊ ＊ そして ruby で は それ を 一気に やる ため の 専用 の 関数 たる reduce が 用意 さ れ てる ので それ を 使う と 合計 の 55 が 出 て き ます arr = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] puts arr . reduce (:+) 
とりあえず 、 アマゾン など の ECサイト に チャレンジ する の が いい です 。 現実 問題 として 、 料理 と 作っ た こと の ない 人 に 、 どんな 料理 が 作り たい と いっ て も 、 正しい 解答 が できる わけ が あり ませ ん 。 それ より も まず 、 具体 的 に 何 を 作る の か を 実戦 する の が よい か と 思い ます 。 個人的 に は 好き な もの を 作る は 駄目 だ と 思い ます 。 理由 は 、 好き な こと という の は 、 自分 が 理解 でき て いる もの に 直結 する ので 、 全部 を 理解 し て いる なら ともかく 、 現状 、 あやふや な 状態 で は お 勧め でき ませ ん 。 個人的 に ECサイト を お勧め する の は 以下 の 理由 です 。 1 ． Web サイト で イメージ し やすく 、 また 見本 が 多い 。 2 ． DB 操作 、 ファイル 管理 、 クッキー 、 セッション と 、 Web サイト の 基本 と なる 操作 が 全部 ある 。 と は いえ 、 全部 を 一 度 に 実装 する の は 大変 な ので 、 ログイン 認証 とか 個別 機能 を 少し ずつ 実装 し て いく の が よい と 思い ます 。 
tabashy さん ” A " の データ の 様に 、 二つ の 行 だけ で は なく て 、 ” C " の データ の 様に 、 多数 の 行 が 重なる 場合 の 処理 について 定義 が 足り ない と 思う が 、 、 コレ で 合っ て いる ？ [" A ", 1 , 10 , 1 , 13 ] [" A ", 2 , 13 , 1 , 13 ] [" A ", 3 , 9 , 1 , 10 ] [" A ", 3 , 100 , 3 , 100 ] [" B ", 1 , 10 , 1 , 10 ] [" C ", 10 , 20 , 8 , 23 ] [" C ", 11 , 12 , 11 , 12 ] [" C ", 14 , 23 , 10 , 23 ] [" C ", 13 , 22 , 9 , 23 ] [" C ", 9 , 19 , 8 , 22 ] [" C ", 8 , 17 , 8 , 20 ] だとすれば 、 その Ruby コード は 、 以下 。 http :// ideone . com / Cq 3 URE 
作り たけれ ば 、 ちゃっちゃ と 自分 で 調べ て 、 作れ ば いい じゃん 。 https :// prog - 8 . com / lessons / rails / beginner 
その 変数 の object _ id （ アドレス みたい な 識別情報 ） が 、 呼び出し 元 と 同じ だっ たら 参照 渡し 、 違っ て い たら 値 渡し だ と 思え ば 良い でしょ う 。 > 参照 渡し な の か値 渡し な の か は どの よう に 区別 し たら よい の でしょ う か 。 「 def fun c1 (a) p " before value =" + a . to_s p " before arg . object _ id =" + a . object _ id . to_s temp = a + 1 p " temp . object _ id =" + temp . object _ id . to_s a = temp p " after value =" + a . to_s p " after arg . object _ id =" + a . object _ id . to_s end a = 10 p " callers opbject _ id =" + a . object _ id . to_s fun c1 (a) p a 」 という の を 実行 し て みる と 、 「 " callers opbject _ id = 21 " " before value = 10 " " before arg . object _ id = 21 " ここ まで は 、 呼び出し もと の 参照 渡し に なっ て いる " temp . object _ id = 23 " ## ここ で temp という 新た な オブジェクト が でき て いる " after value = 11 " " after arg . object _ id = 23 " ＃＃ コレ は 奇怪 でしょ う 。 a という 引数 の id が temp の id に 変わっ て いる 。 つまり 、 呼び出し 元 の a という 変数 の 中身 は 変わっ て い ない 」 こうゆう の を ” 参照 の 値 渡し ” と 言う の だ そう です 。 http:// magazine . rubyist .net /? 0032 - C al l ByValueAndCallByReference ＞ 参照 渡し の よう に メソッド の 中 で num の 値 を 変える 書き方 は ある の でしょ う か ？ 関数 指向 な 「 単一 代入 。 値 が 変わっ たら 別 の 変数 名 を 次々 に 使う 」 という スタイル で 、 map メソッド とか 殆ど の メソッド が 使える ので 、 プリミティブ 型 の 変数 の 内容 は 変え れ なく て も 良い と 思い ます 。 でも 、 そう ゆう 押し 付け ガマ シサ が 強く は 無い の が 、 Ruby の 特徴 で 、 、 、 出来 ない わけ で は 無い 。 呼び出し もと の 変数 の 値 を 入れ替え たい 場合 は 、 変数 の 存在 を 管理 し て いる binding という オブジェクト と 、 更新 し たい 変数 の シンボル （ 名前 渡し ） と を 渡せ ば 良い です 。 「 def updateValue ( scope , valSymbol ) val = scope . local _ variable _ get ( valSymbol ) val = val + 1 scope . local _ variable _ set ( valSymbol , val ) p val end updateValue ( binding ,: a ) p a 」 実行 結果 は 、 http :// ide on e.c om / 4 Evs 2 e 
http:// ejje . weblio .jp / content / chomp 
私 は N 88 Basic を やり まし た ねぇ ｗ 大学 の 卒論 の データ 解析 の 為 に 勉強 し て 、 作っ て まし た 。 その 頃 は 、 それ が プログラミング として 一般的 でし た （ 古っ ！ ！ ） 
比べる 対象 が 違い ます よ 。 比べる 対象 は 、 Visual Studio （ .NET 系 開発 環境 ） と 統合開発環境 Eclipse を 比べ て 下さい 。 （ もしくは 、 他 の 統合開発環境 と 比べる ） Windows を 使う の なら ば 、 断然と Visual Studio （ .NET 系 開発 環境 ） が よい です 。 オープンソース と 言う 意味 で は 、 統合開発環境 Eclipse が 、 断然と よい です 。 
前者 の for は 1 .s tep ( 100 , 3 ){| i | # 処理 } 後者 の 逆順 は ( 0 .. 10 ). to _ a . reverse ループ で 使う の でし たら 10 .s tep ( 1 ,- 1 ) 10 . downto ( 1 ) でも 可能 また 10 .s tep ( 1 ,- 1 ). to _ a 10 . downto ( 1 ). to _ a と する と 配列 が 得 られ ます 。 
giggsister 1996 さん プロ ゲート とかいう サイト の 教材 と いう と 、 ” たのしい Ruby ” という 書籍 の 範囲 を 一寸 下回る 程度 です ね 。 で あれ ば 、 知恵袋 の Ruby カテ の 住人 に は 私 より 詳しい 人 も いる が 、 、 、 わざわざ ” Ruby 大師 ” さま の 御 出 まし を 待つ ほど の こと は 無い です 。 ( 1 ) Ruby の 手ほどき ; 下記 の リンク 先 に 、 ６ 個 の 手ほどき コード が 入っ て いる ので 、 写本 し て 実行 し て みよ う 。 http :// ideone . com / 41 yUao これら は 、 if / while / class など 使っ て い ない し 、 ６ 題目 の ” 来月 の カレンダー 表示 ” で も 、 ６ 行 の コード です 。 でも 、 まず 、 「 何故 この コード が 、 動く の か ？ 」 を 理解 でき て いる か ？ 復習 ( 2 ) " 第 1 章 Ruby 言語 ミニマム " で 、 上記 の コード の 動き を オサライ ； http :// i . loveruby . net / ja / rhg / book / minimum . html この サイト は 、 Ruby の 実装 に も 関わっ て いる 御 尊 人様 の 記事 で 、 高密度 で Ruby の 説明 が さ れ て い ます 。 一番 感銘 を 受け て いる Ruby の 文法 の 説明 は 以下 。 「 ・ オブジェクト に対して は メソッド が 呼べる 。 " content ". upcase () ・ メソッド 呼び出し は 連鎖 し て よい 。 " content ". upcase (). downcase () 」 この 意味 を 良く かみ締め て 、 if 文 で すら 「 （ 条件 式 オブジェクト ）. then { 条件 成立 時 に 遅延 実行 さ れる ブロック 引数 } . else { 条件 不成立 時 に 遅延 実行 さ れる ブロック 引数 }」 という メソッド の 連鎖 を 簡易 的 に 記述 できる よう に し た もの だ と 理解 する 。 そして 「 ｛ 地 、 水 （ 氵 さんずい )、 火 、 風 （ 几部 き ぶ ） ｝ と 、 ｛ 日 ｝ という 部首 の 組み合わせ で 、 ｛ 圼 、 汩汨 沓 、 炅炚 、 凬 ｝ という 漢字 を 造る コト が できる よう に 、 Ruby で は メソッド と 引数 の 連鎖 で 色々 な こと が 、 何 通り か の 方法 で 出来る 」 という こと を 、 覚え 直す 。 ( 3 ) 基礎 ばかり だ と 飽きる ので 、 「 ５ 分野 制覇 」 を 体験 ； 他 の 言語 で は 披露 さ れ た こと が 無い 、 下記 の ５ 分野 の ” 入門 的 コード ” を 動かす ” 体験 ” を し て みよ う 。 (a) サーバ 系 通信 ソフト ： プロクシ を 挟む インターネット 越し 通信 で 、 amazon サイト で 販売 さ れ て いる 書籍 の 数 を 数え上げる コード は 、 Ruby で 約 ５ ０ 行 http:// code . runnable . com / VbO 19 zhQEB 0 _ gJHW / amazon - book - count - by - word ... ( b ) デスクトップ 対話 型 アプリ ： 「 暗記 帳 」; BGM 付き で グラフィカル に 動き 、 Windows PC だけ で は なく 、 mac で も iPhone で も Android で も 、 共通 し て 使える ツール 。 Ruby で 約 ３ ０ 行 ｈｔｔｐ :// www . playmycode . ｃｏｍ / build / edit / 11810 ( c ) パズル を 解い たり や 天気予報 みたい に 大量 計算 を 伴う 処理 ； Ruby なら 虫食い 算 を 解く コード が ７ ０ 行 。 http : / / ideone . com / qoVDih template = 2 ?? 5 + ? 38 ? * ?? 4 / 5 ?-?? = ? 3 ? 2 "(((( 2005 + 1380 )* 154 )/ 55 )- 86 )= 9392 " "(((( 2005 + 1380 )* 154 )/ 55 )- 96 )= 9382 " "(((( 2005 + 1383 )* 154 )/ 56 )- 15 )= 9302 " Ruby で は 15 秒 で 21 個 まで 出力 でき て いる 。 もし 、 ” ナンチャッテ C言語 プログラマ ” から 「 C言語 なら 爆速 」 とか 言わ れ たら 、 「 コノ Ruby コード より 早い コード 書い て 見せ て ！ 」 と 言い返せ ば よい 。 C言語 系 だ と 、 この コード より 随分 長い か 遅い か 、 劣っ た コード しか かけ ない もの で 、 自身 を モッテ Ruby を 学ぼ う 。 ( d ) Microsoft 社 の EXCEL みたい な 電卓 として ； Ruby の IRB コマンド を 起動 し て 、 下記 の １ 行 を 入力 する だけ で 、 分子 ＆ 分母 合わせ て ８ 千 桁 の 数値 が 出力 さ れる 。 「 ( 1 .. 10000 ). map {| n | rational ( 1 , n )}. inject (:+) 」 http :// ideone . com / 41 yUao (e) 組込み 機器 分野 ； Raspberry Pi と Ruby で LED 制御 ； https : // www . raspberrypi . org / documentation / linux / software / これら の ” 入門 的 コード ” に 、 貴方 なり の アレンジ が 加え られれ ば 、 さらに 良い でしょ う 。 ( 4 ) Ruby で アルゴリズム を 学ぶ ； アルゴリズム と 言う の は 、 国語 で 言う と 慣用句 みたい な もの で 、 少々 実用 的 な コード を 書き たい なら 、 覚え て おい た ほう が 良い コード の 見本 です 。 下記 の リンク 先 に は 、 C言語 で 書か れ て い た コード を Ruby 言語 に 直訳 さ れ た コード が あり ます 。 それ を 、 「 モット Ruby らしく 書き直す 」 という トレーニング を すれ ば 、 随分 実力 アップ できる でしょ う 。 http :// www . mnet . ne.jp /~ tnomura / algorithm . html 
どちら も 役立つ ので 好き な 方 を 。 
好き なら ば 中学生 でも 十分 できる と 思い ます 。 
たぶん 正しい 答え ： なん でも （ ただし 実行 速度 が 問題 に なら なけれ ば ） 簡単 な ところ で いく と Web アプリケーション Twitter は 昔 Ruby で 動い て た 
my _ car . color = gets , chomp この 行 の gets の あと が コンマ に なっ て ます ね 。 ピリオド に 変えれ ば いける ん で は ？ 
後者 で 問題 が ない の で あれ ば それで 良い の で は ない でしょ う か 。 - Ku は 「 UTF-8 を 使用 する 」 という 意味 です から 、 現在 の Ruby で は 不要 です （ デフォルト です ） つまり 、 先頭 の #! ruby - Ku require " kconv " の 行 は 不要 です 。 また 、 明示 的 に エンコーディング 変換 が 必要 な 場合 は String # encode を 使用 し ます 。 例えば 、 UTF-8 な 文字列 を ISO-2022-JP （ いわゆる JIS ） で 出力 する 場合 は " 漢字 ". encode (" ISO-2022-JP ") です 。 参考 （ るり ま ）: http:// docs . ruby - lan g.o rg / ja / 2 . 3 . 0 / doc / spec = 2 fm 17 n . html http:// docs . ruby - lan g.o rg / ja / 2 . 3 . 0 / method / String / i / encode . html --- Kconv は obsolete で 、 互換性 の ため だけ に 残さ れ て い ます （ Ruby 1.9 以降 で は もっと 便利 な M1 7 N 対応 が 備わっ て いる ので 使用 する 必要 は ありません ） また 、 Ruby 2.0 . 0 以降 で は 標準 の エンコーディング は UTF-8 に 変更 さ れ た ので 、 通常 ( en ) coding マジック コメント は 必要 あり ませ ん 。 なお 、 現在 公式 な サポート が ある Ruby の バージョン は 2 . 1 系 以降 です から 気 に する 必要 は ない でしょ う 。 
noobproj さん . to_s ym メソッド を 使え ば 良い の で は 「 result = {: hoge => {: huga => 123 },: bar =>{: bas => 456 }} str =" huga " puts result [: hoge ][ str . to_s ym ] 」 
起動 し なく なっ た の はいつ から です か ？ Ruby を 2 . 3 . 0 に 更新 し た 後 な の か 、 apt - get / yum 等 で システム を 更新 し た 後 な の か 、 bundle install を し た 後 な の か 、 詳しく 教え て ください 。 文面 （ image not found ） を 見る 限り 、 以下 の どれ か が 原因 で ある こと が 多い と 思わ れ ます 。 * MeCab が インストール さ れ て い ない （ アンインストール し て しまっ た ） → インストール し て ください 。 * インストール は さ れ て いる が libmecab .s o . 2 を 見つけ られ ない → ld の キャッシュ が 壊れ て いる 可能性 が ある → sudo ld config を 実行 し て ください * libmecab .s o . 2 は 存在 し 、 見つけ られる が 開け ない → システム と 互換性 の ない 形式 で ある 。 libc 等 システム の 更新 後 に 起こる 場合 が あり ます 。 → MeCab を 再インストール し て ください 。 なお 、 find コマンド の 出力 する find : / dev / fd / 3 : Not a director y は 今回 関係 ない ので 無視 し て ください 。 
＞ コマンドプロンプ と を 立ち 上げ 、 ｃｄ コード を 入力 と ある の です が 、 その 通り に 入力 する と 質問者 さん の 環境 による 部分 を 考慮 し て 入力 さ れ た でしょ う か ？ 例えば - デスクトップ に ruby という フォルダ を 作っ た と なれ ば C :\ Users \ ここ に ユーザー 名 \ Desktop と なり ます 。 ※ 当然 です が 、 ここ に ユーザー 名 と 入れ て も ダメ です よ 。 余談 です が CD cd % user profile %\ desktop と やれ ば デスクトップ に 移動 でき ます 。 余談 終わり コマンドプロンプト へ ドロップ し て 表示 できる という こと は パス が 通っ て いる よう です ね 。 色 が 変化 する 件 は ちょっと わかり ませ ん 。 画像 が あっ たら 何 か わかる かも しれ ませ ん が 、 もし アップ する 際 は ユーザー 名 とか 個人 的 な 情報 が 映り こむ 可能性 が ある ので 注意 し て ください 。 ( ユーザー 名 とか その他 いろいろ ) 
チェックボックス という か ラジオボタン の 方 が いい です よ ね 。 value 属性 に それぞれ 0 , 1 , 2 を 指定 し て 計算 、 出力 すれ ば いいんじゃない です か ね 。 
fact ( n - 1 ) の 部分 で 自分自身 の 呼び出し が 起こり 、 一つ 小さい 階乗 を 再 計算 し に いっ てる から です 。 https :// ja . wikipedia . org / wiki /% E 5 % 86 % 8 D % E 5 % B 8 % B 0 #. E 5 . 86 . 8 D . E 5 . B 8 . B 0 ... 
vagrant から chef を 呼ん でる ん でしょ う か ？ ruby - build という の は chef の クックブック です か ？ 
StackOverFlow でも 同様 の 質問 が 上がっ て い まし た 。 http:// stackoverflow . com / questions / 30665912 / no - ruby - devel - in - rhel 7 どうやら オプション の リポジトリ を 有効 に し ない と いけ ない っぽい です ね 。 本番 の Webサーバ で なく 、 開発 用 の ワークステーション なら ば 、 rpmfind とか で 適当 な 野良 rpm 拾っ て くる とか 、 CentOS の リポジトリ から もらっ て き て 使う とかいう 方法 で も 良 さ そう な 気 が し ます けど ね 。 
例えば 、 こんな 感じ でしょ う か ね 。 #// code pa d.o rg / 517 Vfukj def   np ( l , a =[], z =[])    if   l == 0      z << a    else      [ 0 , 1 ]. each {| j |   np ( l - 1 , a +[ j ], z )}    end    z end puts   np ( 2 ). map {| e |   e . join (',')} puts puts   np ( 3 ). map {| e |   e . join (',')} 
RUBY は こんにちは。 大切なもの です 。 
どの 問題 な の か 分かり ませ ん [ 自分 で リンク 踏ん で 見 て 下さい ] が 、 恐らく 以下 の 行 で s = 0 ; a.t imes do | k | s を 都度 クリア し ない と 、 ・ 一列 目 と 二 列 目 が 全く 同一 -> ｘ ＋ ＝ ２ ・ 一 列 目 と 二 列 目 が 一 箇所 だけ 異なる -> ｘ ＋ ＝ １ に なら ない の で は 無い か と 邪推 。 
フツー に 再帰 で 順番 に 入れ て いく だけ で 良い よう な 。 #// code pa d.o rg / UBKbKS 6 C def   np ( a , i , m , n )    if   n - 1 <= i      p   a +[ m ]    else      ( 0 .. m ). each {| j |   np ( a +[ j ], i + 1 , m - j , n )}    end end np ([], 0 ,   2 , 3 ) 
何 も 判ら ない ＆ 学習 し ない で 行い たい 場合 は 、 ブラウザー メニュー の ファイル → 保存 を 使っ て 保存 する と 良い と 思い ます 。 
やはり 、 Linux でしょ 。 Ruby に バグ が なく て も 、 Ruby が 重い 、 不安定 と 言わ れる 原因 は 、 本来 は Linux で 使う Ruby を Cygwin により Windows で 動かし て いる こと が 外因 か と 。 だから 、 本来 の Ruby の 魅力 は 、 Linux こそ だ と 思い ます 。 
RUBY は いい もの で ある と 思い ます 。 
x = y だけ じゃ 参照 の コピー に しか なら ない から 。 [ 質問者 の 想定 する 結果 に なる 言語 も ある けど ] 実体 の コピー が 欲しけりゃ x = Array .new ( y ) と でも す べき か と 。 
tabashy さん 複数 列 の ファイル を 読み書き する 場合 は 、 CSV クラス を 使う と 便利 です 。 「 require ' csv ' 1 . upto ( 3 ) do | n | CSV . open (' aftercalc ' + n . to_s () + '. txt ', mode => " w " , : col _ sep => " " ,: encoding => " UTF-8 ") do | outputRow | CSV . foreach (' original ' + n . to_s + '. txt ', mode => " r ", : col _ sep => " ",: encoding => " UTF-8 ") do | inputRow | outData = inputRow . map {| col 1 , col 2 , col 3 | [ col 1 , col 2 . to_i , col 3 . to_i ]} . map {| col 1 , col 2 num , col 3 num | [ col 1 , col 2 num - 1 * 100 , col 3 num - 2 * 100 , col 2 num + 100 - 2 * 100 ]} p outData outputRow << outData end end end 」 < 参考 > 公式 マニュアル http:// docs . ruby - lan g.o rg / ja / 2.0 . 0 / class / CSV . html 
>> ( 1 ) インターネット 検索 結果 表示 ； せっかく な ので スクレイピング の ところ は PHP で 書い て み まし た ． やっ てる こと は 完全 に 同じ では ない です が ， 2つ 合わせ て 50 行 以内 で 収まっ て ます ． <? php function   xpath ($ url ,   $ query   =   [])   {      $ dom   =   new   \ DOMDocument ;      $ html   =   file _ get _ contents ($ url   .   '?'   .   http _ build _ query ($ query ,   '',   '&'));      @$ dom -> loadHTML ( mb _ convert _ encoding ($ html ,   ' HTML - ENTITIES ',   ' UTF-8 '));      return   new   \ DOMXPath ($ dom ); } function   get _ auc _ list ($ query ,   $ category )   {      $ xpath   =   xpath (" http:// auctions .s ea rc h. yahoo . co.jp / search ",   [          ' p '   =>   $ query ,          ' auccat '   =>   $ category ,      ]);      return   array _ map ( function   ($ node )   use   ($ xpath )   {          return   [              ' name '   =>   $ xpath -> evaluate (' normal iz e-space (.// h3 )',   $ node ),              ' price '   =>   current ( explode (                  '   ',                  $ xpath -> evaluate (' normal iz e-space (.//*[@ class =" pr 1 "])',   $ node ),                  2              )),          ];      },   iterator _ to _ array ($ xpath -> query ('//*[@ id =" list 01 "]/ table / tr [ td [@ class =" i "]]'))); } function   get _ progbooks _ list ($ query ,   $ year )   {      $ xpath   =   xpath (" http:// www . amazon.co.jp / gp / search / ref = sr _ adv _ b ",   [          ' node '   =>   ' 466298 ',          ' field - keywords '   =>   $ query ,          ' field - dateyear '   =>   $ year ,          ' field - datemod '   =>   0 ,          ' field - dateop '   =>   ' during ',      ]);      return   array _ map ( function   ($ node )   use   ($ xpath )   {          return   [              ' name '   =>   $ xpath -> evaluate (' normal iz e-space (.//*[ contains (@ class ," s - access - title ")])',   $ node ),              ' price '   =>   $ xpath -> evaluate (' normal iz e-space (.//*[ contains (@ class ," s - price ")])',   $ node ),              ' da te'   =>   $ xpath -> evaluate (' normal iz e-space (./*[ 1 ]/*[ 3 ]/*[ 1 ]/*[ 3 ])',   $ node ),          ];      },   iterator _ to _ array ($ xpath -> query ('//*[ contains (@ id ," result _")]'))); } var _ dump ([      ' シャンプー '   =>   get _ auc _ list (' シャンプー ',   42177 ),      ' 石鹸 '   =>   get _ auc _ list (' 石鹸 ',   42177 ), ]); var _ dump ([      ' C言語   |   2013 '   =>   get _ progbooks _ list (' C言語 ',   2013 ),      ' PHP   |   2014 '   =>   get _ progbooks _ list (' PHP ',   2014 ), ]); >> ( 2 ) アルゴリズム 記述 能力 ； 初見 の 問題 で 手間 が かかり そう だっ た ので これ は パス し ます ． しかし PHP と Ruby に 大きな 速度 差 は なく ， むしろ PHP 7 で あれ ば PHP の ほう が 速く なっ て いる こと が 期待 できる ぐらい な ので ， 「 Ruby だ から 15 秒 で 」 という 主張 に は 違和感 を 覚え ます ． Ruby は 短く 美しく 書ける 言語 です が ， 決して 実行 速度 の 速い 言語 で は あり ませ ん ． >> ( 3 ) デスクトップ 対話 型 アプリ これ は PHP ( Phalanger ) で やろう と する と 茨 の 道 な ので Ruby の GTK の ほう が まとも でしょ う ね ． しかし 言語 の 難易度 は さておき ， スクリプト言語 の 仲間 で ある Node.js を 用い て Electron ベース で 作成 し た ほう が ， 見た目 の 美し さ や 移植性 の 面 で 大きく 優れ て いる と 思い ます ． マルチスレッド を フル 活用 し て 高度 な 計算 を 行う よう な アプリ で なけれ ば ， 1 スレッド を 賢く 使う Node.js の ほう が 非同期 タスク 処理 の 面 で も 優れ て いる でしょ う ( この 点 で の 柔軟 性 は C# > Node.js > Ruby > PHP です ね )． PHP より は マシ です が ， Ruby が GUI に 最適 な 言語 だ と は 到底 思え ませ ん ． まとも な ネイティブアプリ を 作ろ う と 思え ば ， ほぼ C# 一択 だ と 思っ て ます ． >> でも 、 PHP しか 使え ない らしき 人 から 、 Ruby に イッチャモン を 付け て 来る シツッコイ 人 も 居 ます 。 ( 私 を 対象 と し た 批判 で は ない よう です が ) あなた も PHP に対して いちゃもん 付け 過ぎ だ と 思う ん です けど ね ． 僕 は Ruby の ほう が 美しい 言語 で ある こと は 認め て い ます ． そろそろ 不毛 な 質問 や 回答 ， 終わら せ ませ ん か ？ いちいち いちゃもん に 反応 し て たら キリ が ない です よ ． 
単に 、 Yahoo で の 検索 字句 とか に 反応 し て 広告 が カスタマイズ ? さ れ て いる だけ だ と 思う 。 私 の ところ に は 出 ない もの 。 な ので 、 あなた が Ruby について 検索 し た から でしょ う 。 ヤフオク で ちょっと 検索 し たり する と すぐ に 広告 に 反映 さ れる から 、 「 変 な もの 」 検索 する とき は Yahoo を ログアウト し て ブラウザ を プライベートモード に し て み たり 。 
create _ table : test , id : false do | t |    t . column : id , " BIGINT PRIMARY KEY " end でしょ う か 。 ただ 、 Ruby 1.9 . 3 と Rails 3 . 2 は 大昔 の バージョン で あり 、 Ruby 1.9 . 3 は セキュリティ フィックス を 含む 全て の サポート が 、 Rails 3 . 2 は 重大 な セキュリティ フィックス を 除く 全て の サポート が 打ち切ら れ て い ます 。 Ruby 1.9 . 3 以降 に なさ れ た 非 互換 な 変更 は ほぼ なく 、 安全 に 移行 できる はず です から 一刻 も 早く Ruby 2 . 1 以降 の バージョン に アップグレード する べき です 。 なお Ruby 2 . 1 の サポート も あと 1 年 で 打ち切ら れる ため 、 できる こと なら ば 2 . 3 へ の アップグレード を 強く お勧め し ます 。 Rails 3 . 2 に関して は 、 未だに 重大 な セキュリティ フィックス は なさ れ て いる ものの 、 Rails 5 の リリース を もっ て 完全 に 打ち切ら れる 予定 です 。 最低 で も 、 Rails 3 . 2 系 の 最新 版 で ある Rails 3 . 2 . 22 . 2 へ アップグレード する べき です 。 Rails は セマンティクスバージョニング を 採用 し て いる ため 、 Rails 3 . 2 . 13 から 3 . 2 . 22 . 2 へ の アップグレード において 非 互換 による 問題 が 発生 する こと は あり え ませ ん 。 
それ だけ だ と エラー の 原因 が 分から ない ので 、 / Users / username /. rbenv / versions / 2.0 . 0 - p6 48 / lib / ruby / gems / 2.0 . 0 / extensions / x86 _ 64 - darwin - 13 / 2.0 . 0 - static / poppler - 3 . 0 . 7 / gem _ make . out の 中身 を 見せ て ください 。 長 すぎ て ここ に 貼り 付け られ ない 場合 は https :// gist . github . com / 等 を 利用 し て ください 。 また 、 Ruby 2.0 . 0 は 2016 / 02 / 24 をもって EOL （ セキュリティ フィックス を 含め た あらゆる サポート の 終了 ） と なり まし た 。 rbenv https :// github . com / rbenv / rbenv 等 を 利用 し て 、 自分 で 最新 の Ruby （ 2 . 3 . 0 ） を インストール する こと を 強く お勧め し ます 。 
完璧 か と 言わ れる と 難しい です が 。 Ruby （>= 1 . 9 ） の 文字列 は 個別 は エンコーディング 情報 を 持つ ので 、 文字列 が 単純 な バイト 列 で ある PHP の よう な 問題 （ マルチ バイト 非 対応 関数 の 問題 や 0 x5 c 問題 の よう な ） は 発生 し ませ ん 。 # PHP に も 文字列 の 内部 表現 を UTF-16 化 する 計画 （ PHP 6 ） が あっ た の です が 、 結局 もう 諦め た の でしょ う か ... 現在 の Ruby （>= 2.0 . 0 , 2.0 . 0 は 既に EOL です ） で は デフォルト の エンコーディング が UTF-8 な ので 、 UTF-8 が 標準 の エンコーディング として 使用 さ れる 今時 の * nix 系 OS で は 特に 意識 する 必要 は ない です 。 しかし 、 例えば 日本語版 Windows の コマンドプロンプト の 標準 エンコーディング は Windows-31J です から 、 例えば 標準入力 を 受けつける プログラム で は 、 個別 に エンコーディング 変換 （ String # encode ） を 行う 必要 が ある かも しれ ませ ん 。 他 に は 、 例えば OS X の ファイルシステム の Unicode 正規化 の 問題 が ある でしょ う か 。 OS 間 の 差異 について は 言語 側 で どうこう する の は 難しい （ 勝手 に 正規 化 さ れ たり エンコーディング 変換 さ れる の は いや です ） から 、 仕方 ない の で は ない か と 思い ます 。 私 は UTF-8 が 標準 の エンコーディング の GNU/Linux 環境 で 使用 し て い ます が 、 この 環境 に 限れ ば エンコーディング の 問題 で 悩まさ れ た こと は 一切 ない です 。 
「 begin fileNo = 1 File . foreach (' text 1 . txt ') do | inData | File . write (' result ' + fileNo . to_s () ＋ '. txt ' , inData ) end rescue SystemCallError => e puts % Q ( class =[#{ e.c lass }] message =[#{ e . message }]) end 」 デバック 、 頑張っ て み て ください 
ruby の メソッド は 数学 で 言う 「 関数 」 のようなもの です 。 例えば 数学 で f(x) = x+ 1 と 定義 する と 、 f ( 1 )= 2 、 f ( 2 )= 3 の よう に 、 ( ) の中 に 数字 を 入れる と 、 入れ た 数字 + 1 を 返す （ 戻す ） 働き を 持っ た 関数 が でき ます 。 この 「 返す 数字 」 が 戻り値 （ 返り 値 ） です 。 ruby で も f(x) = x+ 1 と 同じ よう な 働き を 持つ メソッド を 作る こと が でき ます 。 def f(x) answer = x + 1 return answer end 一 度 定義 し た メソッド は 、 引数 を 与え て やれ ば 、 普通 の 値 で ある 戻り値 を 返す ので 、 普通 の 文字列 や 数値 など の 値 と 同じ よう に 使う こと が でき ます 。 例えば a = f ( 1 )+ 1 と する と 、 f ( 1 ) が 評価 さ れ 、 1 + 1 = 2 に なり 、 a = 2+1 → a = 3 という こと に なり 、 変 数 a に は 3 が 代入 さ れ ます 。 さらに は 関数 の 引数 に 関数 を 指定 する こと も でき ます 。 f ( f ( 2 )) と する と 、 まず f ( 2 )= 3 と なり 、 f ( 3 )= 4 な ので 、 最後 に は 4 が 返り ます 。 他 にも true や false を 戻り値 と する 関数 を 作っ て 、 if など の 条件文 に 複雑 な 条件 を つける とき に 整理 し やすく する など 、 色々 な 使い方 が でき ます 。 もともと 関数 の 役割 は 「 引数 を 元 に 、 戻り値 を 返す こと 」 な ので 、 ruby の メソッド も 戻り値 を もち ます 。 print メソッド など は 戻り値 を 返す の が 目的 で は なく 、 画面 に 文字 を 表示 する など の 『 副作用 』 が メイン の もの です が 、 それでも 「 この 戻り値 に 意味 は ない 」 という こと を 示す nil が 戻り値 に なり ます 。 
設計 による でしょ う ね 。 投稿 表示 に ユーザー テーブル を 利用 し ない の なら 投稿 ごと に DB に 保存 し た 方 が いい でしょ う し 、 ID から 名前 等 を ユーザー テーブル を 参照 し て 出す の なら 、 どちら で やっ て も おなじ に なり ます 。 
画像 が 小さ すぎ て 読め ない です ... * Ubuntu の バージョン * Ruby の バージョン （ ruby - v で 表示 さ れ た 内容 ） * RubyGems の バージョン （ gem - v で 表示 さ れ た 内容 ） を 教え て ください 
ベンダー に 金 払っ て 聞い て ください 。 趣旨 は わかり ます が 多分 まとも に 動か ない 
かつて dRuby という 分散 処理 に 特 化 し た 実装 が あっ た か と 思い ます 。 今 は どう なっ て いる の やら 。 
一般 的 な ワークアラウンド で わるい けど まず Ruby ２ ． ２ ． ３ を アンインストール もう一度 １ ． ８ ． ７ を 上書き インストール で 、 １ ． ８ ． ７ を アンインストール それ から ２ ． ２ ． ３ を もう一度 インストール しな おし が 一番 安全 そう まあ １ ． ８ ． ７ だけ を インストール し て 、 アンインストール で も １ ． ８ ． ７ を 消す だけ なら いけ そう だ けど どっち が わるく なっ てる か わから ない から とりあえず 、 どっち も けし て み た ほう が 
Ruby , Perl は コマンドプロンプト っていう 、 背景 が 黒 で 、 文字 で 操作 する やつ で 動かし ます 。 スパイ 映画 とか で スパイ とか ハッカー が 使っ たり する やつ あり ます よ ね 。 あれ みたい な やつ です 。 Command : CD data Command : Ruby main . rb -------------- THIS IS TEST FOR MAIN . RB -------------- Command :_ みたい な 。 ディレクトリ っていう の は 、 Windows で いう フォルダ の こと 。 Windows 以外 で は ディレクトリ っていう そう です 。 コマンドプロンプト の 使い方 は 「 コマンドプロンプト 入門 」 とか 、 「 コマンドプロンプト 使い方 」 とか って 検索 し て ください 。 カレントディレクトリ っていう の は 、 簡単 に 言っ て しまえ ば 、 現在 位置 。 C ドライブ の 中 に ある abc っていう ディレクトリ の text っていう ディレクトリ なら 、 C :\ abc \ text って なり ます 。 で 、 Ruby っていう か 、 コマンドプロンプト の 起動 方法 。 Windows なら 、 Windows ボタン * 1 の プログラム と ファイル の 検索 みたい な やつ で 入力 する ところ が あり ます 。 これ に CMD と 打て ば 出 て き ます 。 毎回 やる の が 面倒 なら 、 バッチファイル っていう もの を 使っ て 行う 。 テキストファイル は main . txt みたい に . txt に なっ て いる と 思い ます 。 これ は 拡張子 と いい ます 。 ruby の ソース ・ ファイル は . rb です 。 バッチファイル は . bat 。 RunCmd . bat っていう ファイル を 作っ て 、 その 中 に cmd と 書き込み ます 。 で 、 これ を ダブルクリック 。 すると コマンドプロンプト が 起動 し ます 。 環境 によって は これ で は 無理 な とき が あり ます 。 中古 PC で 元 は 企業 用 とか 、 ネットカフェ の PC とか だ と でき ない よう です 。 * 1 : Windows ボタン ... Windows の ロゴ が ある ボタン 。 >> ネット 上 で 、 デモ プログラム コード を 打てる ？ みたい な サイト が ある らしい の です が ... 聞い た こと は あり ます が 、 使っ た こと ない ので これ に関して は わかり ませ ん 。 
hoge _ huga _ piyo さん Cells の 使い方 について 、 公式 ドキュメント を 観 て み まし た が 、 cookies に関する 機能 は 無い よう です ね 。 ※ ” 無い ” という こと を 証明 する の は 、 「 お前 が 知ら ない ダケ だろ う 」 と 言わ れ そう で 、 難しい 。 http:// trailblazer . to / gems / opera tio n/a pi. html という こと は 、 Cells 側 の 拡張機能 で は なく て 、 " Ruby on Rails " 標準 の 機能 の ほう で cookies を 使う しか ない という こと です 。 普通に cookies を 使う 場合 、 下記 の 3 種類 の コード が 要る もの です が 、 提示 さ れ た コード に は ( c ) に 相当 する コード しか 無い の が 問題 だ と 思い ます 。 (a) マズ , サーバ 側 で 初期 値 を 組み立て て cookies を 送出 す コード と 、 ( b ) ブラウザ 側 から 送り返さ れ た cookies の 値 を 変数 に 転記 する コード と 、 ( c ) その cookies の 値 を 参照 ＆ 更新 する コード 。 http:// koseki . hatena blog . com / entry / 20070109 / cookie delete 
nobuhiro _ k _ 0713 さん ダウンロード し た ファイル が 足り な さ そう です 。 また 、 単に sq lit e3 を ダウントード する だけ で は 、 Ruby から 使う こと も でき ませ ん 。 「 . Bitnami \ rubyst ack - 2.0 . 0 - 30 \ sqlite の ディレクトリ 011 / 05 / 19 22 : 37 4 , 082 sql it e3 . def 011 / 05 / 19 22 : 37 565 , 827 sql it e3 . dll 011 / 05 / 19 22 : 36 475 , 136 sql it e3 . exe 015 / 08 / 19 21 : 40 348 , 618 sql it e3 . h 015 / 08 / 19 21 : 40 25 , 974 sql it e3 ext . h 」 一旦 Ruby と sq lit e3 と を アンインストール し て 、 下記 サイト から ワンタッチ ・ インストーラ を ダウンロード し た ほう が 、 簡単 に 整合性 が 取れ た バージョン の 構成 要素 を インストール でき て 、 関連 する 環境 設定 まで 自動的 に 行っ て くれ ます 。 https :// bitnami . com / stack / ruby / installer 
言語 によって は 、 index = 0 を 省略 し て も 動く もの も あり ます ね 。 でも 、 これ を ちゃんと 書い て おく様 に し た 方 が 良い です 。 初期 値 は 、 ０ です 。 と 分かり易い です 。 [] です が 、 これ は 、 配列 です 。 numbers [ 0 ] numbers [ 1 ] numbers [ 2 ] ・ ・ ・ ・ ・ ・ で 、 それぞれ 別 の 値 を 保存 出来る よう に なっ て い ます 。 [] の中 の 数字 を 添え 字 と 言い ます 。 これ を 指定 し て 、 目的 の 値 を 取り出し たり 、 設定 し たり する の です 。 index = index + 1 と し ない と 、 index は 、 初期 値 ０ の まま です 。 そう する と 、 値 が numbers [ 0 ] に しか 格納 さ れ ませ ん 。 numbers .s ort は 、 配列 を ソート し なさい という 意味 です から 、 ちゃんと 配列 に 値 を 入れ て おか ない と 変に なり ます 。 
Ruby on Rails という もの を 使う と 大 規模 な もの を 作成 可能 です 。 でも 、 凄く 勉強 し ない と だめ です よ 。 ここ から 、 入門 で も し て 、 頑張っ て 勉強 し て ください 。 http:// www . rubylife .jp / rails / アマゾン の 本 を 買っ て 読む の も 良い かも しれ ませ ん 。 
原理 的 に は 出来 ます 。 が 、 簡単 な 場合 と 、 とても 難しい 場合 と が あり ます 。 ・ ・ ・ ・ ・ ・ ・ ・ ・ ・ スクレイピング と は 、 「 まるで 人間 が ウェブブラウザ を 操作 し て その サイト を 閲覧 し て いる か の よう に 」 振る舞う プログラム 動作 の こと です 。 です から 、 正しい ID と 正しい パスワード を 、 スクレイピング ・ プログラム （ Ruby で も php で も Perl で も 、 好き な 言語 で 書く ） に 与え て おけ ば 、 「 ID ＆ パスワード 」 制 の サイト は スクレイピング でき ます 。 これ は 技術 的 に さほど 困難 で は あり ませ ん 。 しかし 、 サイト の 中 に は 、 （ 本物 の 人間 が 閲覧 する の で は なく 、 機械的 に 閲覧 する ） スクレイピング を 禁じ て いる ところ も あり 、 また 、 そういう サイト に は スクレイピング を 困難 に する 仕組み が 備わっ て いる 場合 が あり ます 。 たとえば CAPTCHA など は 、 「 スクレイピング 除け 」 の 一 種 です 。 これ は サイト 毎 に 仕組み が 異なっ て おり 、 スクレイピング で これ を 破る の は 困難 な だけ で なく 、 サイト の 利用規約 に 違反 する 事 で も あり ます 。 
応急 的 な 処置 として SRPG コンバータ NEXT for Ace Ver . 1 . 16 内 に ある class Game _ Actor < Game _ Battler 内 @ sukill _ point の 部分 二 箇所 （ スキル と アイテム 部分 二 行 ） を コメントアウト すれ ば とりあえず 動作 する 状態 に でき ます 。 （ ただ 、 この 部分 は スキル や アイテム の 空 打ち を 防止 する 処理 に なっ て いる よう で 上記 の 方法 だ と 何 も 無い マス に スキル や アイテム を 空 打ち させる こと が 可能 に なっ て しまう よう です 。 ） まぁ 使え ない より マシ だ と 思う ので スクリプト の 併用 を 重視 する の で あれ ば ここ は 我慢 し て も 良い か と 思い ます 。 実際 に 触っ て みる と 行動 待機 を 選ば ず スキル を 空 打ち で 順番 を 飛ば せる ので 操作 ミス で イライラ し ない なら 逆 に 便利 かも しれ ませ ん 。 
「 a = [' b ', ' c ', ' a '] b = a . map {| c | [ c ]* 2 }. flatten 」 以上 
「 練習 」 「 リハーサル 」 「 本番 」 みたい な もの です 。 
実行 し た わけ で は ない ので 憶測 です が 、 ポケモングローバルリンク という サイト の 内 の 情報 を 取得 する プログラム だ と 思い ます 。 お 目当て の 情報 を 見る ため に 、 ウェブブラウザ で サイト 内 の リンク を 色々 クリック する の が 面倒 な ので 作っ た の かも しれ ませ ん 。 
masakadotv さん Ruby に は 、 下記 の 特徴 が あり ます 。 ( 1 ) ソコソコ 性能 も 良く て 、 生産性 が 高い Twitter 社 が その サービス を 開発 し 始める より 前 に Java は ソコソコ 流行っ て い た に も かかわら ず 、 Ruby を 選ん で 開発 さ れ た の は 、 スタートアップ に 有利 だっ た から でしょ う 。 それでいて 、 アメリカ の 大統領選 の 少し 前 まで の トラフィック に 耐え た の です から 、 スモールビジネス むけ に は 十分 すぎる 性能 を 確保 できる と 言う こと です 。 かたや 、 PHP は Ruby を 上回る 性能 を だせ た こと は 無い でしょ う 。 http :// www . infoq . com / jp / news / 2012 / 11 / twitter - ruby - to - java ( 2 ) 多様 な 分野 の ” 入門 的 な コード ” が 書け て 、 伸び悩み し ない 。 下記 の 様に 多様 な 分野 を 、 一つ の プログラミング言語 で カバー できる 言語 は 、 他 に 在っ た か な ？ (a) サーバ ソフト ： 40 行 。 ( b ) ディスクトップ 対話 型 アプリ ： 30 行 。( c ) 大量 計算 を 伴う パズル ； Ruby で ７ ０ 行 。 ( d ) 電卓 として ； (e) 組込み 機器 分野 ； http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1115428349 ... この よう に 、 広範 な 用途 で 使う こと が 出来る ので 、 ” 廃人 ” を 生ま ない の も 、 Ruby の 特徴 だ と 言える でしょ う 。 下記 の 虫食い 算 を 解く プログラム は 、 Ruby 言語 なら 70 行 で 解け て 、 その コード を 公開 し て モウ 半年 は 過ぎ て い ます 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1114503132 ... ｈｔｔｐ :// ide on e.c om / IkwIx 7 template = 2 ?? 5 + ? 38 ? * ?? 4 / 5 ?-?? = ? 3 ? 2 "(((( 2005 + 1380 )* 154 )/ 55 )- 86 )= 9392 . 0 " "(((( 2005 + 1380 )* 154 )/ 55 )- 96 )= 9382 . 0 " "(((( 2005 + 1383 )* 154 )/ 56 )- 15 )= 9302 . 0 半年 も あれ ば 、 自称 C言語 の 使い手 や 、 自称 PHP 暦 １ ０ 年 だ とか 言う 方 で も 、 ソロソロ 、 各々 の 得意 と する 言語 で 、 モット エレガント な コード を 披露 し て くれ そう だ と 思う でしょ う 。 それ が ” PHP や C言語 で は 、 伸び悩む 証拠 だ ” と 何 度 か 挑発 し てる に も 関わら ず 、 未だ エレガント な コード を 披露 し て くれ ない 。 質問者 殿 が モット も お勧め できる プログラミング言語 で 、 上記 の ５ 分野 の コード を 書き換え て 、 「 こっち の 言語 の 方 が 良い 」 という 証拠 を 見せ て は くれ ない だろ う か ？ 
ruby は 言語 の 中 で は 簡単 な 方 です よ 。 http:// tryruby . org / この サイト が ブラウザ 上 で 試せる ので 、 サンプル コード を 貼り 付け て 遊ん で みれ ば 如何 でしょ う 。 
ruby だけ で なく 、 ほとんど の コンピュータ言語 で この 訳語 が 使わ れ ます 。 英語 で 計算 結果 を 「 return 」 する と 言う の ね 。 これ を 「 返す 」 と 日本語 で は 表現 し ます 。 つまり 、 何らかの 処理 を し て 結果 が 出 た よ ！ と 呼び出し 元 に 結果 報告 する という こと 。 
テキスト形式 で も XML や json 等 の 規格 化 さ れ た もの が ある ので それ を 使っ て みる 。 Ruby に も 読み書き 用 の ライブラリ が ある はず です 。 クラス を そのまま の 形式 で ファイル 保存 等 を する こと は シリアイズ 化 や シリアライゼーション など と 呼ば れ て い ます 。 ruby で は Marshal で シリアライズ 化 できる ので そちら を 使っ て も いい と 思い ます 。 シリアライズ 化 さ れ た データ は バイナリ な ので 人間 が 直接 読む の に は 向い て い ませ ん 。 その他 、 シリアライゼーションライブラリ が ある かも しれ ない ので もし 不足 が あれ ば ググっ て み て も いい かも しれ ませ ん 。 
RICHARDMARX は すばらしい 歌手 です 。 
私 は オレンジ マンゴー が 好き です ね 。 
変更 し た の が 何 時 頃 か 分かっ て いる の なら 、 find で いい の で は ない でしょ う か 。 # 3日 前 から 現在 の 間 に 変更 さ れ た ファイル のみ アーカイブ tar zcvf modified . tar . gz ` find / html - mtime - 3 ` これ を 展開 すれ ば 、 望み 通り の もの が ディレクトリ 構造 を 維持 し た 状態 で 、 解凍 さ れ ます 。 
Ruby を 始め た ばかり だ と の こと です ので ： 配列 に は ソート という 操作 が 行え ます 。 従って 、 ソート し たけれ ば 単に 次 の よう に し ます 。 fruits = [" orange ", " apple ", " banana ", " pear ", " grapes "] # array を 作る p fruits .s ort # ソート する 元 の fruits を 破棄 し て 、 並べ替え た物 を fruits に し たけれ ば 、 ！ を 付け ます fruits = [" orange ", " apple ", " banana ", " pear ", " grapes "] # array を 作る fruits .s ort ! # ソート する （ fruits 自身 を 変更 する ） p fruits # fruits の 中身 が 変更 さ れ た 
共感 し た よ ！ ２ に なっ た 。 
京 、 缶 し た 。 。 。 。 。 。 
独立行政法人 情報処理推進機構 の セキュア ・ プログラミング 講座 に よれ ば 、 > サニタイジング の タイミング は HTML 生成 時 > サニタイジング は ( 2 ) HTML 生成 時 の タイミング で 行う べき で ある 。 https :// www . ipa . go .jp / security / awareness / vendor / program mingv 1 / a 01 _ 0 ... と の こと です ので 、 > 3 . クライアントサイド で つぶやき を 表示 する 直前 に HTML エンティティ 化 する 。 が 適切 だ と 思い ます 。 
today detail = date time. date time. today () 上記 の スクリプト で 、 変数 today detail に 値 を 設定 し て いる ので 、 while 文 の 中 で 呼び出し て も 、 最初 に 代入 した値 が 出 て くる だけ です 。 呼び出す たび に 新しい 値 を 取り出し たい なら 、 関数 として 設定 し ましょ う 。 
chiebukuro _ yamerubeki _ 71 さん は い 、 C言語 より H 言語 が 良い でしょ う 。 
<(? i ) walking up tile : \ d > こんな 感じ でしょ う か ？ 
dokuzetsu _ tarou さん 全 蔵書 データ を concat すれ ば 良い の で は ？ Ruby の concat は 優れ もの で 、 concat 前 の 領域 を 参照 する だけ な ので 、 concat し た 後 に 、 concat 前 の 変数 の 中身 を 変更 し て も 、 concat し た 変数 の 内容 が 追従 し ます 。 つまり 、 メモリ は 大して 増え ない という こと です 。 「 yamada _ book = [[" 実践 ", " 山田 ", " やまだ ", " リサーチ ", " 248 ページ ",] ] ooba _ book = [[" 入門 ", " 大庭 ", " お おば ", " クリエイティブ " , " 164 ページ ",]] allBooks =[] allBooks . concat ( yamada _ book ) allBooks . concat ( ooba _ book ) # concat し た 後 に 、 concat 前 の 蔵書 データ の 一部 を 修正 する 。 yamada _ book [ 0 ][ 4 ] = " 四 百 九 重 八 頁 " # 蔵書 データ を 表示 する と 、 変更 し た " 四 百 九 重 八 頁 " が 表示 さ れる 。 allBooks . each {| yb | puts " 書籍 名 : #{ yb [ 0 ]}", " 著者 名 : #{ yb [ 1 ]}", " よみ が な : #{ yb [ 2 ]}", " 出版社 : #{ yb [ 3 ]}", " ページ 数 : #{ yb [ 4 ]}" puts "-------------------" } 」 http : / / ideone . c o m / FBAXUr 
＞ 良けれ ば プログラム 例 を 出し て もらえれ ば 嬉しい です 。 依頼 なら プログラム 制作会社 に 頼む と 良い ですよ。 
ちょこっと 調べ まし た 。 ガントチャート は / redmine _ install _ dir / app / controllers / gantts _ controller . rb で 生成 する みたい です 。 http:// www . redmine . org / projects / redmine / repository / entry / trunk / test ... テスト コード を 見 て も 使い か は 分かり ませ ん ｡｡｡ GET 送信 で この gantts _ controller を イジ るん だ なっ て くらい は 分かる の です が そもそも この コントーラー へ の 入力 パラーメーター の 設定 の 仕方 が 分から ない ので どの 様に プログラム を 書い て よい の かも 良く 分から ない です 。 通知 メール を 作成 する プログラム は / redmine _ install _ dir / app / models / mailer . rb みたい です 。 送信 プログラム は ちょっと 見つかり ませ ん でし た が どこ か に ある か と 思い ます 。 手順 として は ガントチャート 生成 に 必要 な パラメーター を 調べる 通知 メール 作成 プログラム が どの よう に メッセージ を 作成 する の か を 調べる 通知 メール 送信 プログラム が どの よう に メッセージ を 送信 する の か を 調べる 通知 メール 作成 プログラム を カスタマイズ する って 感じ で 出来 そう です が どう な ん でしょ う 。 。 。 
gotoichinose さん その @ val は 、 ” トップレベル ” の オブジェクト の インスタンス 変数 です 。 > どう理 解し たら よい の か 下記 の 様に 、 提示 さ れ た コード の 外側 に class 定義 文 が ある と 考えれ ば 良い でしょ う 。 さらに 、 class 定義 文 の 中 で あっ て も 、 上 から 下 に 見え た まま の 順序 で 実行 さ れる 「 class mainObject #--------------- p self def setdata ## これ は 、 ” トップレベル ” の class の メソッド p self @ val = " set value " end p self def readdata ＃＃ これ も 、 ” トップレベル ” の class の メソッド p self p @ val ## この スコープ は setdata と 同じ end @ val = "" setdata readdata #----------------- end # of MainObject 」 上記 の 実行 結果 http : / / ideone . c o m / myX 646 この よう な 事項 の 理解 の 仕方 の 手がかり について は 、 Ruby の 実装 者 の 一 人 でも 在る 方 の 記事 に 、 高密度 で 記載 さ れ て い ます 。 < 参考 > Ruby 言語 ミニマム http:// i . loveruby .net / ja / rhg / book / minimum . html 「 ◆ 全て は 実行 さ れる ここ で 全体 を 見据え て 一つ 書い て おこ う 。 Ruby で は プログラム の ほとんど の 部分 が 「 実行 さ れる 」 。 定数 定義 ・ クラス 定義 文 ・ メソッド 定義 文 や その他 ほとんど の もの は 見 た 通り の 順番 で 、 実行 さ れる 。 」 引用 2 「 ◆ ローカル 変数 の スコープ これ で ようやく ローカル 変数 の スコープ について 話す こと が できる 。 トップレベル 、 クラス 定義 文 内 、 モジュール 定義 文 内 、 メソッド 本体 、 は それぞれ 完全 に 独立 し た ローカル 変数 スコープ を 持つ 。 」 引用 ３ 「 ◆ コンテキスト として の self 例えば トップレベル で も self が ある 。 トップレベル の self は 、 main と いう 。 なん の 変哲 も ない 、 Object クラス の インスタンス だ 。 そんな わけ で トップレベル の self 即ち main は Object の インスタンス な の で 、 トップレベル で も Object の メソッド が 呼べる という こと に なる 。 」 
ドットインストール あたり で 学ぶ と 良い でしょ う 。 
「 どう 」 異なっ て いる か が わから なけれ ば 、 どの よう に 修正 すれ ば いい の か は わから ない です し 、 「 どう 」 異なっ て いる か が わかれ ば 、 それ を 修正 すれ ば 良い だけ です 。 背景 に ある 数学 的 な 仕組み を 理解 でき てれ ば 、 それ が ライブラリ の 不具合 で ある の か 自分 の ポカ で ある の か が わかる と 思い ます 。 
konkai 7777 さん 少なくとも ２つ の 誤り が 在り ます 。 ・ ruby 1.9 以降 なら 、 Ruby の 標準 ライブラリ に ruby tk が 入っ て い ます 。 それ と は 一寸 異なる tcl / tk 8 . x ライブラリ も 存在 する よう です が 、 単に gui を 使い たい だけ なら 、 標準 ライブラリ の ruby tk だけ を 使え ば 良い でしょ う 。 ・ 「 require './ t k' 」 で は なく 「 require ' t k' 」 。 ・ もし 、 どうしても tcl / tk 8 . x を 使い たい 場合 、 下記 サイト から 、 安定 バージョン の ruby ワンタッチ ・ インストーラ を ダウンロード し て インストール し なおせ ば 良い でしょ う 。 https :// bitnami . com / stack / ruby / installer なお 、 本日 現在 の 安定 バージョン は 、 Ruby Stack 2.0 . 0 - 37 です 。 
＞ これ が 漏れ の 編み出し た 、 最速 メソッド で ある ！ という 割 に は 、 下記 の 資料 が 含ま れ て 居 ない ので 、 最速 と は 言え ませ ん 。 この 資料 を 一読 し て おけ ば 、 他 の 資料 を 読む とき に 、 ２ ５ ６ 倍 、 冗長 な 記述 を 読み 飛ばし て 読む こと が できる よう に なり ます 。 「 第 1 章 Ruby 言語 ミニマム http :// i . loveruby . n e t / ja / rhg / book / minimum . html 」 ＞ Ruby が 分かる ん です か ？ 下記 の コード に たどり着き 難い ので 、 Ruby 道 的 に 遠回り でしょ う 。 「 （ １ から １ 万 まで の 数 （ n ) を 、 逆数 （ 分子 が １ 分母 が ｎ の 分数 ( Rational ) に 変換 ( map ) し た 並び に 、 演算子 （:+) を 挟ん だ （ inject ) 式 ( 1 .. 10000 ). map {| n | Rational ( 1 , n )}. inject (:+) 」 " 第 1 章 Ruby 言語 ミニマム " の 資料 で は 、 「 オブジェクト に対して は メソッド が 呼べる 。 " content ". upcase () メソッド 呼び出し は 連鎖 し て よい 。 " content ". upcase (). downcase () 」 という 文法 が 基本 で 、 他は コノ 応用 だ と 説明 し て い ます 。 という こと は 、 if 文 で すら 「 ( 条件 オブジェクト ）. if メソッド { then 条件 成立 時 に 遅延評価 さ れる ブロック 引数 ｝ ｛ then 条件 ” 不 ” 成立 時 に 遅延評価 さ れる ブロック 引数 」 だ と 理解 すれ ば 良い 。 Java 7 以前 の 繰り返し 処理 が 「 繰り返す 処理 内容 」 に 着目 さ せ て い た の に対して 、 Java 8 Stream API や Ruby 等 の 関数 思考 的 的 な 考え方 で は 、 「 繰り返し 処理 の 結果 得 られる オブジェクト の 値 」 に 着目 さ せ て い て 、 「( 配列 風 オブジェクト ）. select {| x | 選択 条件 ｝ 」 という オブジェクト と ブロック 引数 の 組み合わせ に 帰着 さ せる こと が できる 。 Java 7 以前 で は ｛ if ” 文 ” 、 for " 文 ” 、 while " 文 "....} を 夫々 別々 の 機能 として 覚え させ て い た の に対して 、 上記 の よう に 「 メソッド 呼び出し の 応用 」 として 理解 できる ほう が 、 「 ひらがな の よう に １ 文字 づつ 別々 の 字形 として ５ ０ 種類 覚える 。 漢字 も 同様 」 という 覚え 方 より 、 「 ５ ０ 種類 未満 の 部首 の 組み合わせ で 、 数 万 種類 の 漢字 は 読み書き できる 」 という 覚え 方 の 方 が 効率 的 な の が 解る でしょ う 。 さらに 、 Python 本 を 読ま せる こと は 、 例えば 「 ｛ 土 、 水 （ 氵 ） 、 火 、 風 （ 几 ） ｝ と ｛ 日 ｝ の 組み合わせ で ｛ 圼 、 汩汨 沓 、 炅炚 、 凬 ｝ の よう な 漢字 に なる 。 部首 の 組み合わせ 方 に は 制約 が ある から ” 意味 ” を 推定 する こと が できる でしょ う 。 でも 、 組み合わせ は 一 通り で は ない 」 という 体験 に 導か ない ので 、 アンチ Ruby 的 だ と 思い ます 。 
「 空 は 何故 青い の ？ 夕焼け は 何故 赤い の ？ 」 的 な 、 マトモ に 答える に は 可也 広い 知識 が 要る 御題 です ね 。 ＞ どんな こと が でき ます か ？ まず 、 ” どんな こと ” の 母集団 を 、 下記 サイト に 列挙 さ れ て いる 「 コンピュータ を 使っ て できる ＩＴ 界 の モロモロ の 知識 」 として 、 明確 化 し ましょ う 。 ・ 「 ITスキル標準 」 「 研修 ロードマップ 」 http:// www . ipa . go .jp / jinzai / itss / download _ V 11 . html ２ ０ １ ６ 年 現在 、 上記 サイト に 列挙 さ れ た 知識 領域 を 、 一 版 広く 学ぶ こと が 出来る の は 、 「 Java 言語 で 書か れ た サンプル コード を 読める こと が 前提 に なっ て 居る 書籍 」 で なら ８ ０ ％ 位 まで は 学ぶ こと が できる でしょ う 。 でも 、 Java 言語 以外 で は 、 こんなに 広範 な 知識 領域 の 書籍 が ソモソモ 無い ので 、 Ruby だけ で は ２ ０ ％ 位 まで しか 、 独学 ダケ で は 学ぶ こと は 出来 ない でしょ う 。 例えば 「 性能 を 確保 できる アルゴリズム や フレームワーク の 使い方 」 とか 「 品質 と グレード （ 等級 ） の 差異 は ？ コード で 示す と ？ 」 等 、 Java 本 なら 書籍 は 沢山 在り ます 。 他 の 言語 だ と 、 全 知識 領域 の ５ ％ も 学べ ず 、 独学 で の 挫折 率 の 高さ も ある ので 、 相対的 に は Ruby を 学ぶ は 良い こと だ と 言え ます 。 ＞ 独学 （ 本屋 に 売っ て いる 本や ネット の 無料 の サイト ） で 勉強 でき ます か ？ 独学 の 前提 を 、 「 無限大 の 期間 」 では なく て 、 「 誰 と も コンタクト し なく て 、 ５ 年 程度 」 と 限定 し た と し ましょ う 。 ここ で ” ５ 年 ” という 期間 は 、 下記 の 質問者 が 、 java / C言語 / C# を カジリ 読み し て 、 挫折 で 停滞 し た よう に 観 え た 期間 から 想定 し まし た 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1413670378 ... 初 学者 が 独学 で やり たい と 思う かも しれ ない 応用 領域 で 、 一 人 が ５ 年 以内 に 作れる 程度 の 規模 の コード なら 、 Ruby 言語 １つ 覚える だけ でも 出来る でしょ う 。 Ruby 関連 の 書籍 を 独学 で 読ん で 手 が 届き そう な 応用 領域 の 例 は 、 ・ プロキシ を 跨ぐ インターネット 通信 ・ ナンプレ など 設問 は 中学生 で も 理解 できる が 大量 の 計算 が 要る パズル 、 ・ ゲーム の よう な グラフィカル で 対話 操作 を 伴う 処理 ・ iPhone と Android と の 両方 で 動く コード ・ Raspberry Ｐｉ の よう な 電子工作 キット 向け プログラム 等 、 、 等々 領域 で 、 コード 量 は ２ 万 行 未満 でしょ う 。 ※ この ６ 行 が 、 主 回答 です 。 ５ 年 も あれ ば 、 これら ５ 種類 の 領域 の 中 でも 、 テーマ と する 領域 が 変わる こと が ある でしょ う が 、 その 時 でも Ruby の 知識 が 無駄 に は ナラ ナイ でしょ う 。 他 の プログラミング言語 だ と 、 これら ５ 種類 の 領域 の 一つ に 特 化 し て い て 、 一旦 覚え た こと が 無駄 に なっ て 、 先 に 例示 し た よう な 可愛 そう な 質問 者 の 例 に なる 可能性 が 高い と 思い ます 。 でも 、 ２ 万 行 を 超える と 、 「 砂場 の 砂山 に 砂 を 盛っ て も 崩れ て 、 水 を かけ て 滑り止め する くらい で は 乾燥 の 方 が 速く て 、 滑り落ち て 、 高く する こと が 出来 なく なる 」 様 に 、 独学 ダケ で は 学び 難い 困難 さ の 克服 も 要る でしょ う 。 
転送 の 意図 が 正確 に 分かり ませ ん が 、 SQUID ＋ 独自 プロキシ の 多段 プロキシ 構成 に し て プロキシー ルーティング すれ ば 、 可能 じゃ ない です か ? まず 、 「 HTTPS 通信 は 転送 が できる こと 、 また 、 場合 によって は 特定 の 証明書 を 適応 できる こと 」 の 意図 が 、 CONNECT メソッド で 与え られる あて先 の FQDN に 応じ て 、 インライン ( MITM による 証明書 埋め込み ) に する か 、 フォワード ( CONNECT メソッド を 使っ た 外部 サーバ と の SSL セッション の 確立 を 承認 ) する か を 選ぶ こと を 意味 する なら 、 SQUID で 、 以下 の よう に プロキシ ルーティング する 。 HTTP 及び 、 インライン で 扱う FQDN の HTTPS 通信 の 場合 ⇒ 独自 プロキシ に プロキシ ルーティング フォワード する FQDN の HTTPS 通信 の 場合 ⇒ そのまま あと は 、 独自 プロキシ を 適当 に 作り こめ ば やり たい こと は 出来る ん じゃ ない ? Server Name Indication で 、 どうしても やり たい って 言う なら 話 は もう少し ややこしく なる が 、 それ を やる 意義 は 今回 は ない と 思う 。 
gets は 入力 を 文字列 として 取得 し ます 。 when 0 など は 数値 型 として 比較 し ます ので エラー に なり ます 。 num = gets . to_i と すれ ば 動く はず です 。 
これ は 、 ruby の 開発 用 パッケージ が 足り ない から です 。 sudo apt - get install ruby - dev で 直り ませ ん か ？ 
dhura _ y 0608 さん Ruby の Webサーバ 実行 環境 なら 、 下記 URL から ワンタッチ ・ インストーラ を ダウンロード し て 使え ば 良い でしょ う 。 https :// bitnami . com / stack / ruby / installer Mac 用 の 安定 バージョン は 、 今 なら 、 Ruby Stack 2.0 . 0 - 37 ( 64 - bit ) らしい です 。 この サイト は 、 セキュリティ 脆弱性 対策 も 含め て 、 下記 の よう に 沢山 の 関連 ソフト を 整合性 の ある 組み合わせ で 提供 し て くれ て い ます ので 、 夫々 の 本家 サイト から かき集める より 楽 です 。 Version 2.0 . 0 - 37 2015 - 12 - 18 * Updated Ruby to 2.0 . 0 - p6 48 ( security release CVE - 2015 - 7551 ) * Updated Apache to 2 . 4 . 18 * Updated Nginx to 1 . 9. 8 * Updated MySQL to 5 . 6 . 28 * Updated Node.js to 5 . 2.0 Version 2.0 . 0 - 35 2015 - 12 - 08 * Updated Node.js to 5 . 1 . 1 ( Security release CVE - 2015 - 8027 , CVE - 2015 - 6764 , CVE - 2015 - 3193 and CVE - 2015 - 3194 ) * Updated OpenSSL to 1 . 0 . 1 q * Updated phpMyAdmin to 4 . 5 . 2 * Updated Node.js to 5 . 1 . 0 Version 2.0 . 0 - 34 2015 - 11 - 16 * Updated libpng to 1 . 5 . 24 ( security issue ) * Updated Node.js to 5 . 0 . 0 * Updated Varnish to 4 . 1 . 0 * Updated MySQL to 5 . 6 . 27 * Updated Node.js to 4 . 2 . 1 * Updated PostgreSQL to 9. 4 . 5 * Updated Apache to 2 . 4 . 17 Version 2.0 . 0 - 33 2015 - 10 - 13 * Updated Ruby to 2.0 . 0 - p6 47 for Windows 
wav ファイル じゃ ない 、 って 言わ れ て いる だけ の よう な 。 ターミナル で od - t x1 z - Ax / home / ユーザー / workspace / rensyu / test . wav | head を 実行 し て 000000 52 49 46 46 bd 39 00 00 57 41 56 45 66 6 d 74 20 > RIFF ( 略 ) WAVEfmt < : : と なり ます か ? wav ファイル なら 最初 の 4 バイト RIFF ( 16 進 バイナリ で 52 49 46 46 ) 次 の 4 バイト ファイルサイズ （ リトル エンディアン ） 次 の 4 バイト WAVE ( 16 進 バイナリ で 57 41 56 46 ) で 始まっ て いる はず です けど 。 
hanagegorira 6 さん Webサービス の 実装 は バックエンド から が 良い でしょ う 。 現在 公開 さ れ て いる Webサービス API は 、 バックエンド 側 だけ でも Webサービス だ と 認め られ て い ます 。 ・ 日本 の 全 エンジニア に 捧ぐ ！ 現在 公開 さ れ て いる API 一覧 【 2013年 版 】 http:// www . find - job .net / startup / api - 2013 と は いえ 、 「 どの よう に 使わ れ たい Webサービス な の か ？ 」 という 説明 という か 、 「 リファレンス ・ インプリメンテーション として の フロントエンド の ” 例 ” （ 実用 に アラズ ） 」 も 要る でしょ う 。 a . 概要 設計 ： どの よう に 使わ れ たい か を 示す 画面 の イメージ 策定 この 段階 で は 、 HTML のみ データ で も 良く て 、 用語 辞書 も 作れ ば 良い かも しれ ない 。 b . 詳細 設計 or テスト駆動開発 ： どの よう に 使わ れる こと を 想定 する か を 、 詳細 に 記述 。 Ruby on Rails の ActiveResource で 、 Webサービス の REST API の クライアント 側 コード を 書い て みる 。 c . 実装 ： Ruby on Rails で 、 Webサービス の REST API を 実装 。 その 過程 で 、 DB の レコード とか の 定義 情報 は 、 a . の 概要 設計 や 、 ” 用語 辞書 ” で の 項目 の 定義 内容 （ 最大 文字数 とか 書式 とか ） から 抽出 。 d .テスト 上記 の ｃ で 出来 た サーバ 側 コード を 、 ｂ で 作っ た クライアント 側 コード から アクセス する 。 ここ まで デハ 、 CSS など ブラウザ を 使う よう な テスト は し て い ない 。 e . マニュアル ・ ドキュメント 作成 先 の a に 肉付け し て 、 説明 文書 を 作る 。 ここ まで で 、 ようやく html , css など の フロントエンド 開発 に 着手 可能 に なる 。 なぜなら 、 フロントエンド 側 は 、 見た目 や 操作 性 など 試行錯誤 が 多い が 、 機能 性 とか 何 か の 足場 が Fix し て い ない と 、 全て が フワフワ し て 、 先 に 進め ない 。 g . フロントエンド 側 の 機能拡張 「 リファレンス ・ インプリメンテーション として の フロントエンド の ” 例 ” （ 実用 に アラズ ） 」 では なく て 、 実用 的 な 画面 も 作り たけれ ば 、 機能拡張 として 作っ て も 良い 。 
・ ドキュメント ルートディレクトリ より も 上 の 階層 に 置く ( 最も 一般的 ) ・ .htaccess で 非公開 設定 を する ( Apache 限定 ) ・ 「. ht 」 から 始まる 名前 に する ( Apache 限定 ) また ， データ の 保管 に は テキストファイル より も データベース を 使用 する ほう が 一般的 です ． 
タイマー の 表示 を 弄る に は スクリプト を どうこう し ない と いけ ない ん だ よ なあ … …。 いま PC が 手元 に ない ので 正確 に は 言え ませ ん が 、 スクリプト を 弄る の なら SpliteTimer か WindowTimer 辺り を 探る こと に なる と は 思い ます 。 ちなみに 、 並列 処理 で ウェイト 60 フレーム 変数 - 1 と すれ ば タイマー の よう に 使え なく も ない です 。 これ だ と 時間 も 出 ませ ん し 。 
a = 10 b = 20 ans = 0 ( a .. b ). each {| e | ans += e } puts ans ruby あまり やっ た こと ない ので 、 汚い です けど 。 
Ruby で 仕事 を し て い ます 。 ( 以前 は PHP を 書い て い まし た ) 個人 の 趣味 など も 含め て 比較 する と Ruby は 0 . 1 も 無い よう な 気 が し ます 。 仕事 で 考え て も 誰か から 依頼 を 受けて 作る 小さな システム なんか で は Ruby は ほとんど 見 た こと が あり ませ ん 。 自社 で Webサービス を やっ て いる とか スタートアップ みたい な 会社 で は それなり に 使わ れ て いる 印象 です 。 ( 3 くらい ?) 質問 の 背景 が わから ない ので なんとも 言え ませ ん が 、 勉強 する 言語 を 決め かね て いる の でし たら 、 使用 度 で は なく 目的 で 選ん だ ほう が いい と 思い ます よ 。 PHP と Ruby に 限定 し て 書き ます が 、 PHP の 方 が いい と 思う の は 小さな サイト を 作り たい 、 HTML / CSS / JavaScript など を メイン で 書い て い て サーバ 側 の プログラム も 書い て み たい 、 SIer で 仕事 が し たい みたい な ケース です 。 逆 に プログラミング の 知識 を 深め て いき たい 、 優秀 な プログラマ の いる 環境 で 働き たい みたい な ケース で は Ruby の 方 が いい と 思い ます 。 プログラミング言語 として の 性能 や できる こと に そんなに 差 は 無い です が 、 コミュニティ の 雰囲気 が 違い ます 。 業界 に も より ます が 、 現状 で あれ ば どちら を 選ん で も 仕事 に 困る という こと は 無い よう に 思い ます 。 ( 少なくとも 私 は 仕事 の 少ない 方 の Ruby で 仕事 が 見つから ない という 状況 が 想像 でき ない です ) 
レンタルサーバ に も サービス の 種類 が あり ます 。 Ruby が 使い たけれ ば 、 Ruby を サポート し て いる レンタルサーバ を 選択 し ましょ う 。 例えば heroku など は サポート し て い ます 。 （ アマゾン の AWS の よう に 一定 まで 無料 です が 、 無料 枠 を 超え て 利用 する と 課金 さ れ ます ） Ruby 自体 は 汎用 的 な 言語 です 。 別に Webサービス に かぎっ た もの で は あり ませ ん 。 目的 と 手段 を 履き違え ない よう に 自分 が 何 を やり たい の か ？ その ため に は 何 が 必要 な の か 考え ましょ う 。 Ruby で Web アプリケーション を 作り たけれ ば 、 Ruby を サポート し て いる サーバ を 選択 する に は 自然 な こと です 。 契約 し て いる レンタルサーバ が あっ て 、 そこで Web アプリケーション を 動かし たけれ ば 、 契約 し て いる レンタルサーバ が 何 を サポート し て いる か 把握 する こと です 。 Ruby という 言語 を 理解 し たけれ ば 、 別に Web アプリケーション で ある 必要 も ありません から 、 レンタルサーバ も いり ませ ん 。 そういった 考え かた の 組み立て を する こと は とても 大事 な こと です 。 自分 の 目的 が 何 な の か はっきり さ せ ましょ う 。 方向性 の ない 努力 は 無駄 に なり ます 。 方向性 が きまっ たら 、 だっ たら どう する の か ？ を 自分 で 考える よう に し ましょ う 。 自分 の こと です から 、 人 に 聞い て も 意味 が あり ませ ん 。 
whwqs 948 さん Ruby の IRB コマンド が 使える 程度 の ” 基礎 ” まで で あれ ば 、 下記 の 拙作 回答 の リンク 先 を ご覧 あれ 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1314493058 ... ・ 文法 を ナントナク 覚え て 、 Ruby 標準 の IRB コマンド で 操作 演習 ・ 「 アルゴリズム 」 を 学ん で 、 メモリ 中 の データ を 、 自在 に 加工 する トレーニング ・ そこ まで 学べ ば 、 次 は Ruby ライブラリ の 辞書 的 マニュアル を 読める よう に なる でしょ う 。 ＨＴＴＰs :// www . ruby - lan g.o rg / ja / documentation / ＞ ファイル の 書き換え や 通信 など それ は 、 多分 Ruby で ４ ０ 行 程度 の コード で 試せる と 思い ます 。 下記 の よう な コード を 見本 として 、 辞書 的 マニュアル で 処理 内容 を 追いかける の も 良い かも しれ ませ ん 。 ・ サーバ ソフト ： プロクシ を 挟む インターネット 越し 通信 で 、 ショッピング サイト の 価格 一覧 出力 http : / / code . runnable . c o m / VWBvJvTF 9 EZ 81 rxo / yahoo _ syouhinn _ price _ list _ by _ ruby 
whwqs 948 さん Windows / mac / iOS 系 （ iPad / iPhone )/ Android 系 tablet の 何れ の 環境 で マウスカーソル を 使お う と し て いる の か 解ら ない が 、 ソレラ 全部 で 共通 し て 動く Ruby コード の 添削 も 出来る サイト で の コード を 例示 し ます 。 getControls (). isLeftClick () do | x , y | # 上記 で 、 マウス の 左 クリック し た とき の カーソル の 位置 （ x , y ) を 得る fillText ( " Hello World ! " +( x . to string ()) +" ," + ( y . to String ()), x , y ) 上記 で 、 変数 x と y の 内容 を 、 表示 できる end 入門 段階 なら 、 「 何処 まで 出来 て 、 どんな 風 に 旨く 動か なかっ た の か ？ 」 を 正確 に 使える こと が 出来る 添削 用 の サイト を 使う と 良い です 。 下記 サイト 等 、 Windows で も mac で も 、 画面 が 大きな パソコン が あれ ば 、 Ruby コード を 投稿 でき て 、 iPhone の よう に 小さな 画面 で も Run ボタン を 押せ ば 、 動い て いる 処 を 、 第 3 者 に も 見せ て 、 添削 を 依頼 する こと も でき ます 。 http:// www . playmycode . com / build / edit / 11291 
＞ ruby から javascript を 使用 する に は 、 どの よう な 環境 が 必要 か 教え て いただき たい です 。 どの よう な 環境 が 必要 か は どの よう な 目的 か に より ます 。 練習 なら 、 ブラウザー 等 の JAVASCRIPT エンジン を 使っ て いる 物 を 用意 すれ ば 良い と 思い ます 。 
Making Fruity Bat ( a Flappy Bird clone ) in Ruby https :// www . youtube . com / watch ? v = QtIlyU 2B r3 o Make 2D Games with Ruby and Gosu – P ar t 1 : Project s etup https :// www . youtube . com / watch ? v = 2X qL _ WYjtEo Tic Tac Toe In Ruby Using TD D & G osu ( Annotated ) https :// www . youtube . com / watch ? v = tQjjHt 0 I 3 _ o いくつ か 動画 を 見 て み まし た が 、 エディタ を 使っ て いる よう です （ 上 から 、 vim , atom , vim ） 。 上 の 動画 の よう に 、 作業 を 見せ て くれる 動画 が ある ので 探し て み て 下さい 。 
それでも 動き ます が 、 存在 し ない note に 関連付け られ た いいね が 作れ て しまう の が 一番 の 問題 です か ね 。 ( 前者 だ と 存在 し ない id を note _ id として リクエスト する と エラー に なり ます が 、 後者 は そのまま 存在 し ない note に対する いいね を 保存 し て しまう ) 
・ ここ まで の 動作 確認 の 場所 で 全て true に なっ た の です が 、 次 の 灰色 の 画面 が 出 ませ ん 。 どう すれ ば よい でしょ う か ？ 何で ID 非公開 で 質問 し てる の ？ ランサーズ で 受け た 仕事 を ここ の 人達 に やら せよ う と し てる の ？ 
なんで そんな フォーマット の ファイル を 扱い たいのかわ から ない です が 次 の よう な 方法 が 考え られ ます 。 1 . 元 ファイル を カンマ 区切り など の 扱い やすい 形 に 変換 し て しまう → カンマ 区切り に すれ ば 、 split (',') で データ を 読め ます ね 。 2 . [ や " など の 記号 を プログラム 中 で 空文字 に 置き換え て から split してやる → 1 . では 事前 準備 し た ところ を 、 プログラム の 中 に 埋め込ん で しまう 方法 です 。 3 . eval する → なん でも eval で 解決 する の は ナンセンス だ と 思い ます けど ね 。 
提示 さ れ た ページ の 手順 の 何処 か の 過程 で 、 実は 先 に エラー が 出 て い た のに 、 それ を 無視 し て 進めよ う と し て い た から 、 でしょ う 。 ＞ エラー が 発生 する 原因 として は 何 が 考え られる でしょ う か ？ ・ 提示 さ れ た 「 Ruby/SDL で 始める ゲームプログラミング 【 前編 】 」 の 記載 内容 に 拠れ ば 、 「 MacPorts を 利用 する の が 一番 簡単 な よう です 。 以下 の 順 に インストール を 行っ て ください 。 • XCodeTools ( OS の インストール ディスク 等 から 入手 可能 ) • MacPorts • 各種 ライブラリ • Ruby/SDL 本体 ( ソース から コンパイル )<----!! 本当 ！ • rsdl <---「/ gems / rsdl - 0 . 1 . 5 / rsdl 」 という エラーメッセージ から 、 rsdl の インストール は 出来 て いる よう に 観 える 。 」 もし 、 本当に Ruby/SDL 本体 の ” ソース から コンパイル ” が 出来 た の なら 、 こんな ところ で 質問 など し ない で 、 自己 解決 でき て いる でしょ う 。 単に 、 Ruby で ゲーム を 作っ て 、 見知らぬ人 に 披露 し て みたい だけ なら 、 下記 の サイト に Ruby コード を 投稿 し する 方 が 、 知恵袋 へ の 質問 投稿 と 同様 に 、 簡単 です 。 http:// www . playmycode . com / play / game / cainy 393 / crappy - bird 
- Ruby と PHP って どっち が 使い やすい です か ？ 何 を もっ て 「 使い やすい 」 と する か によって 変わっ て くる ので 、 何とも 言え ませ ん 。 - 勉強 する なら どっち の 勉強 を し た ほう が いい です か ？ あなた が プログラマー に なり たい なら Ruby を おすすめ し ます 。 Web サイト を 作り たい だけ で 、 できるだけ プログラム を 書か ず に 済ませ たい なら PHP の ほう が 向い て い ます 。 - どっち も レンタルサーバー を 借り たら 簡単 に 使え ます か ？ レンタルサーバー で 動かす なら PHP の ほう が 簡単 です 。 Ruby の 場合 、 対応 し て いる レンタルサーバー 自体 が 少なく 、 対応 し て い て も 、 Web アプリケーション を 動作 さ せる に は それなり に 知識 が 必要 です 。 Ruby で 作っ た Web アプリケーション を 動かす なら 、 レンタルサーバー で は なく 、 heroku の よう な PaaS （ 構築 済み の 動作 環境 を 提供 する サービス ） を 利用 し た ほう が 簡単 です 。 
PHP カテ の 住人 です から 、 PHP を お勧め し ます 。 と 言っ て も 、 PHP も Ruby も それぞれ 特徴 が あり 優劣 が ある 訳 で は 無い （ ruby な 方々 は そう は 言わ ない かも しれ ませ ん が ） ので 、 お 好き な 方 を 。 一般的 に JavaScript は ブラウザ 上 で 動作 し ます 。 な ので 、 ブラウザ へ 渡す HTML 書類 を 生成 する プログラム が 何 で ある か は 無関係 です 。 （ PHP で も Perl で も Ruby で も Java でも ... etc. ... 同じ です ） 質問者 さん が 、 ブラウザ で 表示 する 事 を お 考え なら 、 HTML 、 スタイルシート 、 JavaScript について は 、 PHP あるいは Ruby と は 別口 で 学ぶ 必要 が あり ます 。 
＞ プログラミング言語 Ruby を プログラミング 知識 ０ から 独学 で 勉強 しよ う と 考え て い ます 。 独学 という の は 自分 で やる こと を いう ん です よ 。 
・ どれ くらい の こと が できる まで に なり ます か ？ だいたい これ くらい の こと が できる って 教え て 下さい 。 何で ID 非公開 で 質問 し てる の ？ 自分 で 受け た 仕事 の 調査 を ここ の 人達 に やら せよ う と し てる の ？ 
＞ templete = ERB .new ( File . read (' entried . erb ')) ここ で 、 「 templete ＝ nil : NilClass 」 と なっ て い た ので 、 その エラーメッセージ が 出 た の が 、 直接 原因 。 ＞ res. body << template . result ( binding )## ここ が serv . rb : 70 次 は 、 その 行 を 下記 の よう に 分解 すれ ば 、 モウヒトツ 前 の 原因 の 切り分け が できる でしょ う 。 「 f = File . read (' entried . erb ') p f templete = ERB .new ( f ) p template 」 
それ を する と MP は 常に 満タン に 出来 ます が 良い の です か ？ それ が 良い なら MP 満タン に 出来る アイテム を 用意 し て も 同じ よう な 気 が し ます が 
muraction さん 「 routes . rb の 正規表現 アンカー 」 の 説明 を 、 よく 読み ましょ う 。 http:// ruby . studio - kingdom . com / rails / guides / routing routes . rb で の get 等 の ルーチング で は 、 正規表現 アンカー も 指定 可能 で 、 その 標準 値 値 として ドット や スラッシュ 以外 の 全て の 文字 に マッチ する 正規表現 アンカー が 仮定 さ れ て い ます 。 さらに 、 「 正規表現 アンカー は 、 上 から 順に マッチ する の が 探さ れる 」 と なっ て い ます 。 という こと は 、 もし show アクション へ の ルーティング を 上 に 書く と 、 '/ notes / new ' という URL も 、 ' notes # show ' の 方 に ルーティング さ れ ます 。 「 get '/ notes /: id ' => ' notes # show ' , as : ' note ' { id : /[^\/]+/} get '/ notes / new ' => ' notes # new ' 」 ＞ なぜ エラー が 発生 する の です か ？ 本当に エラー に なる か否 か は 、 ' notes # show ' 内部 の 処理 の " id " という パラメタ に " new " という 文字列 が 渡さ れ た とき に 、 正しく 動ける か否 か に 依存 し ます 。 と は いえ ' notes # new ' 側 に ルーティング さ れる パラメタ が 、 実質的 に 無効 と なる の です から 、 全体 として 、 旨く は 動か ない でしょ う 。 でも 、 下記 の 様に 正規表現 アンカー 部 に 、 「 id で は 数字 の 列 しか マッチ し ない 」 という 指定 を すれ ば 、 '/ notes / new ’ という URL は 、 ' notes # show ' に ルーティング さ れ なく て 、 無事 ' notes # new ' 側 に ルーティング さ れる よう に する こと も でき ます 。 「 get '/ notes /: id ' => ' notes # show ' , as : ' note ' { id : /\ d +/} get '/ notes / new ' => ' notes # new ' 」 
これ 、 VisualBasic じゃ ない と 思い ます が 、 何 の 言語 な ん でしょ う ね 。 カテゴリ は VB に なっ て ます よ 。 が 、 プログラム かじっ て たら すぐ ピン と くる ネタ です ね 。 if ( AAA == " 01 ") elsif ( AAA == " 02 ") この 書き方 が 冗長 です 。 VB で 言え ば Select ～ Case 文 、 COBOL で 言え ば EVALUATE ～ WHEN 。 言語 ごと で 異なり ます が 、 １ 対 １ の 判断 で は なく 、 同時に 判断 が 分岐 する 場合 に は 多岐 分岐 など と 呼ば れる 書き方 を 用い ます 。 普通 、 その 書き方 だ と 、 上 から 順次 判断 し 、 最終 的 に それ 以外 で 書け ます 。 
stop _ bit 1234 さん その エラーメッセージ が 出 た の は 、 sort 直後 の カッコ が 丸い カッコ （） で は なく て 、 中 カッコ ｛ ｝ で なかっ た の と 、 ソートキー の 宣言 が カギカッコ [] では なく 、 縦棒 ｜ に し て い なかっ た から です 。 > array = fname .s ort ([( k 1 , v 1 ),( k2 , v2 )] v2 <=> v 1 ) array = fname .s ort {|( k 1 , v 1 ),( k2 , v2 )| v2 <=> v 1 } でも 、 他 にも 、 直せ ば 良 さ そう な ところ は あり ます 。 ・ ファイル 読み込み が 出来 て い ない の は 、 標準入力 に する の か な ？ ・ 「 tmp = line .s plit (" ")」 は 、 最初 の カラム だけ を 抽出 する 為 に 「 tmp = line .s plit (" ")[ 0 ]」 で は ない か な ？ ・ array は モット 早い 段階 から 値 を 代入 し て 、 「 array ={} ## ここ も 、 ｛ ｝ で 空 の ハッシュ値 で 初期 化 し ない と 駄目 array [" 名前 1 "]= 1 array [" 名前 2 "]= 22 array [" 名前 3 "]= 3 pp array .s ort {|( k 1 , v 1 ),( k2 , v2 )| v2 <=> v 1 }. take ( 5 ) 」 と し た ほう が 良い の で は ない か な ？ 
ipuun _ nozomi さん マルチ スレッド の 使い かた の コト か な ？ コウユウ 出力 なら 、 「 何 か の 処理 中 まだ 終わっ て い ない signal : 何 か の 処理 中 まだ 終わっ て い ない signal : まだ 終わっ て い ない signal : 何 か の 処理 中 まだ 終わっ て い ない signal : まだ 終わっ て い ない signal : 」 こうゆう コード です 。 「 flag = 0 t 1 = Thread .s tart { loop do sleep ( 1 ) puts " ã  ¾ ã   ç µ  ã  ã  £ ã  ¦ ã  ã  ª ã  signal :" end until flag != 0 } 3 . times () do puts " ä ½  ã  ã  ® å  ¦ ç  ä ¸­ " sleep ( 2 ) end flag = 1 」 // ide on e.c om / 1 Hs 8 wH 
ユーザー 名 の 部分 は ご 自身 の Windows の ユーザー 名 に なり ます 。 普通に 、 エクスプローラー で Windows の 入っ て いる ドライブ ( 多く は C :) を ダブルクリック ユーザー を ダブルクリック あなた の ユーザー 名 の フォルダ を ダブルクリック あと は Ruby の フォルダ を 作っ て ください 。 
私 も 難しく 思い ます 。 C や C++ の ほう が 簡単 。 確か に ポインタ とか で つま づき やすい です が 、 応用 が きき やすい 。 JavaScript は オブジェクト指向 ( 厳密 に は プロトタイプ 式 オブジェクト指向 ?) な のに 、 入門書 に は クラス 関係 の こと について 述べ て い ない 場合 が 多い 。 生成 さ れ た オブジェクト ( C++ なら cout に 当たる ) やつ か 、 関数 しか ... C++ は 扱い こなす の も 大変 です が 、 C と 切り替え が できる ので 楽 です 。 Java は 一 ファイル につき 一 クラス . 必ず 、 何らかの メンバ で ある こと . 定義 が 多い 。 C/C++ なら 一 ファイル 一 クラス で は ない し 、 グローバル 関数 として も いい です し 、 何らかの メンバ でも いい です し 。 私 も Ruby , JavaScript , Java , Python は 簡単 っていう の は 、 「 ライブラリ が 豊富 」 、 「( C と くらべ て ) GUI が 組み 易い 」 、 「( つま づき やすい ) ポインタ が ない 」 等 で 楽 っていう 理由 だ と 思っ て い ます 。 
動画 を 全部 見 た わけ で は ありません が 、 プロジェクト ごと に ID を 持っ て い て 、 その 配下 に タスク が あっ て その タスク ごと に ID を 持っ て いる 、 という 構造 です ね ？ おそらく 。 2つ の 引数 は 、 プロジェクト の ID 、 タスク の ID です 。 2つ 必要 な 理由 は 、 タスク の ID だけ 見 て も 、 プロジェクト が わから ない から です 。 たとえば 、 「 私 の 住所 は 1丁目 2 番 3号 です ので 商品 を 送っ て ください 」 と 言わ れ て も 超能力者 で も なけれ ば 無理 です よ ね ？ どこ の 1丁目 2 番 3号 な の か を 教え て もらわ ない と 困り ます ね 。 これ も 同じ よう に どの プロジェクト の タスク な の か が わから ない と 困り ます 。 な ので 、 2つ ある わけ です 。 
> sergentdai さん その モジュール インストール し て ない とか で ない の ？ 
環境 を 整え て い ない ので 、 正確 な こと は わかり ませ ん が ＞ bash : ./ trema : その よう な ファイル や ディレクトリ は ありません と ある ので 、 trema が 存在 し て い ない よう です 。 whereis trema として パス が 返っ て こ ない よう なら 、 ちゃんと 動作 し て い ない ( インストール さ れ て い ない ) 可能性 が あり ます 。 
せっかく の edomin ２ ０ ０ ４ さん の 回答 。 ________ print (" "[ 0 :( 10 - i )/ 2 ]+"@@@@@@@@@@"[ 0 : i + 1 ]) スペース が 一部 抜け て い ます 。 ________ print ("__________ "[ 0 :( 10 - i )/ 2 ]+"@@@@@@@@@@"[ 0 : i + 1 ]) 
＞ どなた か 原因 の わかる 方 、 教え て いただけ ない でしょ う か 。 仕様です よ 。 
その 環境 で の エディタ （ IDE ) にとって の カレントディレクトリ と Ruby コマンド にとって の カレントディレクトリ など が 解ら ない ので 、 まず カレントディレクトリ 下 の ファイル 名 を 表示 する コード を 実行 さ せ ましょ う 。 「 p curDir = Dir :: pwd Dir :: glob ( curDir + '*' ). each {| f | puts "#{ f }: #{ File :: stat ( f ). size } bytes " } # カレントディレクトリ 直下 の ファイル 名 の 一覧 Dir :: glob ( curDir + '/*' ). each {| f | puts "#{ f }: #{ File :: stat ( f ). size } bytes " } # カレントディレクトリ の 一つ 下 の ファイル 名 の 一覧 Dir :: glob ( curDir + '/*/*' ). each {| f | puts "#{ f }: #{ File :: stat ( f ). size } bytes " } 」 この 実行 結果 に test . text が 入っ て いる ディレクトリ が 見つかれ ば 、 その パス を 所望 の 引数 に 指定 すれ ば 良い でしょ う 。 
print (','. join ( x )) # もしくは # print ('_'. join ( map ( str , x ))) 
最低限 簡単 に 済ませる なら google の アプリケーション から あなた の サーバ 上 の Ruby スクリプト を 叩く と 言う 方法 が あり ます 。 https :// www . google . com / script / start / また Ruby 自体 cgi で も 動かせる ので Perl みたい に Apache に cgi の 設定 を 書き込ん で ファイル に Apahce から の 実行 権限 を 与える だけ で 動き ます 。 http:// www .s erver - world . info / query ? os = CentOS _ 6 & p = httpd & f = 3 
setsunal _ fujita さん その 二つ の 書き方 の 中 で は 、 後者 の 方 が 関数 のみ で 構成 さ れ て い て マシ か な ？ と も 思え ます 。 です が 、 より ruby らしい 覚え 方 は 、 下記 の 二つ の 組み合わせ として 理解 し た ほう が 良い です 。 1 . オブジェクト は メソッド を 呼び出す こと が できる 。 2 . メソッド は （ オブジェクト を 返す ので ） 、 連鎖 できる 。 Ruby で の オブジェクト の 種類 に は 、 数値 や 文字 、 配列 だけ で は なく て 、 ｛ ｝ で 囲ま れ た 処理 ブロック も また 、 オブジェクト です 。 例えば 、 「 １ から １ ０ まで の 数 （ n ) の 列 で 、 ３ で 割っ た 余り （ ％ ） が ０ の 数 の 列 」 は 、 ( 1 .. 10 ). select {| n | n % 3 == 0 } という ( 1 .. 10 ) オブジェクト に対する . select メソッド と 、 その 引数 と し た 「 剰余 が ０ か否 か 」 を 返す 処理 ブロック から なる 式 で 、 [ 3 , 6 , 9 ] という 配列 オブジェクト が 計算 さ れ ます 。 ” if 文 ” も ,「( 条件 ） ． if ｛ 処理 ブロック １ ｝ ｛ 処理 ブロック ２ ｝ 」 という 、 ( 条件 ) オブジェクト の メソッド で 、 ２ 個 の ｛ 遅延 実行 さ れる 処理 ブロック ｝ を 引数 として 持つ と 解釈 し 、 質問 に 例示 さ れ た 文 も 「 (( 条件 ） ． if ｛ something ｝ ｛ something _ else ｝). foo () 」 と 解釈 できる 式 に 直し た ほう が 、 良い でしょ う 。 古い プログラミング言語 で は 、 言語 仕様 が 洗練 さ れ て い なかっ た ので 、 その 学び 方 で も 、 「 ひらがな １ 文字 毎 に バラバラ な 字形 として 覚える 」 的 な 考え方 の 延長 で 、 「 漢字 も １ 文字 毎 に バラバラ な 字形 として 覚える 」 という 小学生 レベル の 覚え 方 が 強い られ て い た でしょ う が 、 Ruby で は 、 「 漢字 は 部首 の 組み合わせ だ 」 という 、 中学生 レベル の 漢字 の 加速 的 な 学び 方 に 飛躍 する こと が でき ます 。 「 ｛ 土 、 水 ( 氵 )、 火 、 風 （ 几 ） ｝ と ｛ 木 ｝ の 部首 の 組み合わせ で ｛ 杢 、 沐 、 炑 、 凩 ｝ という 漢字 を 造る 」 的 な 解釈 の トレーニング を し て いれ ば 、 「 １ から １ 万 まで の 数 （ ｎ ） の 逆数 （ 分子 が １ で 分母 が ｎ の 分数 ） に 変換 ( map ) し た 数列 の 和 （ 数 の 間 に 演算子 （ ： ＋ ） を 挟ん だ 式 」 も 「 （ 1 .. 10000 ). map {| n | Rational ( 1 , n )}. inject (:+)」 という 和文 より 短い 式 で 書ける よう に なり ます 。 ＜ 参考 ＞ 第 1 章 Ruby 言語 ミニマム http:// i . loveruby .net / ja / rhg / book / minimum . html 
多分 エディタ の encoding と ruby の encoding の 組み合わせ が 悪かっ た の でしょ う 以下 の いずれ か で 良い でしょ う ( 1 ) エディタ の encoding が utf-8 で 、 Ruby の 起動 時 の encoding を それ に 合わせる 場合 (a) コード は 「 # coding : UTF-8 my String = ' A ' puts my String 」 ( b ) Ruby 起動 方法 は 「 ruby - KU ファイル 名 」 ( 2 ) Ruby の 起動 時 の encoding を 調べ て 、 それ に エディタ など の encoding を 合わせる 場合 ； (a) エンコード を 調べる ため の コード を 書い て 、 実行 「 puts Encoding . default _ external puts Encoding . default _ internal 」 １ 行 目 " Windows-31J " ２ 行 目 "" 等 が 表示 さ れる ( b ) 「 # coding : (a) で 表示 さ れ た 文字列 を 転記 my String = ' A ' puts my String 」 
> 配列 の なか で 重複 し た 要素 を 取り除く 面倒 なら 、 perl の もの を 移植 する という 最終 手段 が あり ます 。 ＊ ＊ ＊ use strict ; use warning s ; my @ a = qw ( 1 2 2 3 4 4 4 5 5 6 7 8 8 9 9 9 9 ); my % h ; print join " ",@ a ; print "\ n "; map {$ h {$_}= 1 }@ a ; my @ b = sort keys % h ; print join " ",@ b ; print "\ n "; ＊ ＊ ＊ a =[ 1 , 2 , 2 , 3 , 4 , 4 , 4 , 5 , 5 , 6 , 7 , 8 , 8 , 9 , 9 , 9 , 9 ] h ={} p a a . map {| x | h [ x ]= 1 } b = h. keys p b 
> wrong number of arguments ( 1 of 5 ) 引数 は 5 個 必要 な のに 、 1 個 しか ない から 実行 できないよ って エラーメッセージ です ね 。 Window _ SkillReserve に バグ が ある の で は なく 、 @ actor の 中身 が 間違っ てる ん じゃ ない か と 思い ます 。 
エラーログ を 見る 限り は Passenger の エラー みたい な 雰囲気 です 。 リンク 先 の バージョン の Passenger は 3 . x 系 です が 、 質問者 さん の Passenger は 5 . x 系 に なっ て いる ので gem で passenger を インストール する とき に 3 . x を 入れ て み て は いかが です か ？ もし は CentOS 6 でも Redmine の 3 . x 系 は インストール 出来る と 思う ので そちら を 入れ て みる の も 良い か と 思い ます 。 
Ruby って 中級 者 向け で 、 初心者 に は 向か ない と 思う けど ・ ・ ・ 。 Ruby は 、 ソースコード が 見 やすい けど 、 慣れる まで かなり 意味 が 取り づらい でしょ 。 他 の 言語 を 選択 する こと は 無理 な ん ？ PHP とか 、 C# とか 。 Ruby は まだ 、 本 が 出 てる から 、 それ を 買う の が 近道 です よー 。 
Perl で は 、 正規表現 置換 に / g 修飾 子 を 付ける だけ です 。 perl - e '$ a =" 1234 ";$ a =~ s /[ 23 ]/[$&]/ g ; print "$ a \ n ";' なお 、 質問 と まったく 同じ 出力 に する に は 、 次 の よう に し ます 。 perl - e '$ a =" 1234 ";$ a =~ s /[ 23 ]/ do { print "$&\ n ";"[$&]"}/ eg ; print "$ a \ n ";' 
だいたい 合っ て い ます 。 正確 に は gem バージョン 管理 および 、 gem の インストール 機能 の 提供 だ と 思い ます 。 
普通に scaffold すれ ば 添付 の 画像 の よう に なり 、 validation は ( エラーメッセージ ) は 表示 さ れ ない か と 思い ます 。 質問 で 返す の は 大変 申し訳 ありません が 、 質問者 さん が scaffold を 行っ た コマンド を 教え て いただけ ない でしょ う か ？ 同じ よう に scaffold を 実施 し 、 同じ よう に エラーメッセージ が 表示 さ れれ ば お答え できる か と 思い ます 。 
＞ 高速 に テキスト 出力 する 方法 を 教え て ください 。 高速 な コンピューター を 使え ば 良い ですよ。 
"" で 囲ん だ 文 は 文字列 を し て 扱わ れる の です が 、 文字列 自体 に 制御文字 という 処理 が ある わけ で は ない ので 、 制御文字 を 書い て も 変換 さ れ ませ ん 。 単に 文字列 内 で 変数 の 値 を 表示 しよ う と する なら #{} を 使用 し ます と 表示 でき ます 。 例 ： " 今日 は #{$ game _ variables [ 101 ]} だっ た 。 " 制御文字 \ v の v は 変数 の 英語表記 Variables の 頭文字 から き て い ます 。 $ game _ variables は イベント コマンド の 変数 として 扱わ れ て いる グローバル変数 に なり ます 。 [ 101 ] は そのまま 101 番目 を 意味 し て い ます ( 要素 的 に は 102 番目 扱い です けども )。 $ game _ variables [ 101 ] という 記述 は 「 変数 101 番目 の 値 」 を 取得 でき ます ので 、 それ を #{} 内 に 入れれ ば OK という 感じ です 。 この 回答 の 意味 を 深く 考え ず 、 とりあえず 試し て み たら 「 ああ 、 なるほど 」 と 理解 し やすい と 思い ます (`･ ω ･`) 
ピン と こ なけれ ば 、 それぞれ を 詳しく 調べる と よい でしょ う 。 此処 で 逐一 、 解説 し ませ ん 。 「 ホスティング プラットフォーム 」 は 、 インターネット接続 サービス に 、 さらに 種々 の サービス を 付加 し て 提供 する もの を 、 その よう に 呼称 し て いる よう です 。 
NAME _ SW = 2 2 番 の ゲーム スイッチ が オン の 時 、 ネーム ウィンドウ を 非表示 に し て 、 オフ の 時 に 表示 に する 、 という 意味 です 。 もし 、 他 の スクリプト や すで に 作成 し た ゲーム で 2 番 の スイッチ を 使っ て いる の で あれ ば 、 以下 の よう に 記述 する こと で スイッチ の 番号 を 変更 でき ます 。 NAME _ SW = 20 こう 書け ば 20 番 の ゲーム スイッチ の オンオフ で ネーム ウインドウ の 表示 と 非表示 を 切り替える こと が でき ます 。 ゲーム スイッチ の 切り替え は 、 コモン イベント や イベント の スイッチ の 操作 から 行っ て ください 。 
Gemfile . lock を なぜ 消そ う と する の でしょ う か ？ 本来 必要 な もの です ので 、 消し て も 作成 さ れ ます 。 
http:// www . atmarkit . co.jp / fcoding / articles / ruby 191 / ruby 191 a . html ここ に irb に関する 説明 が あり ます 。 手順 通り readline を インストール し て み て ください 。 
> わけ あっ て この プログラム は 本日 23 時 まで に 完成 さ れ けれ ば なり ませ ん ！ ！ > よろしくお願いします ！ ！ ！ ！ ！ じゃ 。 その 訳 と やら を 聴い て やる から 話し て みな 。 
どの よう な 環境 下 で 何 を 実行 し た とき に おこる エラー な の でしょ う か ？ その あたり を 整理 する と 回答 さ れ やすい と 思い ます よ ？ 何かしら が 泣い て い ます 。 なぜ でしょ う 的 な 感じ の 質問 に なっ て い ます よ 。 
この よう に し て み て は どうでしょう か 。 print " 0 -- 9 の 整数 を 入力 >" input = gets . chomp if input == " give up " puts " 正解 は #{ y } です " break end x = input . to_i n = n + 1 
Ruby の 資格 と いえ ば 、 ほか の 質問者 さん も 上げ て はい ます が 、 「 Ruby 技術者 認定試験 制度 」 です ね 。 就職活動 の 補助 で 受ける の で あれ ば Silver で 十 分 か と 思い ます 。 ( そもそも Gold は Silver を 持っ て いる こと が 前提 ) だいたい の 試験 勉強 時間 です が 、 プログラミング 初心者 で あれ ば 半年 ？ 経験 者 で あれ ば 2 週間 ほど だ と 思い ます 。 （ 私 は だいたい 2 週間 の 勉強 で 取得 し まし た ） ただし 就職 に 劇的 に 有利 に なる わけ で は ない かも しれ ませ ん 。 0 では ない と 思い ます 。 ただ 、 ( 私 の 周り だけ かも しれ ませ ん が ) 近年 Ruby を 扱う 企業 が また 増え て き て いる よう に 感じ ます ので 、 余裕 が あれ ば とっ て おい て も いい と 思い ます 。 
試し て い ませ ん が 、 コマンドプロンプト で assoc . rb = Ruby Script ftype Ruby Script = ruby . exe % 1 % * とか は どうでしょう か 。 詳しく は assoc /? ftype /? で 。 
sq lit e3 の gem は 入っ て ます か ？ DBI が 古かっ たり し ませ ん か ？ 以下 の 記事 が 参考 に なる か と 思い ます 。 http:// d . hatena . ne.jp / economixmeister / 20091025 / 1256481211 
これ は 、 よく やる の が 、 BIOS で 、 仮想化 の サポート フラグ を ＯＮ に し て い ない で 、 64 Bit の Linux を 起動 しよ う と する こと です 。 わたし も 、 一 回 やり まし た 。 外し て い たら ごめんなさい 。 
単純 に   split . join (～) で 済む の で は ？ #// code pa d.o rg / 5k 2k v 7 FU puts   $_. split . join ('@')   while   DATA . gets __ END __ 1   2   3 a    b    c x y z 
atsuatsu 0618 さん 人 に よる 。 学校 に 行っ て 、 試す 。 
stu _ komatsu さん ” Ruby on Rails Tutorial ” と いう と 、 その 本家 Michael Hartl 著作 で 、 下記 サイト に 翻訳 版 が 掲載 さ れ て いる の と 、 同じ かな ？ http:// railstutorial .jp / ＞ current _ user という 関数 が どこ から 呼ば れ て いる の か current _ user は 、 models に 分類 さ れる クラス の 属性 だ から 、 基本的 に ＣＲＵＤ （ 生成 ・ 参照 ・ 更新 ・ 削除 ） の ４ 種類 の メソッド が 在っ て 、 「 views 」 や 「 controllers 」 に 分類 さ れる クラス から 呼ば れる もの です 。 § 8 . 2 . 3 現在 の ユーザー に 「 Views 」 の *. erb 形式 ファイル 中 で 、 current _ user の name 属性 を 表示 する コード の 例 として 下記 の コード が 在り ます 。 「 <%= current _ user . name %> 」 
どの 程度 の ウェブサイト を 作る の か 、 受講 者 の 適性 は どう か 、 講座 内容 は どう か 、 に 依る ので 、 一概 に は 言え ない の です が 、 ゼロ から ３ ヶ月 で １つ の ウェブサイト を 完成 さ せる 、 という の は 、 そこそこ 現実 的 な 話 だ と 思い ます 。 今 は 、 昔 と 違っ て 、 ウェブプログラミング の ため の 様々 な 便利 ツール や 優れ た プログラム が 、 無料 で 利用 でき ます 。 （ これら は 先人 の 努力 の 蓄積 による もの です ） こうした 「 知恵 の 蓄積 」 を 利用 すれ ば 、 ほぼ 知識 の 無い 人で も 、 ３ 日 程度 で SNS サイト が 作れ て しまっ たり する の です 。 ただし 、 「 作れる 」 という こと と 、 「 分かっ て 作れる 」 こと の 間 に は 、 大きな 差 が あり ます 。 ３ ヶ月 で 、 その 差 を 、 どこ まで ・ どの よう に 埋め て いける の か 、 そこ が 講座 の 腕 の 見せ 所 でしょ う 。 学校 に 通う の と 、 独学 する の と は 、 それぞれ 、 利点 と 短所 が 異なり ます 。 学校 は 、 設備 や 書籍 の 点 で 有利 です が 、 生徒 達 の 間 で 馴れ合い が 発生 する と 、 「 ダメ人間 の 吹き溜まり 」 に なっ て しまう お それ が あり ます 。 独学 は 、 比較的 安く 出来 ます し 自分 の ペース で 出来 ます が 、 つまずい た 時 に どう しよう も なくなっ て しまっ たり し ます 。 Ruby で ウェブプログラミング という 事 で あれ ば 、 とりあえず 下記 の 講座 サイト を 覗い て み て は いかが でしょ う 。 http:// dotinstall . com / ウェブプログラミング の 基本 は HTML と CSS です ので 、 まずは そこ から 。 その ２つ を 修了 し たら 、 http:// dotinstall . com / lessons の 下 の 方 に ある 「 サーバー 環境 を 作れる よう に なろ う 」 を 学び 、 続い て 、 「 Ruby で ウェブサービス を 作れる よう に なろ う 」 に 進ん で み ましょ う 。 
モデル は どんな ところ でしょ う か 。 要は DB 内 の 操作 を 行う とき に 使う の が モデル です 。 以下 の よう な とき に メソッド を 定義 する の が メジャー な コーディング です 。 ・ レコード を 登録 する ・ レコード を 更新 する ・ レコード を 削除 する ・ 1回 の 検索 で 取得 できないよ うな レコード に対して 検索 を 掛ける モデル が コントローラ に データ を 渡し て やり 、 最終 的 に は コントローラ で 定義 さ れ た インスタンス の 中身 を ビュー で 表示 する と 考え て ください 。 そう 考える と 、 データ を 取得 する の が モデル データ を なんや かん や する の が コントローラ データ を 表示 する の が ビュー という 役割 分担 が 見え て き ます よ ね 。 
マニュアル を 読み ましょ う 。 http:// docs . ruby - lan g.o rg / ja / 2 . 2.0 / doc / spec = 2 fliteral . html > ダブル クォート (") で 囲ま れ た 文字列 式 、 コマンド 文 字 列 および 正規表現 の 中 で は #{ 式 } という 形式 で 式 の 内容 ( を 文字列 化 し た もの ) を 埋め込む こと が でき ます 。 要するに 、 文字列 の 中 で あっ て も #{～} は Ruby の 式 として 評価 さ れ 、 その 値 が 埋め込ま れる という こと です 。 
> 以下 が 何 を 示し て いる の か 「 何 を 示し て いる の か 」 だ から 、 こういう こと を 聞い て いる の で は ？ 0 ~ 6 まで 7 個 の N ^ 2 の 数 を 表示 する プログラム を 示し て いる 。 出力 ： 0 = 0 ^ 2 1 = 1 ^ 2 4 = 2 ^ 2 9 = 3 ^ 2 16 = 4 ^ 2 ... 
そう です 。 https :// rvm . io / os に ある とおり 、 UNIX ライク な OS が 対象 で 、 Windows で は uru とか pik でしょ う か 。 
＞ クラス と は 何 な の か 、 実装 する に は どう すれ ば いい の か 。 ＞ 分から ない こと が たくさん あり ます 。 その 言っ た 人 に 聴け ば いいんじゃない の か な 。 
whwqs 948 さん 国内 で は まだ 、 Python の 使い手 の 裾野 が 広がっ て き て い ない よう な ので 、 Ruby を お勧め し ます 。 ＞ やり たい こと の ライブラリ が python しか なかっ たり し ます 。 ハテ ？ どんな 機能 の ライブラリ でしょ う ？ 標準 ライブラリ に 昇格 し て い ない く て 、 来年 動く と 期待 する こと も 危うい ライブラリ とか 、 米国 の 学生 たち が ノリ で 作っ た ライブラリ や 、 github 掲載 情報 なら Python の 方 が 多い かも しれ ない 。 品質保証 を しよ う と し て いる コミッタ や 有償 サポータ も 居る 標準 ライブラリ の 中 だけ で 比べれ ば 、 分数 など 数学 の 基本 的 な ライブラリ は 、 Ruby の 方 が 木目 細かい と 思う 。 ところで 、 何 度 か Ruby 以外 の 言語 の 使い手 の 人 を 挑発 し て いる の だ が 、 、 Ruby で タッタ の 百 行 未満 だっ た コード の 見本 が あっ て も 、 それ と 同等 な 速 さ と 省 メモリ で 動く コード を 、 Python とか Java とか C# で 書き換え て 披露 し て くれる 人が 中 々 出 て き て い ない の は 何故 ？ Python は 、 「 書き手 に 若干 の 苦労 を 強い て でも 、 第 ３ 者 にとって の 読み やす さ 重視 」 という こと は 、 短く 言え ば ” 書き 難い ” という コト 。 また Phthon の 基本 性能 は Ruby より 悪 そう です 。 ＜ Ruby と Java の 定量的 比較 ＞ (a) 中学生 に も 解ける パズル を 解く の に 向い た 言語 の 比較 ； http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1113650350 ... ・ Ruby ： 75 行 の コード で 、 走行 時間 は 6 . 56 秒 :// ide on e.c om / 1 ssj 1 e ・ Python ： ３ ０ 行 の コード で 、 走行 時間 は 13 . 33 秒 :// ide on e.c om / SBLqWP ( b ) 不定 箇所 数 が 可変 な 虫食い 算 を 解く プログラム を Ruby で 作っ たら 正味 ７ ０ 行 。 １ １ 箇所 可変 でも 、 省 メモリ で 最初 の ３ 個 目 まで の 回 の 列挙 に １ ５ 秒 という 速さ 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1114503132 ... ＜ Java と Ruby の 比較 ＞ アメリカ の 大統領選 の 頃 の トラフィック に も 耐える 性能 の 確保 の 為 に Java に 切り替え た そう です 。 Twitter 社 の 人たち が 、 Ruby と Java の 基本 性能 の 差異 を 解っ て い なかっ た ハズ は 無い の です が 、 初期 の 段階 で Ruby を 使っ て い た の は 「 簡単 に プログラム ヲ 作る こと が できる 」 という 生産性 の 高さ ゆえ でしょ う 。 ・ Ruby から Java へ の シフト で 大統領選 を 乗り切っ た Twitter http:// www . infoq . com / jp / news / 2012 / 11 / twitter - ruby - to - java 
Cannot load ... って 書い て ある ん だ から 、 まずは ・ so ファイル の PATH 指定 、 ファイル 名 が 間違っ て い ない か ？ ・ パーミッション を 確認 する （ READ 権 、 実行 権 ある か ？ Owner は root が いい ） でしょ う か ？ あと 、 HTTPD とか の サービス を 起動 する の は root 権限 で やる ので 、 サービス 関連 の ファイル は ユーザー ディレクトリ とか に は 置か ない ほう が いい と 思い ます 。 / usr / local あたり に 入れる の が 定石 です 。 
「 rubygetch non blocking windows unix 」 で 探し たら 見つかり まし た ヨ 「 require ' curses ' ENV [' LINES '] = ' 39 ' Curses . init _ screen Curses . noecho Curses .s tdscr . nodelay = 1 rows , columns = $ stdin . winsize puts " Your screen is #{ columns } wide and #{ rows } tall " Curses . timeout = 0 charCode = ' '. ord begin key = Curses . getch charCode = key . ord if key puts " Key pressed : #{ charCode . inspect }-#{ key }\ n " end until (!( charCode . nil ? ) && charCode < ' '. ord ) 」 他 にも 、 Windows OS 専用 コード とか 、 unix 専用 コード も あり ます 。 http:// blog . x - aeon . com / 2014 / 03 / 26 / how - to - read - one - non - bloc king-k ey -... 
if __ name __ == "__ main __": の 条件 が 成立 し ない から です ね 。 wav 関数 に 入っ た 直後 、 if で 分岐 する 直前 に print (__ name __) とか 入れ て 、 __ name __ に なに が 入っ て いる か 見 て みる と 良い と 思い ます 。 
hogepiyo の 中 で 配列 の 要素 を 参照 し ない なら hoge . len gt h. times {| i | hogepiyo ( i ) } でしょ う か 。 
ruby プログラム を エディタ で 開い て ください ！ なんと ！ 勝手 に 逆 コンパイル さ れ て ソース が 出 て くる よ ！ 
複数 の 装備 タイプ と 言う の は 例えば 「 盾 ： 鎧 」 と し た とき に その 防具 は 盾 として も 装備 できる し 鎧 として も 装備 できる 。 また 、 同じ 防具 が 二つ ある なら ば 盾 と 鎧 の 両方 に 装備 できる 。 と 言っ た 感じ でしょ う か 。 装備 タイプ を 複数 つける こと は 出来 ない ので 、 基本的 に は スクリプト で の 改造 に なる でしょ う 。 （ スロット 拡張 の よう な スクリプト は ある が 、 装備 タイプ を 複数 付与 する よう な もの は 見 た こと が 無い です 。 ） 装飾 品 の 装備 枠 を 1つ 増やす だけ とか なら 簡単 な ん です けど ね 。 
> ヤフオク API を 使いこなす ため に オススメ の サイト 、 本 、 方法 を 教え て 下さい http:// developer . yahoo . co.jp / webapi / auctions / 
background-image : url ( bg - top - 01 .jpg ); http:// www . htmq . com / style / background-image .s html 
http:// eternal windows .jp / graphics / bitmap / bitmap 16 . html Ruby から Win32 API を 使う 方法 は ググっ て みれ ば 、 見つかる はず 
dsjhaduhaa _ 531 hk 4 さん 提示 さ れ た 代入 文 の 後 でも 、 ＄ a は string として 代入 も 更新 も 出来 まし た ヨ 。 その 実行 結果 は 、 下記 URL で 見る こと が でき ます 。 http :/ / ideone . c o m / NTmKGo 
単に 結果 を 出力 する の で は なく 、 結果 を JSON や XML で 返す よう に すれ ば うまく 処理 できる と 思い ます 。 例えば JSON を 使う 例 を 挙げる と 、 成功 し た 場合 は 、 ㅤ { " status ": " OK ", " result ": [" apple ", " orange "] } という よう な 結果 を 返し 、 失敗 し た 場合 は 、 ㅤ {" status ": " Error ", " error - message ": "..." } を 返す という こと に すれ ば 、 エラー に なっ て いる か すぐ 判別 でき ます 。 Ruby で JSON を 出力 する 方法 について は 、 以下 が 参考 に なる と 思い ます 。 ◆ Hash を json 形式 の 文字列 に 変換 する http:// edywrite . blogspot .jp / 2013 / 01 / ruby - hashjson . html JavaScript 側 で JSON を 受け取り 、 読み取る 方法 は 、 以下 の 記事 を 参照 し て 下さい 。 この 例 で は url に json ファイル を 指定 し て い ます が 、 cgi の 場合 も 同様 です 。 ◆ 1 分 で わかる jQuery $. ajax による JSON ・ JSONP 読み込み 方法 http:// iwb .jp / jquery - ajax - jsonp / 
ozwast _ 0725 _ eilanya さん ruby - opencv という ライブラリ を 使う と 、 簡単 みたい です 。 ・ Ruby で 14 行 の 動画 再生 サンプル コード http : / / d . hatena . n e . j p / ara _ k / 20150415 ・ 上記 の ライブラリ の ダウンロード サイト http : / / www . rubydoc . i n f o / gems / ruby - opencv / file / README . md https :// github . com / ruby - opencv / ruby - opencv • Ruby 1.9 . 3 , 2 . x and OpenCV 2 . 4 . 10 are supported . 
# BookInfo クラス の インスタンス を 初期 化 する def initialize ( title , author , page , pablish _ date ) @ title = title @ author = author @ page = page @ publish _ date end を # BookInfo クラス の インスタンス を 初期 化 する def initialize ( title , author , page , publish _ date ) #← p [ a ] blish _ date に なっ て まし た @ title = title @ author = author @ page = page @ publish _ date = publish _ date #← = publish _ date が 抜け て ます end に 訂正 し て ください 。 
if x == x . x . upcase で できる はず です 。 また 、 if x [/^[ A - Z ]+$/] でも 
f40 saya _ 1987 _ f1 20 a さん その 行 は 「 プログラム を 構成 する 式 」 です 。 ＜ 出展 ＞ http:// docs . ruby - lan g.o rg / ja / 2 . 2.0 / doc / spec = 2 fprogram . html ・ プログラム は 式 を 並べ た もの です 。 Ruby の 式 に は 、 変数 と 定数 、 さまざま な リテラル 、 それら の 演算子 式 、 if や while など の 制御構造 、 メソッド 呼び出し ( super ・ ブロック 付き ・ yield )、 クラス ／ メソッド の 定義 が あり ます 。 
いわゆる Soft Wrap の こと です ね 。 ターミナル の 表示 で それ を しよ う と する と 恐ろしく 面倒 な ので 、 エディタ に コピー し て 見る の が いい と 思い ます 。 ruby xxx . rb > out . txt Mac か Linux なら less を 使う と 便利 です 。 ruby xxx . rb | less （ Q を タイプ する と 終了 ） 
megamega 147 さん Ruby on rails の 前提 GEM の 一つ の Bundler が install さ れ て い ない という 問題 の よう です 。 では Bundler だけ install すれ ば 解決 する か ？ と いう と 、 gems / 2 . 1 . 0 とか railties - 4 . 0 . 2 とか 、 他 に も 色々 使お う と し て いる ので 、 gem 間 の バージョン 不 整合 の 問題 が 予想 さ れ ます 。 そこで 、 Ruby on rails 関連 の 色々 な gem の バージョン の 整合性 を 確認 し た 状態 で 、 ワンタッチ ・ インストーラ を 提供 し て いる サイト から 、 ” Recommended ” マーク さ れ て いる バージョン 、 今 だっ たら Ruby Stack 2.0 . 0 - 29 を ダウンロード し て 、 環境 構築 し なおし た 方 が 良い でしょ う 。 ｈｔｔｐｓ :// bitnami . com / stack / ruby / installer この インストーラ なら 30 分 程度 で 、 環境 構築 でき ます 。 
http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 14882566 ... 
標準入力 より 1 行 ずつ 読み込ん で 、 それ を 隣り 合う 二 行 ずつ に まとめ ます 。 その 最初 の 行 と 次 の 行 の 2 列 目 を 取り出し 、 計算 する ため に 数値 に 変換 し て 引き算 し ます 。 プログラム に 書く と 、 $ stdin . each _ line . each _ cons ( 2 ){| a1 , a 2 | puts a 2 .s plit (/\ s +/)[ 1 ]. to _ f - a1 .s plit (/\ s +/)[ 1 ]. to _ f } と なり ます 。 $ ruby test . rb < dat a.t xt の よう に する と 出力 さ れ ます 。 何 行 あっ て も 大丈夫 な はず です 。 
同じ 物 が 複数 ある 場合 、 常識的 に は 配列 を 使う 。 つまり 、 配列 を 格納 し た 配列 を 作れ 。 
マニュアル ぐらい 読み ましょ う 。 http:// docs . ruby - lan g.o rg / ja / 2 . 2.0 / method / Kernel / m / autoload . html [ PARAM ] const _ name : 定数 を String または Symbol で 指定 し ます 。 Exe は String で も Symbol で も あり ませ ん 。 修正 例 1 ： autoload : Exe ,"./ exe . rb " 修正 例 2 ： autoload " Exe ","./ exe . rb " 
OS と その バージョン 、 どの 命令 を 実行 すれ ば エラー が 出る の か くらい は 書い て おき ましょ う 。 エラーメッセージ から する と OSX 10 . 9 以降 だ と 思い ます が 。 OSX 10 . 10 . 5 で ターミナル から $ sudo gem install opengl $ irb > require " opengl " true と なり ます から 、 問題 なく インストール さ れ て い ます 。 macports を 使っ て インストール し た ru by2 . 1 でも 同様 に 問題 あり ませ ん 。 
何 か 、 わたし の CentOS 6 . 7 でも 同じ 現象 でし た 。 どうも モジュール の 依存 関係 が 混乱 し て いる みたい です 。 でも 、 yum remove nodejs yum - y update yum - y install nodejs yum - y install nodejs -* yum - y install npm って 、 アンインストール アップデート し て インストール を し 直し たら 、 直り まし た 。 
i が 1 に なっ たら 無限ループ 化 する [ i が 変わら なく なる ] 
> どう すれ ば 投稿 できる よう に なる の か 、 何 が 原因 と 考え られる か を 、 教え て ください 。 そこ の ページ の 人 に 聴け ば いい ですよ。 
