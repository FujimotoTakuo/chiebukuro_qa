この 辺 は 難しい です 。 正直 、 インターフェース を 使っ た から と いっ て その後 の プログラム 変更 が 最小限 に なる か は ケースバイケース か と 思い ます 。 ぶっちゃけ た 話 、 業務 システム 用 の プログラム を 作っ て て インターフェース を 使っ た から その後 の 修正 が 楽 に なる と は 言い 切れ ない です 。 最初 の 設計 時 に よ ほど に うまく 設計 さ れ て い たら あるいは そう なる かも しれ ませ ん が 、 要求仕様 が 大幅 に 追加 や 変更 に なっ たら 対応 でき ない こと も あり え ます 。 java で の インターフェース の 利点 として は Spring など の フレームワーク を 使っ た 際 に 有効 に なる という 点 は あり ます 。 Spring は インターフェース に対して どの 実装 クラス を 割り当てる か は Spring の 設定 で 変更 する こと が でき ます 。 ある クラス に public class ClassA { private Interface A in stance ; と 記述 し て い て 、 Interface A を 実装 し た クラス が 、 ClassB 、 ClassC 、 ClassD の 3つ あっ た 時 、 Spring の 設定 により in stance フィールド の 中身 を ClassB 、 ClassC 、 ClassD いずれ に 割り当てる か 自由 に 設定 でき ます 。 Spring が 生成 し た ClassB 、 ClassC 、 ClassD いずれ か の オブジェクト を in stance フィールド に 格納 し て くれる ので プログラム 側 で new する 必要 は あり ませ ん 。 これ で たとえば 実際 の 製品 に は in stance フィールド の 中身 は ClassB を 、 試験 段階 で は 試験 用 の ClassC を 割り当てる など の 使い方 が でき ます 。 この 辺 は Spring フレームワーク の 特徴 など で 時々 紹介 さ れ ます 。 ただ 、 これ も そう そう うまく いく か どう か は 使う 人 次第 です 。 教科書 に 書か れ た 利点 が い つ いかなる 時 でも 有効 に なる と は 限ら ない です 。 
■ System . in . read () は 「 入力 ストリーム から データ の 次 の バイト を 読み込み ます 」 。 1 を 入力 する と エンターキー を 押し た 改行 の 分 まで 含ま れ て 、 49 13 10 が 入力データ に なる よう です 。 （ 13 10 が 改行 コード です 。 ） 以下 で 試し まし た 。 -- System . out . println (" 年齢 を 入力 し て ください 。 "); input = System . in . read (); System . out . println ( input ); System . out . println ( System . in . read ()); System . out . println ( System . in . read ()); -- 2回 目 の System . in . read () は 13 が 返却 さ れる ため に 、 質問 内容 の プログラム で は 入力 待ち が スキップ さ れ て よう な 現象 に なっ て ます 。 ■ 25 行 目 付近 、 in pu t2 = Character . digit ( input , 10 ); と なっ て ます 。 既に 入力 さ れ て いる input の 値 を 使っ て ます 。 これ は 数値 と なっ て ます 。 digit メソッド は 第 一 引数 は 文字コード する の です が 、 「 文字 が 指定 さ れ た 基数 の 有効数字 で ない 場合 は 、 - 1 が 返さ れ ます 。 」 -- ■ scanner を 使っ た 方 が 良い と 思い ます 。 public static void main ( String [] args ) throws java . io . IOException { // TODO 自動 生成 さ れ た メソッド ・ スタブ int ret = 0 ; int ret 2 = 0 ; int input = 0 ; int in pu t2 = 0 ; human my = new human (); Scanner scanner = new Scanner ( System . in ); System . out . println (" 年齢 を 入力 し て ください 。 "); input = scanner . nextInt (); my .s etData ( input ); ret = my . getData (); System . out . print (" 年齢 は " + ret + " です 。 "); System . out . println (); System . out . println (" HP を 入力 し て ください 。 "); in pu t2 = scanner . nextInt (); my .s et Da ta2 ( in pu t2 ); ret 2 = my . get Da ta2 (); System . out . println (" HP は " + ret 2 + " です 。 "); scanner . close (); } 
＞ 簡単 に 早く 高度 な プログラム を そんな こと でき たら 誰 でも 敏腕 エンジニア に なっ ちゃ い ます 実力 ある 人たち は きちんと 基礎 から 勉強 し てる と 思い ます よ 。 
＞ Caused by : java . io . IOException : UTF-8 シーケンス 違反 : 初期 バイト は 、 10 xxxxxx : 131 BOM か な ？ バイトオーダーマーク - Wikipedia https :// ja . wikipedia . org / wiki /% E3 % 83 % 90 % E3 % 82 % A 4 % E3 % 83 % 88 % E3 % 82 % AA %... Java で UTF-8 の BOM に 対処 する : 万象 酔歩 http:// k - hiura . cocolog - nifty . com / blog / 2013 / 03 / java utf-8 bom - dd . html Java を 使っ て BOM 付き UTF-8 で ハマる - Gobble up pudding http:// fa 11 enprince . hatena blog . com / entry / 2014 / 04 / 10 / 003918 
< input type =" file "/> タグ が ない 状態 で も multipart / form - data で POST 送信 し て ファイル の 内容 が 送信 さ れる ん か な ？ javascript の formData 内 に 、 ファイル 関連 の 情報 が ない と （ 通常 なら 、 < form ></ form > 間 の < input > タグ の 各 データ が 入る はず ） null に なる と おもう ん です が 。 確認 環境 が ない ので 、 推測 で すい ませ ん 。 
■ 例えば 、 64 点 と 75 点 の 場合 、 以下 の よう に 入れ替え て ます 。 i = 0 , j = 1 で 隣 同士 を 比較 し て 入れ替え て ます 。 i ; 0 , j : 1 , [ 64 , 75 ], temp : 64 i ; 0 , j : 1 , [ 75 , 75 ], temp : 64 i ; 0 , j : 1 , [ 75 , 64 ], temp : 64 1 位 の 人 の 得点 は 75 点 です 。 2 位 の 人 の 得点 は 64 点 です 。 ■ 64 , 75 , 92 点 の 場合 、 以下 の よう に なり ます 。 i = 0 の 場合 、 j = 1 , 2 と 比較 し 、 a [ 0 ] に 最大 の 数 を 格納 i = 1 の 場合 、 j = 2 と 比較 し 、 a [ 1 ] に a [ 1 ] と a [ 2 ] の うち 最大 の 数 を 格納 i ; 0 , j : 1 , [ 64 , 75 , 92 ], temp : 64 i ; 0 , j : 1 , [ 75 , 75 , 92 ], temp : 64 i ; 0 , j : 1 , [ 75 , 64 , 92 ], temp : 64 i ; 0 , j : 2 , [ 75 , 64 , 92 ], temp : 75 i ; 0 , j : 2 , [ 92 , 64 , 92 ], temp : 75 i ; 0 , j : 2 , [ 92 , 64 , 75 ], temp : 75 i ; 1 , j : 2 , [ 92 , 64 , 75 ], temp : 64 i ; 1 , j : 2 , [ 92 , 75 , 75 ], temp : 64 i ; 1 , j : 2 , [ 92 , 75 , 64 ], temp : 64 1 位 の 人 の 得点 は 92 点 です 。 2 位 の 人 の 得点 は 75 点 です 。 3 位 の 人 の 得点 は 64 点 です 。 ■ 以下 の よう な イメージ です 。 a [ 0 ] a [ 1 ] a [ 2 ]... と 並ん で いる とき 、 i が 0 の とき 、 a [ 0 ] を 右側 の どの 数 より も 大きい もの を 格納 する 。 i が 1 の とき 、 a [ 1 ] を 右側 の どの 数 より も 大きい もの を 格納 する 。 ・ ・ ・ と 処理 を 進め て いく と 、 左側に 大きい 順 に 数 が 並ん で いく という こと に なり ます 。 
eclipse の コンソール で は でき ない の で は ない か と 思い ます 。 コマンドプロンプト で の 実行 で は 、 下記 URL の 40 番 の 方 の 回答 を 参考 に 、 実行 でき まし た 。 \ b が コマンドプロンプト 上 で の バックス ペース の よう です 。 http:// stackoverflow . com / questions / 7522022 / how - to - delete - stuff - prin ... < 引用 > You could print the backspace character \ b as many times as the c haracters which were printed before . System . out . print (" hello "); Thread . sleep ( 1000 ); // Just to give the user a chance to see " hello ". System . out . print ("\ b \ b \ b \ b \ b "); System . out . print (" world "); </ 引用 > 
通常 、 サーバ から は アクセス し て くる 相手 を 確認 する 方法 が あり ます 。 （ 個人 を 特定 する の で は なく 、 「 ブラウザ から アクセス 」 、 「 携帯 から アクセス 」 、 「 アプリ から アクセス 」 等 まで 判断 でき ます 。 だから 、 同 一 アドレス で 、 携帯 や スマフォ 専用 の HP に 切り替え が 行える わけ です 。 ） その ため 、 サイト によって は 「 アプリ から の アクセス 」 を 拒絶 する コード に なっ て いる 場合 が あり ます 。 これ は 、 画像 等 を 勝手 に ダウンロード さ れ て 無断使用 さ れ ない ため の 対策 です 。 その ため 、 上記 コード の よう に アプリ から の アクセス を 禁止 し て いる サイト で は 、 画像 を 取得 でき ず 、 タイムアウト する はず です 。 
for 文 の i ++ 1 の 1 を 消す か 、 i += 1 に し て ください 。 
100 要素 の 配列 を 定義 し て 、 100 要素 を 格納 する 。 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 ,......... 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 桁 数 分 要素 を 選定 する 。 （ for 文 を 使う 。 10 桁 に 不足 分 を ＊ で 補う 。 ） System . out . print () を 使い 、 最後 に 改行 を 付け て 1 行 出力 する 。 100 桁 を 1 行 で 出力 する こと も できる 。 
クラス 等 の 命名 方法 私 は クラス 名 は頭 大文字 に し て ます 。 あと は頭 小文字 です 。 あと 、 クラス 名 、 メソッド 名 、 変数 名 共通 で やっ てる の が 、 アンダーバー では なく 直後 の 文字 を 大文字 に し て ます 。 final 修飾 子 を 持つ … 戻り値 で は なく 引数 です か ？ そもそも final 修飾 子 を つけ た クラス ： 継承 不可 メソッド ： オーバーライド 不可 変数 ： 値 の 変更 不可 つまり final class Jikken { // 定義 } と なっ て いる 場合 public class Main extends Jikken { // これ が 不可 // 定義 } class Exam { public final int test () { // 定義 } } と なっ て いる 場合 public class Main extends Exam { public int test () { // これ が 不可 // 定義 } } class Test { private final int a = 12 ; public void hoge () { this . a = 13 ; // これ が 不可 } } と なり ます 。 これ は 可能 です 。 class Hoge { public int b ; private final int jikken (){ // 定義 } public int call () { this . b = this . jikken (); this . b += 16 ; // final で は ない ので OK } } 補足 について protected を 使え ば でき た はず です 。 
修正 し て み まし た 。 -- public static void main ( String [] args ) throws NumberFormatException , IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println (" 何 人 の テスト の 点数 から 最高 と 最低 の 差 を 求め ます か 。 "); int num = Integer . parseInt ( br . readLine ()); int [] a = new int [ num ]; // 比較 用 点数 設定 int maxPoint = 0 ; System . out . println (" 何 点 満点 の テスト です か 。 "); int minPoint = Integer . parseInt ( br . readLine ()); // 算出 int imax = 0 ; int imin = 0 ; for ( int i = 0 ; i < num ; i ++) { System . out . println ( i + 1 + " 番 目 の 人 の テスト の 点数 を 入力 し て ください 。 "); a [ i ] = Integer . parseInt ( br . readLine ()); if ( maxPoint < a [ i ]) { imax = i ; maxPoint = a [ i ]; } if ( a [ i ] < minPoint ) { imin = i ; minPoint = a [ i ]; } } System . out . println (" 最高 得点 の 人 は " + ( imax + 1 ) + " 番 の 人で 、 最低 得 の 点 の 人 は " + ( imin + 1 ) + " 番 の 人で 、 その 差 は " + ( a [ imax ] - a [ imin ]) + " 点 です 。 " ); } 
JDK の コード 読ま ない 人 多い ん だ なぁ 。 現行 の Java 7 や Java 8 で あれ ば new Random () の 内部 実装 は this ( seedUniquifier () ^ System . nanoTime ()); で 、 ミリ 秒 時刻 値 なんか 使っ て ない 。 確認 し て ない が 恐らく nanoTime が 導入 さ れ た Java5 や Java 6 も 同様 だろ う 。 ミリ 秒 時刻 値 で seed って どんだけ 古い Java 使っ てる ん だ 。 Random は 文字通り ランダム な ので ２ 回 呼び出し て 同じ 値 に なる こと は 当然 あり える 。 たとえば サイコロ を ２つ 用意 し て出 た値 の １つ を hoge 1 、 もう １つ を ho g e2 に 入れる と する とき 、 同じ 値 に なっ て しまう こと が ある の は 当然 。 同 様に 値 が 隔たる の も 偶然 そう なる こと は ありえる こと で 何 も 不思議 で は ない （ サイコロ を ６ 回 振っ て １ ～ ６ の すべて の 目 が 出る 方 が 珍しい だろ う ） し 、 むしろ 常に 均等 に 値 が 出る なら ランダム じゃ ない 。 
無い です 。 static final が 一応 他 の クラス から も 使用 でき ます が 、 define と は 異なり ます 。 例 ： class Hoge { public static final String hoge =" HOGE "; } // よそ の クラス から 使用 class Fuga { public static void main ( String [] args ){ System . out . println ( Hoge . hoge );// define ぽい 使い方 } これ は define と 等価 に 見え ます が 、 C の define は 式 を 登録 する こと が でき ます が 、 Java の static final は 変数 しか 登録 する こと が でき ませ ん 。 たとえば C の # define abs (a) (( a ) < 0 ? - (a) : (a) ) という 式 を Java で 同じ よう に 実装 する 場合 、 以下 の よう に メソッド 化 する 必要 が あり ます 。 public static int abs ( int a ){ return a < 0 ?- a : a ; } 
String 型 で は 駄目 な の でしょ う か ？ 
文意 から nyusyutu は 入庫 か 出庫 か を 示す フラグ な ので 、 " 入出 数 は :" という の は おかしい でしょ う 。 " 入庫 = 0 , 出庫 = 1 :" の よう に 記述 す べき です 。 また 、 恐らく です が 、 これ は ① 最初 に 在庫 数 を 入力 さ せる ② 出庫 か 入庫 か を 入力 する ③ 入力 に 合わせ て 変化 し た 在庫 数 を 表示 する 。 ④② に 戻る という ループ 処理 を 行う 問題 で は ？ 
vine の java という の は 、 vine linux 上 で Java を 勉強 し て いる という 意味 で よろしい でしょ う か 。 Java 言語 は 同 一 言語 を 多 環境 で 実装 できる の が 特徴 です 。 その ため 、 お 使い の PC の お 使い の OS で vine linux 上 で 書い た Java と まったく 同じ コード を 書け ば 、 まったく 同じ 動作 を し ます 。 たとえば Windows 環境 で あれ ば 、 Windows 環境 で Java 環境 を 構築 すれ ば いい でしょ う 。 細かい やり方 は ネット で 検索 すれ ば 出 て くる でしょ う 。 
予め te mpl at e.c に # include など の 文字 を 書い て おく こと ( require ' autoinsert ) ( setq au to-i nsert - director y "~/. emacs . d / insert /") ( setq au to-i nsert - alist ( append '( ("\\. c $" . [" te mpl at e.c "]) ) au to-i nsert - alist )) ( au to-i nsert - mode t ) 
エクスプローラー で 1つ ずつ 確認 し ながら 実行 し ましょ う 。 最初 は 、 java が 残っ て い ない か どう か 見 ます 。 C ドライブ に java という フォルダー が 残っ て い ない か ？ 残っ て い たら 、 コントロールパネル を 開い て 削除 し ます 。 C ドライブ に 戻っ て 、 削除 を 確認 。 ここ で 残っ て い たら 、 del キー を 使っ て 削除 。 次 は 、 java の インストール 。 保存 出来 たら 保存 先 を 探し て 、 そこ から インストール 。 最初 の 保存 先 は 、 c :\ user \' ユーザ 名 '\ DwnLoad でしょ う 。 確認 を し ながら 実行 する こと 、 でき たら ccreaner など レジストリ クリーナー を 使っ て 余計 な もの が 残ら ない よう に し ます 。 
http:// el . jibun . atmarkit . co.jp / minagawa / 2010 / 04 / post - ebc 4 . html を 思い出し たり 。 わざわざ こんな こと を 書く の は 釣り な の かも 知れ ない と 思い つつ 。 まぁ 、 自分 一 人 で 作っ て 自分 一 人 で 保守 する プログラム なら なんでも アリ 、 じゃ ない です か ? 
build.xml で 指定 し て いる 対象 の クラス が 間違っ て いる の で は ない でしょ う か 。 http:// www . atmarkit . co.jp / bbs / phpBB / viewtopic . php ? topic = 24042 & forum ... 
一 例 です 。 以下 の ページ に 反転 後 の ユニコード が 載っ て まし た 。 http:// id . fnshr . info / 2013 / 01 / 25 / upsidedowntext / 上記 ページ の 表 を 使っ て switch文 を 作り 、 変換 する という 方法 です 。 以下 サンプル です 。 -- ソース -- package test 20160804 ; public class Yahooq 10162509190 { public static void main ( String [] args ) { String Builder sb = new String Builder (" twitter "); sb = sb . reverse (); String Builder sbRev = new String Builder (); for ( int i = 0 ; i < sb . length (); i ++) { char c = sb . charAt ( i ); switch ( c ) { case ' e ': c = 0 x 0259 ; break ; case ' i ': c = 0 x 026 A ; break ; case ' r ': c = 0 x1 3D 7 ; break ; case ' t ': c = 0 x 0287 ; break ; case ' w ': c = 0 x 028 D ; break ; default : break ; } sbRev . append ( c ); } System . out . println ( sbRev ); } } -- 結果 -- Ꮧəʇʇɪʍʇ 
public void add ( int field , int amount ) 第 一 引数 に フィールド の 番号 を 指定 する の です が 、 GregorianCalendar . MONDAY と GregorianCalendar . MONTH が 同じ 値 に なっ て いる ため 、 結果 が 同じ に なり ます 。 値 は 2 で 、 直接 calendar . add ( 2 , - 6 ); と 書い て も 同じ 結果 に なり ます 。 以下 を 実行 し て も わかる よう に 両方 2 です 。 System . out . println ( GregorianCalendar . MONDAY ); System . out . println ( GregorianCalendar . MONTH ); 参考 サイト https :// docs . oracle . com / javase / jp / 8 / docs / api / java / util / GregorianCal ... 
java の パッケージ 命名規則 に 従っ て いる わけ です が 、 ユニーク で ある 手っ取り早い 方法 が ドメイン名 な わけ です 。 できるだけ ユニーク に す べき な ので 、 jp . co .*.* など 、 すでに 二つ が 日本 全国 と 重複 する よう な もの より 、 もっと あなた 個人 に 関係 し た もの で ある 方 が いい と 思い ます 。 あと から 変更 も 可能 です 。 
" ( str [ 1 ]) の 部分 が 意味不明 。 赤線 で 長々 と 出 て くる の は 実行 時 エラー と 思わ れる ので その 赤線 で 長々 と 出 て くる 部分 の 最初 の ほう １ ０ 行 程度 を 張ら ない と 原因 が わから ない 。 
Java コントロール ・ パネル で の セキュリティ ・ レベル の 設定 という の が あり ます 。 ブラウザ で Java コンテンツ に 有効 に チェック が はいっ て ます か ？ https :// www . java . com / ja / download / help / jcp _ security . xml 
動作 結果 として は 合っ て いる よう です が 、 問 の 答え として は 間違っ て い ます 。 「 hantei に （ 略 ） を 代入 し 」 て いない から です 。 if 文 で いきなり System . out . println 文 を 使用 し て い ます が 、 ここ は 例えば String hantei ; if ( daritsu >= 0 . 4 ){ hantei =" A "; }// 以下略 として 、 一度 hantei に 値 を 代入 し 、 最後 に System . out . println (" 判定 は ："+ hantei +" です 。 "); という 風 に 書か ない と 間違い と なり ます 。 
直接的 な 回答 で は ない の です が 、 Java3D という ライブラリ を 使う と 良い と 思い まし た 。 
// 他 の 回答者 様 と 考え方 は 同じ です が 。 。 。 import java . awt .*; public class Board extends Frame { ____ public static void main ( String [] args ){ ________ new Board (); ____} ____ public Board (){ ________ this .s etSize ( 500 , 500 ); ________ this .s etVisible ( true ); ____} ____ public void paint ( Graphics g ){ ________ for ( int i = 1 ; i < 9 ; i ++){ ____________ for ( int j = 1 ; j < 9 ; j ++){ ________________ if (( i + j )% 2 == 0 ){ ____________________ g . drawRect ( i * 50 , j * 50 , 50 , 50 ); ____________________// i + j が 偶数 の 時 は 白 ________________} else { ____________________ g . fillRect ( i * 50 , j * 50 , 50 , 50 ); ____________________// i + j が 奇数 の 時 は 黒 ________________} ____________} ________} ____} } // 終了 機能 を 持っ て い ない ので 強制終了 し て ください 。 /* i + j の 計算 結果 の 一 桁 目 は 以下 の よう な イメージ です 。 23456789 34567890 45678901 56789012 67890123 78901234 89012345 90123456 */ 
「 一度 使っ た 配列 の 値 を すべて 0 に 戻し たい とき 」 Arrays . fill ( nums , 0 ); という 使い方 の メソッド が あり ます 。 
＞ 簡単 に 言う と ソースコード の 記述 順 に 前後 し て 実行 さ れる こと は ある の か という こと です 。 それら の 変数 を 非同期 処理 で 操作 し て いる よう な こと が ない 限り は あり 得 ませ ん 。 その よう な 結果 に なっ て いる の は 、 記述 上 の 「 必然 」 が ある の でしょ う 。 と しか 答え よう が あり ませ ん 。 
JNI を 利用 し て WIN 32 API を コール すれ ば でき ます が 、 JNI は かなり 上級 者 向け の 実装 です ので 、 難易度 は かなり 高い こと を 覚悟 し て ください 。 たとえば ひし だま さん の ところ に サンプル コード が あり ます が 、 ここ に 書か れ て いる 内容 くらい は さっと 見 て 理解 でき ない の で あれ ば 諦め た ほう が よい でしょ う 。 これ を 理解 せ ず に コピペ 利用 し たら 、 確実 に はまり ます 。 http:// www . ne.jp / asahi / hishidama / home / tech / soft / java / hm win32 . html 
一 例 です 。 Set の ひとつ で ある HashSet を 使い まし た 。 contains () メソッド で 既に 含ま れ て いる か を 取得 でき ます 。 -- import java . util . HashSet ; import java . util .S canner ; import java . util .S et ; public class Yahooq 14163088574 { public static void main ( String [] args ) { // 入力 文字列 を 保持 する ため の インスタンス Set < String > set = new HashSet <>(); // 入力 受付 Scanner scanner = new Scanner ( System . in ); while ( true ) { String inputStr = scanner . nextLine (); if ( inputStr . equals (" print ")) { System . out . println ( set ); continue ; } if ( inputStr . equals (" end ")) { break ; } if ( set . contains ( inputStr )) { System . out . println ( inputStr + " は すでに 入力 さ れ て い ます 。 "); } else { set . add ( inputStr ); } } scanner . close (); } } 
一 例 です 。 -- import java . util . ArrayList ; import java . util . List ; public class Yahooq 11163087601 { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); list . add (" イチゴ "); list . add (" クリーム "); list . add (" マンゴー "); list . add (" チョコレート "); for ( String s : list ) { System . out . println ( s ); } } } 
以下 が 実行 さ れ て いる と 思え ば よい と 思い ます 。 public class Test { public static void main ( String [] args ) { System . out . println ( A . foo ()); } } -- finally 句 は 常に 実行 さ れる こと に 注意 する と 以下 の 動き です 。 実行 の 順番 は A . foo () メソッド で 、 int x = 0 ; x = B . bar ( x ); 実 引数 0 で B . bar () メソッド が 呼び出さ れ ます 。 B で は Error () が スロー さ れ 、 catch さ れ 、 x += 1 ; finally が 実行 さ れ x += 2 ; よって 3 が return A . foo () メソッド に 戻り finally が 実行 さ れ x += 8 ; よって x = 11 と なり ます 。 答え は ④ です 。 
class MultipleLoopSample 01 { public static void main ( String [] args ) { for ( int i = 1 ; i <= 9 ; i ++){ for ( int j = 1 ; j <= 9 ; j ++){ System . out . print ( String . format ("% 3s ", i * j )); } System . out . println (); } } } こう 書い た 方 が 綺麗 です よ 。 要するに 、 java は 、 数値 で も 、 必要 なら 勝手 に 文字列 に 直し て くれる の です 。 for 文 は 、 繰り返し です 。 i が 、 行 で 、 １ 行 から 、 ９ 行 の 繰り返し j が 列 で 、 １ 列 から 、 ９ 列 の 繰り返し です 。 そして 、 行 と列 を かける と 、 当然 かけ算 の 答え に なり ます 。 それだけ です 。 
0 % です 。 もし 削除 データ を 一定 期間 取って ある の で あれ ば 、 メルカリ 管理者 、 本部 以外 の 人 、 たとえば 裁判所 から 開示 命令 を 受けれ ば 申請 し た 検事 、 捜査 官 など も 閲覧 できる でしょ う から 。 
jar ファイル が 足り て い ない の で は ない でしょ う か 。 サンプル で 追加 し た jar ファイル で 定義 さ れ て いる クラス を 使用 し て いる と 、 ソース 上 問題 なく て も 、 class が 読み込め ない です 。 
[ インスタンス ]. repaint () を 呼び出せ ば 大丈夫 だ と 思い ます 。 以下 、 サンプル です 。 package test 20160803 ; import java . awt . Color ; import java . awt . Graphics ; import java . awt . GridLayout ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import javax .s wing . JButton ; import javax .s wing . JFrame ; import javax .s wing . JPanel ; public class Yahooq 14162455889 { public static void main ( String [] args ) { class MyJPanel extends JPanel { int count = 0 ; @ Override protected void paintComponent ( Graphics g ) { count ++; g .s etColor ( Color . WHITE ); g . fillRect ( 0 , 0 , getWidth (), getHeight ()); g .s etColor ( Color . BLACK ); if ( count % 2 == 0 ) { g . drawLine ( 0 , 0 , 10 , 10 ); } else { g . drawLine ( 10 , 0 , 0 , 10 ); } } } MyJPanel myJPanel = new MyJPanel (); JButton jButton = new JButton (" ボタン "); jButton . addActionListener ( new ActionListener () { @ Override public void actionPerformed ( ActionEvent e ) { myJPanel . repaint (); } }); // フレーム 表示 JFrame frame = new JFrame (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etTitle (" test "); frame .s etSize ( 300 , 300 ); frame .s etLayout ( new GridLayout ( 2 , 1 , 10 , 10 )); fra me. add ( myJPanel ); fra me. add ( jButton ); frame .s etVisible ( true ); } } 
条件 を 満たそ う と する と これ 以上 は 短く なら なかっ た import static java . util . stream . IntStream . range ; import static java . lang .S ystem . out ; public class T { public static void main ( String [] a ){ a = range ( 1 , 13 ). mapToObj ( i -> i +" 月 "). toArray ( String []:: new ); for ( int i = 0 ; i < 12 ; out . println ( a [ i ++])); } } 
以下 の 質問 に 似 てる ので 参考 に なる と 思い ます 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1116169695 ... キーボード 入力 は Scanner クラス を 使え ば 良い です 。 google検索 すれ ば サンプル 出 て くる と 思い ます 。 
if ( str . equals ("+")|| str . equals ("-")|| 以下略 
バージョン は 上がる ほど 重く なり ます 。 ましてや Forge を 入れる と PC に かなり の 負担 が かかり ます 。 簡単 に 言う と スペック 不足 です ね 。 メモリ 割り当て を 変える 位 しか 対処 法 は 無い です ね 。 
> インストール は でき て も 起動 する こと が でき なく なっ て しまい まし た 。 インストール 出来 た こと を 、 どの よう に し て 確認 し た の です か ？ 一 歩 ずつ 確認 し ながら 勧め ましょ う 。 
レジストリ の 検索 時 に 、 7 . 0 . xxx の 形式 を 使用 し ます を 8 . 0 . xxx の 形式 を 使用 し ます に 読み替え で いい と 思わ れ ます 。 ※ レジストリ 操作 について は 、 自己責任 で 行っ て ください ね 。 
これ は 、 いい加減 な プログラム です ね 。 間違っ て いる し 、 呼び出し が あり ませ ん 。 こんな 風 に 追加 する と 、 実行 し ます 。 試し て ください 。 import java . util .*; public class Cleric { String name ; int hp = 50 ; final int MAX _ HP = 50 ; final int MAX _ MP = 50 ; int mp = 10 ; public void selfAid (){ System . out . println ( this . name + " は セルフエイド を 唱え た ！" ); this . hp = this . MAX _ HP ; this . mp -= 5 ; System . out . println (" HP が 最大 まで 回復 し た 。 "); } public int pray ( int sec ){ System . out . println ( this . name + " は " + sec + " 秒 間 天 に 祈っ た ！"); int recover = new Random (). nextInt ( 3 ) + sec ; int recoverActual = Math . min ( this . MAX _ MP - this . mp , recover ); this . mp += recoverActual ; System . out . println (" MP が " + recoverActual + " 回復 し た 。 "); return recoverActual ; } public static void main ( String [] argv ) { Cleric cr = new Cleric (); cr . name = " ナンコ "; cr .s elfAid (); cr . pray ( 10 ); } } 
多分 method . invoke が 違い ます 。 ret = method . invoke ( clazz , ( Object []) null ); → ret = method . invoke ( clazz .new Instance (), null ); 
synchronized つけ なく て も 既に スレッドセーフ だ から 。 スレッドセーフ が 問題 に なる の は 、 ２つ の スレッド が 同時に １つ の 変数 に アクセス し て 、 少なくとも １つ の スレッド が その 変数 を 書き換える 場合 。 Math の ほとんど の メソッド は 状態 を 持た ない から 、 元々 スレッドセーフ 。 synchronized する 必要 が 無い 。 唯 一 M at h. random () は 、 内部 状態 を 持っ て いる けど 、 この シード 値 は AtomicLong という スレッドセーフ な クラス によって 管理 さ れ て いる 。 だから 、 Math . random () も synchronized は つい て い ない けど スレッドセーフ 。 
コントロールパネル ➝ 右 上 の 表示 ➝ 小さい アイコン ➝ Java を 右クリック ➝ 開く Java コンソール が 開き ます 。 または ➝ 検索 欄 に Java と 入力 ➝ Java を 右クリック ➝ ファイル の 場所 を 開く Windows の プログラム ファイル ( x86 ) に Java 
サイト は 分かり ませ ん が https :// www . amazon.co.jp / gp / a w/ d / 4774178942 / この 書籍 で 大 部分 は 網羅 さ れ て ます 。 
＞ 文章 を 内容 の つじつま が 合っ て いる か どう か を 基準 に A 、 B 、 C で 評価 出来上がっ た 文章 が 意味 を もつ か どう か は 、 以下 の よう に やれ ば できる … … と 信じ られ て い ます 。 自然言語処理 - Wikipedia https :// ja . wikipedia . org / wiki /% E 8 % 87% AA % E 7 % 84 % B 6 % E 8 % A8 % 80 % E 8 % AA % 9 E %... 生成文法 - Wikipedia https :// ja . wikipedia . org / wiki /% E 7 % 94 % 9 F % E 6 % 88 % 90 % E 6 % 96 % 87% E 6 % B 3 % 95 Colorless green ideas sleep furiously - Wikipedia https :// ja . wikipedia . org / wiki / Colorless _ green _ ideas _ sleep _ furiously ワードサラダ マルコフ過程 単純ベイズ分類器 
投稿 カテゴリ が 間違っ て い ます 。 そして 、 バージョン が ph 3 か v 0 . 12m か で 全然 仕様 が 異なる ので 、 どちら か 教え て いただけ ない と 回答 に 困り ます ・ ・ ・ ・ ステージ 道中 の 作り方 ph 3 について です が 、 LoadScript ( 引数 ： 1 、 返り 値 ： real [ スクリプト の ID ]) LoadScriptInThread ( 引数 ： 1 、 返り 値 ： real [ スクリプト の ID ]) StartScript () あたり で 雑魚 敵 も ボス 敵 も 読み込める の だ と 思い ます 。 違っ たら ごめんなさい 。 v 0 . 12m は ヘルプ を 参照 し て ください 。 ・ スペルカード 宣言 ph 3 では 自作 する しか ない よう です ね 。 v 0 . 12m で は @ Initialize で CutIn ( 引数 ： 7 ) を 使う 感じ ？ あるいは 自作 。 ・ セリフ の 字 の フォント の 変え 方 ObjText _ SetFontType が あり ます 。 ただ 、 v 0 . 12m で は 自分 で 画像 ファイル を 作っ た 方 が 弾幕 風 の 文字 レンダリング 機能 を 使う より 軽く て 綺麗 だ と 聞き まし た 。 ph 3 でも 読み込み は 面倒 です が 画像 を 作っ た 方 が 良い かも 。 ・ 外 枠 の 設定 他 の こと が できる よう に なっ て から 考え て み て は いかが でしょ う か 。 ステージ スクリプト です が 、 他 の 人 の 作っ た あまり 複雑 で は な さ そう な スクリプト を いじっ て み て 、 何 が どう なっ て いる の か 探っ て みる と 勉強 に なり ます よ 。 多分 。 
一 例 です 。 -- package test 20160808 . q10 162701125 ; public class NewMember extends Member { public String tel ; // 電話番号 public void displayTel () { System . out . println (" 電話番号 : " + tel ); } @ Override public void display () { System . out . println (" 名前 : " + name ); } } 
show Click に IMouse インターフェース の 実装 クラス の インスタンス を 渡せ ば よい と 思い ます 。 以下 一 例 です 。 -- package test 20160815 . q 13162994958 ; public class P orim o2 { public static void main ( String [] args ){ showClick ( new PrimeMouse ()); showClick ( new FujitsuMouse ()); } private static void showClick ( IMouse mouse ){ mous e.c lick (); } } -- package test 20160815 . q 13162994958 ; public class PrimeMouse implements IMouse { public void click () { System . out . println (" Prime マウス "); } public void double Click () { System . out . println (" Prime マウス 連打 "); } } -- package test 20160815 . q 13162994958 ; public class FujitsuMouse implements IMouse { public void click () { System . out . println (" 富士通 マウス "); } public void double Click () { System . out . println (" 富士通 マウス 連打 "); } } -- package test 20160815 . q 13162994958 ; public interface IMouse { abstract public void click (); abstract public void double Click (); } 
以下 の 一文 だ と 思い ます 。 キャスト が 必要 な 問題 だ と 思わ れ ます 。 (( Kodomo ) oya ). showName (); 
一 例 です 。 -- Manga . java -- package test 20160808 . Yahooq 11162700331 ; public class Manga extends Book { String author ; // 著者 String title ; // タイトル int chapter ; // 章 public int getPageByChapter () { // 1 章 あたり の ページ 数 を 返す return getPage () / chapter ; } } -- MangaTest . java ( Manga クラス を 使う テスト クラス )-- package test 20160808 . Yahooq 11162700331 ; public class MangaTest { public static void main ( String [] args ) { Manga manga = new Manga (); manga .s etPage ( 100 ); manga . chapter = 3 ; System . out . println ( manga . getPageByChapter ()); } } 
ここ で いう カプセル化 と は 、 フィールド を private に し 、 getter / setter を 作成 せよ 、 という こと でしょ う 。 答え は 以下 の コード に なり ます 。 あくまで 教科書 的 な 回答 で 、 本来 は getter / setter を 用意 する だけ で カプセル化 さ れる わけ で は ありません が 。 -- class Capsule { private String name ; private double amount ; private boolean poisonFlag ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public double getAmount () { return amount ; } public void setAmount ( double amount ) { this . amount = amount ; } public boolean getPoisonFlag () { return poisonFlag ; } public void setPoisonFlag ( boolean poisonFlag ) { this . poisonFlag = poisonFlag ; } } 
ワーク ベンチ へ 移動 する ため の アイコン が ある と 思い ます 。 矢印 が 奥 へ 進む よう な アイコン です 。 参考 http:// www . javadrive .jp / ec lips e3 / install / in de x3 . html 
zip 解凍 できれ ば よかっ た と 思い ます が 。 つまり 必要 な の は 7 - Zip という 解凍 ソフト だっ た はず です 。 その他 mod を 置か なけれ ば なら ない ディレクトリ 等 は サイト を 見 たり すれ ば よい の で は ？ もし mod 導入 に関して なら ば ( そういう 意味 で は ない の かも しれ ませ ん が 。)↓ https :// napoan . com / new - way - to-i nstall - mod / という か そもそも マインクラフト に 必要 な の は 、 jre ( java runtime environment ) という もの で 、 バニラ が プレイ でき て いる 時点 で それ は jre が ちゃんと あなた の PC に 入っ て いる こと を 意味 し ます 。 古い 場合 は 更新 が 必要 です が 気 に する ほど の もの で は ない と 思い ます 。 mod 開発 に 必要 だっ たり する の は 、 jdk ( java development kit ) です 。 これ で java で 書か れ た ソースコード を コンパイル し て 、 jre で 起動 できる もの に 仕立て ます 。 mod を 「 入れる 」 時 は 気 に する 必要 は なく 、 mod を 「 開発 」 または 「 ソースコード を コンパイル 」 する 時 に は jdk まで 気 に する 必要 が あり ます 。 マインクラフト に は 関係 ない かも です が 、 コンパイル 前 なら ば ソースコード 自体 は メモ帳 で 開け ます 。 java で コンパイル し て しまっ た jre 実行ファイル は デコンパイル で ソースコード に する という 方法 が ある そう です が 「 ファイル を 開く 」 という の は そういう 意図 で は ない でしょ う 。 ( 長文 失礼 し まし た 。 m(_ _)m ) 
＞ 常駐 する タイプ の Androidアプリ を 作る WindowManager で アプリ を 通常 より 上位 に 設定 し て Service で 走ら せれ ば でき ます ね ＞ 参考 に なる サイト など は あり ます か ？ https :// akira - watson . com / android / windowmanager . html 
http:// allabout . co.jp / gm / gc / 439463 / 
金曜日 から 同じ 現象 が Windows 7 でも 発生 し て まし た 。 ここ に オフライン 版 インストーラ ー が あり まし た ので 、 これ を 保存 し て ＰＣ 上 で 実行 し て み て ください 。 https :// www . java . com / ja / download / windows _ offline . jsp 
A1 アプリケーション を 開発 する 場合 、 他人 が 作っ た ライブラリ を 利用 する こと は よく あり ます 。 ライブラリ は 一般的 に java ファイル で は なく class ファイル ( 正確 に は class ファイル を まとめ た jar ファイル ) として 提供 さ れ ます 。 ソースコード を 公開 し たくない 人 も い ます し 、 ライブラリ の ソース は 変更 する 必要 が ない ので 毎回 コンパイル する の は 無駄 です 。 A 2 普通 は 他人 が 作っ た ライブラリ と 自分 が 作る ファイル は 別 の フォルダ に 保存 し ます 。 その ため ライブラリ の ため の クラスパス を 追加 する 必要 が あり ます 。 jar ファイル の 場合 は 、 クラスパス に 当該 jar ファイル の パス を 指定 し ます 。 A3 クラスパス を 適切 に 指定 すれ ば 、 パッケージ ルート を カレントディレクトリ に する 必要 は あり ませ ん 。 
まず 、 Pleiades も Eclipse です 。 Pleiades と は 、 Eclipse を 日本語版 に する 追加 の モジュール （ パッチ ） の こと を いい ます 。 です ので 、 元 を たどる と 、 同じ Eclipse を 使う こと に なり ます 。 で 、 日本語版 Eclipse （ Pleiades ） を 使う よう に する に は 、 質問 に あっ た ページ の 上 の 方 に ある 、 EclipseX . x ～ Pleiades All In One という いくつ か ある 画像 の どれ か を クリック し て 、 次 の ページ に 移っ て 、 32 bit 、 64 bit とか 書い て ある 表 の 中 の 、 自分 の PC の OS に 合っ た bit 数 の 行 の 、 Full Edition の 行 の 、 Java の 列 の 「 Download 」 ボタン を クリック し て 初めて ダウンロード が 始まり ます 。 ダウンロード し た ファイル は zip 形式 に なっ て いる ので 、 自分 の 好き な 場所 に 解凍 し て ください 。 （ 注意 ： あまり 長い パス に なる よう な フォルダ （ C :\ Program Files \~ とか ） に する と 、 うまく 動作 し ない こと が ある ので 、 C :\ eclipse の 下 とか に し た 方 が いい よ ） 解凍 が 終わる の 、 解凍 し た フォルダ の 中 に 、 丸い アイコン が ある と 思う ので 、 それ が 実行 する ファイル に なり ます 。 そのうえで 、 初めて 日本語化 を 行い ます 。 （ なので 、 ここ まで で は 、 まだ 英語版 Eclipse ） 日本語化 を する に は 、 https :// osdn .jp / projects / mergedoc / releases / 66003 から 、 pleiades _ 1 . 7 . 0 .zip を クリック し て ダウンロード 、 zip な ので 、 これ を 解凍 し て 、 Readme に ある ファイル を 読み ながら 、 設定 を 行っ て ください 。 初め の うち 、 わから ない の は あたり前 です 。 プログラム 開発 は 開発 する 環境 を 整える まで も 、 一つ の 勉強 に なり ます 。 頑張っ て まずは 環境 を 整え ましょ う ^^ なにか うまく いか ない こと が あっ たら 、 気軽 に また 聞い て ください 。 
zip に 入っ て いる jar で 出来 まし た よ 。 （ basicplayer 3 . 0 . jar と lib ファイル ある もの 全て を 使い まし た 。 ） 以下 で 試し まし た 。 http:// akameco . hatena blog . com / entry / 2014 / 12 / 26 / 070721 サンプル 素材 を 再生 し まし た 。 以下 の J . PIERPONT 「 ジングルベル 」 http:// www . ne.jp / asahi / music / myuu / wave / wave . htm 
以下 を 確認 し まし た が 、 ない みたい です 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / java / io / BufferedReader ... Scanner に は nextInt () メソッド が あり ます 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / java / util / Scanner . html あと は int num = Integer . parseInt ( br . readLine ()); と する くらい でしょ う か 。 
この this は Sample の インスタンス です 。 public class Sample extends Applet の 中 な ので 、 「 Applet を 継承 し た Sample クラス 」 の インスタンス の こと です 。 ---- MouseAdpater を 継承 し た MyMouseAdapter の コンストラクタ に 渡し て い ます ね 。 イベントリスナ と イベント を 処理 し て ほしい コンテナ と の 間 に は 循環参照 を 作ら ない と いけ ない こと が ほとんど です 。 つまり 、 コンテナ は イベント を 処理 する ため の イベントリスナ を 知っ て ない と 、 そもそも イベント を 通知 でき ませ ん し イベントリスナ の 方 は 、 イベント が 通知 さ れ た 時 、 通知 さ れ た イベント に 応じ て コンテナ を 変化 さ せ たかっ たら 、 コンテナ の 方 を 知っ て ない と いけ ませ ん 。 adapter = new MyMouseAdapter ( this ); で 自分自身 (= Sample アプレット の インスタンス ) の こと を * 知っ て いる * マウスイベントリスナ を 作成 し て い ます 。 マウスイベントリスナ に 自分自身 を * 知っ て もらう ため * に 、 コンストラクタ の 引数 で 自分自身 ( this ) を 渡し て いる わけ です 。 その あと で 「 自分 の こと を 知っ て いる マウスイベントリスナ 」 を 自分自身 に addMouseListener し て い ます 。 これ で 自分 の 中 で 起き た マウス イベント が adapter に 通知 さ れる よう に なり ます 。 
基本的 に は 、 別 PC に 移行 し た 際 に 、 最初 の 立ち 上げ で - clean オプション 付き で 起動 する だけ で 問題 ない はず です 。 （ 起動 し ない こと は ない か と 。 ） ワークスペース の 場所 を 選択 する ダイアログ で 、 環境 ごと に 違う ドライブ が でる かも しれ ませ ん が 、 これ は 自分 の 環境 に 合わせ て 選択 し なおせ ば いい です し 。 あと は 、 eclipse . ini 内 の パス を 確認 し 、 フル パス 指定 に なっ て い なけれ ば 問題 ない か と 。 （ ついで に 、 VM の 使用 する メモリ の 見直し も PC に 合わせ て やっ て も いい かも です ） 
> 表示 が 拡大 （ ズームイン ？ ） さ れ て元 に 戻ら なく なっ て しまい まし た Ctrl を 押し ながら 、 マウス の ホイール を ぐるぐる 回し て み て ください 
16 / 5 , 17 / 5 , 18 / 6 , 19 / 6 , 20 / 6 , 21 / 7 , 22 / 7 , 23 / 7 , 24 / 8 , 25 / 8 の 中 で π に 最も 近い もの と 16 / 5 , 17 / 5 , 18 / 6 , 19 / 6 , 20 / 6 の 中 で π に 最も 近い もの を 求めて この 順に 出力 し て い ます 。 
spring boot で doma ? doma って spring の DI コンテナ に 対応 し てる ん です か ？ どの よう に セット アップ さ れ た の でしょ う ？ 
for ループ が 入れ子 に なっ てる の は わかり ます か ？ 上下 で は なく 、 外側 内側 です 。 外側 の for は 奇数 を 除い て i = 0 , 2 , 4 で 内側 の for は 偶数 を 除い て j = 1 , 3 な ので 0 x1 = 0 0 x3 = 0 2 x1 = 2 2 x3 = 6 4 x1 = 4 4 x3 = 12 を 足し て 24 です 。 
http:// docs . oracle . com / javase / jp / 7 / api / java / lang / IllegalAccessError ... ゲッターメソッド が protected に なっ て いる の に対して 、 テスト コード 上 で ゲット しよ う として たり し ませ ん か ？ try {} catch () で エラー トラップ を 張っ て 、 どこ の メソッド で エラー に なっ て いる か 見る の が 一番 早い と 思い ます 。 必ず どこ か で 、 protected / private に アクセス でき ない レベル の 所 で アクセス し て いる はず です ので 。 
ログ 出力 に 使う ライブラリ によって 使用 方法 も 異なり ます 。 まずは 何 を 使う か 検討 する 必要 が あり ます 。 http:// www . bunkei - programme r .net / entry / 2012 / 10 / 20 / java % E3 % 81 % AE % E3 %... 
正解 が １つ だ から 。 じゃ ダメ な の ？ 
パス を 確認 し て み ましょ う 。 jdk の なか の jre を 指定 し て ませ ん か ？ javac は 例えば 以下 の よう な フォルダ です 。 C :\ Program Files \ Java \ jdk 1 . 8 . 0 _ 102 \ bin 
こんばんは パネル が ビジブルフォールス だ と その 上 の コントロール は 全て 無効 に なり ます 。 ボタン は 押せ ませ ん 。 
① JFrame f = new JFrame ();// フレーム 作成 JPanel panel = new JPanel ();// パネル を 作成 JObject object = new JObject ();// こんな の は ない けど 、 仮 の オブジェクト として p . add ( object );// パネル に オブジェクト を 追加 Container contentPane = fra me. getContentPane (); contentPane . add ( panel );// フレーム に パネル を 追加 frame .s etVisible ( true );// フレーム を 表示 こんな 感じ の コード に なる と 思い ます 。 ④ 背景色 の 指定 object .s etBackground ( Color . BLACK );// 直接 色 の 指定 object .s etBackground ( new Color ( 150 , 150 , 150 ));// RGB の 指定 前景色 の 指定 object .s etForeground ( Color . BLACK ); ③ イベント リスナー という もの を 使い ます 。 エンター に対して 、 クリック に対して 、 キーボード 入力 に対して 、 など の 細かい 違い が ある ので 、 載せ きれ ませ ん 。 調べ て ください 。 //... 呼び出し 側 ... object . addActionListener ( this );// イベント の 登録 //... 処理 側 ( メソッド )... public void actionPerformed ( ActionEvent e ) // object の イベント で 実行 { // 独立 し た メソッド な ので object を メンバ 変数 に す べき int R = object . getBackground (). getRed ();// オブジェクト RGB を 取得 int G = object . getBackground (). getGreen (); ing B = object . getBackground (). getBlue (); object .s etBackground ( new Color ( R , G , B ));// オブジェクト 色 を 変える } 細かい ニュアンス が それぞれ 目的 に 応じ て 変わっ て くる ので 、 調べ た 結果 と 照らし 合わせ て 何とか し ましょ う 。 
byte [] bytes = " あいうえお ". getBytes ( Charset . forName (" UTF-8 ")); ↑ 上記 で " あいうえお " の 数値 表現 が 得 られ ます 。 String str = new String ( bytes , Charset . forName (" UTF-8 ")); ↑ 上記 で 数値 から " あいうえお " が 得 られ ます 。 
public 公共 の 外部 ファイル ( java コマンド で 実行 する 場合 は java . exe ) から 呼び出す こと が できる よう に アクセス の 制限 を 緩ま す 。 static 静的 な スタティック と 読み 、 対義語 は ダイナミック ( 動的 )。 あと から プログラム の 一部 の データ を 外部 から 操作 する 可能性 が ある 場合 に は 動的 と 表現 し ます 。 java . exe に 勝手 に プログラム 内 の データ を 操作 さ れる こと は あり 得 ない ので 、 呼び出し が 動的 より も 簡単 な 静的 な 形式 で 宣言 し ます 。 void 戻り値 の ない 値 を 受け取る 、 受け取ら ない は java . exe の 受け取り 側 で 変更 できる と は 思い ます が 、 定型 文 に する ため か void 型 以外 で は エラー に なり ます 。 main メイン メソッド java . exe が 実行 する 際 に 読み取る 固定 の メソッド 名 です 。 最初 に 実行 さ れ ます 。 String [] 文字列 配列 の 引数 の 型 コマンドライン 引数 を 受け取る とき に もっとも 適し た 型 です 。 コマンド で [ java ClassName ABC 123 ] と 入力 する と 、 args [ 0 ] = " ABC "; args [ 1 ] = " 123 "; と 同値 に なり ます 。 args 文字列 配列 型 の 引数 を 受け取る 変数 この 文字 は 決まっ て い ませ ん 。 自由 で かまい ませ ん が 、 他人 が 使う 際 毎回 違う 名前 だ と 読み にくく なる ので 、 むやみ に 変え ない で ください 。 語源 は 、 引数 を 意味 する argument ( アーギュメント ) と 、 引数 の 型 で ある String [] の 頭文字 から 。 arg ( ument ) s ( tring []) です 。 import は 、 クラス パッケージ を 利用 する 際 の ヘッダ の 宣言 文 です 。 import java . util .S canner ; これ は 、 java . util パッケージ の Scanner クラス を 使用 する と 明示 する ため の 文 です 。 ちなみに 、 宣言 し なく て も java . util .S canner scan = new java . util .S canner (？？？); と 毎回 パッケージ 名 を 指定 し て 利用 する こと が でき ます 。 です が 、 やはり import で 宣言 し て しまっ て 残り は すべて 省略 し た ほう が 見 やすい です し 便利 だ と 思い ます 。 以前 の 回答 で tool に も 同じ 名前 の クラス が ある そう な ので 、 両方 使い たい 場合 は こう す べき です ね 。 それ と 、 たぶん Scanner の 先頭 は 大文字 だ と 思い ます 。 パッケージ 名 ・ 先頭 小文字 クラス 名 ・ 先頭 大文字 変数 名 ・ 先頭 小文字 定数 名 ・ 全 大文字 みたい な 暗黙の了解 が あり ます 。 スペル ミス や 利用 方法 に 気づき やすい ので 覚える と いい でしょ う 。 
なに を ZIP で 開い て ん の ？ 説明 不足 で わけわかめ 
Apache Commons の Collections の MultiKeyMap が その 目的 に ドンピシャ 。 http:// commons . apache . org / proper / commons - collections / javadocs / api - r ... 自分 で HashMap を 作る 方法 hashCode と equals を オーバーライド し た クラス を 作る public static class IntArray { private int [] value ; private int hashCode ; public IntArray ( int ... value ){ this . value = value ; hashCode = Arrays . hashCode ( value ); } @ Override public int hashCode () { return hashCode ; } @ Override public boolean equals ( Object o ){ return o instanceof IntArray && Arrays . equals ( value , (( IntArray ) o ). value ); } } これ を キー と する HashMap HashMap < IntArray , Integer > map = new HashMap <>( hoge . length , 1 ); for ( int i = 0 ; i < hoge . length ; i ++) { map . put ( new IntArray ( hoge [ i ]), i ); } // 2 が 返る System . out . println ( map . get ( new IntArray ( 8 , 7 , 6 , 5 , 4 ))); // 存在 し ない ので null が 返る System . out . println ( map . get ( new IntArray ( 8 , 7 , 6 , 5 , 3 ))); 
>" 1 " BOM か な ？ Java で UTF-8 の BOM に 対処 する : 万象 酔歩 http:// k - hiura . cocolog - nifty . com / blog / 2013 / 03 / java utf-8 bom - dd . html Java を 使っ て BOM 付き UTF-8 で ハマる - Gobble up pudding http:// fa 11 enprince . hatena blog . com / entry / 2014 / 04 / 10 / 003918 バイトオーダーマーク - Wikipedia https :// ja . wikipedia . org / wiki /% E3 % 83 % 90 % E3 % 82 % A 4 % E3 % 83 % 88 % E3 % 82 % AA %... 
プロジェクト -> プロパティー を クリック し て 、 左側 の メニュー で 「 Java の ビルド ・ パス 」 を 選ん で ください 。 ライブラリー という タブ を クリック する と 赤い マーク で JRE システム ライブラリー が エラー に なっ て いる と 思い ます 。 クリック し て 「 編集 」 ボタン を 押し て 、 インストール し た JRE を 選択 すれ ば エラー は 解消 する と 思い ます 。 
Matango . java が 足り ない の で は ない でしょ う か 。 
Java に は 、 C言語 の 様 な 構造体 は 、 存在 し ませ ん 。 Java で 構造体 の 様 な もの を 使う 場合 は 、 Class で 、 メンバー 変数 を 定義 し て 、 それぞれ の 、 セッター と ゲッター の メソッド を 作っ て 代用 し ます 。 コレクション は 、 ArrayList の 類 です ね 。 これ も 、 一種 の Class です 。 簡単 に 長さ の 無い 配列 の 様 な 使い方 が 出来る 仕様 に なっ て いる クラス です 。 
（ ア ） インターフェース の メンバ 変数 は 定数 の み定義 でき 、 初期化 が 必要 。 コンパイル エラー （ イ ） クラス A は 抽象 クラス だ から インスタンス は 生成 でき ない 。 コンパイル エラー 。 （ ウ ） 変数 x は private だ から 不可視 。 コンパイル エラー よって 5 が 正解 だ と 思い ます 。 
そう です 。 1つ の サーブレット に対して 1つ の インスタンス という 意味 です 。 
こんにちは。 ゲーム を 作る 仕事 を し て ます 。 > 開発 言語 は 何 を 学ぶ べき でしょ う か ？ C++ でき た 方 が 良い です が 、 まだ 中学生 なら Unity の C# から 始めれ ば 良い と 思い ます 。 Unity の C# が できれ ば とりあえず 仕事 に は なり ます 。 差 を つけよ う と 思っ たら C++ です 。 C# と C++ 両方 できれ ば 仕事 に は 困ら ない でしょ う 。 > どの くらい の 学歴 が 必要 に なっ て くる の です か ？ 専門学校 で は なく 4年 制 の 大学 を 出 て ください 。 文系 で も 理系 で も どちら でも 構わ ない ので 、 できるだけ 優秀 な 学生 が 集まる 良い 大学 に 行っ て ください 。 大学 で 学ぶ 内容 が 直接 プログラミング に 役立つ か どう か という 話 で は なく 、 知的水準 の 高い 環境 に いる と プログラマー として の 資質 が 総合 的 に 育ち ます 。 ゲーム開発 の 現場 で は そういう とこ が 見 られ ます し 、 そういう 大学 に いる と 在学 中 から ゲーム 業界 の 人 と 知り合える 機会 が 多い です 。 > 一つ の 言語 を 学習 しきる の に かかる 期間 は どの くらい な の でしょ う か 一生 と 考え て 良い です 。 プログラマー で ある 限り 「 学習 しきる 」 って 事 は ない と 思い ます 。 
ボタン が 押さ れる たび に テキスト を 取得 する 必要 が あり ます 。 以下 の よう に し ます 。 -- public void actionPerformed ( ActionEvent e ) { row = Integer . parseInt ( text 1 . getText ()); col = Integer . parseInt ( tex t2 . getText ()); label .s etText ( String . valueOf ( row + col )); } 
テキスト形式 以外 の ファイル も 読み書き でき ます 。 ただ 編集 し たり 、 スクリーン に 表示 し たり する に は ライブラリー や 周辺 の 知識 が 必要 に なり ます 。 例えば 、 最近 の エクセル の 場合 xlsx Java 読み込み とか で 検索 を かける と 必要 な ライブラリー とか 、 xml の 理解 が 必要 な こと など 色々 わかり ます よ 。 必要 な 内部 仕様 を 公開 し て い ない 場合 も あり ます 。 かつて の エクセル も そう だっ た よう です 。 
簡単 か そう で ない か は その 人 の 適性 次第 （ 応用 と 発想 の 転換 と 応用 が いかに できる か ） で 、 頭 が 固かっ たり 食わず嫌い だっ たり する と 「 Java しか 出来 ない 」 と 思い込ん で しまい ます 。 協調性 の 有無 と は ちょっと 違う かも 、 です 。 
stefanie _ scott _ k 0707 kさん 学び は 同じ 。 1 . スキー 本 を 読み 、 ビデオ を 見 て 、 ゲレンデ で 実習 。 ころん で 、 腕 を 上げる 。 2 . （ Java 等 ） 本 を 読み 、 プログラム を 組み 、 エラー と 戦う 。 
ない と 思う よ ・ ・ ・ だって 未 経験 じゃ 仕事 でき ねー し 。 
/** * @ file q 14155228054 . java * @ brief 一 辺 の 長さ が 200 の 正方形 を 描き 、 その 各 辺 を 20 等分 し た 順番 に 結ん で いき 、 図形 を 描画 */ /* < applet code =" q 14155228054 . class " width =" 300 " height =" 300 "> </ applet > */ import java . applet . Applet ; import java . awt . Graphics ; import java . awt . Color ; public class q 14155228054 extends Applet { public void paint ( Graphics g ) { int [] px = new int [ 4 ]; int [] py = new int [ 4 ]; int x1 = 50 , y1 = 50 , x 2 = 250 , y 2 = 250 ; g .s etColor ( Color . BLUE ); for ( int i = 0 ; i <= 20 ; i ++) { px [ 0 ] = x1 + 10 * i ; py [ 0 ] = y1 ; px [ 1 ] = x 2 ; py [ 1 ] = y1 + 10 * i ; px [ 2 ] = x 2 - 10 * i ; py [ 2 ] = y 2 ; px [ 3 ] = x1 ; py [ 3 ] = y 2 - 10 * i ; g . drawPolygon ( px , py , 4 ); } } } /* 実行 例 javac q 14155228054 . java applet viewer q 14155228054 . java */ 
Item クラス の コンストラクタ は 引数 の 無い もの のみ ( Minecraft Forge 1 . 7 . 10 - 10 . 13 . 2 . 1291 で 確認 し まし た が 、 10 . 13 . 4 . 1614 で 変わる と は 思え ませ ん ) です し 、 そもそも Java の 文法的 に おかしな ところ が いくつ か あり ます し 、 item なんて クラス は あり ませ ん 。 オリジナル クラス なら ソース を 出し て ください 。 そもそも エラー 内容 すら 書い て あり ませ ん 。 こんな 適当 な 質問 の 仕方 で 解決 する 気 ある ん です か ？ 
画像 は 、 プログラム の 機能 を 記し た もの です 。 プログラム で は 有り ませ ん 。 Java の プログラム を 書き たい の なら 、 java を 勉強 し て ください 。 7 列 2 行 の 配列 を 使い 、 画像 の 内容 を 入力 し ます 。 質問 に対して キー 入力 さ れ た値 を 使っ て 、 配列 の 要素 を 選択 し て 表示 すれ ば よい でしょ う 。 
takamiryubi さん の おっしゃる とおり 、 動き まし た 。 もう一度 入力 値 を 確認 し て みる の は どうでしょう か 。 
確認 し まし た が 、 Eclipse で は コピー の Undo は でき ませ ん 。 何 か 別 の 操作 で ファイル を 消し て しまっ た の で は ない か と 思い ます 。 
Pleiades All in One は 一見 便利 に 見える の です が 、 私 は 好き で は ない ん です よ ね 。 「 最初 から いろいろ パッケージ が 導入 さ れ て いる 」 こと は 便利 に 見える の です が 、 便利 が 仇 に なる こと も しばしば あり ます 。 です から 、 私 個人的 に は 、 eclipse は 本家 eclipse . org から 入手 し 、 MergeDoc Project から は Pleiades の プラグイン 部分 のみ 入手 し 、 オリジナル の Eclipse に Pleiades プラグイン を 手作業 で 追加 する 方 が 、 変 な トラブル に 遭う 可能性 は 低い と 思い ます 。 まず Pleiades を 入れ ず に 英語版 の まま の eclipse を 起動 し て み て 、 そこ まで は 動く 、 では 次 は Pleiades を 入れ て みよ う 、 といった よう に 段階 を 踏む こと も でき ます し 。 本家 eclipse に Pleiades を 追加 する 手順 は 、 拙筆 で 申し訳 ありません が 私 が 書い た ノート が 参考 に なる か と 思い ます 。 http:// note . chiebukuro . yahoo . co.jp / detail / n 152842 
一 例 です 。 import java . util .S canner ; public class Kadai { public static void main ( String [] args ) { Scanner input = new Scanner ( System . in ); System . out . print (" 単価 を 入力 ：" ); int tanka = input . nextInt (); System . out . print (" 数量 を 入力 ：" ); int kazu = input . nextInt (); System . out . println (" 売上 金額 は " + sales ( tanka , kazu ) + " 円 "); input . close (); } public static int sales ( int tanka , int kazu ){ return tanka * kazu ; } } 
まず 最初 に 。 ラムダ式 と stream api は 異なる もの です 。 確か に stream api は ラムダ式 を 前提 と し た 記述 方法 で は あり ます が 、 ラムダ式 そのもの は stream api を 使わ なく て も 記述 でき ます 。 その ため 、 stream api を もっ て ラムダ式 と 書く の は 根本 で 間違っ て い ます 。 そして parallel クエリ は stream api の 特徴 で あっ て ラムダ式 と は 無関係 です 。 ラムダ式 の 本質 は 、 メソッド を 式 として 扱う こと に あり ます 。 Java の 場合 は interface と デフォルト メソッド という 形 で 実現 し て い ます 。 記述 さ れ た if 文 を ラムダ式 に 変える の で あれ ば 、 if ( 5 < num ) という 条件 を 判断 し て boolean を 返す メソッド を 作成 すれ ば いい でしょ う 。 ようは boolean p ( int n ){ return 5 < n ; } という メソッド です 。 int を 受け取り boolean を 返す interface は IntPredicate です ので 、 これ を 使っ て ラムダ 表記 する と IntPredicate p = n -> n < 5 ; と なり ます 。 以上 より 、 ラムダ式 表記 する なら IntPredicate p = n -> n < 5 ; int num = 0 ; if ( p . test ( num )){ return ; } と なり ます 。 元 の コード と 比べる と 冗長 に なっ て いる よう に 思わ れる かも 知れ ませ ん し 、 メリット も 感じ られ ない かも しれ ませ ん ね 。 しかし 、 実は 大きな メリット が あり ます 。 たとえば 、 現在 の 条件 は n < 5 です が 、 これ が n > 0 に 変わっ た 場合 は どう し ます か 。 プログラム 中 から if 文 を 探し出し て 、 その ロジック を 修正 し なけれ ば なり ませ ん よ ね 。 では 、 ラムダ式 の 場合 は どうでしょう か 。 コード 先頭 の IntPredicate p = n -> n < 5 ; を IntPredicaet p = n -> n > 0 ; と 書き換える だけ で 修正 でき ます 。 今回 の ケース は 単純 な ロジック でし た ので メリット は 薄い です が 、 複雑 な ビジネスロジック で あっ た 場合 、 インターフェース を 切り替える だけ で コード 細部 を 修正 し なく て 済む ラムダ式 は 、 大きな メリット を 持っ て い ます 。 
１つ の java ファイル に は public class は ひとつだけ 定義 でき ます 。 Human . java と HumanTest . java それぞれ に 分け て ください 。 コマンドプロンプト の 入力 内容 は 以下 で 大丈夫 だ と 思い ます 。 javac Human . java javac HumanTest . java java HumanTest 
自作 アプリ なら SoundPool や MediaPlayer で play し て 音 だし て いる でしょ う から 、 stop メソッド 呼べ ば 音 が 消え ます 。 一時停止 さ せ て 、 再度 再生 さ せ たい なら pause メソッド です ね 。 
その 別 の ボタン を 押し た 時 に 呼ば れる メソッド に スイッチ の 状態 を いじる コード を 書け ば いい だけ じゃん か 。 
＞ 文字化け し ない よう に する に は 文字コード について 学ん で ください 。 Shift-JIS と UTF-8 について です 。 コンソール へ の 出力 について は 、 『 C :¥¥』 と ある ので 、 「 ダメ 文字 」 と 「 cp932 」 で 検索 し て ください 。 
迷う 事 は 無い と 思う けど 。 https :// java . com / ja / download / 
何 が 問題 な の か わかり ませ ん が 、 その よう に キーボード を 叩く とか 、 ファイル に 記述 し て おけ ば よい の で は ない です か ? C で は 処理系 毎 に INT _ MAX は 違う 可能性 が あり ます が 。 int が 16 bit の C 処理系 で あれ ば 、 普通 は # include < stdio . h > int main ( void ){ int n ; scanf ("% d ",& n ); return 0 ; } として 、 キーボード から 32767 と 入力 すれ ば INT _ MAX に 相当 する 値 を 入力 出来る でしょ う 。 何なら 、 # include < stdio . h > # include < limits . h > int main ( void ){ int n ; printf (" INT _ MAX =% d \ n ", INT _ MAX ); scanf ("% d ",& n ); return 0 ; } と すれ ば 、 見 た まま を 入力 すれ ば いい ので 楽 です 。 
今 、 テスト コード を かき まし た 。 いろいろ 、 方法 が 、 あっ た の です が 、 JFrame と 、 JTextField を 使っ て 、 sort の 結果 が 、 出来 ない こと で 、 よろしい の でしょ う か 。 その 場合 、 JtextField で は なく 、 JTextArea の 、 append メソッド を 使っ て 、 sort し た 内容 を 表示 出来 ます よ ！ コード ： import java . io .*; import java . lang .*; import javax .s wing .*; import java . awt .*; import java . awt . event .*; import java . util .*; public class sort extends JFrame { // JTextField field = new JTextField (); JTextArea field = new JTextArea (); ArrayList < Integer > list = new ArrayList < Integer >(); public static void main ( String [] args ) { System . out . println (" Hello .\ n "); new sort (); } public sort () { windowInit (); sortInit (); } public void windowInit () { setLayout ( null ); field .s etBounds ( 10 , 10 , 200 , 200 ); setBounds ( 0 , 0 , 500 , 500 ); addWindowListener ( new WindowAdapter (){ @ Override public void windowClosing ( WindowEvent e ) { System . exit ( 0 ); } }); getContentPane (). add ( field ); setVisible ( true ); } public void sortInit () { System . out . println (" sort "); int [] data = { 4 , 1 , 2 , 5 , 3 }; for ( int i = 0 ; i < 4 ; i ++) { for ( int j = 0 ; j < 4 - i ; j ++) { if ( data [ j ]< data [ j + 1 ]) { int temp = data [ j ]; data [ j ]= data [ j + 1 ]; data [ j + 1 ]= temp ; } } } for ( int k = 0 ; k < data . length ; k ++) { System . out . print ( data [ k ]+" "); field . append ( data [ k ] + " "); } } } 
数式 処理 は まだまだ LISP が 強い 世界 か と ... Java で も もちろん 出来 ない わけ で は ありません が 数式 処理 関連 の 書籍 で は やはり LISP が ある 種 の 「 標準語 」 として 使わ れ て いる こと が 少なく ない か と 思い ます 。 maxima や pari , Scilab , asir など が ニーズ に 近い オープンソース か と は 思い ます が 、 ソース の 解読 だけ 取って も 非常 に 大変 な 作業 に なる こと か と ... Microsoft mathematics は ご存じ でしょ う か ？ 一度 使わ れ て みる と よい の で は ない か と 思い ます あれ くらい UI の 部分 を しっかり と 作ら ない と 教育 の 現場 で の 使用 に 耐える よう な もの に は なら ない の で は ない か と 思い ます 。 数式 処理 以外 に も 多数 の 難渋 な 技術 が 使わ れ 、 それら を しっかり と 束ねる 堅牢 かつ 綿密 な 設計 が 必要 な よう です 。 （ 個人 で できる 作業 と は 思い にくい です ） 
Eclipse の 場合 、 ファイル や 画像 の パス は プロジェクト から の 相対パス に なる よう です 。 質問 の 場合 だ と 、 プロジェクト 直下 に image フォルダ を 作成 し 、 その 中 に sharo .jpg を 格納 すれ ば 、 java ファイル から 読み込める と 思い ます 。 
今 から GUI を やる なら JavaFX 8 でしょ う 。 http:// www . amazon.co.jp / dp / 4877833765 
java の プログラミング を 始め たい という こと で よろしい です か ？ java 自体 が プログラム を 入力 する 画面 を 提供 する わけ で は なく 、 ふつう の テキストエディタ など で 編集 し た テキスト を java ( の コンパイラ ) に 読み込ま せ ます 。 テキストエディタ は 、 terapad ( シンプル )、 サクラエディタ ( 多 機能 ) あたり が おすすめ 。 まず 、 JDK ( 現時点 で 最新 は ８ ) という 開発 キット が 必ず 必要 です 。 JDK 8 と 検索 する と 一番 上 に 英語 の ページ が 出 て くる と 思い ます 。 Accept License ~ みたい な ところ を クリック し て 、 自分 の OS に あっ た もの を ダウンロード 、 インストール し て ください 。 よっぽど 古い パソコン など で なけれ ば Windows x64 が 一般的 だ と 思い ます 。 次に 、 環境変数 を 設定 する と 後々 楽 です 。 こちら 画像 付き で 環境変数 の 設定 方法 が 丁寧 に 書か れ て い ます 。 http:// www . javadrive .jp / install / jdk / in de x4 . html 環境 構築 は これ で 終わり です 。 ここ まで でき たら . java という 拡張子 の ファイル を 作っ て 、 テキストエディタ で プログラム を 書い て 、 コマンドプロンプト を 開い て 、 javac コマンド と java コマンド を 使っ て プログラム を 実行 でき ます 。 
その エラー は 配列 関係 で よく 出る エラー です 。 例えば 、 要素 数 5 の 配列 を 初期 化 し た とき 、 添え 字 は 0 ~ 4 で 、 アクセス も 0 ~ 4 で 行い ます 。 この 時 、 5 以上 の 存在 し ない 添え 字 を 使っ て アクセス しよ う と する と 、 Java は 「 そんな 添え 字 は 存在 し ない から 値 が 取得 でき ねえ よ 」 って エラー を 投げつけ ます 。 それ が その エラー の 正体 です 。 
public class MatrixPanel extends JFrame { ↓ public class MatrixPanel extends JPanel { JFrame は add 出来 ない よう です 。 
その 症状 は ブラウザ を 再インストール し て み て ください 。 私 は それ で 治り まし た よ 。 
丸投げ じゃなくて 自分 で 考え た ソース を 掲載 、 それ に 助言 を 受ける 形 の 方 が 自分のために なる ぞ 。 
１ ． サーバー の ログ み て ２ ． エラー を 探し て ３ ． 原因 を ネット 検索 し て ４ ． 改修 する サーバー ログ って どれ よ ？ サーバー 起動 bat の フォルダ に logs フォルダ ある だろ ー エラー って どれ よ ？ error って の 探し な よ ネット 検索 し たら 英語 ばっかり なん だ けど スワヒリ語 が お 望み でし た か ... ( 翻訳 すれ ば ぁ ー ) どこ 治す の よ 解決 し てる ところ 探し出す ん じゃ い 
以下 で 試し まし た が 、 エラー は 出 ませ ん でし た 。 Eclipse Java EE IDE for Web Developer s . Version : Mars . 2 Release ( 4 . 5 . 2 ) Build id : 20160218 - 0600 -- package test ; import java . awt . Rectangle ; public class Sample { public static void main ( String [] args ) { Rectangle r1 = new Rectangle (); Rectangle r2 = new Rectangle (); r1 . intersects ( r2 ); } } -- いったん 、 Test . java を どこ か に 作っ て 試さ れ て は どうでしょう か 。 。 
minamimariox さん AXIS という SOAP / WebService 用 の Java ライブラリ を 使う の は 、 モウ 古く 、 メリット は 無くなっ て い ます 。 より モダン な 、 REST インターフェース ・ ベース の マイクロ サービス の 方 が 、 メリット が 多い です 。 ・ 俊敏 性 と 生産性 ・ 拡張性 ・ 障害 に対する 回復 力 ＜ 参考 ＞ マイクロ サービス 、 SOA 、 API ： 味方 か 敵 か 進化 し 続ける 企業 に 向け た 、 主要 な 統合 / アプリケーション・アーキテクチャー の 概念 の 比較 http:// www . ibm . com / developerworks / jp / websphere / library / techarticles ... 「 REST インターフェース は 、 JSON データ ・ フォーマット （ 場合 によって は XML ） を 使用 し て データ を 提供 し 、 HTTP の メソッド の PUT 、 GET 、 POST 、 DELETE を 使用 し て 作成 、 読み取り 、 更新 、 削除 の 操作 を 表現 し ます 。 これら の プロトコル や データ ・ フォーマット は 、 初期 の SOA で 多く 見 られ た 、 SOAP に 基づく Webサービス 標準 より も 使い やすく なっ て い ます 。 」 
いいえ ！ java は 、 基本 に 忠実 に 出来 て いる 言語 な ので 、 ちゃんと 勉強 を 終わら せ た 方 が 良い です 。 Python は 、 一種独特 の 癖 の ある 言語 です 。 これ で 慣れ て しまう の は 、 危険 です 。 もっとも 、 Python が 、 特殊 な ん だ という こと を 、 認識 し ながら 勉強 する なら 、 順番 は 違っ て も 大丈夫 かも しれ ませ ん 。 
this は Sample クラス で 使用 し て いる ので 、 Sample クラス の インスタンス を 表し ます 。 MyMouseAdapter の コンストラクタ で Samplel クラス を 引数 に し て い ます 。 obj に は コンストラクタ が 呼ば れ た とき に 引数 で 指定 さ れ た インスタンス が 格納 さ れ ます 。 
そもそも これ は Java で 使える と は 思い ます が Android で JavaScript が 使える の か 疑問 です 何 か 既に うまく いっ て いる サイト 等 を 見 て 試し て いる の でしょ う か それとも チャレンジ し て いる だけ な の か 別 アプローチ として は webView . evaluateJavascript (" alert (\" Hello \");", null ); 
「 自分自身 ( か上 位 ) の クラス を 引数 に 取る 、 他 の クラス に 存在 する メソッド 」 を 呼び出す の に 他 の クラス の インスタンス . メソッド ( this ); と する なら わかる 。 もし そう なら どういう 場合 に 自分 の クラス を 引数 に とる の です か ? という 質問 の 答え は 自分自身 ( か上 位 ) の クラス を 引数 に 取る メソッド が 、 他 の クラス に 存在 し て い て それ を 呼び出し たい から 以外 に ない 気 が する けど 。 質問 が 具体 的 じゃ ない ので 勝手 に 類推 する しか なく て 非 効率 です ね 。 
最初 に kc という 変数 に KeisanClass を 格納 し て い ます 。 kt 1 と kt 2 の コンストラクタ で どちら も kc を 指定 し て い ます 。 な ので 、 kt 1 の run メソッド で kc クラス の cnt が + 1 kt 2 の run メソッド で kc クラス の cnt が + 1 その 結果 「 value = 2 」 と 表示 さ れ て い ます 。 
言っ て いる こと が よく わから ない 。 そもそも 、 この プログラム は 何 を する もの な の ？ どう いっ た値 を 入力 し て 、 どう いっ た 結果 が 出れ ば 正解 な の ？ こう いっ た こと を 具体 的 に 書い た 方 が よっぽど 答え に 近づく わ 。 
上 から カメラ で 撮っ ちゃう の が 簡単 ( コスト や 作業 面 で ) な 気 が する けど 、 なにか 制限 が ある の でしょ う か 。 
Activity と Application の Context の どちら を 使用 する か は 、 各々 関連 する 方 を 使用 し ない と 、 意図 し ない 不具合 が 発生 する こと が あり ます 。 例えば 、 アプリケーション の Privete な 保存 領域 を 触る 場合 は 、 Application に 紐 づく もの に なる ので 、 Application の Context を 使用 する こと に なり ます 。 逆 に 、 Activity の レイアウト に関する もの や 、 Activity 内 で 使用 する BroadcastReciver など は 、 Activity の Context を 使用 し ます 。 特に BroadcastReciver について は 、 Application の Context を 使用 する と 、 BroadcastReciver の ライフサイクル が Application に 紐 づい て しまい 、 unregist を 行わ なかっ た （ 忘れ た ） 場合 、 リーク し たり 、 破棄 さ れ た Activity に アクセス し て エラー に なる ケース が あり ます 。 一番 わかり やすい 例 が AlertDialog で あり 、 AlertDialogBuilder は 、 Application の Context で は 生成 でき ませ ん 。 （ ・ ・ ・ だっ た と 思い ます 。 ） また 、 表示 関係 で は 、 Application と Activity の テーマ （ 色 とか ） が 異なる と 、 ダイアログ 内 の Adapter や ウィジェット を 作成 する とき に 使用 する Context の テーマ の デフォルト 色 で 作成 さ れ ます ので 、 表示 色 や 文字 色 に 違い が 出 て き ます 。 
イメージ 的 に ・ ・ 一 例 です 。 import java . util .S canner ; public class InputTest { public static void main ( String [] args ) { Scanner in = new Scanner ( System . in ); String [] subject = {" 学籍 番号 "," 数学 "," 英語 "}; int [] num = new int [ subject . length ]; for ( int i = 0 ; i < subject . length ; i ++){ System . out . print ( subject [ i ]+"："); num [ i ] = in . nextInt (); } for ( int i = 0 ; i < subject . length ; i ++){ System . out . print ( subject [ i ]+"："+ num [ i ]+", "); } in . close (); } } 
https :// si tes. google . com / site / startandroidprograming / androidpurogur ... いかにも な サイト が あり まし た 。 
こんな 感じ です か 。 package test 20160726 ; import java . util .S canner ; public class Yahooq 13162133733 { public static void main ( String [] args ) { int n ; System . out . print (" Input number >> "); Scanner scanner = new Scanner ( System . in ); n = scanner . nextInt (); scanner . close (); n = romanize ( n , 1000 ,' m '); n = romanize ( n , 500 , ' d '); n = romanize ( n , 100 , ' c '); n = romanize ( n , 50 , ' l '); n = romanize ( n , 10 , ' x '); n = romanize ( n , 5 , ' v '); romanize ( n , 1 , ' i '); System . out . println (); } private static int roman ize ( int n , int base , char letter ) { int i = 0 ; while ( i < n / base ) System . out . printf ("% c ", letter , i ++); n -= i * base ; return n ; } } 
teratail で は Java も 扱っ て ます よ 。 https :// teratail . com / questions / search ? q = java & search _ type = and おそらく どの Q&A サイト ( プログラミング 系 ) でも Java を 扱っ て ない サイト は なかなか ない と 思い ます 。 
１ ． プチコン 3号 において 公開 さ れる プログラム は 、 はじめ に ユーザー が 入力 する こと で ダウンロード できる 「 公開 キー 」 を 発行 する 段階 で 総て 禁止 ワード の 機械的 チェック を 通り ます 。 版権モノ の 名前 が プログラム に 入っ て いる など の 露骨 な 場合 は これ で 弾か れ ます が 、 あまり 誤報 の 噂 を 聞か ない ので 単純 な フィルタリング で は ない かも しれ ませ ん 。 次に 、 公開 キー が 発行 さ れ た 後 、 スマイルブーム の 人間 による 手動 チェック が 行わ れ ます 。 著作権 を 始め と し た 様々 な 権利 侵害 、 不具合 を 引き起こす モノ 等 、 プログラム として 不適切 な モノ を 人力 で 削除 し ます 。 つまり 、 公開 キー が 取得 さ れ て いる 状態 で 既に 運営 の スキャン 済み という 訳 です が 、 大喜利 等 の 応募 作品 は 更に 厳正 に 審査 さ れ ます 。 ウィルス が 侵入 する 余地 は 全く あり ませ ん 。 つまり 、 先 の 質問 に 一言 で 答える なら 「 審査 し て い ます 」 。 ２ ． 不可能 です 。 まず 、 画像 に関して は 、 プチコン 3号 で 扱える 画像 は 16 bit ARGB という 形式 の 512 x5 12 の サイズ のみ と なり ます 。 これ 以上 綺麗 な 画像 は 扱え ない か 、 扱え て も 処理 が 重 すぎ て 実用 許容 量 を 超える と 思い ます 。 動画 に関して は 、 うごくメモ帳 もどき は 公開 さ れ て いる の です が 、 逆 に 言う と それ だけ で 感心 さ れる レベル でし て 、 一般 的 な 動画 は 再生 でき ませ ん 。 Bad Apple!! 再生 動画 も 、 かなり 処理 が いっぱい いっぱい らしい です 。 この 通り 、 再生 する だけ で かなり 不可能 に 近い ので パスワード ロック など もってのほか です 。 
これ と おなじ か な 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1416180309 ... 
そのまま 移植 し て み た けど 、 これ 正しく ない 。 正しい 動作 も 不明 。 public static void main ( String [] args ) throws Exception { System . out . print (" Input number >> "); int n = new Scanner ( System . in ). nextInt (); n = romanize ( n , 1000 ,' m '); n = romanize ( n , 500 , ' d '); n = romanize ( n , 100 , ' c '); n = romanize ( n , 50 , ' l '); n = romanize ( n , 10 , ' x '); n = romanize ( n , 5 , ' v '); romanize ( n , 1 , ' i '); System . out . println (); } static int roman ize ( int n , int base , char letter ){ int i = 0 ; while ( i < n / base ){ System . out . println ( letter ); i ++; } n -= i * base ; return n ; } 
コード を 中途半端 に 書い て いる ため 、 原因 が 不明 です 。 たとえば ・ mail .s mtp . auth プロパティ の 設定 が なさ れ て いる の か ・ Session 生成 時 に PasswordAuthentication の インスタンス を 渡し て いる の か あたり が 怪しい です が 、 コード に 記載 が ない ため わかり ませ ん 。 
授業 内 例題 ４ の よう に やる と いい らしい です 。 
グラフ 、 と いっ て も どんな グラフ が 描けれ ば いい の か で 随分 プログラム も 変わる と 思い ます が ... と に かく線 を 引く だけ なら 、 例えば Processing の リファレンス ページ の begin Shape の サンプル が 参考 に なる と 思い ます 。 https :// processing . org / reference / begin Shape _. html グラフ の 向き や スケーリング を 調整 し たけれ ば translate や scale といった 関数 について 調べ て みる と いい と 思い ます 。 
私 は NetBeans です 。 たった 一つ の インストーラ ーファイル を ダウンロード し て インストール すれ ば 良い だけ です 。 インストール は インストーラ ー の 指示 に 従う だけ で OK です 。 ネット 関連 を 使う の で あれ ば JavaEE を 、 使わ ない の で あれ ば JavaSE を ダウンロード し ましょ う 。 よく わから なけれ ば JavaEE を 選択 し て ください 。 https :// netbeans . org / download s / 
多分 、 回答 でき ませ ん 。 少なくとも 、 以下 の メソッド で 何 を 処理 し て いる の か 不明 な ので … 「 deadOrAlive () 」 「 map String () 」 
大 画面 に は でき ませ ん か （ できるだけ Window を おっきく ） 
「 while ( thread == thisThread )」 → 「 変数 thread に thisThread が 格納 さ れ て いる 間 」 という 解釈 で 良い の で は ない でしょ う か 。 止める ため に stop メソッド で null を 代入 し て ます 。 
Cnt という 変数 は 宣言 し て いる けど 、 cnt という 変数 の 宣言 は 見当たり ませ ん ね 。 変数 名 は 大文字 と 小文字 が 区別 さ れ ます 。 打ち 間違い として も 、 cnt という 変数 の 操作 が 見当たら ない し 、 これ で は 回答 でき ない 内容 です 。 
とりあえず 、 なに が うまく いか ない か 言っ て もらわ ない と 、 アドバイス も でき ない の で は ない でしょ う か 。 そもそも 、 コンパイル が 通ら ない の か 、 コンパイル は 通る けど 、 思っ た 通り に 動か ない の か 。 思っ た 通り に 動か ない なら 、 どう 動い て ほしい か 、 それ に対して いま は どう なっ て いる か 。 最終 的 な 「 こう ある べき 」 という 情報 が もらえ ない こと に は 、 アドバイス は でき ない と 思い ます 。 （ まさか 、 そこ まで ソース 見 て 解析 し て 考え て くれ なんて 言わ ない です よ ね ？ ） 
EXE を 呼び出し て いる と の こと な ので 実行 環境 は Windows と 推察 し ます も し そう なら Windows 特有 の 問題 により その 症状 が 出 て いる 可能性 が あり ます その 呼び出 し た プログラム の 終了 コード を 直接 実行 し て 確認 し て み て ください もし 259 を 返す こと が ある の なら まさに それ が その 例外 発生 の 原因 です そんな こと は ない という 場合 は Java 実行 環境 の 別 の 何らかの 不具合 でしょ う 何が悪い の か 今 の ところ 原因 を 思いつき ませ ん この 場合 以下 は 読み 捨て て もらっ て も 構い ませ ん さて Java の Windows 実装 において 終了 コード の 取得 に 利用 し て いる Windows API 関数 は プロセス が 終わっ て いる か 生き て いる か に 関わら ず 呼び出す と すぐ に 返っ て き て プロセス が 終了 し て いる なら その 終了 コード を 返し まだ プロセス が 生き て いる なら 259 を 終了 コード として 返し ます したがって きちんと 終了 し た プロセス が 259 を 返す よう に なっ て いる と プロセス が 終了 し て いる か否 か の 区別 が でき なく なり ます その 結果 waitFor () 内 で 終了 コード を 得る の と は 別 の API 関数 で プロセス 終了 を 待っ た 後 に exitValue () で 呼ば れ た 終了 コード 取得 API 関数 が 259 を 返し て しまい プロセス は 生存 中 と 誤判 断 し て Ill egalThreadStateException を 投げ て しまい ます これ に Java 側 で 対処 する の は 結構 面倒 な こと だ と 考え ます この あたり の 処理 は native メソッド 呼び出し で 泥臭く やっ てる 部分 な ので スマート に Java 側 で 解決 という わけ に は いか ない と 思い ます まあ 間違い なく 終わっ てる くらい まで 待っ て から waitFor () から 投げ られ た 例外 を 捕捉 し て 見 なかっ た こと に する と か でも 済む 場合 なら それでも いい です が 「 呼び出 し た プログラム 側 で 終了 コード に 259 を 使用 し ない よう に する 」 とか 「 終了 コード 以外 の 方法 （ プロセス 間 通信 を 使う 等 ） で その 情報 を Java 側 に 伝える 」 とか 「 EXE を 改変 でき ない なら EXE を 呼ん で その 終了 を 待ち 終了 コード が 259 に なら ない よう に マッピング さ れ た 終了 コード を 返す よう な もしくは 終了 コード 以外 の 別 の 方法 で Java 側 と やり取り する よう な Windows 用 の 仲介 プログラム を 作成 し て 両者 の 仲 を 取り持つ 」 とか 「 終わる の を 待つ だけ で 終了 コード が 不要 なら 終了 コード を 仲介 プログラム が 握り潰す 」 とか いずれ に せよ Windows 側 の プログラム で の 対処 が 必要 に なる と 思い ます この 終了 コード 259 は API リファレンス 等 マイクロソフト 側 の ドキュメント で も 「 an application should not use STILL _ ACTIVE ( 259 ) as an error code .」 など と 書か れ て いる ので 絶対 駄目 ( must not ) という わけ で は ない ものの 呼び出し た EXE の 不良行為 と も いえ ます もちろん その あたり を 気 に し なく て も よい プログラム なら 何 を 返そ う が 無関係 です が Unix 系 の よう に 終了 ステータス は int 型 で も 下位 8 ビット だけ に なる という よう な 縛り が あれ ば いい の です が こういう ネイティブ な 習慣 に 関わる プラットフォーム の 差 は なかなか 吸収 し きれ ない ところ でしょ う ね 
「 n >= num 」 は 条件 式 な ので true / false が return 去れ ます 。 メソッド の 定義 で 戻り値 が boolean に なっ て いる と 思い ます 。 メソッド は if 文 で 使わ れる と 思い ます 。 以下 、 サンプル です 。 -- ソース -- package test 20160726 ; public class Yahooq 14162121104 { public static void main ( String [] args ) { if ( compare ( 2 , 1 )) { System . out . println (" true です 。 "); } else { System . out . println (" false です 。 "); } System . out . println ("-"); if ( compare (- 2 , 1 )) { System . out . println (" true です 。 "); } else { System . out . println (" false です 。 "); } } private static boolean compare ( int n , int num ) { return n >= num ; } } -- 結果 -- true です 。 - false です 。 
> java platform SE binary で fo rg e-1 . 8 - 11 . 14 . 4 . 1577 - installer . jar を 開こ う と する どの よう に してやっ た の でしょ う か { java を 導入 し た パス }\ java - jar fo rg e-1 . 8 - 11 . 14 . 4 . 1577 - installer . jar って やっ て ます か ？ 
ThreadLocal とか でも リーク する みたい です ね 。 http:// d . hatena . ne.jp / yamada mn / 20131214 / 1386996898 たしか 、 log4j あたり も 昔 の バージョン だ と あっ た 気 が 。 メモリリーク の 調査 、 大変 な ん です よ ね ... 
.NET の 仮想マシン を はさん で いる こと で 、 マルチプラットフォーム 化 が 容易 に なっ て いる こと は 確か でしょ う 。 しかし 、 そう で なけれ ば マルチプラットフォーム 化 でき ない わけ で は あり ませ ん 。 
さすが に それ だけ で は ... processing で 音 を 扱う の だ から minim は 使う でしょ う けれど 、 それ 以外 どんな プログラム に する か は 、 もう少し 「 どんな 動作 を 期待 する の か 」 を 具体 的 に 決めて から で ない と なかなか 決まっ て こ ない よう に 思い ます 。 
dl バージョン を 使っ て インストール し て みれ ば いい の では 。 
有名 どころ だ と JD ( Java Decompiler )、 JAD ( fast JAva Decompiler ) あたり です ね 。 JD - Eclipse あるいは jadclipse 利用 する の が いい かも 。 あと 、 Pleiades の All in one Eclipse に は 標準 で デコンパイラ が 内蔵 さ れ て ます 。 
① のみ 自分 で 作っ た プログラム を 提示 し た うえ で 質問 し て ください 。 すで に ヒント が 以前 の 質問 の 回答 で 与え られ て て い ます ね 。 java 言語 を 初歩 から 教える わけ に 行か ない ので 。 （ ヒント ） ・ 予算 入力 （ 「 予算 は ? 」 ） ・ n = 0 で 初期化 ・ while ( n < 予算 ){ // 品物 の 合計 値 が 予算 より 低い 間 繰り返し ・ 品物 の 値段 入力 （ 「 品物 の 値段 は ?」） ・ n = n + 品物 の 値段 ・ 現在 の 合計 表示 n ・ } // while 終了 ・ 「 予算 を 超え まし た 。 」 表示 
String 型 を 使い ましょ う 。 参考 サイト http:// qiita . com / makopo / items / 45 b 9 cb 83 dff 99 edb 7698 
＜ これら の 言語 を 独学 で 学ぶ に は どれ くらい の 労力 が 必要 です か ？ ＞ 【 C 】 難しい ところ を 除く と 、 あまり 労力 は 要り ませ ん 。 一般教養 的 な もの です 。 文法 が 簡単 な ため 、 わりと すぐ に 覚え られる と 思い ます よ 。 難しい ところ を 含める と 話 は 別 。 実際 に 何 か を 作る と なれ ば 、 そういう 難しい ところ も 含め て 理解 し ない と 駄目 な わけ です が 、 労力 で 片付く もの で は ない と 思い ます 。 基礎 知識 が 必要 な ん です ね 。 【 C++ 】 C 言語 が 完全 に 分かっ た 人 が やっと 入門 できる 言語 です 。 何 も 知ら ない 状況 から 入る と 、 わりと 早い 段階 で 挫折 に 至り ます 。 労力 が どうこう という 次元 で は ない です 。 【 Java 】 詳しく は 分かり ませ ん が 、 物凄く 簡単 らしい です 。 ていう か 、 簡単 に なる よう 頑張っ て 作ら れ た 言語 です 。 難しかっ たら おかしい です よ ね 。 よって 、 労力 は 僅か です 。 基本 レベル の もの で あれ ば 、 ２ ～ ３ 日 で わかる の で は ない でしょ う か 。 どうにか こう にか 作れる よう に なる に は １ ～ ２ か月 （ こういう の が 苦手 な 人 だ と もう少し の 期間 ） か と 。 上級 レベル の もの は それなり でしょ う けど 、 それ は 言語 の 問題 で は ない わけ で 、 単に 開発 に 時間 が かかっ てる だけ の 話 です 。 【 Objective-C 】 これ も 詳しく は 知り ませ ん が C++ 相当 で あろ う と 思い ます 。 C 言語 卒業生 （ ？ ） 向き か と 。 あるいは 既に C++ を やっ てる 人 向け 。 C++ と は 書き方 が 違う ため 、 初め は 違和感 が ある と 思う の です けど 。 ＜ また 、 就職 し て から 使える くらい に なる に は どの くらい 習得 す べき です か ？ ＞ え ？ （ １ ） 就職 後 に どれ だけ 研鑽 を 積め ば 良い か （ ２ ） 就職 前 に どれ だけ 研鑽 を 積ん で おけ ば 良い か どっち だろ う 。 たぶん （ ２ ） です よ ね 。 こういう の が 好き で 昔 から 個人的 に やっ て た人 は 、 おそらく 就職 し た 直後 から 「 使える くらい 」 に なっ て ます 。 下手 する と 中高生 に も 居る かも しれ ない です ね 。 小学生 から ハードウェア を やっ て たら 中学生 で 機械語 、 高校生 で C 言語 、 C++ とか 。 そういう ケース だ と すぐ に 使える 筈 です 。 でも 、 あらかじめ やっ て おい た 方 が 良い とか って 考え て 、 それで 今 、 始めよ う と し て いる 人 の 場合 、 ちょっと アレ かも しれ ませ ん 。 教科書 （ 入門書 ） を なぞる 程度 の 勉強 の 場合 、 まず 、 使い物 に なり ませ ん 。 今 から じゃ 無理 です よ 。 入門 が 遅かっ た 人 の 場合 です けど 、 もう少し 勉強 が 進ん だ として 、 そうすると 新た に まずい 事態 に なる 恐れ も あり ます 。 変 な やりかた を 覚え て しまっ て 、 会社 側 も 困っ て しまう と か 。 変 な やり方 を 業務 で やら れる と まずい です から ね 。 更に 進む と 、 変 な やり方 か どう か 自己 判断 が 出来る よう に なる と 思い ます 。 その レベル から 使い物 に なる と 思い ます 。 で 、 今 から 始め た 場合 、 そこ まで の レベル に は なら ない よう に 思い ます 。 だって 、 他 の 勉強 も 色々 ある わけ でしょ ？ 《 備考 》 二 進数 、 機械語 、 C 言語 、 この 辺 を 一般教養 の レベル で 理解 し て おく こと は 重要 かも しれ ませ ん 。 それ が 出来 て い ない 人 は 沢山 居 ます よ 。 でも 、 C 言語 で 何 か を 作ろ う と し ない 方 が 良い です 。 その やり方 は ３ ０ 年 前 の もの です 。 今 、 そういう やり方 は し て ませ ん から ね 。 何 か を 作る の だっ たら C++ です 。 （ けど 、 無茶苦茶 難しい です 。 ） もしも Java で 済む の で あれ ば 、 そんなに 難しい 話 は 要ら ない かも 。 もし 、 Java の 方面 でも 構わ ない と お 考え で あれ ば 、 そっち の 方 を やる と 良い です 。 労力 は 最小限 で 済み ます から ね 。 あと 、 「 エンジニア 職 」 と の お話 です が 、 それ って SE か な ？ だとすると 、 プログラミング の こと は あまり 気 に し ない 方 が 良かっ たり し て 。 プログラム を 作る 仕事 じゃ ない です から ね 。 え ？ 作る って ？ あ 、 いや 、 コーディング を やる わけ じゃ ない でしょ っていう 意味 。 実際 に 作る の は プログラマ な わけ だ から 。 
【 問題 １ 】 囲ん で み まし た 。 -- import java . io . FileNotFoundException ; import java . io . FileReader ; public class Yahooq 10162647370 _ 1 { public static void main ( String [] args ) { test (); } private static void test () { try { FileReader fr = new FileReader (" 例外 . text "); } catch ( FileNotFoundException e ) { } } } -- 【 問題 2 】 「 throws FileNotFoundException 」 を 付け まし た 。 -- package test 20160807 ; import java . io . FileNotFoundException ; import java . io . FileReader ; public class Yahooq 10162647370 { public static void main ( String [] args ) throws FileNotFoundException { test (); } private static void test () throws FileNotFoundException { FileReader fr = new FileReader (" 例外 . text "); } } -- 
https :// paiza . io / projects / OFWOBiYtXvBCXDn 8 lYv _ Cg 数字 で ない 文字 のみ はじき 、 全角 数字 のみ 、 および 全角 数字 と 半角 数字 が 混合 し た もの に も 対応 さ せ まし た 。 
/* new Data { hegiht = 170 , wegiht = 60 } */ と すれ ば OK . 
よく ある の は 、 グラボ の ドライバー が 古い から 。 搭載 さ れ て いる グラフィック チップ ( または グラフィック ボード ) を 確認 し 、 メーカー サイト で 配布 さ れ て いる 最新 ドライバー に 更新 し て み たら どうでしょう か 。 
java Applet は 、 java プログラム を 自動 で ダウンロード する ので 、 端末 の 操作 が 簡単 に なり 多く の 愛好 家 が い まし た 。 しかし 、 自動 ダウンロード に 危険 が 伴う という こと で 、 「 作成 元 の 公認 署名 」 か 受信 者 の 「 例外 扱い 容認 表明 」 を 前提 として 運用 が 続け られ て い ます 。 また ブラウザ の chrome , ege は 、 この よう な サポート を 中止 し て い ます 。 現在 、 代替 の 方法 が ない ので 、 愛好 者 が かなり 残っ て いる と 推定 さ れ ます 。 
java Applet は 、 java プログラム を 自動 で ダウンロード する ので 、 端末 の 操作 が 簡単 に なり 多く の 愛好 家 が い まし た 。 しかし 、 自動 ダウンロード に 危険 が 伴う という こと で 、 「 作成 元 の 公認 署名 」 か 受信 者 の 「 例外 扱い 容認 表明 」 を 前提 として 運用 が 続け られ て い ます 。 また ブラウザ の chrome , ege は 、 この よう な サポート を 中止 し て い ます 。 現在 、 代替 の 方法 が ない ので 、 愛好 者 が かなり 残っ て いる と 推定 さ れ ます 。 
基本 は 同じ です が 、 特徴 的 な 部分 が あり ます ので 書籍 等 を 購入 する 事 を お勧め し ます 。 （ 個人的 に に は 、 秀和システム の 「 Android SDK 開発 の レシピ 」 を 使っ て い ます 。 ） 例えば 、 Android の バージョン によって ・ SDカード へ の アクセス 制限 ・ ver 4 以降 は 、 HTTP 通信 を 別 タスク に する 。 ・ Button イベント から 、 直接 HTTP 通信 出来 ない 。 等 、 そこそこ Android の 癖 が あり ます 。 注意 し ましょ う 。 
＞ プログラマ として 未熟 な 段階 で デベロッパー 登録 し て 、 しょぼい アプリ を 公開 し て しまう と 、 それ が 後 に なっ て も 残っ て しまう か なぁ と 心配 し て い ます 。 消せ ば いい だけ で は ？ あるいは 、 アプリ を 実力 に あっ た もの に バージョンアップ さ せれ ば いい の では 
http:// pastebin . com / qx 6 UnmBQ ルンゲクッタ で 解き たい ん だ よ ね ？ 汎用 の ４ 次 ルンゲクッタ の クラス 作っ て 解い て み た コード は 全 コピペ で RungeKuttaTest . java に 保存 し て コンパイル すれ ば 動く 手 計算 で の 結果 と ちゃんと 合う か どう か も 出力 で 確認 できる よう に し た 
これ と 同じ 質問 か な 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1216201950 ... 
① public static void main ( String [] args ) { final int max = 11 ; int [] a = new int [ max ]; // 反復 も ループ も 用い ず に 再帰 で 配列 生成 makeIntArray ( 0 , a , max ); // 表示 System . out . println ( Arrays . stream (a) . max (). getAsInt ()); } private static void makeIntArray ( int index , final int [] val , final int max ){ switch ( index ){ case 0 : case 1 : val [ index ]= 1 ; break ; default : val [ index ]= val [ index - 1 ]+ val [ index - 2 ]; } if (++ index < max ) makeIntArray ( index , val , max ); } ② public static void main ( String [] args ) { final int max = 5 ; int [] a = new int [ max ]; // 反復 も ループ も 用い ず に 再帰 で 配列 生成 makeIntArray ( 0 , a , max ); // 交換 final int src = 2 - 1 , dest = 4-1 ; a [ src ]^= a [ dest ]; a [ dest ]^= a [ src ]; a [ src ]^= a [ dest ]; // 交換 した値 を 出力 しろ と は 言わ れ て い ない 。 } private static void makeIntArray ( int index , final int [] val , final int max ){ val [ index ]= Math . incrementExact ( Math . multiply Exact ( index , 2 )); if (++ index < max ) makeIntArray ( index , val , max ); } ③ public static void main ( String [] args ) { int i = 1 ; int [] a ={ i ++, i ++, i ++, i }; System . out . println ( IntStream . range ( 0 , i ). mapToObj ( n ->" a ["+ n +"] = "+ a [ n ]). collect ( Collectors . joining (","))); IntStream . range ( 0 , i / 2 ). forEach ( tmp ->{ a [ tmp ]^= a [ a . length - tmp - 1 ]; a [ a . length - tmp - 1 ]^= a [ tmp ]; a [ tmp ]^= a [ a . length - tmp - 1 ]; }); System . out . println ( IntStream . range ( 0 , i ). mapToObj ( n ->" a ["+ n +"] = "+ a [ n ]). collect ( Collectors . joining (","))); } 追記 は 自分 で どうぞ 。 
na _ ru _ hi _ zu さん queueSize と eventDelayLimit パラメタ の 指定 値 を 組み合わせれ ば ？ 和文 マニュアル を 読め ば 、 使い方 は 解る と 思い ます 。 http:// logback . qos . ch / manual / appenders _ ja . html 
これ と 同じ か な 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 16201728 ... 
ザックリ 捉える とき に 使い ます 。 例えば 、 厳密 に いえ ば 「 ハンバーガー 」 だ けど 、 ザックリ いえ ば 「 ファーストフード 」 だ よ ね 厳密 に いえ ば 「 ヒーロー 」 だ けど 、 ザックリ いえ ば 「 キャラクター 」 だ よ ね って 感じ です 。 どれ も 嘘 で は ない です よ ね 。 こんな 感じ で 、 「 厳密 に は 違う けれど 大体 似 て いる もの 」 を 「 同じ よう な もの 」 として 扱う の です 。 同じ もの として 扱う と 、 ソース の 量 の 削減 に も つながり ます 。 
現在 の Xcode は Java 非 対応 です 。 拡張子 を 変え た として も コンパイル 等 は でき ませ ん 。 
n ビット 符号 無し 整数 2 ^ n 種類 の パターン が ある ので 0 から 2 ^ n - 1 まで の 自然数 + 0 を 表せ ます 。 符号 付き で は 、 ( 1 )- 0 = 0 ( 2 ) 1 <= m <= 2 ^( n - 1 )- 1 に対し - m = 2 ^ n - m ( 3 )- 2 ^( n - 1 )= 2 ^( n - 1 ) と し ます 。 通常 2 ^( n - 1 ) は 2 ^( n - 1 )+ 1 =-( 2 ^( n - 1 )- 1 ) より 一つ 小さい もの と さ れ ます 。 n = 16 の 場合 正の数 は 1 から 2 ^ 15 - 1 = 32767 対応 する 負 の 数 は - 32767 から - 1 2 ^ 15 は - 32767 より 一つ 小さい - 32768 と 考え ます 。 よって - 32768 から 32767 まで の 整数 が 扱え ます 。 
この 回答 は Java 利用 で は ない ので 、 見当 はずれ でし たら 無視 し て ください 。 UWSC という ソフト が あり まし て 、 スクリプト によって キー や マウス など を 自動 で 入力 さ せる など の 、 操作 の 自動化 を 行なう こと が でき ます 。 UWSC http:// www . uwsc . info / 
① 2 で 割っ た あまり が 0 か 1 か 判定 。 if ( n % 2 = 0 ){「 偶数 」} else {「 奇数 」} ② n 回 繰り返し 、 1 ～ n まで 順に 掛け算 for ( i = 1 ; i <= n ; i ++){ m = m * n ;} ※ m は 1 で 初期 化 し て おく 。 ③ 予算 を 超える まで 足し 続ける while ( n < 予算 ){ n = n + 入力 値 } 
これ と 同じ 質問 か な 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1216201940 ... 
以下 の 2つ だ と 思い ます 。 JFrame で FlowLayout を 指定 する 。 例 ： 「 setLayout ( new FlowLayout ());」 JPanel で setPreferredSize メソッド を 使用 する 。 例 ： panel 1 .s etPreferredSize ( new Dimension ( 200 , 100 )); サンプル （ パネル 2つ とも 表示 ） public class Yahooq 10162640095 extends JFrame { public static void main ( String [] args ) { new Yahooq 10162640095 (). init (); } public void init () { setLayout ( new FlowLayout ()); JPanel panel 1 = new JPanel (); panel 1 .s etPreferredSize ( new Dimension ( 200 , 100 )); panel 1 .s etBorder ( new BevelBorder ( BevelBorder . RAISED )); panel 1 .s etLayout ( null ); panel 1 .s etVisible ( true ); this . add ( panel 1 ); JPanel panel 2 = new JPanel (); panel 2 .s etPreferredSize ( new Dimension ( 200 , 100 )); panel 2 .s etBorder ( new BevelBorder ( BevelBorder . RAISED )); panel 2 .s etLayout ( null ); panel 2 .s etVisible ( true ); this . add ( panel 2 ); setDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); setTitle (" test "); setSize ( 400 , 400 ); setResizable ( false ); setLocationRelativeTo ( null ); setVisible ( true ); } } 
共通 化 と いう より も 、 抽象化 という 方 が 正確 です ね 。 抽象 的 に 洗濯 物 を 扱う の か 、 具体 的 に タオル の 洗濯 物 を 扱う か 、 各 処理 によって 関心事 が 違い ます よ ね ？ そういう 時 に 使い ます 。 洗濯 物 は 洗濯機 に 放り込む まで は 、 タオル な の か シャツ な の か 、 クリーニング 屋 さん なら タオル と シャツ で は 単価 が 違う でしょ う し 、 受付 から 関心 が あり ます が 、 洗濯機 に 放り込ん だら 、 タオル も シャツ も 関係 無く 洗濯 物 です よ ね 。 でも 洗濯 物 は 処理 さ れる 側 な ので 、 あまり インターフェース を 組み込み ませ ん 。 処理 さ れる 側 は あまり 振る舞い を 持た ない ので Bean の レベル の 実装 で 足り て しまう と 思い ます 。 洗濯 物 Bean に 種類 を 表す 要素 を 持た せれ ば 良い という こと です 。 組み込む と し たら 、 洗濯機 側 に 洗う メソッド や 脱水 メソッド 、 乾燥 メソッド を 持た せる でしょ う 。 乾燥 に 対応 し て い ない 洗濯機 なら 乾燥 メソッド を 呼ば れ た 時 に サポート 対処 外 として 例外 を 投げれ ば 良い でしょ う 。 抽象化 に 良く ある 例え で 、 「 四つ 足 で ブー と 鳴い たら 、 それ は 鳥 で は なく て 豚 だ 」 とか 、 そんな 説明 が あり ます が 、 「 洗う 、 脱水 、 乾燥 が でき たら 洗濯機 だ 」 という こと でしょ う か 。 java は オブジェクト の 関係 を プログラム する 言語 です が 、 インターフェース は 、 その 名 の 通り オブジェクト の 間 を 取り持つ から インターフェース と 呼ば れ て い ます 。 メソッド の 引数 や 戻り値 に インターフェース で 型 指定 する こと で 、 扱う 洗濯機 が タオル 専用 か シャツ 専用 か しり ませ ん が 、 洗濯機 として 扱う こと が できる の です 。 店舗 が 持っ て いる 洗濯機 を 取得 する とき は 、 List < 洗濯機 > 洗濯機 一覧 = 店舗 . get 洗濯機 (); と 書き たい わけ です よ 。 この 様に 関心 事 の レベル 、 処理 が 論じ て いる レベル が 抽象 的 な もの を 扱い たい 時 に 使い ます 。 コード が 短く なる の は 、 その 作用 の 結果 で 、 共通 化 は 、 先 の 豚 の 例 の 様に 、 最初 から そういう 物 ( 型 ) を 扱う の です から 当然 です 。 インターフェース は 型 の 定義 です から ね 。 質問 2 は 、 単純 に ゲーム の 進行 を 保持 し て いる PARM クラス が あっ て public int game _ state の 要素 を 持っ て いる だけ でしょ う 。 
やり直せ 、 、 、 、 、 、 、 、 、 、 、 、 
static に し て いる から です 。 static String Name ; static double Score ; ↓ String Name ; double Score ; 
一 例 です が 、 「 引数 の 数 が 合わ ない 場合 」 が 「 引数 の 数 が 足り ない 場合 」 です 。 package test 20160807 ; public class Yahooq 14162619234 { private static final String ERR _ MS G1 = " 値 Ａ 、 Ｂ と 演算子 (+-*/) を 指定 し て ください "; private static final String ERR _ MS G2 = " 値 Ａ 、 Ｂ に は 数字 を 指定 し て ください "; public static void main ( String [] args ) { int A = 0 ; int B = 0 ; char ope = 0 ; try { // 引数 受け取り A = Integer . parseInt ( args [ 0 ]); B = Integer . parseInt ( args [ 1 ]); ope = args [ 2 ]. charAt ( 0 ); } catch ( A rr a y IndexOutOfBoundsException e ) { System . out . println ( ERR _ MS G1 ); return ; } catch ( NumberFormatException e ) { System . out . println ( ERR _ MS G2 ); return ; } if (! checkOpe ( ope )) { System . out . println ( ERR _ MS G1 ); return ; } // 計算 結果 System . out . println ( calc ( A , B , ope )); } private static boolean checkOpe ( char ope ) { return ope == '+' || ope == '-' || ope == '/'; } private static int calc ( int a , int b , char ope ) { int res = 0 ; switch ( ope ) { case '+': res = a + b ; break ; case '-': res = a - b ; break ; case '/': res = a / b ; break ; } return res ; } } 
■ null で 初期化 について FileWriter fw ; の まま だ と 、 finally の 箇所 で 以下 の エラー が 出 ます 。 「 ローカル 変数 fw が 初期 化 さ れ て い ない 可能性 が あり ます 」 ローカル 変数 を 初期化 し ない と コンパイル エラー です 。 （ フィールド は 初期化 は 自動 です 。 ） で は 最初 から 「 FileWriter fw = new FileWriter ("");」 と 書け ば 良い と 思わ れ ます が 、 そうすると 今度 は try で 囲ま なけれ ば いけ ませ ん 。 しかし 、 try の 中 で 変数 宣言 し て しまう と 、 finally の 方 で 「 fw を 変数 に 解決 でき ませ ん 」 という エラー が 出 ます 。 ■ 1回 目 の 「 != null 」 null に対して メソッド を 呼ぶ と 例外 が 発生 する ため に 必要 です 。 finally 句 は 常に 実行 さ れる ため 、 null チェック し て ます 。 ■ 2回 目 の 「 != null 」 何故 あるかな ・ ・ ・ 不要 だ と 思い ます 。 
Windows でし たら 、 通常 は c :\ Program Files \ Java \ jdk 1 . x . x _ xx \ bin （ x は インストール し た バージョン によって 違う ） か 、 c :\ Program Files ( x86 )\ Java \ jdk 1 . x . x _ xx \ bin に ある と 思い ます 。 ない 場合 は 、 インストール 時 に 別 の 場所 に インストール し た か 、 そもそも JDK を インストール し て い ない か です 。 ※ 注意 点 64 bitOS の 場合 に 、 32 bit 版 Java （ JDK ） を インストール する と 、 Program Files ( x86 ) に インストール さ れ ます 。 64 bit 版 を インストール し た 場合 は 、 c :\ Program Files の 下 です 。 Eclipse の 場合 http:// mergedoc . osdn .jp / の フル パッケージ を ダウンロード し た 場合 は 、 JDK も つい て い ます 。 圧縮 ファイル を 解凍 する と 、 JDK という フォルダ が ある と 思い ます ので 、 確認 し て ください 。 
どこ も かしこ も 。 原則 、 新しい バージョン は 古い バージョン を 擁護 し て い ます 。 
おそらく 、 PATH が 設定 でき て い ない の が 原因 と 思わ れ ます 。 「 java . exe 」 が 「 C :\ java \ bin 」 に インストール さ れ て いる 場合 を 例 に する と 、 以下 の よう に startup _ config . ini を 修正 する こと で PATH が 追加 できる はず です 。 （ ★ 部分 が 追加 箇所 ） [ Process Variable ] < 省略 > PATH = PATH = % PATH %;% EMACS _ DIR %\ bin PATH = % PATH %;% LOCAL _ DIR %\ bin PATH = % PATH %;% CYGWIN _ DIR %\ bin PATH = % PATH %;% ROOT _ DIR %\ app \ script PATH = % PATH %;% ROOT _ DIR %\ app \ vim PATH = % PATH %;% windir %\ system 32 ;% windir %;% windir %\ system 32 \ Wbem PATH = % PATH %;% WINDIR %\ System 32 \ WindowsPowerShell \ v 1 . 0 ★ PATH = % PATH %; C :\ java \ bin 
小さい し ぼけ てる し エラーログ 貼っ て くれ ない と どうにも なら ない よ 
メイン メソッド の 開始 は 、 下記 です 。 public static void main ( String [] args ){ 引数 は 、 String [] args です 。 但し 、 この プログラム が 間違っ て い ない か どう か 。 疑問 が あり ます 。 
画像 が 読め ませ ん 。 撮り 直す か 、 ソース を 打っ て ください 。 で ない と 、 回答 でき ませ ん 。 
同じ です 。 プログラム を 実行 する だけ なら JRE で OK 。 プログラミング を 行う なら JDK が 要る 。 
public void Num () これ は コンストラクタ で は あり ませ ん 。 戻り値 ( void ) が ある ので 普通 の メソッド です 。 
java で web アプリケーション を 作る ため の ライブラリ 。 
公開 さ れ て いる 串 など 、 サーバー を 運営 し て いる 側 から すれ ば 迷惑 な 接続 元 以外 の 何 物 で も ない 。 だから 接続 拒否 する 場合 が 多い ぞ 。 
一 例 です 。 package test 20160807 ; public class Yahooq 11162618551 { private static final String ST R1 = " プログラム "; private static final String ST R2 = " プロシージャ "; private static final String ST R3 = " logfile "; private static final String STR 4 = " キログラム "; public static void main ( String [] args ) { String pattern = ".*( ログ | log ).*$"; String [] inputs = { ST R1 , ST R2 , ST R3 , STR 4 }; for ( String input : inputs ) { if ( input . matches ( pattern )) { System . out . println ( input ); } } } } 
一 例 です 。 package test 20160807 ; public class Yahooq 11162618421 { private static final String ST R1 = " Chocola te "; private static final String ST R2 = " chocolate "; private static final String ST R3 = " CHOCOLATE "; public static void main ( String [] args ) { String pattern = "[ cC ] hocolate "; String [] inputs = { ST R1 , ST R2 , ST R3 }; for ( String input : inputs ) { if ( input . matches ( pattern )) { System . out . println ( input ); } } } } 
一 例 です 。 package test 20160807 ; public class Yahooq 14162618304 { private static final String ST R1 = " プログラム は 簡単 "; private static final String ST R2 = " プログラム は 難し そう "; private static final String ST R3 = " プロシージャ は 難し そう だ が 本当は 簡単 "; public static void main ( String [] args ) { String pattern = String . format ("^(% s |% s )$", ST R1 , ST R2 ); String [] inputs = { ST R1 , ST R2 , ST R3 }; for ( String input : inputs ) { if ( input . matches ( pattern )) { System . out . println ( input ); } } } } 
一 例 です 。 package test 20160806 ; public class Yahooq 12162603172 { public static void main ( String [] args ) { String pattern = "^ チョコレ [ ー ]+ ト $"; String [] inputs = { " チョコレト ", " チョコレート ", " チョコレーーーーート ", " チョコレーート " }; for ( String input : inputs ) { if ( input . matches ( pattern )) { System . out . println ( input ); } } } } 
一 例 です 。 package test 20160806 ; public class Yahooq 13162600588 { public static void main ( String [] args ) { String pattern = "^.* ラム $"; String [] inputs = { " プログラム ", " キログラム ", " プロシージャ " }; for ( String input : inputs ) { if ( input . matches ( pattern )) { System . out . println ( input ); } } } } 
一 例 です 。 package test 20160806 ; public class Yahoo { public static void main ( String [] args ) { String pattern = "^( おかき | お きく | おばけ )$"; String input = " お きく "; if ( input . matches ( pattern )) { System . out . println ( input ); } } } 
java は アプリケーションサーバー で 動く ので 、 一度 作っ た イス タンス は アプリケーションサーバー を 落とす まで 保持 できる の です が 、 php は 通信 単位 で インスタンス を 作る ので 、 ロガー です と 最初 に インスタンス を 作っ て 、 その 通信 の 処理 中 は 、 その インスタンス を 使う よう に し た 方 が 良 さ そう です 。 ロガー は 、 どの クラス の ログ か ？ を 意識 さ れ ます か ？ log4php の よう に 、 ログ 対象 の クラス を 意識 する 。 ログ 出力 先 を 複数 定義 できる など 、 高 機能 な もの でし たら 、 基本 は シングルトンパターン です が 、 ファクトリー パターン など も 組み合わせ て インスタンス コントロール を さ れ たら よい でしょ う 。 log4php を 参考 に し て み て は どう です か ？ 
java ファイル が jar の 中 に ある なら eclipse の jar 追加 の ところ で ソース の 追加 という ところ で 同じ jar ファイル を 指定 する 必要 が あり ます 。 jar 内 に java ファイル が ない 場合 は 逆 コンパイル が 必要 です 
System . out . printf (" 解 は (% d -√% d )/% d ", (- b ), D , ( 2 * a )); で 表示 でき ます 。 
一 例 です 。 public class Yahooq 14162539114 { public static void main ( String [] args ) { String s = " 123456789 "; System . out . println ( s .s ubstring ( 0 , 3 ) + "," + s .s ubstring ( 3 , 6 ) + "," + s .s ubstring ( 6 ) + " 円 " ); } } 
一 例 です 。 package test 20160805 ; public class Yahooq 12162538532 { public static void main ( String [] args ) { String s = " 20000401 "; int m = Integer . parseInt ( s .s ubstring ( 4 , 6 )); int d = Integer . parseInt ( s .s ubstring ( 6 )); System . out . println ( m + " 月 " + d + " 日 "); } } 
一 例 です 。 -- package test 20160804 ; public class Yahooq 14162537994 { public static void main ( String [] args ) { StringBuffer sb = new StringBuffer (); sb . append ( args [ 0 ]); sb . append (" "); sb . append ( args [ 1 ]); System . out . println (" こんにちは 、 " + sb . to String () + " 様 "); } } 
一 例 です 。 -- package test 20160804 ; import java . util .S canner ; public class Yahooq 12162537717 { private static final String MY _ NAME = " name "; public static void main ( String [] args ) { Scanner scanner = new Scanner ( System . in ); String s = scanner . next (); scanner . close (); if ( s . contains ( MY _ NAME )) { System . out . println (" こんにちは 、 " + MY _ NAME + " さん "); } else { System . out . println (" こんにちは 、 別人 さん "); } } } 
一 例 です 。 -- package test 20160804 ; import java . text .S impleDateFormat ; import java . util . Calendar ; public class Yahooq 12162537292 { public static void main ( String [] args ) { // 表示 フォーマット SimpleDateFormat sdf = new SimpleDateFormat (" aH 時 m 分 "); // 現在 Calendar calendar = Calendar . getInstance (); System . out . println (" 現在 の 時刻 は " + sdf . format ( calendar . getTime ()) + " です 。 "); // 30 分 後 は calendar . add ( Calendar . MINUTE , 30 ); System . out . println (" 30 分 後 は " + sdf . format ( calendar . getTime ()) + " です 。 "); // 15時間 後 calendar = Calendar . getInstance (); calendar . add ( Calendar . HOUR , 15 ); System . out . println (" 15時間 後 は " + sdf . format ( calendar . getTime ()) + " です 。 "); } } 
サンプル です 。 package test 20160803 ; import java . util . Random ; public class Yahooq 13162492883 { public static void main ( String [] args ) { // 0 ～ 100 まで の 乱数 を 取得 Random random = new Random (); int randomValue = 0 ; // 5回 繰り返し for ( int i = 1 ; i <= 5 ; i ++) { randomValue = random . nextInt ( 101 ); System . out . println ( i + " 回 目 の 乱数 ：" + randomValue ); showDivisor ( randomValue ); } } private static void showDivisor ( int n ) { // 約数 の 表示 処理 for ( int i = 1 ; i <= n ; i ++) { if ( n % i == 0 ) { System . out . println (" 約数 ：" + i ); } } } } 
サンプル です 。 package test 20160803 ; public class Yahooq 12162492562 { public static void main ( String [] args ) { showMsg (" Hello ."); } private static void showMsg ( String str ) { System . out . println ( str ); } } 
サンプル です 。 package test 20160803 ; public class Yahooq 10162492430 { public static void main ( String [] args ) { String s = join ( 2016 , " 年 "); System . out . println ( s ); } private static String join ( int value , String str ) { return value + str ; } } 
サンプル です 。 package test 20160803 ; public class Yahooq 11162492241 { public static void main ( String [] args ) { showName (); } private static void showName () { System . out . println (" familyName firstName "); } } 
サーバービュー の 設定 と tomcat プラグイン は 別物 で 設定 も 別 だ から です 。 ぶっちゃけ 両方 入っ て いる と 設定 違い で 動作 し なく なっ たり 思わ ぬ 動作 を し たり する ため 、 今 は tomcat プラグイン を 入れ ず に 詳細 な 設定 が 簡単 に できる サーバービュー 側 だけ で 制御 する の が 通常 です 。 
shanyangoat 511 さん プログラム の 学習 は 、 例題 を 1 個 、 動作 確認 し たら 、 少し 変更 し た 応用 を 書く 。 野球 の キャッチボール の よう に 、 練習 し て 、 身 に つける 。 
Tomcat を 起動 し た 状態 で Eclipse を 強制終了 し た 場合 、 Tomcat が まだ 生き て いる 場合 が あり ます 。 その 状態 で 、 再度 Eclipse を 起動 し て Tomcat に 接続 しよ う と する と エラー に なり ます 。 （ 同じ 経験 あり ） です ので 、 いったん Eclipse を 終了 さ せ 、 タスクマネージャー を 起動 し 、 JVM プロセス を 終了 さ せ て み て ください 。 
文字 A ＋ 文字 １ ＋ 文字 ６ な ので A １ ６ と 表示 さ れ ます A 7 と 表示 し たい なら 以下 の よう に カッコ で くくり ます String b4 = " A " + ( 1 + 6 ); 
Java の 道 http:// www . javaroad .jp / Java 関連 の 基本 から 色々 な 処理 の 方法 あり ます Java 8 API 使用 https :// docs . oracle . com / javase / jp / 8 / docs / ap i/o verview - summary . html Java の 各 クラス の マニュアル 。 必須 です 。 
ほか の 回答 の 返信 も 読み まし た 。 まず 、 int i month = scanner . nextInt (); の 部分 。 int i , month = ...; という 風 に 変数 と 変数 の 間 に "," を 置く か 、 int i ; int month = ...; という 風 に 分離 する か 。 次に 、 ブロック レベル で 見る と 、 開始 ブロック : 3 終了 ブロック : 2 本来 は 1 : 1 、 今回 は 3 ： 3 に なっ て い なけれ ば なり ませ ん 。 開始 ブロック "{" と 終了 ブロック "}" で ひとつ の ブロック 。 
作っ た ソースコード を 載せ ましょ う 。 
エラー に は なら ない でしょ う が 、 バグ で ある の は 確か です ね 。 実行 の 仕方 によって は 、 全く 無駄 な 処理 と ロスタイム です から ね 。 
実行 可能 Jar を ダブルクリック で 起動 し た 場合 、 標準出力 と 標準エラー出力 へ の 出力 は 破棄 さ れ ます 。 例外 や エラー は 発生 し ませ ん 。 ただし 、 標準入力 を 使用 する と 、 例外 が 発生 し ます 。 コマンドライン から 実行 可能 Jar を 実行 し た 場合 は 、 通常 と 同じ よう に 標準 入出力 が 使え ます 。 
やり たい こと は 以下 の よう な 感じ でしょ う か ？ package test 20160722 ; import java . awt . Color ; import java . awt . Graphics ; import java . awt . Graphics 2D ; import javax .s wing . JApplet ; public class mo ir e2 extends JApplet { public void paint ( Graphics g ) { Graphics 2D g2 = ( Graphics 2D ) g ; // 全体 を 白 で 塗る g2 .s etColor ( Color . white ); g2 . fillRect ( 0 , 0 , 1500 , 1500 ); // 模様 を 描画 drawLines ( g2 ); // 30度 回転 さ せ て 模様 を 描画 g2 . rotate ( 30 * Math . PI / 180 ); drawLines ( g2 ); } private void drawLines ( Graphics 2D g ) { int i = 0 , x = 0 , w = 10 ; g .s etColor ( Color . black ); while ( x < 1500 ) { if ( i % 2 == 0 ) g . fillRect ( x , 0 , w , 1400 ); x += w ; i ++; } } } 以下 を 参考 に し まし た 。 http:// www . javadrive .jp / java 2d / affine / in de x4 . html 
jar という の は 単に 固め た 形式 ( 実態 は zip ) で あっ て 、 動作 環境 と は 関係 あり ませ ん 。 System . out が 使える 環境 なら 動く でしょ う し 、 そう で なけれ ば エラー に なっ たり 無視 さ れ たり する でしょ う 。 
最初 の if 文 が 分かれ ば 、 残り も わかる と 思い ます 。 以下 の 図 で i , j , k で 左側に 大きな 数字 を 入れる 操作 です 。 変数 temp は 一時的 に 入れ て おく 箱 です 。 [ i ] [ j ] [ k ] [ temp ] 1 2 3 j > i を 判定 temp に j を いれる [ i ] [ j ] [ k ] [ temp ] 1 2 3 2 j に i を いれる [ i ] [ j ] [ k ] [ temp ] 1 1 3 2 i に temp を いれる [ i ] [ j ] [ k ] [ temp ] 2 1 3 2 
Editprofile で java の 位置 を 確認 し java . exe の 場所 を 確認 し て 見 て ください おそらく 同 一 フォルダ の javaw . exe が 設定 さ れ て いる と 思い ます ので 其方 を java . exe に 変更 し て 頂けれ ば 動作 する と 思い ます 
this は インスタンス 自身 を 表し ます 。 この 場合 、 ButtonsEvents の インスタンス です 。 
「 ソースコード 」 と は 、 人間 が 書い た （ 正確 に は 入力 し た ） 文字列 です 。 文字列 の 形態 （ 種類 、 ルール ） が 「 プログラム 言語 」 です か ね 。 普通に 人間 が 話す 言葉 に も 日本語 や 英語 が ある よう に 、 プログラム 言語 に も 様々 な 種類 が あり ます 。 Java は Java という 「 プログラム 言語 」 です 。 「 ソース プログラム 」 って 言葉 は 聞い た こと ない です が （ ググっ て も 出 て こ ない ） ソースコード の 間違い で は ない か と 思い ます 。 で 、 コンパイル と は 。 コンピュータ は 、 と いう か 機械 は 、 最終 的 に 「 言語 」 を 理解 し ませ ん 。 物理 的 に でき ない という か 。 最終 的 に 、 電気信号 のみ が 、 機械 が 「 理解 できる こと 」 です 。 すなわち 、 電気 が 通っ て いる 、 通っ て いない の 2 種類 だけ です 。 通電 し て いる の を 1 通電 し て い ない の を 0 として 、 二進法 で 何 か 複雑 な 「 意味 」 を 解する 方法 を マシン語 、 と いい ます が 、 「 プログラム 言語 」 として 「 コンピュータ 」 が 本当 の 意味 で 理解 できる の は マシン語 だけ です 。 ところが 、 マシン語 を 人間 が 「 書く 」 の は ・ ・ ・ 不可能 で は ない です が シンドイ です よ ね 。 人間 が 書く 、 普通 の ？ プログラム 言語 を 、 マシン語 に 変換 する 作業 を 「 コンパイル 」 と いい ます 。 中間 コード 、 と は ・ ・ ・ 中間 コード は 、 文法 チェック や 構文解析 など が 処理 済み で 、 ソースコード より は コンピューター が 直接 実行 できる 形式 に 近い コード の こと を 指す 。 たとえば Java で は 、 ソースコード を バイトコード と 呼ば れる 中間 コード に 変換 し 、 クライアント は Java VM （ Virtual Machine ） で これ を 実行 する 。 だそう です 。 ちなみに 、 PHP なんか は 普通 は コンパイル し ませ ん 。 サーバ が 勝手 に 「 コンパイル しながら 」 実行 し て くれる から です 。 ゆえに 、 PHP は パフォーマンス に 劣る ・ ・ ・ と 言わ れ て い ます が 、 その 気 に なれ ば コンパイル でき ちゃ い ます んで 、 それ を もっ て PHP は 劣っ て いる という の は 不当 な 言いがかり ・ ・ ・ です か ね 。 脱線 し て ます けど 。 
> その 範囲 に 入る と 、 大量 の 画面 が 表示 さ れ ます requestLocationUpdates で 呼ば れ すぎ て いる だけ でしょ う minDistance の 設定 を 変え たり フラグ で 範囲 内 に 入る と 出る まで 表示 は １ 回 のみ など と すれ ば よい の で は 参考 ： https :// akira - watson . com / android / gps . html # requestLocationUpdates 
その 画像 が java アプレット を 使っ た もの なら 、 chrome で は 表示 さ れ ませ ん 。 Firefox なら 表示 さ れる かも しれ ませ ん 。 
javax . script の jar ファイル を lib フォルダ に いれ まし た か ？ 
＞ LinearLayout の 上 に 縦長 の ViewFlipper を 横 に 並べ て のせ こう いっ た 動き を し たい の で あれ ば 、 LineaLayout など は 不 適格 でしょ う Canvas で 位置 を pixel 単位 で 変える よう に する 方 が 目的 の 動き に 近く できる と 思い ます 。 参考 ： https :// akira - watson . com / android / canvas - bitmap . html 
コマンドライン 上 で javac を 使用 し て い ます か ？ メモ帳 が 開く という こと は 、 windows の エクスプローラー で ダブルクリック なり し て いる よう に 見える ん です が 。 
あなた は あの 殺人鬼 と 同類 な の です か ？ 同じ 障害者 として 看過 でき ませ ん ね 。 あと 、 パーソナリティ障害 という 言葉 を ご存知 です か ？ あなた から は そんな 雰囲気 が 感じ取れ ます 。 
menyus は 2次元 配列 で は あり ませ ん か ？ 2次元 配列 に [] を 1つ つける と 1次元 配列 に なり ます 。 文字列 型 に する に は 、 さらに 1つ [] を つけ なく て は いけ ませ ん 。 
あせら ず とも 、 実際 に 業務 に 入ら れ て 、 ２ ～ ３ 年 ほど 実務 を 経験 すれ ば 、 おのずと 解決 さ れる 疑問 だ と 思い ます 。 その 心意気 は 素晴らしい ので 、 「 初心 」 を 忘れ ず に お仕事 に 入っ て いき ましょ う 。 
chielien _ 838 d6 7 a8 cf 96 d3 11 e 185 f1 84 さん 囲碁 ・ 将棋 ・ スポーツ ・ Java 学び 方 は 同じ です 。 まね を する 。 自作 で 、 試す 。 エラー から 学ぶ こと が 多い 。 
・ 条件 分岐 if (){ //() 内 が true の とき に 実行 } else { //() 内 が false の とき に 実行 } これ を 使い ます 。 ( else や波 括弧 は 省略 でき ます 。 ) ・ 条件 0 を 下回る or 100 を 上回る 場合 k < 0 || k > 100 0 を 下回ら ない and 100 を 上回ら ない k >= 0 && k <= 100 ・ エラー 出力 エラー の 文 を 出力 する だけ なら System . err . print (" 0 ～ 100 の 数値 を 入力 し て ください 。 "); エラー の 文 を 出力 し つつ 、 実際 に エラー を 発生 さ せ て プログラム を 終了 さ せる なら throw new ArithmeticException (" 0 ~ 100 以外 の 数値 が 入力 さ れ まし た 。 "); 一 例 として これら を 組み合わせる と 、 if ( k < 0 || k > 100 ) throw new ArithmeticException (" 0 ~ 100 以外 の 数値 が 入力 さ れ まし た 。 "); こんな 感じ に なり ます 。 k に 値 を 代入 し た 直後 に 判定 し ましょ う 。 
元 の 値 の 箱 (A) 、 割っ た 値 を 入れる 箱 ( B )、 余り を 入れる 箱 ( C ) を 用意 し て 、 元 の 値 を ８ で 割る → B 元 の 値 から B を 引く → C 元 の 値 を ８ で 割る → A って の を 元 の 値 の 箱 が ７ 以下 に なる まで 繰り返す 。 こんな 感じ か な ？ たぶん 、 スタック は 余り の 箱 だけ で いい と 思う 。 計算 結果 は 、 余り の スタック を 出し て いけ ば 良い 。 CASL で 文字 が 連結 できる なら 、 余り を 左 づめで 連結 し て いけ ば 、 最後 に ７ 以下 の 値 を 連結 し たら 、 答え が すんなり 表示 できる ね 。 この 辺 は 、 現役 さん 頑張っ て ください 。 
public class Main { public static void main ( String [] args ) throws Exception { String strComputerA = " Windows "; System . out . println ( strComputerA ); strComputerA = " Mac "; System . out . println ( strComputerA ); String strComputerB = " Linux "; System . out . println ( strComputerB ); strComputerB = strComputerA ; System . out . println ( strComputerB ); } } 
一 例 です 。 -- package test 20160804 ; import java . text .S impleDateFormat ; import java . util . Calendar ; public class Yahooq 11162536576 { public static void main ( String [] args ) { // 表示 フォーマット SimpleDateFormat sdf = new SimpleDateFormat (" MM 月 dd 日 "); // 現在 Calendar calendar = Calendar . getInstance (); System . out . println (" 今日 は " + sdf . format ( calendar . getTime ()) + " です 。 "); // 1 週間 後 calendar . add ( Calendar . DAY _ OF _ MONTH , 7 ); System . out . println (" 1 週間 後 は " + sdf . format ( calendar . getTime ()) + " です 。 "); // 1 か月 後 calendar = Calendar . getInstance (); calendar . add ( Calendar . MONTH , 1 ); System . out . println (" 1 か月 後 は " + sdf . format ( calendar . getTime ()) + " です 。 "); } } 
一 例 です 。 定数 名 は 適当 です 。 -- package test 20160804 ; import java . util . Random ; public class Yahooq 12162535702 { private static final int PASS _ LOWER _ LIMIT = 60 ; private static final int PASS _ GOOD _ LOWER _ LIMIT = 80 ; private static final int NOT _ PASS _ BAD _ LOWER _ LIMIT = 40 ; public static void main ( String [] args ) { // 0 ～ 100 まで の 乱数 Random random = new Random (); int point = random . nextInt ( 101 ); if ( PASS _ LOWER _ LIMIT <= point ) { System . out . println (" 合格 です "); if ( PASS _ GOOD _ LOWER _ LIMIT <= point ) { System . out . println (" 大変 よく でき まし た "); } } else { System . out . println (" 不 合格 です "); if ( point <= NOT _ PASS _ BAD _ LOWER _ LIMIT ) { System . out . println (" もっと 頑張り ましょ う "); } } } } 
一 例 です 。 -- package test 20160804 . q10 162535280 ; public class Calc { public static int getPlus ( int X , int Y ) { return X + Y ; } public static double getPlus ( double X , double Y ) { return X + Y ; } public static int getMinus ( int X , int Y ) { return X - Y ; } public static double getMinus ( double X , double Y ) { return X - Y ; } public static int getMult ( int X , int Y ) { return X * Y ; } public static double getMult ( double X , double Y ) { return X * Y ; } public static int getDiv ( int X , int Y ) { return X / Y ; } public static double getDiv ( double X , double Y ) { return X / Y ; } } -- package test 20160804 . q10 162535280 ; public class CalcTest { public static void main ( String [] args ) { int a = 32 , b = 8 ; System . out . println (" X+ Y =" + Calc . getPlus ( a , b )); System . out . println (" X - Y =" + Calc . getMinus ( a , b )); System . out . println (" X * Y =" + Calc . getMult ( a , b )); System . out . println (" X / Y =" + Calc . getDiv ( a , b )); double x = 46 . 82 , y = 4 . 28 ; System . out . println (" X+ Y =" + Calc . getPlus ( x , y )); System . out . println (" X - Y =" + Calc . getMinus ( x , y )); System . out . println (" X * Y =" + Calc . getMult ( x , y )); System . out . println (" X / Y =" + Calc . getDiv ( x , y )); } } 
一 例 です 。 -- package test 20160804 . q 11162534446 ; public class Staff { private String id ; private String name = " 未 登録 "; private String department = " 未 配属 "; public Staff ( String id ) { this . id = id ; } public Staff ( String id , String name ) { this . id = id ; this . name = name ; } public Staff ( String id , String name , String department ) { this . id = id ; this . name = name ; this . department = department ; } public void showId () { System . out . print (" 社員 番号 ：" + id ); } public void showName () { if ( name. equals (" 未 登録 ")) { System . out . print ( name ); } else { System . out . print (" 名前 ：" + name ); } } public void showDepartment () { if ( department . equals (" 未 配属 ")) { System . out . print ( department ); } else { System . out . print (" 部署 ：" + department ); } } } -- package test 20160804 . q 11162534446 ; public class StaffTest { public static void main ( String [] args ) { Staff sta ff1 = new Staff (" 0001 ", " 田上 ", " 営業部 "); Staff sta ff2 = new Staff (" 0002 ", " 五木 "); Staff sta ff3 = new Staff (" 0003 "); sta ff1 .s howId (); System . out . print (" "); sta ff1 .s howName (); System . out . print (" "); sta ff1 .s howDepartment (); System . out . println (); sta ff2 .s howId (); System . out . print (" "); sta ff2 .s howName (); System . out . print (" "); sta ff2 .s howDepartment (); System . out . println (); sta ff3 .s howId (); System . out . print (" "); sta ff3 .s howName (); System . out . print (" "); sta ff3 .s howDepartment (); } } 
一 例 です 。 -- package test 20160804 . q10 162533260 ; public class Staff { private String id ; private String name ; private String department = " 未 配属 "; public Staff ( String id , String name ) { this . id = id ; this . name = name ; } public Staff ( String id , String name , String department ) { this . id = id ; this . name = name ; this . department = department ; } public void show () { System . out . println (" 社員 番号 ：" + id + " 名前 ：" + name + " 部署 ：" + department ); } } -- package test 20160804 . q10 162533260 ; public class StaffTest { public static void main ( String [] args ) { Staff sta ff1 = new Staff (" 0001 ", " 田上 ", " 営業部 "); Staff sta ff2 = new Staff (" 0002 ", " 五木 "); Staff sta ff3 = new Staff (" 0003 ", " 山中 ", " 総務部 "); sta ff1 .s how (); sta ff2 .s how (); sta ff3 .s how (); } } 
コマンドライン や Eclipse で は 想定 通り に 動作 し ます 。 プログラム に は 問題 は なく NetBeans が 原因 です 。 NetBeans の 場合 は コンソール 部分 の コンポーネント に 入力 さ れ た 文字列 を System . in に 設定 さ れ て いる InputStream に 流し込む 際 に 、 プロジェクト に 設定 さ れ て いる 文字 エンコーディング で は なく 、 NetBeans 自体 を 起動 する 際 に 設定 さ れ た 文字 エンコーディング を 使っ て バイ ト列 に し て いる よう です 。 OS は Windows だ と 思い ます が 以下 の 3 通り の 解決 法 が あり ます 。 1 . Scanner インスタンス 生成 時 に 文字 エンコーディング を 指定 する 。 ( ハード コード に なり 、 別 の 環境 で 使え なく なる ので お 勧め でき ませ ん 。 ) Scanner in = new Scanner ( System . in , " Windows - 31 j "); 2 . プロジェクト の 文字コード を 変更 する プロジェクト を 右クリック し て プロパティ → ソース で エンコーディング に Shift_JIS を 設定 する 。 3 . netbeans . conf を 編集 し て UTF-8 を デフォルト に し て 起動 する よう に 設定 する 。 NetBeans を インストール し た ディレクトリ の etc に ある netbeans . conf を 以下 の 手順 で 編集 し ます 。 ・ NetBeans を 終了 さ せる 。 ・ メモ帳 を 管理者 として 実行 する 。 ・ netbeans . conf を 開く ( 改行 さ れ ず に 表示 さ れる かも ) ・ 念の為 、 すべて の 内容 を コピー し て おく 。 ・ netbeans _ default _ options の 設定 の 最後 に 半角 スペース に 続き - J - Dfile . encoding = UTF-8 を 加え 、 メニュー の ファイル から 上書き保存 する 。 私 の 環境 で は netbeans _ default _ options の 部分 は 以下 の 様に なっ て い ます 。 ( 改行 は ありません ) netbeans _ default _ options ="- J - client - J - Xss 2m - J - Xms 32m - J - Dapple . laf . useScreenMenuBar = true - J - Dapple . awt . graphics . UseQuartz = true - J - Dsun . java 2d . noddraw = true - J - Dsun . java 2d . dpiaware = true - J - Dsun .zip . disableMemoryMapping = true - J - Dfile . encoding = UTF-8 " この 設定 によって フォント の マッピング が 変更 さ れる かも しれ ませ ん 。 フォント の 設定 は メニュー の ツール → オプション → フォント と 色 構文 タブ で 言語 に すべて の 言語 を 選択 デフォルト を 選択 し て フォント の ... ボタン で 設定 でき ます 。 ( 私 の 場合 メイリオ 13 で 使っ て い ます 、 デフォルト は Monospaced 13 でし た ) 
一 例 です 。 名簿 クラス が どの よう な もの な の か 不明瞭 でし た ので 、 想像 で 作っ て み まし た 。 -- package test 20160804 . q 13162531978 ; public class Staff { public String id ; public String name ; public void show () { System . out . println (" 社員 番号 ：" + id + "、 名前 ：" + name ); } } -- package test 20160804 . q 13162531978 ; public class ListOfStaff { public Staff [] staffs ; public ListOfStaff () { staffs = new Staff [ 3 ]; staffs [ 0 ] = new Staff (); staffs [ 0 ]. id = " 0001 "; staffs [ 0 ]. name = " 名前 1 "; staffs [ 1 ] = new Staff (); staffs [ 1 ]. id = " 0002 "; staffs [ 1 ]. name = " 名前 2 "; staffs [ 2 ] = new Staff (); staffs [ 2 ]. id = " 0002 "; staffs [ 2 ]. name = " 名前 2 "; } } -- package test 20160804 . q 13162531978 ; public class ListOfStaffTest { public static void main ( String [] args ) { // 名簿 生成 ListOfStaff listOfStaff = new ListOfStaff (); // 表示 show ( listOfStaff ); } private static void show ( ListOfStaff listOfStaff ) { Staff [] staffs = listOfStaff .s taffs ; for ( int i = 0 ; i < sta ff s.l ength ; i ++) { staffs [ i ]. show (); } } } 
一 例 です 。 Calc が 計算 クラス 。 CalcTest が 実行 する クラス 。 -- package test 20160804 . q 13162532423 ; public class Calc { int X , Y ; public int getPlus () { return X + Y ; } public int getMinus () { return X - Y ; } public int getMult () { return X * Y ; } public int getDiv () { return X / Y ; } } -- package test 20160804 . q 13162532423 ; public class CalcTest { public static void main ( String [] args ) { Calc calc = new Calc (); calc . X = 10 ; calc . Y = 2 ; System . out . println (" X+ Y =" + calc . getPlus ()); System . out . println (" X - Y =" + calc . getMinus ()); System . out . println (" X * Y =" + calc . getMult ()); System . out . println (" X / Y =" + calc . getDiv ()); } } 
一 例 です 。 package test 20160804 ; public class Yahooq 11162528696 { public static void main ( String [] args ) { int A = 7 , B = 4 , C = 5 , D = 7 ; System . out . println (" 変数 A ： 変 数B = " + ( A > B )); System . out . println (" 変数 A ： 変 数B = " + ( A < B )); System . out . println (" 変 数B ： 変数 C = " + ( B <= C )); System . out . println (" 変 数B ： 変数 C = " + ( B >= C )); System . out . println (" 変数 A ： 変数 D = " + ( A == D )); System . out . println (" 変数 A ： 変数 D = " + ( A != D )); } } 
一 例 です 。 package test 20160804 ; public class Yahooq 13162529138 { public static void main ( String [] args ) { // 引数 が 3つ に 満た ない 場合 if ( arg s.l ength != 3 ) { System . out . println (" 値 A 、 B と 演算子 (+-/) を 指定 し て ください "); return ; } // 引数 受け取り int A = Integer . parseInt ( args [ 0 ]); int B = Integer . parseInt ( args [ 1 ]); char ope = args [ 2 ]. charAt ( 0 ); if (! checkOpe ( ope )) { System . out . println (" 値 A 、 B と 演算子 (+-/) を 指定 し て ください "); return ; } // 計算 結果 System . out . println ( calc ( A , B , ope )); } private static boolean checkOpe ( char ope ) { return ope == '+' || ope == '-' || ope == '/'; } private static int calc ( int a , int b , char ope ) { int res = 0 ; switch ( ope ) { case '+': res = a + b ; break ; case '-': res = a - b ; break ; case '/': res = a / b ; break ; } return res ; } } 
Staff . java を 作っ て 、 この クラス を 利用 する StaffTest . java を 作成 すれ ば よい と 思い ます 。 -- package test 20160804 . q 13162530488 ; public class Staff { public String id ; public String name ; public void show () { System . out . println (" 社員 番号 ：" + id + "、 名前 ：" + name ); } } -- package test 20160804 . q 13162530488 ; public class StaffTest { public static void main ( String [] args ) { Staff sta ff1 = new Staff (); sta ff1 . id = " 0001 "; sta ff1 . name = " 竹内 "; sta ff1 .s how (); Staff sta ff2 = new Staff (); sta ff2 . id = " 0002 "; sta ff2 . name = " 佐野 "; sta ff2 .s how (); } } -- 実行 は StaffTest で 行い ます 。 
私 は mod _ bw を 試し た こと は ありません が 、 見 て の 通り 、 httpd .s ervice の ジョブ に 失敗 し まし た 。 詳細 は 「 systemctl status httpd .s ervice 」 や 「 journalctl - xn 」 を 確認 し て ください 。 と 言わ れ て いる ので 、 指示 さ れ た 2つ の コマンド を 実行 し て 結果 を 書い て もらえ ませ ん か 。 
サンプル です 。 package test 20160803 ; public class Yahooq 11162451366 { public static void main ( String [] args ) { // 値 を 受け取る int a = Integer . parseInt ( args [ 0 ]); int b = Integer . parseInt ( args [ 1 ]); // 出力 System . out . println (" A + B =" + ( a + b )); System . out . println (" A - B =" + ( a - b )); System . out . println (" A * B =" + ( a * b )); System . out . println (" A / B =" + ( a / b )); } } 
サンプル です 。 package test 20160803 ; public class Yahooq 11162451631 { public static void main ( String [] args ) { // 値 を 受け取る double a = Double . parse Double ( args [ 0 ]); int b = Integer . parseInt ( args [ 1 ]); // 出力 System . out . println (" A + B =" + ( a + b )); System . out . println (" A - B =" + ( a - b )); System . out . println (" A * B =" + ( a * b )); System . out . println (" A / B =" + ( a / b )); } } 
サンプル です 。 package test 20160803 ; public class Yahooq 12162451822 { public static void main ( String [] args ) { // 値 を 受け取る int value = Integer . parseInt ( args [ 0 ]); // 出力 System . out . println (( byte ) value ); System . out . println (( short ) value ); System . out . println (( int ) value ); System . out . println (( long ) value ); System . out . println (( float ) value ); System . out . println (( double ) value ); } } 
package test 20160803 ; import java . util . Random ; public class Yahooq 13162452108 { public static void main ( String [] args ) { // 値 受け取り int valueA = Integer . parseInt ( args [ 0 ]); int valueB = Integer . parseInt ( args [ 1 ]); // 乱数 Random random = new Random (); int randomValue = random . nextInt ( valueA + 1 ); // 出力 System . out . println (" 比較 結果 = " + ( randomValue < valueB ) + " : 乱数 = " + randomValue ); } } 
http:// aidiary . hatena blog . com / entry / 20040918 / 1251373370 この サイト を 冒頭 から 読ん で 行き ましょ う 。 ゲーム アルゴリズム とともに Swing という GUI の 勉強 が でき ます 。 
＞ this . メンバ 名 この 場合 は this は 自分自身 の インスタンス を 示し ます 。 その ため 、 自分自身 の メンバ に アクセス する とき に 使い ます 。 なお 、 この とき の this は 、 後者 と は 関係 ない ので 注意 。 > this ( 引数 ) この 場合 は 自分自身 の コンストラクタ に アクセス する とき に 使い ます 。 この とき の this は 、 前者 と は 関係 ない ので 注意 。 
私 の 場合 は 、 1 . その 言語 の 最低限 の 書式 を 覚える 2 . 作り たい もの を イメージ 3 . ( なく て も いい が ) ( 忘れないよ うに ) ノート 等 に 絵 や 文字 で 表現 する 4 . 3 ( または 2 ) を 実際 に 作る 5 . わから ない こと が あれ ば サイト や 書籍 を 辞書 代わり に し て 調べる 6 . ５ で も わから なけれ ば 最終 手段 として 知恵袋 や その 手 の 掲示板 で 聞く ... といった 感じ 。 
「 public class MyWindow extends JFrame {」 で 初めて ます か ？ 可能性 として 「 extends JFrame 」 が 抜け て いる と 思い ます 。 
以下 で 試し まし た 。 自分 が 見 た 限り 大丈夫 そう です 。 １ . 複数 単語 検索 String [] searchWords = {" 寿司 ", " カレー "}; query .s etQuery ( String . join (" ", searchWords )); ２ . 改行 を 無くす System . out . println ("--"); System . out . println ( tweet . getText (). replace ("\ n ", "")); System . out . println ("--"); 
通常 の インポート 文 は クラス を インポート し ます 。 static インポート 文 は クラス の メンバ を インポート し ます 。 
public static void main ( String [] args ){ args は 、 上記 の とおり 、 String の 配列 と なっ て い ます 。 です ので 、 arg s.l ength で 配列 の 長さ （ 個数 ） が いくつ か ？ を 見 て い ます 。 そのうえで 、 if ( arg s.l ength != 1 ){ と し て いる ので 、 args の 中身 が １ じゃ ない 場合 は と 判断 し て い ます 。 String str = args [ 0 ]; は 、 配列 args の 0 番目 （ １ 個 目 ） の 値 を str に 代入 し て い ます 。 で 、 ここ で 、 知っ て おか なく て は いけ ない の が 、 public static void main ( String [] args ){ の args に は どの よう な 値 が はいっ て くる か です が 、 main メソッド は 、 実行 開始 時 に 呼ば れ 、 実行 時 に 指定 し て いる パラメータ （ コマンドライン パラメータ ） を args に 設定 し ます 。 です ので 、 > Java StrLngSwitch " ビール " と 実行 する と 、 args に は 、 args [ 0 ] = " ビール " が 入っ て き ます 。 > Java StrLngSwitch " ビール " " コーラ " と ２つ 指定 する と 、 args に は 、 args [ 0 ] = " ビール " args [ 1 ] = " コーラ " が 入っ て き ます 。 
個人的 に は 、 開発 環境 は 無料 で も 、 なんとかなる けど 、 「 サイト のみ だ と 、 時間 が かかり ＆ 全く 進ま ず 、 飽き て しまう 。 」 ケース が 多い か と 思い ます 。 1 ， 2 万 払う 覚悟 が ある ん なら 、 素直 に 本 を 買う の が いい と 思い ます が 。 まずは 、 RPG で は なく 、 初心者 向け の Android Java とか で 。 サイト なら ここ とか ？ http:// appdevmem . blogspot .jp / p / android - app . html google先生 で 、 「 Android Studio 初心者 」 で 、 検索 で 。 でも 、 犬小屋 さえ つくれ ない のに 、 いきなり 遊園地 を 作り たい ！ って 話 ですよ。 探し て も ない の は 、 そういう こと です 。 トンカチ や 金槌 を 知ら ない 人 に 、 遊園地 の 作り方 を 教える と なる と 、 果てしなく 時間 が かかる から ですよ。 
まず 、 １つ 目 の Error は 、 メッセージ を 見る 限り 、 JDK の Path が 通っ て ない 可能性 が あり ます 。 SecurityException の ほう は 、 私 も 初めて 見る Exception な ので 、 ソースコード 見 て み ない と 分から ない ので 、 JNI の コード を 含む 全 ソースコード を http:// paiza . io / に 上げ 、 URL を 教え て ください 。 外部 ファイル ( xml や json 等 ) はいり ませ ん 。 
table [ row 2 ][ col 2 ] = wally ; System . out . println ( table [ row 2 ][ col 2 ]); <- これ いら ない と 思い ます for ( int row = 0 ; row < 20 ; row ++ ){ 
インターネットエクスプローラー で Yahoo!JAPAN の 検索 画面 を ひらい て インターネットエクスプローラー 右 上 の 歯車 アイコン ( ツール ) から インター ネットオプション の 全般 の ホームページ で 白 枠 の 下 の 現在 の ページ を 使用 する を クリック し て 一番 下 の 適用 を クリック し て OK ボタン を クリック で 終わり です 
[ インスタンス ].. getText () で 取得 できる と 思い ます 。 
if 文書 くと 汚く なる ので ランク の 値 が 代入 さ れ た 変数 r を 宣言 し ます 。 int 型 で 、 S の とき 1 , A の とき 2 みたい な 感じ です 。 switch ( r ) { case 0 : // S の とき break ; case 1 : // A の とき break ; case 2 : // B の とき break ; case 3 : // C の とき break ; case 4 : // D の とき break ; case 5 : // E の とき break ; } で オススメ の 曲 です が 、 当然 文字列 で 表記 し たい です よ ね 。 なので String 型 の 配列 で 管理 し ます 。 配列 の 理由 は あと で 。 この 配列 に 例えば String [] music ={ " J . Boy "," ハナミズキ "," DO - し て "," 赤いスイートピー "}; みたい に 曲名 の データ を 代入 し ます 。 そして ランダム な 値 を 生成 し ます 。 ランダム な 値 を 出し て この 配列 番号 を 指定 し て あげれ ば ランダム に 曲名 が 選ば れ ます よ ね 。 で 、 ランダム な 値 は Random クラス を 使い ます 。 java . util . Random r = java . util . Random (); int rand = r . nextInt ( music . length ); music 配列 の 個数 を 引数 に 入れる こと で 0 ~ その 数字 - 1 まで の ランダム な 値 が 生成 さ れ ます 。 そして 、 music [ rand ] で 配列 を 指定 し ます 。 System . out . println (" オススメ の 曲 :"+ music [ rand ]); こんな 感じ です 。 
> F in stance = new C (); > と する とき 、 インスタンス in stance から は 、 クラス C 固有 の メソッド に は キャスト し ない と アクセス 不可 です よ ね ？ はい 。 その 通り です 。 > また 、 in stance = ( C ) instance と キャスト し た もの を 代入 し て も 、 意味 が あり ませ ん か ？ はい 。 その 通り です 。 ここ を 見る と 言語 仕様 は 正しく 理解 し て いる よう に 思え ます 。 A in stance = new B (); と する の は 、 「 クラス B に 固有 の メソッド が まったく ない 」 とか 「 クラス B に 固有 の メソッド に は まったく 用事 が ない 」 とかいう 時 です 。 そういう 時 は この 書き方 で 十分 な ので 、 こう 書く と 、 「 クラス B に 固有 の メソッド が まったく ない こと は 私 は わかっ て ます よ 」 とか 「 クラス B に 固有 の メソッド に は まったく 用事 が ない ですよ 」 という * 書き手 の 意図 * が 出 ます 。 実際 どう 書く ? という 話 は 「 クラス B に 固有 の メソッド が まったく ない 」 の と 「 クラス B に 固有 の メソッド に は まったく 用事 が ない 」 と でも 違い が ある でしょ う 。 さらに 前者 で も 「 なん で クラス A の 他 に B を 作る 必要 が あっ た の か 」 の 理由 に も 依り ます 。 私 自身 は 、 「 自分 が 用事 が ある メソッド が 全部 定義 さ れ た クラス の うち 、 一番 上位 の もの 」 を 変数 の 型 に すれ ば いい と 思っ て はい ます 。 でも 、 それ を 探す の が 面倒 なら そのもの ズバリ の 変数 型 で も たいてい の 場合 、 なんにも 問題 は あり ませ ん 。 
こう か な 。 package test 20160803 ; public class Yahooq 11162488841 { public static void main ( String [] args ) { String strGengo = " 平成 "; int intYear = 22 ; String strYear = " 年 "; strYear = strGengo + intYear + strYear ; System . out . println ( strYear ); } } 
こんな 感じ です か 。 package test 20160803 ; public class Yahooq 10162489080 { public static void main ( String [] args ) { int A = 3 ; int B = 6 ; int C = 25 ; A += 7 ; B *= 4 ; C /= 5 ; System . out . println (A) ; System . out . println ( B ); System . out . println ( C ); } } 
サンプル です 。 package test 20160803 ; import java . util . Random ; public class Yahooq 10162453810 { public static void main ( String [] args ) { // 乱数 用 インスタンス Random random = new Random (); // 5回 繰り返し for ( int i = 1 ; i <= 5 ; i ++) { // 0 ～ 100 まで の 乱数 を 取得 int randomValue = random . nextInt ( 101 ); System . out . println ( i + " 回 目 の 乱数 ：" + randomValue ); // 約数 for ( int j = 1 ; j <= randomValue ; j ++) { if ( randomValue % j == 0 ) { System . out . println (" 約数 ：" + j ); } } } } } 
サンプル です 。 package test 20160803 ; import java . util . Random ; public class Yahooq 12162452977 { public static void main ( String [] args ) { // 乱数 用 インスタンス Random random = new Random (); // ループ while ( true ) { // 0 ～ 100 まで の 乱数 を 取得 int randomValue = random . nextInt ( 101 ); if ( randomValue <= 50 ) { // 50 以下 は 「 処理 継続 」 と 表示 し 、 ループ 処理 を 続け System . out . println (" 処理 継続 "); } else { // 51 以上 は 「 処理 完了 」 と 表示 し て ループ 処理 が 終了 する System . out . println (" 処理 完了 "); break ; } } } } 
これ で 良い の ？ package test 20160803 ; public class Yahooq 10162489585 { public static void main ( String [] args ) { int A = 5 ; // 5 A ++; A --; System . out . println (A) ; // 9 A ++; A ++; A ++; A ++; System . out . println (A) ; // 3 A --; A --; A --; A --; A --; A --; System . out . println (A) ; // - 5 A --; A --; A --; A --; A --; A --; A --; A --; System . out . println (A) ; } } 
まず 、 アプレット は かなり 古い 技術 で あり 、 そろそろ サポート も 打ち切ら れ ます ので 、 今 から 新規 に 開発 する の で あれ ば 使用 す べき で は ない こと を ご 承知 おき ください 。 その 上 で 比較 する と 、 アプレット は ブラウザ 上 で GUI プログラム を 実行 できる 点 が 利点 です 。 欠点 は 、 セキュリティ 上 の 理由 から できる こと が 限ら れ て いる こと です （ ローカル の 資源 に アクセス でき ない 等 ） 。 Frame を 用いる 場合 は 、 前述 の 制限 が ない こと が 利点 です 。 欠点 は 、 アプリ を 手動 で ダウンロード し て 実行 し ない と 起動 し ない 点 です 。 ただ 、 AWT や Swing も 今や 古い 技術 です 。 JavaFX が 比較的 新しい GUI ライブラリ です 。 
例えば です が 、 フラグ を 用意 し て 、 keyReleased と 組み合わせる 方法 で できる と 思い ます 。 以下 、 サンプル です 。 -- package test 20160802 ; import java . awt . event . KeyEvent ; import java . awt . event . KeyListener ; import javax .s wing . JFrame ; import javax .s wing . JLabel ; public class Yahooq 12162436637 { public static void main ( String [] args ) { // ラベル JLabel jlabel = new JLabel (" ラベル "); // フレーム 表示 JFrame frame = new JFrame (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etSize ( 100 , 100 ); fra me. add ( jlabel ); frame .s etVisible ( true ); fra me. addKeyListener ( new KeyListener () { int count = 0 ; boolean hasBeenReleased = true ; @ Override public void keyTyped ( KeyEvent e ) { } @ Override public void keyReleased ( KeyEvent e ) { hasBeenReleased = true ; } @ Override public void keyPressed ( KeyEvent e ) { if ( hasBeenReleased ) { hasBeenReleased = false ; count ++; jlabel .s etText ( String . valueOf ( count )); } } }); } } 
public class Main { public static void main ( String [] args ) { int num = 8 ; for ( int i = 0 ; i < num ; i ++) { System . out . printf ("|"); for ( int k = 0 ; k < num ; k ++) { // i + k が 偶数 か否 か で 白 ・ 黒 を 分ける と 交互 に 白と黒 に なる if (( i + k ) % 2 == 0 ) System . out . printf (" "); else System . out . printf ("■"); System . out . printf ("|"); } System . out . println (); } } } 実行 結果 は | |■| |■| |■| |■| |■| |■| |■| |■| | | |■| |■| |■| |■| |■| |■| |■| |■| | | |■| |■| |■| |■| |■| |■| |■| |■| | | |■| |■| |■| |■| |■| |■| |■| |■| | プロポーショナルフォント ？ かなん か の せい で 崩れ て みえる と 思う けど 。 コマンドライン とか ターミナル だ と ちゃんと 揃っ てる 。 
以下 の ページ を 見る と jar なし でも 一応 は 出来る よう です 。 http:// ja v a6 . blog 117 . fc2 . com / blog - entry - 72 . html 
＞ translarion ボタン を 押す と 画像 A だけ が 表示 さ れ 動作 する 。 rotate ボタン を 押す と 、 画像 B だけ が 表示 さ れ 、 動作 する よう に 。 要は 、 画像 を 表示 ・ 非表示 に 設定 できれ ば いい の でしょ う ImageView sampleImage = ( ImageView ) findViewById ( R . id . imageView 1 ); // 表示 sampleImage .s etVisibility ( View . VISIBLE ); // 非表示 sampleImage .s etVisibility ( View . INVISIBLE ); 参考 ： http:// www . android - examples . com / hide - show - image view - on - button - click ... 
次 の 手順 で 出来 ませ ん か ？ メニュー バー の 「 ウィンドウ ( W )」→「 ビュー の 表示 ( V )」→「 その他 ( O )」 で 「 ビュー の 表示 」 ダイアログ を 開く 。 「 サーバー 」 ディレクトリー 内 の 「 サーバー 」 を 選択 し て 「 OK 」 ボタン を 押す 。 その後 、 サーバ の 作成 で tomcat を 選択 する 流れ だ と 思い ます 。 参考 サイト http:// www . ne.jp / asahi / hishidama / home / tech / eclipse / wtp . html 
https :// docs . google . com / file / d / 0 B40 JXl _ CQztEb 1B Vc 2 EwWC 15 enM / view 
C :\ Program Files \ java \ jdk 1 . 8 . 0 _ 101 「 ;」\ jre \ bin \ java . exe C :\ Program Files \ java \ jdk 1 . 8 . 0 _ 101 「 ;」\ bin \ java . exe セミコロン が 出 てる の が 変 な ので 環境変数 を 見直し た 方 が 良い と 思い まし た 。 
jar ファイル の 開き 方 について は 私 の 以前 の 回答 が 参考 に なる と 思い ます 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 16049757 ... 
過去 に 同様 な 質問 が あり まし た 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 14363735 ... 
Mod 開発 し て い た の は だいぶ 前 な ので 不確か な ん です が 、 これ だ と Recipes クラス は 機能 し ない の で は ？ 素直 に Mod クラス に 書い たら いい か と 思い ます 。 
Client Response resp = client . get ( start ); 記事 投稿 で 、 get で 大丈夫 な ん です か ？ 通常 、 post の よう な 気 は する ん です が 。 
Java の サイト から の 抜粋 です 。 Web ブラウザ で Java が 有効 に なっ て い ませ ん 。 すでに Java が インストール さ れ て い て 機能 し ない 場合 は 、 使用 し て いる Web ブラウザ で Java を 有効 に する 必要 が あり ます 。 Java を 最近 インストール し た 場合 は 、 ブラウザ が インストール を 認識 する よう に 、 ブラウザ の 再起動 ( すべて の ブラウザ ・ ウィンドウ を 閉じ て 再度 開く ) が 必要 に なる こと が あり ます 。 また 、 ブラウザ の Java コンテンツ が Java コントロール ・ パネル で 有効 に なっ て いる こと も 確認 し ます 。 詳しい こと は Java の サイト を ご覧 に なる こと です 。 
公式サイト です 。 https :// xmlbeans . apache . org / documentation / tutorial _ get started . html 
こんな 感じ です か 。 package test 20160802 ; public class Yahooq 11162449051 { private static final String SYMBOL = "*"; public static void main ( String [] args ) { /* * 問題 1 */ String Builder sb = new String Builder (); for ( int i = 1 ; i <= 10 ; i ++) { sb . append ( SYMBOL ); System . out . println ( sb . to String ()); } /* * 問題 2 */ sb = new String Builder (); int index = 0 ; while ( index < 10 ) { sb . append ( SYMBOL ); System . out . println ( sb . to String ()); index ++; } } } 
問題 2 は 論理演算子 を どう 使う の か 、 わかり ませ ん でし た が 、 参考 まで に 載せ ます 。 package test 20160802 ; import java . util . Random ; public class Yahooq 14162447799 { private static final String MSG _ PASS = " 合格 です "; private static final String MSG _ NOT _ PASS = " 不 合格 です "; private static final String MSG _ GOOD = " 大変 よく でき まし た "; private static final String MSG _ NOT _ GOOD = " もっと 頑張り ましょ う "; public static void main ( String [] args ) { Random random = new Random (); int point = random . nextInt ( 101 ); /* * 問題 1 */ if ( 60 <= point ) { System . out . println ( MSG _ PASS ); if ( 80 <= point ) { System . out . println ( MSG _ GOOD ); } } else { System . out . println ( MSG _ NOT _ PASS ); if ( point <= 40 ) { System . out . println ( MSG _ NOT _ GOOD ); } } /* * 問題 2 */ if ( 80 <= point ) { System . out . println ( MSG _ PASS ); System . out . println ( MSG _ GOOD ); } else if ( 60 <= point ) { System . out . println ( MSG _ PASS ); } else if ( 40 < point ) { System . out . println ( MSG _ NOT _ PASS ); } else { System . out . println ( MSG _ NOT _ PASS ); System . out . println ( MSG _ NOT _ GOOD ); } } } 
「 ブラウザ から 」 という こと は Java アプレット でしょ う か ？ その 場合 、 画像 の 表示 は 以下 の ページ の 方法 で 良い と 思い ます 。 http:// www . javadrive .jp / applet / image / index 2 . html テキストファイル なら ば 以下 の ページ の よう に すれ ば 良い みたい です 。 http:// a 4d osanddos . hatena blog . com / entry / 2013 / 07 / 04 / 233122 
こう です か ？ package test 20160802 ; import java . util . Random ; public class Yahooq 12162447147 { public static void main ( String [] args ) { // 乱数 取得 Random random = new Random (); int value = random . nextInt ( 101 ); /* * ------------------ 問題 1 ------------------ */ // ランク 判定 String rank = null ; if ( value == 100 ) { rank = " S "; } else if ( 80 <= value ) { rank = " A "; } else if ( 60 <= value ) { rank = " B "; } else if ( 40 <= value ) { rank = " C "; } else { rank = " D "; } // 出力 System . out . println ( rank ); /* * ------------------ 問題 1 ------------------ */ // ランク 判定 rank = null ; switch ( value ) { case 100 : rank = " S "; break ; case 99 : case 98 : case 97 : case 96 : case 95 : case 94 : case 93 : case 92 : case 91 : case 90 : case 89 : case 88 : case 87 : case 86 : case 85 : case 84 : case 83 : case 82 : case 81 : case 80 : rank = " A "; break ; case 79 : case 78 : case 77 : case 76 : case 75 : case 74 : case 73 : case 72 : case 71 : case 70 : case 69 : case 68 : case 67 : case 66 : case 65 : case 64 : case 63 : case 62 : case 61 : case 60 : rank = " B "; break ; case 59 : case 58 : case 57 : case 56 : case 55 : case 54 : case 53 : case 52 : case 51 : case 50 : case 49 : case 48 : case 47 : case 46 : case 45 : case 44 : case 43 : case 42 : case 41 : case 40 : rank = " C "; break ; default : rank = " D "; break ; } // 出力 System . out . println ( rank ); } } 
一応 、 こんな 感じ か な と 。 package test 20160802 ; public class Yahooq 10162445540 { // 演算子 定義 private static final String OPERATOR _ PLUS = "+"; private static final String OPERATOR _ MINUS = "-"; private static final String OPERATOR _ DIV = "/"; // エラーメッセージ private static final String ERROR _ MSG = " 値 A 、 B と 演算子 (+-/) を 指定 し て ください "; public static void main ( String [] args ) { // 入力 チェック if ( arg s.l ength != 3 ) { System . out . println ( ERROR _ MSG ); return ; } // 入力 値 受け取り int valueA = Integer . parseInt ( args [ 0 ]); int valueB = Integer . parseInt ( args [ 1 ]); String operator = args [ 2 ]; // 計算 Integer result = null ; switch ( operator ) { case OPERATOR _ PLUS : result = valueA + valueB ; break ; case OPERATOR _ MINUS : result = valueA - valueB ; break ; case OPERATOR _ DIV : result = valueA / valueB ; break ; } // 結果 出力 if ( result != null ) { System . out . printf ("% d % s % d =% d ", valueA , operator , valueB , result ); } else { System . out . println ( ERROR _ MSG ); } } } 
M2 E と は 、 Apache Maven を Eclipse 画面 から 操作 できる よう に する 為 の plugin の 一つ です 。 最近 で は 、 eclipse に 統合 さ れ て 配布 さ れ て い て 、 ワンタッチ ・ インストーラ で eclipse も m 2 e も 組み込ま れる よう に なっ てる よう です 。 http:// mergedoc . osdn .jp / Pleiades All in One 4 . 4 . 2 . v2 0150310 m 2 e 1 . 5 . 1 (- wtp 、 - apt 含む ) http:// www . eclipse . org / m 2 e / M2 Eclipse 
これ で 良い か な ？ -- package test 20160802 ; public class Yahooq 10162443375 { public static void main ( String [] args ) { // 配列 の 用意 int [] nums = new int [ 30 ]; for ( int i = 0 ; i < nums . length ; i ++) { nums [ i ] = i + 1 ; } // 3 の 倍数 のみ 出力 for ( int i = 0 ; i < nums . length ; i ++) { int num = nums [ i ]; if ( num % 3 == 0 ) { System . out . println ( num ); } } } } 
これ で 良い か な ？ package test 20160802 ; public class Yahoo { public static void main ( String [] args ) { // 記号 を 格納 String [][] symbols = new String [ 5 ][ 5 ]; for ( int i = 0 ; i < symbols . length ; i ++) { for ( int j = 0 ; j < symbols . length ; j ++) { if ( i == j ) { symbols [ i ][ j ] = "○"; } else { symbols [ i ][ j ] = " × "; } } } // 出力 for ( int i = 0 ; i < symbols . length ; i ++) { for ( int j = 0 ; j < symbols . length ; j ++) { System . out . print ( symbols [ i ][ j ]); } System . out . println (); } } } 
これ で 良い か な ？ package test 20160802 ; public class Yahooq 13162437823 { public static void main ( String args []) { for ( int x = 1 ; x <= 9 ; x+ +) { for ( int y = 0 ; y <= 9 ; y ++) { for ( int z = 1 ; z <= 9 ; z ++) { int first = x * 10 + x ; int second = x * 10 + y ; int result = z * 100 + y * 10 + x ; if ( x != y && y != z && z != x && ( first + second == result )) { System . out . println (" " + x + x ); System . out . println ("+)" + x + y ); System . out . println ("----"); System . out . println (" " + z + y + x ); } } } } } } 
ホーム ボタン で 同じ 処理 を 行う 場合 は keyevent で ホーム ボタン を 検知 すれ ば できる と 思い ます 。 public boolean onKeyDown ( int keyCode , KeyEvent event ) { if ( keyCode == KeyEvent . KEYCODE _ BACK || KeyEvent . KEYCODE _ HOME ) { this . finish (); this . moveTaskToBack ( true ); return false ; } } また スリープ モード を 検知 する 場合 は 以下 を 参照 し て いただける と できるかな と 思い ます 。 http:// d . hatena . ne.jp / chakimar / touch / 20101115 / 1289802415 PowerManager pm = ( PowerManager ) getSystemService ( mContext . POWER _ SERVICE );   boolean isScreenOn = pm . isScreenOn (); を 使っ て も できる かも しれ ませ ん が 、 使っ た こと ない ので なんとも 言え ませ ん … 
jQuery 以下 の コード を 追加 し ます 。 $("# kokodayo "). text (" 移動 し まし た "); java view の 対象 部分 に 以下 の コード を 追加 し ます 。 < div id =" kokodayo "> 移動 し まし た </ div > 
final が つい て いる 場合 は 、 １ 度 変数 に 代入 し た 後 は 、 変更 不可 と なり ます 。 変更 しよ う と する と エラー が 発生 。 逆 に final が ない 場合 は 、 後で 変更 可能 です 。 
1 . ループ 開始 2 . if (@ loop > 0 ) 成功 時 5 へ 、 失敗 時 3 へ 3 . A 4 . B 5 . C 6 . D 7 . E 8 . ループ 終了 ( 繰り返し ) ループ 使う なら これ で で いける と 思い ます 
> chielien _ 7520 e 826 ec 6336 f5 199 eb 9178 さん 2016 / 7 / 1820 : 46 : 41 > プロセッシング で 色 を もちい て 当たり判定 を 作り たい の です が どう すれ ば いい でしょ う か 。 学習 する か 外注 する か の 2 択 に なり ます 。 
> Java で エラー が で て 困っ て い ます 以下 の よう に し ます 。 ＊ ＊ ＊ import java . io .*; public class Test 116 { static String s1 ; static BufferedReader br ; public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); test 1 ( br ); // here } static void test 1 ( BufferedReader br ) throws IOException { // here System . out . println (" 針魚 （ サヨリ ） は 英語 で ？"); System . out . println (" 1 : needle fish 2 : seerfish 3 : mackerel 4 : smelt "); String s1 = br . readLine (); if ( s1 . equals ( 1 )) { System . out . println (" 正解 "); } else if ( s1 . equals ( 2 )) { System . out . println (" 不正解 "); } else if ( s1 . equals ( 3 )) { System . out . println (" 不正解 "); } else { System . out . println (" 不正解 "); } } } 
バブルソート で あれ ば 、 繰り返し に 繰り返し を 入れ子 に する 必要 が あり ます 。 public class SortTest { public static void main ( String [] args ) { int numbers [] = { 82 , 47 , 2 , 29 , 95 , 15 , 38 , 66 , 51 , 72 }; int n , i , max = 0 ; for ( n = 0 ; n < number s.l ength ; n ++){ for ( i = 0 ; i < number s.l ength - 1 ; i ++){ if ( numbers [ i ]> numbers [ i + 1 ]){ max = numbers [ i ]; numbers [ i ] = numbers [ i + 1 ]; numbers [ i + 1 ] = max ; } } } for ( i = 0 ; i < number s.l ength ; i ++){ System . out . print ( numbers [ i ] + ","); } } } 
例えば 以下 の よう な プログラム でしょ う か 。 package test 20160718 ; public class Mojisuu { public static void main ( String [] args ) { // 第 一 引数 を 格納 char c = args [ 0 ]. charAt ( 0 ); // 第 二 引数 を 走査 int count = 0 ; for ( int i = 0 ; i < args [ 1 ]. length (); i ++) { if ( c == args [ 1 ]. charAt ( i )) { count ++; } } System . out . println ( count ); } } 
prepareStatement に 限ら ず 、 Java で 文字列 中 に " を 使用 する 場合 は \" と 書き ます 。 その ため 、 prepareStatement (" SELECT TO _ CHAR ( date , ' YYYY \" 年 \" MM \" 月 \" DD \" 日 \"') FROM dual "); と 書く 必要 が あり ます 。 
> Java を ダウンロード しよ う と し たら この よう な 画面 が 出 て き ます 。 どう し たら 良い です か ？ どう し たら よい か は どう し たい か で 変わり ます 。 
失敗 し た 原因 を 書か ない と 回答 でき ませ ん 。 コンソール で は どんな エラー が 出 て い ます か 。 
で 、 なに を すれ ば いい ん です か ？ 課題 の 内容 貼り 付け られ た だけ で は 、 だれ も 回答 し ませ ん よ ？ と いっ て も 、 丸投げ さ れ て も 作る つもり も ない です が 。 
ごめんなさい 、 わかり ませ ん 。 
そう です 。 まず System . out . print で y m d = と 出力 さ れ た 後 、 変数 y 、 m 、 d の 順 に 値 を 入れ て いく プログラム に なり ます 。 ただ 、 System . out . print な ので 、 最初 の 入力 は 「 y m d =」 の 右側 に 出 て き た はず です 。 それ 以外 は 改行 さ れ ながら 入力 する こと に なる はず です 。 改行 し て その 下 から 入力 を 始め たい の で あれ ば 、 文字列 の 最後 に \ n を 入れる か System . out . println を 使え ば 大丈夫 です 。 
ｃ = では なく て 、 比較 なら c == で は ない でしょ う か 。 また 、 color が クラス なら ば 、 == 比較 だ と オブジェクト が 一致 し て いる か どう か の 比較 に なり ます ので 、 c.e quals () を 使用 し ます 。 
print ("---( 1 )---") for n in range ( 1 , 10 ): ____ print ( n ) print ("---( 2 )---") for n in range ( 2 , 9 , 2 ): ____ print ( n ) print ("---( 3 )---") print (" Sum = {}". format ( sum ( range ( 2 , 9 , 2 )))) 
なんか へん だ な 。 https :// ja . wikipedia . org / wiki /% E3 % 83 % AD % E3 % 83 % BC % E3 % 83 % 9 E % E 6 % 95 % B 0 % ... に よれ ば 、 「 同じ 文字 を 4つ 以上 連続 で 並べる こと は でき ない 」 と ある よ 。 4 は iiii じゃ なく iv と ある し 。 簡単 の ため に 、 「 減算 則 は ナシ 」 とか 、 独自 ルール な サブ セット な の か な 。 書い て なきゃ 、 第三者 に は わから ん わ 。 
http:// supportdoc .net / support - general / pleiades - mac . html ここ の サイト の 真ん中 くらい に 書い て あり ます 。 eclipse の 実行ファイル （ パッケージ ） を 、 右クリック し て パッケージ の 中身 を 表示 を 選択 する と 、 出 て き ます 。 
404 エラー は 、 404 NotFound （ 指定 さ れ た URL は 存在 し ませ ん ） に なり ます ので 、 アドレス が 間違っ て ない か 確認 し て ください 。 
Java ＝ 金 かけ ない （ 全部 タダ ） C# ＝ 金 かける （ デスクトップ 系 は タダ で できる が 、 C# で Web 系 を やる なら サーバー に Windows Server 系 OS が 必須 な ので コスト が かかる ） C# も ASP.NET （ Web フォーム ） や .NET MVC が ある ので 別に ウェブ 系 が 苦手 という わけ で は あり ませ ん 。 
charAt の 使い方 が 間違っ て ます 。 charAt は 、 String . charAt () な ので 、 String クラス の メソッド と なり ます 。 
html ファイル と class ファイル の 位置 関係 の 問題 だ と 思い ます 。 例えば 、 java ファイル 一行 目 を 「 package test 20160801 . q 13162385418 ;」 と し た 場合 、 html で は 以下 の 記述 に なり ます 。 < applet code =" test 20160801 / q 13162385418 / kadai 4 _ test . class " width =" 150 " height =" 150 "> </ applet > また 、 ファイル の 位置 は 「 test . html 」 が 基準 です 。 上記 の パッケージ の 場合 、 以下 の 構成 するする 必要 が あり ます 。 任意 の フォルダ ├ test . html └ test 20160801 \ q 13162385418 \ kadai 4 _ test . class あと は サイト リスト 「 file:/// 」 に する こと でしょ う か 。 
Webサーバ と 同じ プロセス という の は 、 Apache や IIS の よう な 純粋 な Webサーバ で は なく 、 Tomcat の よう な Web アプリケーションサーバ ( Webサーバ 兼 サーブレット コンテナ ) を 指し て い ます 。 Apache や IIS と 組み合わせる こと なく Tomcat 単独 で も 運用 でき ます が 、 Apache と Tomcat の 二 段 構成 に する こと も 可能 です 。 二段 構成 に し た 場合 も Apache と Tomcat は 最初 から 起動 し て おり 、 両者 が 連携 し て 動作 し ます 。 サーブレット と CGI の 速度 差 は リクエスト 毎 に プロセス を 起動 する か否 か です 。 プロセス を 起動 する に は 時間 が かかり ます 。 サーブレット は リクエスト 毎 に プロセス を 起動 し ませ ん ( スレッド を 起動 し ます ) が 、 CGI は リクエスト 毎 に プロセス を 起動 し ます 。 
そちら の 書籍 は 2004年 に 発売 さ れ た 物 な ので CD-ROM に 収録 さ れ て いる ソフトウェア も 当時 の もの と なり ます 。 10年 以上 前 な ので すんなり 実行 でき ない 可能性 も ある かも しれ ませ ん 。 開発元 の ACD / Labs の サイト で 確認 し て み まし た が 、 ChemSketch は 個人 利用 または 教育 関係 向き の フリーウェア ( 無料 ) が Windows 用 のみ 公開 さ れ て おり 、 最後 の 更新日 は 2015 - 01 - 29 と なっ て い まし た 。 以下 の ACD / Labs の サイト から ダウンロード でき ます 。 http:// www . acdlabs . com / resources / freeware / ダウンロード の 際 に は この サイト へ の 登録 が 必要 に なり ます が 、 メールアドレス は 確認 用 の リンク を 送っ て くる ので 実際 に 使用 可能 な もの を 登録 する 必要 が ある よう です 。 メールアドレス 以外 の 個人情報 は 正しい 内容 で なく て も ダウンロード 可能 です 。 開発元 以外 から は フリーソフト は ダウンロード し ない 方 が 無難 です 。 登録 の 必要 が なく て も 、 インストール 時 に 余計 な もの まで 入れ ら る 可能性 が あり ます 。 古い 内容 です が インストール 方法 です 。 http:// chem . chu. jp / freeware / chemsketch . html Youtube の チュートリアル 動画 です 。 How to use ACD ChemSketch , Tutorial https :// www . youtube . com / watch ? v = CHlJuAcyTv 8 クエン酸回路 を ChemSketch で 描ける か は カテゴリー を 化学 に し て 質問 さ れ た 方 が よろしい か と 思い ます 。 知恵袋 トップ > と 学問 、 サイエンス > サイエンス > 化学 
stab という もの が ある よう です 。 https :// code . google . com / archive / p / stab - language / 
ここ の 添付 の 説明 で わかる と 思い ます 。 http:// www . pref. kagawa . lg .jp / gijutsukikaku / kacals / newdennyu / manual 0 ... 
本 を 買い ましょ う 。 そこ に 書い て あり ます 。 
全く 試験 し て い ませ ん が 、 以下 の コード で どうでしょう か 。 -- class Bike extends Car { private int cc ; public Bike ( int cc ) { this . cc = cc } public void cc _ show () { System . out . println (" 排気量 :" + cc ); } } 
オブジェクト を 参照 する という の は 、 オブジェクト の 変数 = オブジェクト （ インスタンス ） という ふう に = で 変数 と オブジェクト を ひも づける こと を 参照 と いい ます 。 オブジェクト 参照 は 、 オブジェクト （ インスタンス ） と 変数 を ひも づける こと 。 [ メリット ] 変数 から オブジェクト を 参照 できる こと だ と 思い ます 。 オブジェクト （ インスタンス ） は クラス を new し て 作成 し ます 。 
アプレット について は 、 評価 対象 に なら ない 事 が 多い と 思わ れ ます 。 過去 の ソフトウェア の 保守 なら ともかく 、 新規 開発 で 採用 さ れる 事 は ほとんど あり ませ ん 。 アプリケーション と は 具体 的 に どの よう な もの です か ？ 大学 や 専門学校 の 課題 として 作っ た 程度 で は 、 スキル と は 見なさ れ ませ ん 。 個人 レベル で 作っ た もの は 、 たとえ それ が 技術 的 に 優れ て い た として も 、 公的 な 場 で 評価 さ れ たり 、 商用 として 実用 さ れ た もの で ない 限り は 、 プラス 評価 に は なら ない と 思っ て 良い と 思い ます 。 スポーツ選手 が 練習 中 に 世界記録 を 出し た として も 、 公式 の 試合 で その 記録 を 出し て い ない 以上 、 評価 対象 に なら ない の と 同じ 事 です 。 
私 は 、 JDK と NetBeans を インストール し て い ます 。 http:// www . oracle . com / tech network / java / javase / download s / jdk 8 - downlo ... ここ から Java SE Development Kit の 自分 に 合っ た OS と Bit 数 の を ダウンロード し て ください 。 8 u 91 と 8 u 92 が あり ます が 、 どちら でも どうぞ 。 ダウンロード し たら インストーラー を 起動 さ せ ます 。 インストーラ ー に 従う だけ で OK です 。 続い て 、 NetBeans を インストール し ます 。 https :// netbeans . org / download s / ここ から 「 JavaSE 」 「 JavaEE 」 「 すべて 」 の どれ か を 選ん で ダウンロード し ます 。 これ も インストーラ ー の 指示 に 従う だけ で OK です 。 あと は NetBeans を 起動 さ せれ ば 開発 の 開始 です 。 
たぶん だけど… 、 protected void mi n3 ( View view ){ の 最後 に 「 }」 が 必要 。 public class MainActivity extends Activity { の 最後 に 「 }」 が 必要 。 だ と 思う 。 package com . example . timer ; import java . util . Calendar ; import java . util . Timer ; import java . util . TimerTask ; import android . app . Activity ; import android . os . Bundle ; import android . view . Menu ; import android . view . MenuItem ; import android . view . View ; import android . widget . DatePicker ; import android . widget . EditText ; import android . widget . TextView ; import android . widget . TimePicker ; public class MainActivity extends Activity { ＿ ＿ Calendar basecal , cal ; ＿ ＿ Activity activity ; ＿＿@ Override ＿ ＿ protected void onCreate ( Bundle savedInstanceState ) { ＿ ＿ ＿ ＿ super . onCreate ( savedInstanceState ); ＿ ＿ ＿ ＿ setContentView ( R . layout . activity _ main ); ＿ ＿ ＿ ＿ basecal = Calendar . getInstance (); ＿＿} ＿ ＿ protected void mi n3 ( View view ){ ＿ ＿ ＿ ＿ int setH = basecal . get ( Calendar . HOUR _ OF _ DAY ); ＿ ＿ ＿ ＿ int setM = basecal . get ( Calendar . MINUTE ); ＿ ＿ ＿ ＿ int setS = basecal . get ( Calendar .S ECOND ); ＿ ＿ ＿ ＿ Timer min = new Timer (); ＿ ＿ ＿ ＿ TimerTask = new Time r3 (){ ＿＿＿＿＿＿ TextView txt =( TextView ) findViewById ( R . id . time ); ＿＿＿＿＿＿ int nowH = basecal . get ( Calendar . HOUR _ OF _ DAY ); ＿＿＿＿＿＿ int nowM = basecal . get ( Calendar . MINUTE ); ＿＿＿＿＿＿ int nowS = basecal . get ( Calendar .S ECOND ); ＿＿＿＿＿＿ if (( set M+ 3 )>= 60 ){ ＿＿＿＿＿＿＿＿ if ( nowM < 3 ){ ＿＿＿＿＿＿＿＿＿＿ String m = String . valueOf ( set M+ 3 - now M+ 60 ); ＿＿＿＿＿＿＿＿＿＿ String s = String . valueOf ( 60 - nowS ); ＿＿＿＿＿＿＿＿＿＿ txt .s etText ( m+ " 分 "+ S +" 秒 "); ＿＿＿＿＿＿＿＿} else { ＿＿＿＿＿＿＿＿＿＿ String m = String . valueOf ( set M+ 3 - nowM ); ＿＿＿＿＿＿＿＿＿＿ String s = String . valueOf ( 60 - nowS ); ＿＿＿＿＿＿＿＿＿＿ txt .s etText ( m+ " 分 "+ S +" 秒 ");} ＿＿＿＿＿＿＿＿} ＿＿＿＿＿＿＿＿ min .s cheduleAtFixedRate ( TimerTask , 0 L , 1000 L ); ＿＿＿＿＿＿} ＿＿＿＿} // ここ が 足り ない 。 ＿ ＿ protected void mi n4 ( View view ){ ＿ ＿ ＿ ＿ int setH = basecal . get ( Calendar . HOUR _ OF _ DAY ); ＿ ＿ ＿ ＿ int setM = basecal . get ( Calendar . MINUTE ); ＿ ＿ ＿ ＿ int setS = basecal . get ( Calendar .S ECOND ); ＿ ＿ ＿ ＿ Timer min = new Timer (); ＿ ＿ ＿ ＿ TimerTask = new Timer 4 (){ ＿ ＿ ＿ ＿ TextView txt =( TextView ) findViewById ( R . id . time ); ＿ ＿ ＿ ＿ int nowH = basecal . get ( Calendar . HOUR _ OF _ DAY ); ＿ ＿ ＿ ＿ int nowM = basecal . get ( Calendar . MINUTE ); ＿ ＿ ＿ ＿ int nowS = basecal . get ( Calendar .S ECOND ); ＿ ＿ ＿ ＿ if (( set M+ 4 )>= 60 ){ ＿＿＿＿＿＿ if ( nowM < 4 ){ ＿＿＿＿＿＿＿＿ String m = String . valueOf ( set M+ 4 - now M+ 60 ); ＿＿＿＿＿＿＿＿ String s = String . valueOf ( 60 - nowS ); ＿＿＿＿＿＿＿＿ txt .s etText ( m+ " 分 "+ S +" 秒 "); ＿＿＿＿＿＿} else { ＿＿＿＿＿＿＿＿ String m = String . valueOf ( set M+ 4 - nowM ); ＿＿＿＿＿＿＿＿ String s = String . valueOf ( 60 - nowS ); ＿＿＿＿＿＿＿＿ txt .s etText ( m+ " 分 "+ S +" 秒 ");} ＿＿＿＿＿＿} ＿＿＿＿} ＿ ＿ ＿ ＿ min .s cheduleAtFixedRate ( TimerTask , 0 L , 1000 L ); ＿＿} // ここ が 足り ない 。 
一覧 に 全部 出る 訳 で は あり ませ ん 。 無い の なら 、 「 他 の プログラム で 開く 」 など で 選択 する しか ない でしょ う 。 多分 「 C :\ Program Files ( x86 )\ Java \ jre 1 . 8 . 0 _ 91 \ bin \ javaw . exe 」 だ と 思い ます 。 開い て も うまく 行か なかっ た 場合 は 、 私 の 以前 の 回答 が 参考 に なる と 思い ます 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 16049757 ... 
その ファイル を 右クリック し て 、 プログラム から 開く で java を 選ん で 下さい 。 
初期化 です 。 省略 し て も 同じ です 。 （ 「 private String name ;」） 参考 メンバ 変数 の 初期化 http:// msugai . fc2 web . com / java / memberVar . html 
お はこん ばん に ち ゎ ♪ その 表示 を 実現 する 方法 は いくつ か あり ます が 、 いちばん 簡単 な 方法 で 解説 し て み ます ね （＾－＾＊ 解説 の あと で 、 ソースコード の 実施 例 を 示し ます 。 ■ ■ ■ しくみ ■ ■ ■ 全て の 画像 の < img > 要素 を 「 position : absolute 」 で １ 枚 に 重ね合わ せ て おき 、 各 画像 の 表示 ／ 非表示 の 切替え を < img > 要素 の クラス 名 の 切替え によって 行い ます 。 例えば 、 クラス 名 が つい て い ない < img > 要素 は 非表示 の 状態 クラス 名 show を 指定 し た < img > 要素 は 表示 の 状態 、 っていう 感じ です 。 クラス 名 の 切替え は Java script によって 行い 、 表示 ／ 非表示 の スタイル に関する 設定 は すべて CSS で 行い ます 。 画像 切り替え 時 の フェードイン・アウト は 「 opacity 」 を 、 画像 の ズームアウト は 「 transform : scale () 」 を 、 それぞれ 「 transition 」 で アニメーション さ せる だけ で 実現 でき ます 。 では 、 ソースコード の 作り方 を 順に 解説 し ます ＾－＾) ゝ ■ ■ ■ HTML を 記述 ■ ■ ■ まず 、 スライドショー を 表示 する ため の ブロック を 、 < div > など で 用意 し て id を 付け て おき ましょ う 。 / ─ ─ ─ ─ ─ ─ ─ ─ < div id =" photobox "></ div > ─ ─ ─ ─ ─ ─ ─ ─ / 記述 する HTML は これ だけ o ( ・ ω ・ ＊ この < div > の なか に 、 手打ち で < img > を １つ １つ 書い て も いい の だ けど 、 あとあと 管理 が し やすい よう に 、 ここ で は 、 あと で Java script を 使っ て 自動的 に 書き出し ます よう に し ます ♪ ■ ■ ■ CSS の 設定 ■ ■ ■ スライドショー に 必要 な スタイルシート を 設定 し て おき ます 。 まず 、 スライドショー を 画面 いっぱい に 表示 する ため 、 ページ の 余白 を なくし て おき ましょ う 。 / ─ ─ ─ ─ ─ ─ ─ ─ html , body { width : 100% ; height : 100% ; margin : 0 px ; padding : 0 px ; } ─ ─ ─ ─ ─ ─ ─ ─ / スライドショー の 表示 領域 # photobox を 、 画面 いっぱい の サイズ に 広げ て おき ます 。 また 、 その 中 に は < img > を 「 position : absolute 」 で 重ねる ので 、 座標 原点 が # photobox に なる よう に # photobox に は 「 position : relative 」 を 指定 し て おき ます 。 # photobox から はみ出し た 部分 が 表示 さ れ ない よう に 、 「 overflow : hidden 」 も 指定 し て おき ましょ う 。 / ─ ─ ─ ─ ─ ─ ─ ─ # photobox { position : relative ; width : 100% ; height : 100% ; overflow : hidden ; } ─ ─ ─ ─ ─ ─ ─ ─ / # photobox に 入れる < img > 要素 は 、 「 position : absolute 」 で 重ね合わ せ ます 。 デフォルト で は 非表示 の 状態 に し て おく ので 、 「 opacity : 0 」 で 透明 に し て おき ます 。 表示 状態 に 切り替え た とき 徐々に ズームアウト さ せる ので 、 非表示 の 状態 で は 、 「 transform : scale () 」 で 少し 拡大 さ れ た 状態 に し て おき ます 。 / ─ ─ ─ ─ ─ ─ ─ ─ # photo box img { position : absolute ; left : 0 px ; top : 0 px ; z - index : 0 ; opacity : 0 ; transform : scale ( 1 . 2 ); } ─ ─ ─ ─ ─ ─ ─ ─ / さらに 、 「 opacity 」 と 「 transform 」 に 、 「 transition 」 による アニメーション を 設定 し て おく こと で 、 画像 切り替え 時 の フェード 効果 や 、 ズームアウト 効果 を つけ られ ます 。 画像 切り替え の 間隔 を 仮に 4 秒 として 、 「 opacity 」 の 変化 時間 は 、 それ より も 十分 に 短く 、 「 transition 」 の 変化 時間 は 、 切り替え の 間隔 と 同じ くらい に 、 それぞれ 設定 し ます 。 / ─ ─ ─ ─ ─ ─ ─ ─ # photo box img { position : absolute ; left : 0 px ; top : 0 px ; z - index : 0 ; opacity : 0 ; transform : scale ( 1 . 2 ); transition : opacity 1 s line ar 0 s , transform 4s linear 0 s ; } ─ ─ ─ ─ ─ ─ ─ ─ / クラス 名 show を 指定 さ れ た < img > は 、 「 opacity : 1 」 で 表示 状態 に し て 、 「 transform : scale ( 1 . 0 )」 で ズーム アウト さ せ ます 。 また 、 表示 状態 の < img > が いちばん 手前 に くる よう に 、 「 z - index 」 に 大きい 値 を 指定 し て おき ましょ う 。 / ─ ─ ─ ─ ─ ─ ─ ─ # photo box img .s how { opacity : 1 ; transform : scale ( 1 . 0 ); z - index : 100 ; } ─ ─ ─ ─ ─ ─ ─ ─ / CSS は 以上 で 完了 です 。 ■ ■ ■ 画像 の リスト を 作成 ■ ■ ■ 画像 の リスト を 管理 し やすい よう に 、 画像 の URL を Java script で 配列 に し て おき ます 。 配列 の 名前 は photos でも し て おき ましょ う 。 / ─ ─ ─ ─ ─ ─ ─ ─ var photos = [ " 画像 の URL ", " 画像 の URL ", … " 画像 の URL " ]; ─ ─ ─ ─ ─ ─ ─ ─ / ■ ■ ■ 画像 を フィット さ せる ■ ■ ■ スタイルシート で は 、 # photo box 内 の < img > 要素 に 横 幅 、 高さ を 指定 し て い ない ので 、 この まま で は 、 表示 領域 の サイズ に 関係 なく 画像 本来 の 大き さ で 表示 さ れ て しまい ます ね ' d ( ・ ω ・ ＊ スタイルシート で 「 width : 100% 」 に すれ ば 、 画像 は ページ の 横 幅 いっぱい に 広がっ て フィット し ます が 、 画像 の 高さ が 足り ない と 、 画像 の 上下 に 余白 が でき て しまい ます 。 いっぽう 、 「 height : 100% 」 に すれ ば 高さ が フィット し ます が 、 横 幅 が 足り ない 場合 に は 左右 に 余白 が 空い て しまい ます 。 横 幅 を 100% に する か 、 高さ を 100% に する か は 、 表示 領域 の アスペクト比 （ 縦横 の 比 ） によって 変わり ます 。 画像 に 比べ て 表示 領域 が 横長 の 場合 に は 「 width : 100% 」 、 画像 に 比べ て 表示 領域 が 縦長 の 場合 に は 「 height : 100% 」 、 という ふう に 、 条件 によって CSS の 指定 を 変える 必要 が あり ます 。 それ と 同時に 、 画像 の 中心 が 表示 領域 の 中心 に 来る よう に 、 表示 領域 の アスペクト比 に あわせ て スタイルシート の 「 left 」 や 「 top 」 も 調節 し ない と いけ ませ ん 。 この よう な フィッティング は 、 CSS で する より も Java script で 行う 方 が 簡単 です ヽ ( ・ ω ・ ＊ そこで 、 画像 を フィット さ せる 関数 photoFit () を 作っ て おき ましょ う 。 / ─ ─ ─ ─ ─ ─ ─ ─ function photoFit (){ ～ 処理 内容 ～ } ─ ─ ─ ─ ─ ─ ─ ─ / まず 、 画像 の アスペクト比 を 変数 photoasp に 保持 し て おき ます 。 640 × 480 の 画像 で あれ ば 、 / ─ ─ ─ ─ ─ ─ ─ ─ var photoasp = 640 / 480 ; ─ ─ ─ ─ ─ ─ ─ ─ / って なり ます ね 。 つぎ に 、 表示 領域 の アスペクト比 asp を 取得 し ます 。 / ─ ─ ─ ─ ─ ─ ─ ─ var photo box = document . getElementById (" photobox "); var width = photobox . offsetWidth ; var height = photobox . offsetHeight ; var asp = width / height ; ─ ─ ─ ─ ─ ─ ─ ─ / あと は 、 # photo box 内 の < img > 要素 １つ １つ を 、 アスペクト比 によって スタイルシート を 分岐 さ せ て 、 表示 領域 に フィット さ せれ ば いい だけ です ♪ / ─ ─ ─ ─ ─ ─ ─ ─ var photo img = photobox . getElementsByTagName (" img "); for ( var i = 0 ; i < photoimg . length ; i ++){ //----] 大き さ を フィット さ せる photoimg [ i ]. style. width = ( asp > photoasp ) ? " 100% " : " auto "; photoimg [ i ]. style. height = ( asp > photoasp ) ? " auto " : " 100% "; //----] 中心 位置 を 合わせる photoimg [ i ]. style. left = ( asp > photoasp ) ? " 0 px " : ( ( width - height * photoasp )/ 2 )+" px "; photoimg [ i ]. style. top = ( asp > photoasp ) ? ( ( height - width / photoasp )/ 2 )+" px " : " 0 px "; } ─ ─ ─ ─ ─ ─ ─ ─ / 以上 を まとめる と 、 画像 を 表示 領域 に フィット さ せる 関数 photoFit () の 全貌 は 、 以下 の よう に なり ます 。 / ─ ─ ─ ─ ─ ─ ─ ─ function photoFit (){ var photoasp = 640 / 480 ; var photo box = document . getElementById (" photobox "); var width = photobox . offsetWidth ; var height = photobox . offsetHeight ; var asp = width / height ; var photo img = photobox . getElementsByTagName (" img "); for ( var i = 0 ; i < photoimg . length ; i ++){ photoimg [ i ]. style. width = ( asp > photoasp ) ? " 100% " : " auto "; photoimg [ i ]. style. height = ( asp > photoasp ) ? " auto " : " 100% "; photoimg [ i ]. style. left = ( asp > photoasp ) ? " 0 px " : ( ( width - height * photoasp )/ 2 )+" px "; photoimg [ i ]. style. top = ( asp > photoasp ) ? ( ( height - width / photoasp )/ 2 )+" px " : " 0 px "; } } ─ ─ ─ ─ ─ ─ ─ ─ / 画像 を フィット さ せる 必要 が ある の は 、 / ─ ─ ─ ─ ─ ─ ─ ─ ・ ページ の 読み込み 完了 時 ・ ウィンドウ が リサイズ さ れ た とき ─ ─ ─ ─ ─ ─ ─ ─ / です ね ＊ ・ ω ・ ) b ' な ので 、 この 関数 photoFit () は 、 window オブジェクト の 「 load 」 イベント と 「 resize 」 イベント に 仕込む こと に なり ます 。 ■ ■ ■ スライドショー を 開始 する ■ ■ ■ ページ の 読み込み が 完了 し た 時点 で 、 スライドショー を 開始 さ せ ます 。 スライドショー を 開始 する 関数 を photoStart () として 、 その 中身 を 作っ て いき しょ う 。 / ─ ─ ─ ─ ─ ─ ─ ─ function photoStart (){ ～ 処理 内容 ～ } ─ ─ ─ ─ ─ ─ ─ ─ / まず 、 画像 リスト photos を 使っ て 、 < div id =" photobox "> の なか に < img > 要素 を セット し ます 。 / ─ ─ ─ ─ ─ ─ ─ ─ window . photobox = document . getElementById (" photobox "); for ( var i = 0 ; i < photo s.l ength ; i ++){ var img = document . createElement (" img "); img .s etAttribute ( " src ", photos [ i ] ); img .s etAttribute ( " alt ", "" ); photobox . appendChild ( img ); } ─ ─ ─ ─ ─ ─ ─ ─ / 変数 photobox は 、 他 の 関数 内 で も 使える よう に グローバル変数 として 定義 し ます 。 明示 的 に グローバル変数 として 定義 する ため に 、 ここ で は 「 window . photobox = ～」 の よう に 定義 し て い ます 。 セット し た < img > 要素 の リスト も 、 グローバル変数 photoimg に 取得 し て おき ましょ う 。 / ─ ─ ─ ─ ─ ─ ─ ─ window . photoimg = photobox . getElementsByTagName (" img "); ─ ─ ─ ─ ─ ─ ─ ─ / つぎ に 、 セット し た < img > 要素 を 表示 領域 に フィット さ せ ます 。 作っ て おい た 関数 photoFit () を 実行 する だけ です ね ♪ / ─ ─ ─ ─ ─ ─ ─ ─ photoFit (); ─ ─ ─ ─ ─ ─ ─ ─ / あと は 一定 時間 おき に < img > の クラス 名 を 切り替え て いけ ば 、 スライドショー の 再生 が 始まり ます 。 
Windows でし たら C# で GUI が 楽 に 作れ ます 。 肝心 の FFT です が 、 Math .NET に 入っ て いる ので 、 NuGet から インストール すれ ば 、 すぐ に 使え ます 。 
以下 の 箇所 ---------------------- MyOval k = null ; // 円 が 重なっ て いる か どう か if ( o 1 . isCollision ( k ) == false ) { g .s etColor ( Color . red );// 赤色 を 設定 g . fillOval ( o 1 . getX (), o 1 . getY (), o 1 . getR (), o 1 . getR ());// 二つ目 の 円 を 描画 } ---------------------- k が null な の です が 、 o 1 . isCollision ( k ) の 内部 で 「 k. メソッド 」 が 実行 さ れる ため エラー に なり ます 。 例えば k = o2 など に し て おけ ば 動き ます 。 
こんにちは。 その 悩み よく わかり ます 。 会社 とか だ と これ 作っ て とか 依頼 が ある ので やり やすい ん です けど 、 趣味 で やる 場合 は 難しい です よ ね 。 プログラミング で 挫折 する 大きな 原因 の 一つ だ と 思い ます 。 ちなみに 私 は ここ を 見 ながら ゲーム を 作っ たり し まし た 。 http:// aidiary . hatena blog . com / entry / 20040918 / 1251373370 結構 高度 だ と 思い ます が 、 これ が できる よう に なれ ば かなり ステップアップ できる と 思い ます 。 
文法 上 は ルール は あり ませ ん 。 好き な 場所 に 書い て ください 。 会社 など の 組織 で ルール が あれ ば それ に 従っ て ください 。 
一 例 です 。 計算 結果 の 小数 部分 を 判定 すれ ば よい と 思い ます 。 以下 、 サンプル です 。 package test 20160731 ; public class Yahooq 10162348515 { public static void main ( String [] args ) { System . out . println ( myStringValueOf ( 1 + 0 . 2 )); System . out . println ( myStringValueOf ( 3 . 1 - 0 . 1 )); } private static String myStringValueOf ( double resultdouble ) { String s = ""; // 小数 部分 double fractionalPart = resultdouble - Math . floor ( resultdouble ); if ( fractionalPart == 0 ) { // 小数 部分 が 0 の 場合 、 int 型 s = String . valueOf (( int ) resultdouble ); } else { // それ 以外 の 場合 、 double 型 s = String . valueOf ( resultdouble ); } return s ; } } 
Java の 言語 仕様 の よう です 。 http:// docs . oracle . com / javase / specs / jls / se 8 / html / jls - 15 . html # jls - 15 ... 上記 サイト の Example 15 . 17 . 3 - 1 . Integer Remainder Operator の サンプル コード 見 て 納得 する の が 一番 早い の かも しれ ませ ん 。 
一度 、 コンソール 出力 で 練習 する と 良い と 思い ます 。 最後 の 方 を 以下 に し たら 出力 さ れる と 思い ます 。 for ( int i = 1 ; i < car . length ; i ++) { if ( car [ i ]. maxSpeed > maxhosepower . maxSpeed ) { // ( 6 ) maxhosepower = car [ i ]; // ( 7 ) } } System . out . println (" 馬力 " + maxhosepower . carName ); 
「 エラー ： 構文 が 無効 です 。 既定 の オプション は ’ ２ ’ 回 より 多く 使用 する こと が 出来 ませ ん 」 と 出る の なら 。 「 次に その 下 に setx / M Path "% JAVA _ HOME %¥ bin ;% Path %" と 入力 し て も 」 は 不要 でしょ う 。 これ で 環境変数 の 設定 完了 として 、 全て 閉じ て から 再度 コマンドプロンプト を 開き 確認 を し ましょ う 。 
こんにちは。 MainPanel に main メソッド を 追加 し たら 動い た ので 、 Game クラス ？ に 問題 が ある の かも しれ ませ ん 。 以下 は import javax .s wing . JFrame ; と main メソッド を 追加 し まし た 。 それ 以外 は さわっ て おり ませ ん ので ご 参考 まで に 。 import java . awt . Color ; import java . awt . Dimension ; import java . awt . Graphics ; import java . awt . event . KeyEvent ; import java . awt . event . KeyListener ; import javax .s wing . JPanel ; import javax .s wing . JFrame ; public class MainPanel extends JPanel implements Runnable , KeyListener { boolean rightPressed = false ; boolean leftPressed = false ; static final int LEFT = - 1 ; static final int RIGHT = 1 ; Player player ; private Thread gameLoop ; public static void main ( String [] args ){ JFrame jf = new JFrame (); jf .s etBounds ( 500 , 500 , 300 , 200 ); jf .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); jf . getContentPane (). add ( new MainPanel ()); jf .s etVisible ( true ); } public MainPanel (){ setFocusable ( true ); player = new Player (); addKeyListener ( this ); gameLoop = new Thread ( this ); gameLoop .s tart (); } public void paintComponent ( Graphics g ) { super . paintComponent ( g ); player . draw ( g ); } public void keyPressed ( KeyEvent e ) { System . out . println (" key "); int key = e . getKeyCode (); if ( key == KeyEvent . VK _ LEFT ) { leftPressed = true ; } if ( key == KeyEvent . VK _ RIGHT ) { rightPressed = true ; } } public void keyReleased ( KeyEvent e ) { int key = e . getKeyCode (); if ( key == KeyEvent . VK _ LEFT ) { leftPressed = false ; } if ( key == KeyEvent . VK _ RIGHT ) { rightPressed = false ; } } public void keyTyped ( KeyEvent e ) { } public void run () { System . out . println (" run "); while ( true ) { if ( leftPressed ) { player . move ( LEFT ); } else if ( rightPressed ) { player . move ( RIGHT ); } repaint (); System . out . println (" repaint "); try { Thread . sleep ( 20 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } } 
「 java クラス 名 」 を 実行 し て い ます か ？ hello . java の 場合 、 対象 は hello . class で 「 java hello 」 です 。 参考 http:// nobuo - create .net / java - beginner - 2 / 
マインクラフト の バージョン は 幾つ です か ？ 
Date 、 Calendar など の 古い API を 使わ なけれ ば 簡単 に できる 。 LocalDate today = Lo cal Date. now ( ZoneId . of (" Asia / Tokyo ")); LocalDate afterWeek = today . plusWeeks ( 1 L ); これ で 、 1 週間 後 の 日付 が 取得 でき ます 。 
> SQL の 発行 回数 を 減らす とか しか 思いつき ませ ん 。 えっ ? 必ずしも そう と は 限ら ない こと すら 知ら ない ほど の ド 素人 ? 
企業 の 考え方 に より ます が 、 スピード が 大事 だ と 思う ので 実務 未 経験 可 と 言う 事 なら 今 の 状況 で 直ぐ に 応募 する 方 が 良い と 思い ます よ 。 即席 で 作っ た ゲーム くらい なら 面接 し ながら でも 作れる と 思い ます 。 相手 企業 の 要求 を 満足 できる 勉強 を 早く 始める 方 が 即戦力 に なり ます し ね 。 応募 し て から テトリス を 作っ て 、 面接 の 時 に 聞か れ たら 、 勉強 の ため テトリス を 作っ て ます で よい の で ない でしょ う か 。 途中 なら 途中 です 。 終わっ た なら 出来 まし た 。 トラ ぶっ て いる なら 原因 を 悪い 現象 を 正 く 分かり易く 説明 する 能力 を アピール できる と 思い ます よ 。 頑張っ て ください ね 。 グッドラック ！ 
ArrayList は FileList を 要素 に 持っ て いる の でしょ う か つまり ArrayList < FileList > list = … serial の 昇順 で 並べ 替える なら JDK 1 . 8 以後 なら list .s ort (( x , y )->{ return x .s erial - y .s erial ;}); JDK 1 . 7 以前 なら list .s ort ( new Comparator < FileList >() { @ Override public int compare ( FileList o 1 , FileList o2 ) { return o 1 .s erial - o2 .s erial ; } }); 
変数 = new java . util .S canner ( System . in ). nextLine (); 変数 に は String 型 の フィールド 名 を 指定 すれ ば OK です 。 
それ の 上 の if 文 が 閉じ られ て い ない だけ です 
これ を 読み替える と a が 初めて 10 を 超える まで 、 i が 奇数 の 時 だけ a に i を 足す 、 という 風 に なり ます 0 + 1 = 1 0 + 1 + 3 = 4 0 + 1 + 3 + 5 = 9 0 + 1 + 3 + 5 + 7 = 16 -> ここ で 初めて 10 を 超える 足す 値 という の は i と 等しい です から 、 最後 に 足さ れ た 7 は i < 10 を 満たし ます つまり 、 実際 に i < 10 が 偽 に なっ て ループ を 抜ける こと は ありません 
次 の 手順 で 作成 し て いけ ば よい と 思い ます 。 1 . 「 タートル グラフィックス コッホ 」 で google検索 し て 、 出 て き た サンプル を 参考 に する 。 2 . 直線 を 引く 箇所 で Thread . sleep () メソッド を 追加 する 。 結果 、 描画 が アニメーション に なる 。 
なぜ でしょ う ね スペック も 問題 ない です し ・ ・ ・ mod も 入れ て ない ん です よ ね 。 グラボ ドライバー も 最新 版 で java も 32 bit と 64 bit と 入れ て ある ん です よ ね 。 と なる と 、 java か マイクラ の ファイル の 破損 でしょ う か ね 。 マイクラ の ファイル 破損 の 場合 スタートボタン を 押し て % appdata % って 打っ て エンター . minecraft 内 の saves と resourcepacks と screenshots 以外 を 削除 もし texturepacks が ある なら それ も 残し て 大丈夫 です あと 他 に 関係 な さ そう な の が あっ たら 残し て も いい です 削除 後 に マイクラ を つける と 消し た の が 自動 で 再 生成 さ れ ます これ で 直る かも しれ ませ ん java の 場合 java を 普通 に アンインストール その後 、 OS ( C :) 内 の Program Files 、 Program Files ( x86 ) 内 に JAVA という フォルダ が 残っ て い たら 、 手動 で 右クリック し て 削除 し て ください その後 、 java の 32 bit と 64 bit を 再 ダウンロード 、 再インストール し て ください これ で 、 直れ ば いい ん です が 試し て み て ください 。 
まずは 、 エラー 内容 を 書い て ください 。 エラー 内容 が わから ない と 、 対応 の しよう が あり ませ ん 。 
一括 し て は 不可能 です 。 順番 に 、 なら 適当 に ループ 処理 すれ ば 可能 です 。 
> i が 54 または 55 の とき ずっと という の は ちょっと 違う か と 。 if ( fft . getBand ( i ) * 8 > 300 ) { // 処理 } else { flagc 2 = true ; flag d2 = true ; } が else 節 に 入っ たら また 。 まぁ 、 現実 に は 「 ずっと 」 に なる の かも 知れ ない けれど 。 本当に 1回 だけ で いい の なら else の 節 を 削っ ちゃえ ば いい 。 そう で ない なら 、 どういう 条件 で 再 描画 を かける の か を きちんと 考え て そういう プログラム に し ない と 。 
http:// tech booster .jp n . org / andriod / ui / 5056 / http:// blog . livedoor .jp / tak _ tak 0 / archives / 52002064 . html 一部 の キー は 取得 でき ない よう に なっ て いる よう です ね ^^; 
MG Frame の コンストラクタ で Graphics を 取得 し て おら れ ます が 、 コンストラクタ の 時点 で は Frame は 画面 に 表示 さ れ て い ない ので 、 g が null な の だ と 思わ れ ます 。 
以下 の サイト に サンプル コード が あり まし た 。 JTextPane で キーワード の SyntaxHighlight http:// ateraimemo . com / Swing / SimpleSyntaxHighlight . html コンストラクタ の 以下 の コード の " red " を " int " に 変更 し て 適用 し た い色 を 指定 し て ください 。 StyleConstants .s etForeground ( addStyle (" red ", normal ), Color . RED ); 実行 用 の main クラス です import java . awt . Color ; import java . awt . Dimension ; import javax .s wing . JFrame ; import javax .s wing . JTextPane ; import javax .s wing .S wingUtilities ; public class TestFrame extends JFrame { public void configure () { JTextPane tp = new JTextPane ( new SimpleSyntaxDocument ()); tp .s etPreferredSize ( new Dimension ( 500 , 500 )); tp .s etBackground ( Color . LIGHT _ GRAY ); add ( tp ); pack (); } public static void main ( String [] args ) { SwingUtilities . invokeLater (() -> { TestFrame frame = new TestFrame (); fra me. configure (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etVisible ( true ); }); } } 
不変 クラス を 作る に は 、 次 の ３つ の 条件 を 満たし ましょ う 。 １ ． final で クラス を 修飾 し 継承 禁止 を 宣言 する 。 サブクラス で Setter が 加わる の を 防ぐ ため ２ ． Setter を 用意 し ない 。 Setter で 変更 さ れ ない よう に し ます ３ ． すべて の フィールド は private 宣言 。 外部 から の 変更 を 禁止 し ます なお 、 抜け道 として リフレクション が あり ます が 、 これ が 行わ れる の は あまり 無く 苦肉の策 として 使わ れる ため 、 利用 さ れる 可能性 は 低い と 思い ます 。 なお 、 a の オブジェクト 、 b の オブジェクト と 言っ て い ます が 、 a 、 b に 関わら ず 廃棄 さ れる の は GC が 行わ れ た 時 です 。 それ まで は ゴミ として メモリ に 残っ て い ます 。 
> お 使い の 端末 は この バージョン に 対応 し て おり ませ ん 端末 が Android 5.0.2 という こと は 古い カメラ API を 使っ て いる 可能性 が 大 https :// developer . android . com / reference / android / hardware / Camera . htm ... API 21 移行 は android . hardware . camera 2 を 使わ ない と いけ ませ ん が 
個人 的 な 意見 です が 、 Pleiades All in One を 使う 、 しかも Full Edition を 使う の は あまり お 勧め でき ませ ん 。 Java は 本家 の Oracle から 、 Eclipse は 本家 の eclipse . org から それぞれ ダウンロード し 、 この Eclipse に Pleiades 日本語化 プラグイン を 追加 する 形 に する の が 、 理想 だ と 思い ます 。 Java の インストール から 始まっ て 、 Pleiades プラグイン の 追加 まで の 作業 を 、 次 の ページ で 解説 し て い ます 。 ちょっと 古い けど 、 内容 は 今 でも 通じる はず です 。 バージョン が 古い もの を 、 現在 の 新しい もの に 読み替える だけ な ので 。 http:// note . chiebukuro . yahoo . co.jp / detail / n 151046 http:// note . chiebukuro . yahoo . co.jp / detail / n 152842 なお 、 32 bit と 64 bit が ある の は 、 OS が どちら か 次第 です 。 64 bit OS なら ば どちら でも 動き ます が 、 Java も Eclipse も 同じ アーキテクチャ に 統一 する 必要 が あり ます 。 ただ 、 64 bit OS で あえて 32 bit 版 を 用いる 意味 は あまり ない ので 、 素直 に 64 bit 版 を 選ぶ べき でしょ う 。 32 bit OS なら ば 32 bit 版 しか 動き ませ ん から 、 選択 の 余地 は あり ませ ん 。 
「 Eclipse 4 . 6 ( 64 bit Full Edition )」 という の は Pleiades All in One の こと だ と 思う の だ けど 、 それ なら ば MergeDoc Project の サイト を 閲覧 し た はず です ね 。 トップページ 下 の 方 に 、 「 Windows 上 で zip を 解凍 する とき の 注意 」 という 項目 が あり ます が 、 この 中 でも Lhaplus で は 失敗 する ケース が ある もの として 記さ れ て い ます 。 まあ これ 自体 も かなり 古く に 書か れ た もの な ので 、 現状 に 即し て い ない 可能性 も あり ます が 。 Lhaplus を 使っ た 場合 、 解凍 によって 生成 さ れ た ファイル 名 や フォルダー 名 の 長さ （ 解凍 作業 を し た 場所 の フォルダー の 長さ も 含む ） が ある程度 以上 に なる と 失敗 する ケース が ある よう です 。 です から 、 例えば 「 C :\ work 」 など 極めて 短い 名前 の 作業 場所 を 作っ て 、 そこ に 圧縮 ファイル を 置い て 解凍 すれ ば 正常 に 行える 「 こと 」 も あり ます 。 それ も 絶対 の 保障 は でき ない ん です が 。 別 の 質問 で 「 All in One を 使わ ない 方 が いい 」 と 私 が 回答 さ せ て いただき まし た が 、 この 解凍 の 問題 も お勧め でき ない 理由 な ん です よ ね 。 同 梱 さ れ て いる プラグイン に 名前 が 非常 に 長い もの が あっ て 、 解凍 後 の フォルダー 名 が 長大 化 し やすく なっ て い ます 。 です から 、 Eclipse 本家 から 基本 構成 の もの を ダウンロード し て 、 プラグイン など は 後 から 自分 で 追加 する 方 が 、 こうした トラブル に 遭わ ず に 済む でしょ う 。 
http:// www . lancers .jp / landing _ page / client ? ad _ campaign = google _ UD 035 _... この へん とか ？ 
10 万 円 クラス から の ドローン で ある こと を 前提 で 説明 し ます ね 。 ドローン 本体 に は GPS や ジャイロ 、 気圧 高度計 など 各種 センサー を 搭載 し その 情報 に 基づき 位置 や 高度 、 姿勢 を 制御 する 能力 を 搭載 し て い ます 。 通常 は 操縦者 の コントローラー の 操作 により 前後 左右 上下 の 動き を その 制御 能力 で 補助 し て くれる ため 、 初心者 で も 即 思い通り の 操縦 が できる よう に なっ て い ます 。 この 制御 能力 を 利用 し 、 コントローラー 側 から 飛行 す べき ルート や 高度 情報 を ドローン に 送り込む こと によって 自動 飛行 を 実現 さ せ て い ます 。 自律 飛行 の 一 例 として 、 前方 の 障害 物 を カメラ で 捕らえ 回避 し たり 、 地上 の 目標 物 （ 人物 ） を カメラ に 学習 さ せ 自動 追尾 する など が 可能 です 。 更に 高額 な 機体 に なる と 用途 に 合わせ て カメラ を 交換 できる もの も あり ます 。 GoPro クラス の 小型 カメラ から 一眼レフカメラ 、 赤外線 サーモグラフィカメラ など 交換 でき ます 。 映像信号 は カメラ 本体 の メモリー に 記録 さ れる と 同時に HDMI 出力 を 電波 で 送信 し 、 リアルタイム に 地上 の 受信機 経由 で モニタ 表示 を 行う こと も でき ます 。 目視 外 飛行 と いい ます が 、 この 映像 を 見 ながら 見え ない 場所 に いる ドローン を 操縦 する こと も 可能 です （ 災害 現場 で ドローン 空撮 さ れる 場合 が こんな 感じ です ） 。 言語 に関して は ドローン メーカー 、 画像 伝送 用 機器 メーカー 内 の ブラックボックス な 部分 な ので 分かり かね ます 。 一部 オープンソース 化 さ れ て いる 機体 も あり ます が 。 
Android studio について は よく 知り ませ ん が 、 エディタ 画面 の フォント が 「 P ゴシック 」 や 「 MS UI ゴシック 」 など に なっ て い ませ ん か ？ プロポーショナルフォント （ 文字 ごと に 横 幅 が ちがう フォント ） だ と 文字数 が 同じ で も ずれ て 見え ます 。 フォント を 「 MS ゴシック 」 など に 変え られる の なら 変え て み て ください 。 
アカウント を 変え て も 同 一人物 で ある ため バレバレ です 。 javapuroguramugenngo de _ tabe _ su _ puroguraminngugenngo html _ puroguraminngugenngo java _ puroguraminngugenngo javascript _ puroguraminngugenngo swift _ puroguraminngugenngo rudy _ puroguraminngugenngo python _ puroguraminngugenngo php _ puroguraminngugenngo perl _ puroguraminngugenngo csya _ pu _ puroguraminngugenngo 
クラス を 作っ て データ を 格納 し 、 Collections .s ort を 使え ば よい と 思い ます 。 以下 、 サンプル です 。 生徒 名 、 数学 と 英語 の 点数 と 合計 を 持つ クラス を 作っ て ソート し て ます 。 -- ソース -- package test 20160714 ; import java . util . ArrayList ; import java . util . Collections ; import java . util . Comparator ; import java . util . List ; public class StudentSortSample { public static void main ( String [] args ) { class Student { public String name ; public int math ; public int eng ; public int sum ; public Student ( String name , int math , int eng ) { super (); this . name = name ; this . math = math ; this . eng = eng ; this .s um = math + eng ; } } List < Student > students = new ArrayList <>(); // txt ファイル から 読み取る 代わり に 直接 add し て ます 。 students . add ( new Student (" name 1 ", 50 , 41 )); students . add ( new Student (" nam e2 ", 50 , 40 )); students . add ( new Student (" nam e3 ", 50 , 42 )); students . add ( new Student (" nam e4 ", 49 , 40 )); Collections .s ort ( students , new Comparator < Student >() { @ Override public int compare ( Student s1 , Student s2 ) { return s1 .s um < s2 .s um ? 1 : - 1 ; } }); for ( Student s : students ) { System . out . println ( s . name + " " + s .s um ); } } } -- 結果 -- nam e3 92 name 1 91 nam e2 90 nam e4 89 
> ID 非公開 さん 普通 は 作者 が 使い かた を 文書 など で 提供 し て ます それ が ない なら ソースコード を 読む しか ない 作者 が 使い かた を 決めて て それ に従って 使う しか ない ので 作者 提供 の 情報 を 調べる しか 使い かた を 調べる 方法 ありません まず それら の 文書 が ある か 調べ ましょ う 一般的 に は 配布 し てる 本家 の ホームページ 配布 物 の なか など に 使い かた が 含ま れ て ます FEM 自体 古く から 色々 な 種類 が あっ て 多分 それ マイナー な 気 が し ます もっと メジャー な ソフト で 同じ こと できる と 思う ので それら の 情報 が 豊富 で ユーザー も 多い もの を 使っ た 方 が 良い よう な 気 が し ます 情報 を 調べ やすい こと も ソフト を 選択 する 上 で 非常 に 重要 だ と 思い ます 
あなた の 課題 だ から 教え すぎ ない よう に し ない と ... しかし 、 その プログラム を ベース に 「 迷路 」 化 しろ と いう の か ... 意地悪 と いう か 、 そもそも サンプル として どう だろ う 。 いくつ か 「 サンプル 」 という かお 手本 プログラム に する に は 突っ込み 入れ たい 点 は ある けれど 、 今 は 置い て おく として 。 普通 は 、 ゲームフィールド を グリッド に 切っ て 、 グリッド の 一つ 一つ を 道 と 壁 と に 振り分け て いく もの でしょ う 。 今 の プログラム で は 、 単に 座標 から 端っこ を 検出 し て 道 と し て いる だけ な ので 、 そこ から 大きく 方針 を 変え なきゃ いけ ない です 。 例えば 40 x40 ドット を 1 グリッド と すれ ば 、 ゲームフィールド は 10 x10 ( サンプル の まま の サイズ で は 割り切れ ない けれど ) と する あたり でしょ う か 。 これ を 二 次元 配列 で 表現 し ます 。 移動 の 処理 の 時 に は 、 移動 後 の 位置 の グリッド を チェック し て 、 これ が 通路 で あっ た 時 だけ 進む よう に し ます 。 迷路 自体 は ... 綺麗 に 掘り進む と なる と それ 自体 一 仕事 に なり ます ね 。 多分 ゲーム の 世界 で は 定番 の 迷路 作成 方法 が ある の かも 知れ ませ ん が 、 ・ 最初 は 全体 を 壁 に 設定 する ・ ある 一 点 から 掘削 開始 ( 道 に 設定 する ) ・ ランダム に 方向 を 決めて ・ そちら の 方向 が 既に 「 道 」 に なっ て い たら 「 道 」 を 進む 。 壁 だっ たら 仮に 「 道 」 に する 。 画面 から はみ出す とき は 方向 を 決め 直す ・ いま 作っ た 「 道 」 によって 「 大穴 」 が 開か ない こと を 何らかの 方法 で 判定 、 ダメ なら 方向 を 決め 直す ・ 方向 を 決める ところ から 適宜 繰り返し て 、 ある 個数 「 道 」 が 出来 たら 止める と か でしょ う か 。 ( 思いつき で 言っ て いる から 、 この 方法 で うまく 迷路 が 出来る か どう か は わかり ませ ん ) 敵 は 、 敵 専用 の 位置 保持 変数 を 作っ て 、 そこ に 敵 を 描い て 、 当たり判定 を し て 、 移動 し て ... と 言っ て しまえ ば 簡単 です けど ね 。 
ソースコード の まま で は コンピューター は 処理 でき ない ので 、 コンパイル を し なけれ ば なり ませ ん 。 手順 として は 1 . ソースコード ファイル を ( クラス 名 ). java という 形 で 保存 する Java でし たら 、 ソースコード は この よう に なっ て いる はず です ので 、 public class と なっ て いる ものの クラス 名 が ファイル 名 と する クラス 名 と なり ます 。 import … ; … public class ( クラス 名 ) { … } class ( クラス 名 ){ … } … 2 . public static void main という の が 書い て ある クラス の 名前 を 覚え て おく ( この クラス を メイン ・ クラス と 言い ます 。 ) 3 . http:// aim eg u. webcrow .jp / java / の 下 の ほう の 「 これから Java を 始める 人 へ 」 という 部分 を 見 ながら 環境 構築 ( Java 開発 環境 が ない 場合 ) 4 . コマンドプロンプト ( C :\ Windows \ System 32 \ cmd . exe ) を 起動 5 . ファイル を 保存 し た ディレクトリ に 移動 例 ) 表示 さ れ て いる の が C :\ Users ( ユーザー 名 ) と 仮定 cd Documents cd / d D :\ 6 . javac ( 拡張子 を 含む ファイル 名 ) これ で コンパイル が 完了 し 、 ( クラス 名 ). class という ファイル が できる はず です 。 これ で そのまま java ( メイン ・ クラス 名 ) と 打て ば 実行 でき ます 。 
簡単 に です が 、 ボタン を 押す と ラベル が 1 秒 ごと に 切り替わる サンプル です 。 btnNewButton . addActionListener ( new ActionListener () { @ Override public void actionPerformed ( ActionEvent e ) { new Thread ( new Runnable () { int i ; @ Override public void run () { for ( i = 0 ; i < 5 ; ++ i ) { SwingUtilities . invokeLater ( new Runnable () { @ Override public void run () { synchronized ( MyFrame . this ) { lblNewLabel .s etText ( Integer . to String ( i )); } } }); try { Thread . sleep ( 1000 ); } catch ( InterruptedException ex ) { } } } }). start (); } }); 
私 の 場合 、 勉強 と 再確認 の ため です 。 回答 する からには 、 間違わ ない よう に 裏 を とっ て から 回答 し ます 。 裏 を 取る ため に 色々 調べ なく て は なり ませ ん から 、 知識 を 再 定着 さ せ たり 、 調べる 過程 で 思わ ぬ 発見 が あっ たり し ます 。 あと は 、 他 の 回答者 さん の 回答 を 見る と 勉強 に なり ます 。 > タダ で 差し入れ する 清々し さ 実は そんなに 清々しく も ない です 。 自分 は 教え て あげ て いる ん だ 、 という 変 な 自己満足 が あり ます 。 しかし 、 学校 の 課題 を 丸投げ し て いる よう な 質問 に は コード を 提示 し ない よう に し て い ます 。 
全角 文字 が 混ざる と エラー に なり ます 。 例えば 、 以下 は エラー に なり ませ ん ので 参考 に し て ください 。 package test 20160722 ; class Test { public void test () { boolean a = false ; boolean b = false ; boolean c = false ; if (( (a) && ( b )) && ( c )){ // 条件 が ３つ とも 正しけれ ば System . out . println (" 合格 "); } else { // それ 以外 だっ たら System . out . println (" 不 合格 "); } } } 
どこ か に 全角 スペース が ある の でしょ う か ？ ローカル で やっ たら コンパイル でき た ので 、 インデント の 箇所 を 調べ て み て ください 。 （ 行頭 の スペース ） 
nanco _ nannan さん の 言う 通り で 、 main は static メソッド な ので 、 static で ない メソッド を コール する よう な 記述 で は 、 コンパイル が 通り ませ ん 。 と まぁ 、 いろいろ と 突っ込み どころ は ある ん です が 、 自分 は 、 最初 の 方式 です ね 。 後 の 方式 だ と 、 met ho d2 () を 削除 する 場合 、 met ho d3 () の コール を met ho d1 () に 移植 し なく て は なら ない ので 。 前 の 方式 だ と 、 met ho d2 () を コール する 部分 を コメントアウト すれ ば 終わり です ので 。 要は 、 なにか 修正 し た 時 に ほか に 影響 が ある よう な 作り に は し ない よう に し ます 。 
以下 で 良い と 思い ます 。 引数 が String で ない と エラー です 。 fortune [ i ] = new JButton ("" + i + 1 ); // ここ で エラー が 出 て しまい ます 
ここ の サイト に 簡単 な サンプル 付き で 解説 が あり ます 。 http:// allabout . co.jp / gm / gc / 80645 / 
Java なら 次 の main メソッド を 実行 し て み て は ・ ・ 。 public class TrueOrFalse { public static void main ( String [] args ) { int n 1 = 22 , n2 = 67 , n3 = 0 , n4 = 47 , n 5 = 17 , n 6 = 50 ; boolean b = true ; if (( n2 > n 6 ) || b ) System . out . println (" A :" + " true "); else System . out . println (" A :" + " false "); if ((! b )&&( n 1 <= n4 )) System . out . println (" B :" + " true "); else System . out . println (" B :" + " false "); if (( n2 < n 6 )&&( n4 >= n 1 )) System . out . println (" C :" + " true "); else System . out . println (" C :" + " false "); if ( ( n3 < n 5 )||( n2 <= n 1 )) System . out . println (" D :" + " true "); else System . out . println (" D :" + " false "); if (!( n 1 < n3 )&&( n 5 != n4 )) System . out . println (" E :" + " true "); else System . out . println (" E :" + " false "); } } 結果 を 見 て 、 何故 そう なる の か を 考え て み ます 。 ※&& は 論理積 な ので 、 左辺 と 右辺 の 論理式 が どちら も 真 （ 正しい ） 場合 に true ※|| は 論理和 な ので 、 左辺 と 右辺 の 論理式 の いずれ か が 真 （ 正しい ） 場合 true ※ 上記 以外 の もの が false 
rpm は 、 RedHat 系 用 です ね 。 無理矢理 インストール する プログラム も あり ます が 、 大概 うまく 行き ませ ん 。 Debian 用 の deb ファイル を 捜し て インストール し て ください 。 
Jota + が オープンソース です 。 https :// code . google . com / archive / p / jot a-tex t - editor / source Google Code から ダウンロード 可能 です 。 完成 し て いる やつ https :// play . google . com / store / apps / details ? id = jp .s blo . pandora . jota .... 
「 オブジェクト指向 と は 」 で 検索 し て み て ください 。 
コード 見 ない と 何とも 言え ない けど 、 そこ の 部分 、 文字列 じゃなくて バイナリ で は ？ 実際 の データ を １ ６ 進数 で 表示 する よう に 変え て 、 それ が テキスト か どう か 確認 し て み て ください 。 
何 か 、 tomcat の 動作 環境 が 整っ て い ない みたい です ね 。 OS は 、 何 です か ？ Java ( jre ? jdk ) は 、 どこ の java で 、 バージョン いくつ が 入っ て い ます か ？ 
jar ファイル が 足り ない の で は ない でしょ う か ？ 以下 の 手順 で 実行 でき まし た 。 1 . プロジェクト 直下 に lib フォルダ を 作る 。 2 . 以下 の jar ファイル を lib フォルダ に 格納 ・ j3 dcore . jar ・ j3 dutils . jar ・ vecmath . jar 3 . 以下 の 手順 で ライブラリ を 追加 プロジェクト を 右クリック ->「 プロパティ 」 Java の ビルド ・ パス を クリック 右 ペイン の 「 ライブラリー 」 タブ を クリック 「 JAR の 追加 」 ボタン を クリック 2 . で 格納 し た jar 3つ を 追加 
「 System . out . println ( str );」 で 配列 変数 そのもの を 引数 に し て いる から です 。 例えば 、 以下 の よう に すれ ば 良い と 思い ます 。 k = 0 ; for ( int i [] : num ) { System . out . print ( str [ k ++]); for ( int j : i ) { System . out . print (" " + j + " "); } System . out . println (); } 
モダン に 書く と こんな 感じ 。 class Main { enum Header { 学生 番号 , 英語 , 数学 , 平均 , 最高 点 , 最低 点 ; } static class Student { private String [] values ; private IntSummaryStatistics statistics ; public Student ( String line ) { String [] columns = line .s plit (" "); statistics = Arrays . stream ( columns ). skip ( 1 ). mapToInt ( Integer :: valueOf ). summaryStatistics (); values = Stream . concat ( Arrays . stream ( columns ), Stream . of ( String . valueOf ( statistics . getAverage ()), String . valueOf ( statistics . getMax ()), String . valueOf ( statistics . getMin ()))). toArray ( String []:: new ); } public static void view ( Student student ) { Arrays . stream ( Header . values ()). forEach ( header -> System . out . println ( header . name ()+"="+ student . values [ header . ordinal ()])); } } public static void main ( String [] args ){ System . out . println ( Arrays . stream ( Header . values ()). limit ( 3 ). map ( student -> student . name ()). collect ( Collectors . joining (" "))); try ( BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ))){ br . lines (). limit ( 3 ). map ( Student :: new ). collect ( Collectors . toList ()) // 一度 リスト に し て いる の は 、 そう し ない と 入力 さ れ た 途端 に 出力 さ れ て しまう ため 。 .s tream (). forEach ( Student :: view ); } catch ( IOException e ) {} } } 
その 参考書 が でる だいぶ 前 に 勉強 し て まし た ので 、 読ん だ こと は ありません が 、 ほぼ 書い て ある 内容 は できる と 自負 し て い ます 。 とりあえず 、 パソコン を 使っ て 打ち ましょ う 。 初心者 の 覚える 基礎 の 中 で 、 あなた が 使う もの は そう 多く ない はず です 。 使っ て いけ ば 、 自ずと 勉強 す べき 方向 が 見え て き ます 。 
クラス 名 MainActivity が 入れ子 に なっ て いる の が 原因 で は ない でしょ う か ？ 内側 に 定義 し て ある MainActivity の 名前 を 変える と 解消 できる と 思い ます 。 
コンパイル すれ ば 、 正常 に 動作 し ます 。 
＞ エラー が 出 て しまい ます 。 エラー の 内容 や どういう コード な の か が わかり ませ ん ので ざらっと し た 事 だけ ＞ MainActivity 以外 の Activity MainActivity で 動作 し て い た の で あれ ば その他 の Activity へ の 移行 が 問題 な の か Activity 自体 の 設定 が 間違っ て いる か です Jsoup を 別 の Activity において も 、 クラス に 置い て 実行 さ せ て も でき ます また 、 ネット 接続 で の HTML 解析 で ある なら ば 非同期 で 行う の が 原則 です 
会社 は 教育機関 で は ありません から 、 誰 も が 独学 で やっ て いく こと に なり ます 。 教え て もらわ なく て は でき ない の で は 、 この 先 厳しい と 思い ます 。 あなた は 、 情報 系 に 触れ て い なかっ たもう 一 人 の よう に 、 書籍 は 買わ なかっ た の です か ？ 本 を 一 冊 読め ば 、 言語 自体 の 基本 は ある程度 身 に つき ます 。 もし 買っ て い ない の で あれ ば 、 今 から でも 始める べき か と 思い ます 。 
「 JTextField tf = new JTextField ( 15 );」 → 「 JTextField tf = new JTextField (" 15 ");」 JTextField ( int columns ) 指定 さ れ た 列 数 で 新しい 空 の TextField を 構築 し ます 。 JTextField ( String text ) 指定 さ れ た テキスト で 初期 化 さ れる 新しい TextField を 構築 し ます 。 
tomcat の 実行 ユーザー は 、 / etc / default / tomcatX に あり ます 。 8 なら 、 / etc / default / to mc at8 の TOMCAT 8 _ USER = to mc at8 を 、 自分 の ユーザー 名 に し て 、 tomcat を 再起動 し て ください 。 
word 1 [ in de x1 ]、 word 3 [ in de x3 ] を String の 配列 に 入れ て 、 さらに 要素 番号 を ランダム に 決める 方針 で 良い と 思い ます 。 以下 、 サンプル です 。 -- ソース -- package test 20160726 ; import java . util . Random ; public class Yahooq 10162130565 { public static void main ( String arg []) { Random rna = new Random (); String [] word 1 = { " 1 ", " 2 ", " 3 ", }; int in de x1 = rna . nextInt ( word 1 . length ); Random rnb = new Random (); String [] word 2 = { " a ", " b ", " c ", }; int index 2 = rnb . nextInt ( word 2 . length ); Random rnc = new Random (); String [] word 3 = { " あ ", " い ", " う ", }; int in de x3 = rnc . nextInt ( word 3 . length ); // 上下 の ランダム 表示 String [] temp = { word 1 [ in de x1 ], word 3 [ in de x3 ]}; int tempIndex 1 = rnb . nextInt ( temp . length ); int tempIndex 2 = ( tempIndex 1 + 1 ) % 2 ; System . out . println ( temp [ tempIndex 1 ]); System . out . println ( word 2 [ index 2 ]); System . out . println ( temp [ tempIndex 2 ]); } } -- 実行 結果 （ 毎回 変わる ）-- あ c 1 
iPhone から ソース を 書く の は 面倒くさい ので コード は 書き ませ ん が 、 セッション スコープ に ログイン 情報 を 登録 し て 、 loginlist という 名前 を 付け て いる ので 、 jsp から は session . loginlist . getIds () に 該当 の データ が あり ます 。 後 は 、 この まま メソッド として 使う なり 、 el式 で 使う なり 好き に し て 下さい 。 ところで 、 名前 の つけ 方 に センス が 無い ですよ。 セッション スコープ は セッション 単位 な ので 、 単一 ユーザー しか 入ら ない はず な のに 何故 list と 付け てる の ？ id も 単一 な のに 何故 複数形 ？ java は 名前 を 大事 に する 言語 な ので 、 名は体を表す よう に 命名 し て 下さい 。 
一 例 です 。 package test 20160727 ; public class Yahooq 10162173690 { public static void main ( String [] args ) { System . out . println ( 0 ); for ( int i = 0 ; i < 100 ; i ++) { for ( int j = 0 ; j < 5 - ( i % 5 ) - 1 ; j ++) { System . out . print ("*"); } System . out . println ( i ); } } } 
> img . clearAnimation ( anim ); anim が スコープ 外 な ので ビルド エラー に なる でしょ う http:// gihyo .jp / dev / serial / 01 / code / 000302 そもそも anim はいり ませ ん img . clearAnimation (); で いい です 
セッション 管理 し て 、 セッション に 必要 な 情報 を 保存 すれ ば いい と 思い ます 。 http:// www . javadrive .jp / servlet / session / http:// www . javadrive .jp / servlet / jsp _ object / 
フルスクラッチ なら 特に 条件 は 無い はず です 。 オリジナル コード が ある なら その ライセンス 次第 でしょ う 。 > 拡張子 が 、 vim の スクリプト を 公開 する 予定 です 。 一応 vimball 形式 という の も あり ます 。 : help vba また NeoBundle 等 の プラグイン 管理ツール を 使う 上 で は 、 GitHub や SourceForge など で ホスティング する の も １つ の 方法 です 。 
こんな 感じ です 。 rs = st . executeQuery (); if ( rs . next ()) { i = rs . getInt ( 1 ); System . out . println (" count = " + i ); } else { System . out . println (" error : could not get the c ounts ."); } 
日本語 が 難し すぎ て 何 を し たい の か よく わかり ませ ん 。 ・ ( nameId : colerId ) という テーブル が あり 、 属性 名 を 登録 する 際 に nameId だけ 値 を 入れ て colerId に null を 登録 し て いる 。 ・ この データ を nameId で 検索 する と colerId が null な ので エラー に なる という こと だ と 思い ます が 、 この 後 突然 、 部署 色 テーブル とか 、 カラム も 不明 な テーブル が 出 て き て い ます 。 これ は なん でしょ う か 。 colorId 値 が なかっ たら 取ら ない 、 という の で あれ ば 、 単に select colerId from テーブル where nameId =' ID 値 ' という SQL の 後ろ に and colerId is not null を 付けれ ば いい でしょ う 。 
確か プロジェクト に java ファイル を 追加 する 必要 が あっ た 気 が し ます 。 
OS は 何 でしょ う か 。 windows でしょ う か 。 windows なら 、 拡張子 の 表示 設定 は し て い ます か 。 実は 拡張子 の 表示 設定 を し て おら ず 、 ファイル 名 として 表示 さ れ て いる の は Hoge . jar で あっ て も 、 実際 の ファイル 名 は Hoge . jar .zip だっ たり し ませ ん か 。 
疑問 な の は 何故 Excel の カテゴリ で 質問 する の か って こと です ね 。 
1 . パソコン に LINE アプリ を いれる 2 . java を zip 圧縮 する 3 . ドラッグアンドドロップ もしくは 1 . google drive に アップ する 2 . 公開 を URL を 知っ て いる 人 全員 に する 3 . URL を 張り付ける 
私 は ネット 上 で 見つけ た Java の コード を ひたすら eclipse の プロジェクト に コピ って ビルド し て 挙動 を 勉強 し て という の を 繰り返し て き まし た 。 そもそも 私 は C言語 で プログラミング の 基礎 は ある程度 押さえ て い た ので 別言 語 に 移行 し た 時 に 移行 し やすかっ た です 。 プログラミング は とにかく 経験 が モノ を 言う と 思い ます が 、 難しい もの を いきなり やる と 、 domybestforitszu さん が 仰る 通り 、 ソースコード が 文字 の 羅列 に 見え て き て しまう ので 、 C言語 で 勉強 し た 順番 で やる の が いい と 思い ます 。 つまり 、 C言語 で コンソール に " Hello World " と 出す の を 一番 最初 に やっ た なら 、 Java で も まずは " Hello World " を 表示 さ せる こと から 、 全部 メイン 関数 に 書い て た なら 全部 メイン メソッド ( public static void main ( String [] args ) という メソッド ) に 書く 。 こんな 感じ で いい と 思い ます よ 。 
> sleepy _ cause さん ＞ ・ zos . close (); は 不要 try with resource 文 で 書い て いる ので ごめんなさい 、 それ 前回 の 質問 で 私 が 書い た コード を 質問者 さん が そのまま 一 字 一 句 たがわ ず 、 勉強 も 理解 も せ ず に 丸コピー し て いる せい です 。 私 の 方 で ミ スっ た 部分 も そのまま コピー し てる ん です ね 。 stream コピー の 部分 も ネット で 拾っ て き た の を 理解 せ ず に 劣化 コピペ し て いる ので 、 なぜ 1024 バイト より 大きい データ が うまく 圧縮 でき ない の か など も わから ない と 思い ます し 、 コード 提示 し て も そのまま 勉強 せ ず に 丸コピー し て 使う だけ と わかっ た ので 、 今回 は スルー し まし た 。 あと は よろしく お願い いたし ます m(__)m 
私 の やり方 C ≠ F だ から 、 C = 4 で なけれ ば なら ない 。 さらに 、 F の 値 は 3 以下 だ という こと が わかる 。 そして 、 K の 値 は １ or 2 という こと も わかる 。 あと は 、 残り の アルファベット の 組み合わせ を すべて 考慮 する か なー 
https :// www . java . com / ja / download / faq / win 10 _ faq . xml 上記 ページ に 「 Edge ブラウザ で は プラグイン が サポート さ れ ない ため 、 Java は 実行 さ れ ませ ん 。 」 と あり ます 。 添付 さ れ て いる 画像 を 見る と Edge を 使っ て いる よう に 見受け られ ます 。 IE で html を 開い て みる の は 試し まし た か ？ html ファイル を 右クリック ->「 プログラム から 開く 」->「 Integernet Explorer 」 で できる と 思い ます 。 
■ 前半 について Eneter キー 4回 目 の 入力 で NumberFormatException が 発生 し て い ます 。 webページ 47 行 目 「 int s3 = Integer . parseInt ( br . readLine ());」 で 入力 待ち 状態 に なっ た とき 、 未 入力 で Enter キー を 押す と 、 空文字 入力 と なり 、 「 int s3 = Integer . parseInt ("");」 が 実行 さ れ ます 。 空文字 "" は 数値 に 変換できない ので 上記 エラー が 発生 し ます 。 数値 の 入力 は 1 以上 が 前提 の よう です ので 、 以下 の よう に エラー を 回避 すれ ば よい と 思い ます 。 package test 20160711 ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Test 115 Etc { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println (" サバ は 英語 で ？"); System . out . println (" 1 : needle fish 2 : seerfish 3 : mackerel 4 : smelt "); int s3 = 0 ; try { s3 = Integer . parseInt ( br . readLine ()); } catch ( NumberFormatException e ) { // 数値 以外 が 入力 さ れ た 場合 、 何 も し ない 。 } System . out . println ( s3 ); } } ■ 後半 について おそらく Eclipse の コンソール の こと を 言っ て いる と 思う の です が 、 カーソル は 自動的 に は 最下 に は 移動 し ない よう です 。 例えば 、 DOSプロンプト で は 次 の 行 に カーソル が 移り ます 。 
職業 プログラマー を し て いる 者 です 。 画像 が 荒く て 見づらい です が 、 読み取れる 範囲 で お答え し ます 。 ------------- > ① 2 行 目 Person p = new Person (); は 、 何 を 行っ て いる の でしょ う か 。 > 図 を 見る と 「 Person という オブジェクト の age を 参照 し てる ？ 」 まず これ に お答え し ます 。 > Person p = new Person (); まず 大前提 として 、 おそらく この ページ より 前 に 、 class Person ..... といった 定義 が ある の だ と 思い ます 。 （ それ か 省略 し て いる か ） そう だ と する と 、 「 Person 」 の よう に 大文字 から 始まる もの は 【 クラス 】 （ ひな形 ） を 表し ます 。 逆 に 「 p 」 の よう に 小文字 から 始まる もの は 【 オブジェクト 】 （ 構造物 ） を 表し ます 。 「 new クラス 名 ( 引数 ); 」 と なっ て いる とき は 、 クラス （ ひな形 ） を 元 に 構造物 （ オブジェクト ） を 作成 し ます 。 今回 の 場合 は 、 「 p 」 という 名前 の オブジェクト を 新た に 作成 し て い ます 。 さらに 「 Person p = ... 」 は 、 Person クラス の p オブジェクト に 、 ... を 代入 する 、 という 意味 です 。 ------------- 順番 が 飛び ます が 、 次 は ３ です 。 > ③ 2 行 目 と 3 行 目 の 文 は 、 「 Person という オブジェクト の age を 参照 」 という こと です か ？ > 2 行 目 で 参照 する オブジェクト 名 を 指定 し 、 3 行 目 で 参照 する 変数 を 指定 し てる という こと でしょ う か 。 p . age = 10 という 文 において 、 p は Person という ひな形 から 出来 て いる ので 、 Person （ 人 ） が age （ 歳 ） という 要素 （ フィールド ） を 持っ て いる と 推測 でき ます 。 = は 「 代入 演算子 」 な ので 、 p という 構造物 の age という 要素 に 10 を 代入 する という 意味 に なり ます 。 質問 の なか で 「 age を 参照 」 という 言葉 を 使わ れ て い ます が 、 もし イコール が なく p . age だけ なら 参照 で 正しい です が 、 「 代入 演算子 」 が 付い て いる と 、 参照 で は なく 代入 と なる こと に 注意 です 。 これ は Person p = new Person (); にも 同じ こと です 。 ------------ 最後 に ２ に お答え し ます 。 > ② Person という オブジェクト 内 に age が ある よう です が 、 p . age と age は 同じ もの です か ？ > プログラム 内 で p . age に 1 を 加え て いる よう です が 、 図 だ と Person という オブジェクト 内 の age が 変化 し てる よう に 見える ので 。 はい 、 その 通り です 。 上 で 説明 し た よう に 、 まず ３ 行 目 で 10 を 代入 し て い ます 。 【 ３ 行 目 ： p . age = 10 ; 】 次に ４ 行 目 で birthday メソッド が 呼ば れ て い ます 。 【 ４ 行 目 ： birthday ( p ); 】 birthday メソッド の 定義 の 中 に 、 次 の よう に あり ます 。 【 ９ 行 目 ： p . age ++ 】 【 10 行 目 ： System . out . println ( p . age ); 】 まず ９ 行 目 の p は 、 １つ 目 の 引数 で ある Person を 指す ので 、 ２ 行 目 の p と 同一 です 。 ++ 演算子 は 、 値 を 1 増加 さ せる という 意味 です ので 、 p は 11 と なり ます 。 10 行 目 で は 、 p . age を 標準出力 に 書き出し て い ます （ ＝ 11 と 表示 ） ここ で 11 と なる の は 、 まず 3 行 目 で 値 が 10 と なり 、 次に 9 行 目 で 1 増加 し て いる から です 。 
「 ウイルス もどき 」 の 定義 は ？ 
＞ 4 . 2 以降 の バージョン は 解凍 時 に CRC エラー が 出 ます 。 ＞ 解凍 ソフト を 変え て も 同じ エラー です 。 ダウンロード し た ファイル が 壊れ て い ます 。 CRC エラー は 壊れ た ファイル を 展開 ( 解凍 ) し た 時 に 出る エラー です 。 私 の 書い た 知恵 ノート が 参考 に なる と 考え ます 。 ・ 「 解凍 でき ませ ん でし た ！ 書庫 で は ない か 、 壊れ て い ます 。 」 の 対処 http:// note . chiebukuro . yahoo . co.jp / detail / n2 6582 
「 JOptionPane .s howMessageDialog ( null ,, s +" id です ");」 → 「 JOptionPane .s howMessageDialog ( null , s +" id です ");」 カンマ が 多い です 。 
> スケジュール 帳 が 人 の ため に 予定 を ゲット し たり セット する の は 不自然 に 感じ ます はい その 通り です が 、 ポエム で ファンタジー な Java ベース の ゲーム だ と 、 スケジュール 帳 に 腕 が 生え て まし て 、 まさに スケジュール 帳 が 人 の ため に 予定 を get し たり set し たり し ます 。 その 時 は 、 デズニー 的 な 、 手 が 生え て い て 宙 に 浮かん で いる スケジュール 帳 君 が 、 予定 を 自ら に write し たり 、 予定 を read し て 人 に 読み 聞か せる 、 という write / read という 単語 の 選択 に なる こと でしょ う 。 この 辺り は 、 英単語 から 受ける 想像力 や 英文 読解 力 の 違い によって 、 思考 そのもの が 異なり ます 。 ＊ ＊ ＊ > 犬 オブジェクト な ので 、 この サイト を 始め に 引き合い に 出す と 、 話 は 早く なり ます 。 Getter / Setter は 悪 だ 。 以上 。 | To Be Decided https :// tbd . kaitoy . xyz / 2015 / 07 / 22 / getters - setters - evil / ＊ ＊ ＊ な ので 、 あと は 非常 に 文芸 的 な 話 でし て 、 普通 の 犬 が 体重 を 外部 から get 出来 ない の は その 通り です 。 「 犬 が 体重 を get する 」 など という 怪しげ な 英文 は 、 「 Colorless green ideas sleep furiously 」 （ 直訳 : 無色 の 緑色 の 考え が 猛烈 に 眠る ） と 同等 の 、 ナンセンス な 英文 を 構成 し ます 。 Colorless green ideas sleep furiously - Wikipedia https :// ja . wikipedia . org / wiki / Colorless _ green _ ideas _ sleep _ furiously これ は いかにも ナンセンス な の です が 、 この 英文 が 意味 を もっ て しまう 文脈 も ある ので 、 どういう 英単語 が ナンセンス な の か は 、 その 語 が 置か れる 文脈 に 依り ます 。 な ので 、 get ・ set という 英単語 で は なく 、 別種 の 英単語 を うまーく 選定 すれ ば 、 オブジェクト指向 の 考え方 が さらに 達成 できる でしょ う 。 
いやいや 、 そこ は ソース の 通り if ( movie . avail able ()) { // movie . avail able が true なら （ ← true の 時 しか この if 文 に 入り ませ ん よ ね ？ ） movie . read (); // フレーム を どんどん 読み込む println ( movie . avail able ()); //（← ここ で false が 出 まくり ます 。 true じ ゃないとこここれないのになんで false 出る ????） } で Movie :: read () 有り で 考え なきゃ いけ ない と 思い ます よ 。 https :// processing . org / reference / libraries / video / Movie _ avail able _. h. .. では Returns " true " when a new movie frame is avail able to read と なっ て い ます 。 ' new ' movie frame が ある とき 、 です ね 。 movie . read (); し た 直後 は つまり 読み込ん で しまっ た ' old ' frame しか ない わけ です から 、 普通 は avail able () は false を 返す でしょ う 。 概ね の 構造 として は 、 boolean Movie :: isAvailable ; みたい な フィールド が あっ て 、 ビデオ の 入力 イベントハンドラ 内 で Movie :: movieEventField (){ if ( フィールド の 準備 完了 ){ isAvailable = true ; } } で 、 Movie :: read (){ if ( isAvailable ){ // フィールド 読み出し 処理 isAvailable = false ;// 新しい フィールド を 消費 し た } } みたい な こと に なっ て いる の で は ない か と 想像 し ます 。 
以前 座標 変換 に関する 質問 へ の 回答 の 際 に 使っ た サンプル コード です 。 AffineTransform :: scale で x 座標 の 符号 を 変える 事 により 左右 反転 を 行っ て い ます が 、 この メソッド で 任意 の 比率 で 拡大 ( 縮小 ) が 行え ます 。 イメージ は ImageIO など で 画像 ファイル を 読み込ん で 生成 し た Image オブジェクト を 使っ て も 動作 は 変わり ませ ん 。 ////////// AffineTransformTest . java ////////// import java . awt . Color ; import java . awt . Dimension ; import java . awt . Font ; import java . awt . Graphics ; import java . awt . Graphics 2D ; import java . awt . Image ; import java . awt . geom . AffineTransform ; import java . awt . image . BufferedImage ; import javax .s wing . JFrame ; import javax .s wing . JPanel ; import javax .s wing .S wingUtilities ; public class AffineTransformTest extends JFrame { Image image ; int imageWidth = 220 ; int imageHeight = 100 ; AffineTransform affineTransform ; public AffineTransformTest () { createImage (); createAffineTransform (); JPanel panel = new ImagePanel (); Dimension d = new Dimension ( 400 , 400 ); panel .s etPreferredSize ( d ); panel .s etMinimumSize ( d ); add ( panel ); pack (); } private void createImage () { image = new BufferedImage ( imageWidth , imageHeight , BufferedImage . TYPE _ INT _ RGB ); Graphics g = image . getGraphics (); g .s etFont ( new Font ( " Lucida Sans Typewriter ", Font . PLAIN , 80 )); g .s etColor ( Color . GREEN ); g . draw String (" TEST ", 10 , 80 ); g . dispose (); } // 左右 反転 さ せ て 45度 回転 後 に x , y ともに //( imageWidth / 2 ) だけ 移動 さ せる AffineTransform private void createAffineTransform () { affineTransform = new AffineTransform (); // 以下 設定 の 逆順 が 変換 結果 と なる （ たぶん ） // すべて を 表示 できる 位置 へ 移動 affineTransform . translate ( imageWidth / 2 , imageWidth / 2 ); // イメージ の 中心 を 原点 として 回転 affineTransform . rotate ( Math . PI / 4 , imageWidth / 2 , imageHeight / 2 ); // 左右 反転 で ずれ た 座標 修正 affineTransform . translate ( imageWidth , 0 ); // 左右 反転 ( x * - 1 ) affineTransform . scale (- 1 , 1 ); } class ImagePanel extends JPanel { @ Override public void paintComponent ( Graphics g ) { Graphics 2D g2 = ( Graphics 2D ) g ; g2 . drawImage ( image , affineTransform , this ); } } public static void main ( String [] args ) { SwingUtilities . invokeLater (() -> { JFrame frame = new AffineTransformTest (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etVisible ( true ); }); } } 
GitHub の twitter 4 j に アクセス 。 https :// github . com / yusuke / twitter 4 j / 左上 の branch を 好み の バージョン に する 。 で 、 過去 の バージョン の twitter 4 j が 取得 でき ます 。 
本 を 買い ましょ う 。 そこ に 書い て あり ます 。 似 た よう な 質問 ばかり で 、 やる気 が ０ だ 。 orz 
上 から 5 番目 、 右 から 3 番目 を 1 に し て 、 そこ から スタート し て 右 斜め 下 に 次 の 数 を 記入 する 方法 です 。 ただし 、 一番 下 と 一番 上 、 一番 右 と 一番 左 が つながっ てる と 思っ て ください 。 配列 t [][] が 数 を 埋める マス を 表し ます 。 以下 、 コメント を 付与 し た プログラム です 。 public class Houjin { public static void main ( String [] args ) { int t [][] = new int [ 5 ][ 5 ]; int n , x , y , xw , yw ; // スタート 位置 の 配列 要素 番号 [ x ][ y ] y = 4 ; x = 2 ; // 配列 （ マス ） に 1 から 格納 する 繰り返し 処理 for ( n = 1 ; n < 26 ; n ++) { t [ y ][ x ] = n ; // yw , xw に x , y の 斜め 下 の マス に 対応 する 要素 番号 を 格納 し 、 x , y に 格納 yw = ( y + 1 ) % 5 ; xw = ( x + 1 ) % 5 ; if ( t [ yw ][ xw ] != 0 ) { yw = ( y + 4 ) % 5 ; xw = x ; } y = yw ; x = xw ; } // コンソール に 出力 for ( y = 0 ; y < 5 ; y ++) { for ( x = 0 ; x < 5 ; x+ +) // 桁 数 の 応じ て スペース を 表示 する 分岐 if ( t [ y ][ x ] > 9 ) System . out . print ( t [ y ][ x ] + " "); else System . out . print (" " + t [ y ][ x ] + " "); System . out . println (""); } } } 
どこ から 説明 し たら いい もの か … … まず 、 サーバービュー 開い て 、 別途 ダウンロード し た tomcat を 指定 する ところ は やり まし た か ？ そうしたら 、 eclipse を 終了 し て 、 先 ほど 入れ た 、 動か ない プラグイン を 削除 し て 下さい 。 eclipse の バージョン が 違う のに 、 勝手 な プラグイン 入れ て も 動か ない の は 当たり前 です 。 ※ そもそも tomcat 6 とか 、 とっく に サポート 対象外 に なっ てる バージョン を 入れろ とか 書い て ある あたり 、 サイト の 情報 が 古す ぎて 話 に なり ませ ん 。 Eclipse の バージョン が わから ない ため なんとも 言え ない ところ が あり ます が 、 最新 版 を 入れ て いる なら 、 ヘルプ → Eclipse マーケットプレース で 「 tomcat 」 で 検索 する と 、 「 Eclipse Tomcat Plugin 」 という の が 出 て き ます から 、 それ を インストール し て ください 。 
オブジェクト指向 を お勧め し ます オブジェクト指向 について 説明 し て い ます ↓ https :// si tes. google . com / site / daichisprograming / lesson サンプル コード （ ピンポン ゲーム ） を 書い て み まし た ↓ https :// drive . google . com / open ? id = 0 BzsPISTocIuTQXBkeGZqTV 9 tQVk 
>「 Game _ main 自体 を GUI フレーム として 立ち 上げ 、 そこ から ゲーム の メイン ロジック や ボタン ウィンドウ を 呼び出す よう に する 方 が 、 ユーザ の アクション 制御 等 の 観点 で も 都合 が 良い 」 ありがとう ござい ます 。 私 の 長く て 分かり づらい 回答 を 要約 し ます と こう なり ます 。 ^^ > これ まで は ゲーム の 思考 ロジック 設計 に 重点 を 置い て い た ので 、 是非 ゲーム の 思考 ロジック は フレーム と は 別 の クラス として 実装 する こと を お勧め いたし ます 。 フレーム クラス に すべて を 記述 する こと も 可能 です が 、 ゲーム など の 場合 は ゲーム 状態 を 表現 する クラス と ゲーム ロジック クラス を フレーム と は 分離 し て おく と 良い と 思い ます 。 ゲーム 状態 クラス と は 例えば オセロ の 場合 は 、 オセロ 盤 の 各 マス に ピース が ある か ない か 、 白 か黒か とか 、 手番 は どちら か など の 状態 で 、 単純 に 現在 状態 の 情報 のみ を 保持 する クラス で ロジック は 何 も 含み ませ ん 。 フレーム は インスタンス 変数 として ゲーム 状態 クラス と ゲーム ロジック クラス の インスタンス を 保持 し て おき ます 。 フレーム の 仕事 は ユーザー から の 入力 を ゲームロジックオブジェクト に 伝える 事 と ゲーム 状態 オブジェクト の 内容 を ゲーム の 現在 の 状態 として ユーザー に 表示 する 事 です 。 ゲーム ロジック クラス は インスタンス 変数 として フレーム クラス と ゲーム 状態 クラス の インスタンス を 保持 し ます 。 ( この ゲーム 状態 オブジェクト は フレーム が 保持 し て いる の と 同じ オブジェクト です ) ざっと です が 、 プログラム は 以下 の よう な 処理 の ループ に なり ます 。 1 . フレーム は ゲーム 状態 オブジェクト の データ 内容 で ゲーム 画面 を 表示 する 。 2 . ユーザー 入力 が あれ ば フレーム は ゲームロジックオブジェクト に 伝える 。 3 . ゲームロジックオブジェクト は フレーム から ユーザー アクション を 伝え られる と 、 ゲーム の ルール に従って ゲーム 状態 オブジェクト の 状態 を 変更 し て から 、 フレーム に 画面 の アップデート を 要求 し 1 に 戻る この よう に し て おく と ゲーム 状態 を コンソール に も 表示 可能 な 場合 など に は 、 比較的 簡単 に CUI バージョン が 作成 でき ます し 、 将来 GUI を Swing から JavaFX に 変更 する 場合 に も 苦労 し なく て 済み ます 。 さらに 、 ゲームロジックオブジェクト が 呼び出す フレーム の メソッド を interface として 定義 し て おき 、 その インターフェース を通して フレーム に アクセス する 設計 に し て おく と 、 GUI の 変更 時 に ゲーム ロジック クラス も 一切 修正 し なく て 済み ます 。 > 各種 書籍 等 から UI 設計 の 勉強 を し て みよ う と 思い ます 。 レイアウトマネジャー を 使う 事 を お勧め 致し ます 。 時々 レイアウトマネジャー を 使わ ず に 座標 で コンポーネント を 配置 し て いる コード を 見かけ ます が 、 OS が 変われ ば フォント も 変わり 、 フォント が 変われ ば ラベル の サイズ など も 違い ます し 、 使っ て いる ルックアンドフィール が 違え ば コンポーネント の サイズ も 違っ て き ます 。 キレイ に 揃え て いる つもり で も 別 の 環境 で 実行 する と ひどい 見 映え と なる 可能性 が あり ます 。 学習 が 面倒 に 感じる かも しれ ませ ん が 、 JavaFX で も Swing と 似 た よう な レイアウト が 用意 さ れ て いる ので 、 無駄 に は なり ませ ん ので 是非 マスター する 事 を お勧め いたし ます 。 
true false true false true true 
やっ て み て 、 原因 が 、 分かり まし た 。 何処 か の ソース を 、 コピペ し て 作る と 、 " が 、 全角 に なっ て しまい ます 。 そう する と 、 エラー なし で null に なり ます 。 html を 良く 見 て 、 " が 、 全角 に なっ て いる ところ を 、 半角 に し て ください 。 
Android 開発 は Android studio 一択 です か ね 。 無償 で Google が 提供 し て ます 。 ただし 、 基本 JAVA です が Android 用 の クラス 群 を 使う 必要 あり 、 既存 の UI 周り は 作り直し か と 。 まぁ 置き換え で 済む と 思う けど 。 。 その他 ロジック は 流用 できる でしょ う ね ♪ 
クラス 名 は 、 ようは 本 の 目次 の タイトル 、 みたい な もの です よー 。 その 目次 が 適切 なら 適切 な ほど 、 どこ に 何 が 書い て ある か が 、 目次 を 見れ ば 分かる よう に 、 Java の クラス 名 も 、 必要 な もの です 。 
Wikipedia に 書い て あり ます 。 https :// ja . wikipedia . org / wiki / Java Java 8 は 2014年 3月18日 リリース 。 Java 9 は 2017年 3月23日 に リリース 予定 だ そう です 。 
こちら に ある 通り 、 Java 6 は 、 一般 的 な 提供 形態 です と 、 既に サポート を 終了 し て ます 。 https :// blogs . oracle . com / otnjp / entry / java _ 6 _ and _ 7 _ future つまり 、 サポート 終了 後 に 発見 さ れ た 脆弱性 は 、 放置 さ れ て いる という こと です 。 噂 とか 、 そういう レベル で は なく て 、 脆弱性 が 残さ れ て いる の は 事実 です 。 正直 、 サポート が 切れ て 、 脆弱性 が 放置 さ れ て いる モノ は 、 オススメ はしません 。 どうしても 、 必要 と いう なら ば 、 Java 6 と 8 を 併用 です 。 通常 は 、 Java 8 と し て おい て 、 必要 な 時 だけ 、 Java 6 と する など 、 極力 、 Java 6 の 利用 は 避ける と 言っ た 工夫 が 必要 です 。 昔 だ と 、 パス の 切り替え やら 、 環境変数 で 実行 環境 を 定義 し て い た ので 、 これ を 切り替え で 、 必要 に 応じ て 新旧 の 混在 とか も 対応 も でき まし た 。 最近 だ と 、 パス は 固定 さ れ て い て 、 その 固定 さ れ た パス から 、 シンボリックリンク が さ れ て いる ので （ リンク 先 は 、 常に 最新 の Java ） 、 この シンボリックリンク の 切り替え とか でも 対応 できる でしょ う 。 当然 です が 、 Java 6 が 、 標準 環境 と さ れ て いる とき に は 、 セキュリティ 的 な 側面 から みれ ば 、 脆弱性 の ある 状態 です から 、 他 の Java 系 が 動かさ れる とか 、 ネット 接続 で 利用 なんて こと を すれ ば 、 危険 です 。 当該 ソフト の 起動 用 バッチファイル 等 で 、 Java の 実行 環境 を 切り替え 、 実行 環境 を 標準 環境 と は 切り分け て 、 当該 ソフト の 起動 時 のみ とか 、 限定的 に する とか の 工夫 も 必要 でしょ う 。 それでも 、 リスク が ゼロ では あり ませ ん 。 
出題 の 部分 です が 、 こんな 感じ です か 。 ２ 次元 配列 の 要素 番号 を 保持 し て おけ ば 、 答え 合わせ は 可能 だ と 思い ます 。 -- ソース -- package test 20160725 ; import java . util . Random ; public class Testq 12162090342 { public static void main ( String [] args ) { // クイズ を 格納 し た 2次元 配列 String problems [][] = { { " 問題 0 - 0 ", " 問題 0 - 1 " }, { " 問題 1 - 0 ", " 問題 1 - 1 ", " 問題 1 - 2 " }, { " 問題 0 - 0 " } }; // 出題 する 要素 番号 を ランダム に 決定 int row = 0 ; int col = 0 ; Random random = new Random (); row = random . nextInt ( problems . length ); col = random . nextInt ( problems [ row ]. length ); // 出力 System . out . println ( problems [ row ][ col ]); } } -- 出力 結果 （ 毎回 変わる ）-- 問題 1 - 2 
A int 型 に double 値 を 代入 しよ う と し て いる 。 C boolean 型 は 、 true or false ("" で 囲む 必要 なし ） E int n , な ので 、 続け て int 型 の 変数 を 宣言 し なく て は いけ ない のに 、 double a と double 型 宣言 を し て いる H 同 一 名称 の 変数 を 再 宣言 し て いる I a は 型 宣言 し て い ない 
E unsigned が 付か ない 場合 は 、 最上位ビット は 符号 ビット と なる ため 。 
A int a ; B double b ; C char c ; D String d ; E boolean e ; 
○ A , byte 型 は - 128 ~ 127 まで の 値 しか 使え ない × B , short 型 で 扱える 値 の 範囲 は long 型 より 小さい が int 型 より 大きい ○ C , true と 0 は 等しく ない × D , int 型 は 32 ビット 幅 な ので 扱える 値 の 上限 は 2 の 32 乗 で ある ○ E , int 型 は 32 ビット 幅 な ので 扱える 値 の 上限 は 2 の 31 乗 で ある × F , char 型 は 事実上 、 正 の 整数 を 扱う こと が 出来る 型 で ある × (※) G , double 型 の 値 は 末尾 に D または d を つけ ね ば なら ない double は D ( d ) を つけ て も いい が 、 必須 で は ない 。 
画面 外 に 移動 しよ う と する と mes メソッド 「 p 1 . getGraphics () 」 が null を 返却 し 、 次 の 行 で エラー が 発生 し て いる よう です 。 以下 の よう に null チェック を いれる と エラー は 出 なく なり ます 。 public void mes ( String str ) { JLabel l 2 = new JLabel (""); l 2 .s etLayout ( null ); f1 . add ( l 2 ); l 2 .s etBounds ( 20 , 10 , 20 , 230 ); Graphics g = p 1 . getGraphics (); // ★ null チェック を 追加 if ( g != null ) { g .s etColor ( Color . WHITE ); g . fillRect ( 10 , 400 , 620 , 230 ); g .s etColor ( Color . BLACK ); g . drawRect ( 10 , 400 , 620 , 230 ); l 2 .s etText ( str ); l 2 .s etBounds ( 20 , 10 , 20 , 640 ); while ( clicked == 0 ) { try { Thread . sleep ( 1 ); } catch ( InterruptedException e ) { } } } } 
大丈夫 だ と 思う 、 最近 知恵袋 に 寄せ られる 「 詐欺 サイト 」 も ja v a8 の 隙 を つい て 入っ て 来 て いる 物 が かなり ある 。 java が ない と 使え ない という ソフト を 除け ば 、 ない から と 言っ て 何 の 支障 も ない と 思う 。 安全 面 で は むしろ ない 方 が 良い 。 最近 それ こそ java を 更新 し た が 、 しっかり 変 な ソフト を 抱き合わせ て 来 まし た 、 何 も 考え ず に OK し て 迷惑 ソフト を 入れ て いる ユーザー が 結構 いる ん じゃ ない か な ？ 
java pSample . checkConnection & の 後 に PID =$! と 書き ます 。 プログラム B 起動 の あと で 、 wait $ PID STAT =$? で 、 STAT に 終了 ステータス が 入り ます 。 
A , 12 . 3 は 、 double 型 です 。 B , 2 . 5 F は 、 float 型 です 。 C ,' abcde ' は 、 エラー です 。 D , 247582694 L は 、 long 型 です 。 E ," こんにちは " は 、 文字列 リテラル です 。 F ,' こんにちは ' は 、 エラー です 。 G ," a " は 、 文字列 リテラル です 。 H , false は 、 boolean リテラル です 。 I ," " は 、 文字列 リテラル です 。 J ,' a ' は 、 文字 リテラル です 。 K , あ は 、 エラー です 。 L ,- 123 . 0 f は 、 float 型 です 。 M , true は 、 boolean リテラル です 。 N ," true " は 、 文字列 リテラル です 。 O ,"" は 、 文字列 リテラル です 。 
sudo apt - get -- purge remove java - common で 。 
void setup () { size ( 480 , 640 ); fill ( 255 ); rect ( 20 , 40 , 440 , 470 , 20 ); } void draw () { if ( mousePressed ) { stroke ( 0 ); line ( mouseX , mouseY , pmouseX , pmouseY ); } } では ダメ な の です か ？ 
一部 の コード が 書か れ て い ない と 、 String と buf . readLine () の 関係 が 不明 です が 、 たぶん 以下 の よう な コード で は ない でしょ う か 。 File file = new File (" c :¥¥○○. txt "); BufferedReader buf = new BufferedReader ( new FileReader ( file )); String str = buf . readLine (); ○ ○ テキスト形式 の ファイル を 読み込ん で 、 その 1 行 目 の 文 を String クラス の 変数 str に 格納 する という こと でしょ う ね 。 下 の コード は 書い て い ませ ん が 、 while 文 で 最終 行 まで 読み込む 操作 が 記述 さ れ て いる と 考え ます 。 String は 、 String クラス の こと で 、 文字列 を 格納 する 変数 を 指定 し ます 。 buf . readLine () は 、 読み込ん だ ファイル の 1 行 を 読み込む という 意味 です 。 
> drawOval の 1つ 目 の 値 まずは drawOval で は なく 長方形 の drawRect の 方 を 試し て み て は どうでしょう か 
まだ 新しい ので 情報 が 少ない です が 、 JavaFX 。 Swing に 代わる GUI です 。 
変数 名 の 途中 で スペース 空け てる の が おかしい ん じゃ ない ？ bi 2 bi 3 
> マイク から 入力 の ON / OFF の 切り替え を する これ は どの よう な 状況 を 想定 し て い ます か 。 ・ 一つ の マイク を 有効 化 ・ 無効 化 し たい ・ ただ 音 が 聞こえ なく なれ ば 良い ・ 複数 の マイク を 切り替え たい http:// cod e.c ompartmental .net / minim / minim _ method _ getlinein . html http:// cod e.c ompartmental .net / minim / minim _ method _ getlinein . html 
正しい テーブル 名 が 不明 な ので 、 とりあえず ` tbl ` として 、 日付 カラム名 を ` tdate ` と する と 、 between で 月 初め 日付 から 、 翌月 ０ 日 まで の 条件 と すれ ば よい だろ う 。 とりあえず ２ ０ １ ６ 年 ６月 を 検索 の 場合 select * from ` tbl ` where ` tdate ` between ' 2016 - 06 - 01 00 : 00 : 00 ' and ' 2016 - 07 - 00 00 : 00 : 00 ' order by ` tdate ` ; 
プログラム から 開く の中 に JAVA が 無い なら 今度 は 既定 の プログラム の 選択 を 選ぶ と 出る と 思い ます それでも 無理 なら その 下 に 参考 と 書い て ある の が 有り ます から クリック し て 移動 先 に JAVA の フォルダ は 無い でしょ う か ? 有れ ば 開く と JAVA の バージョン が 書か れ た フォルダ が 有る ので 更に 開く する と bin フォルダ が 有る ので 又 開く と その ファイル 群 の 中 に javaw . exe が 有る ので 選択 する と 後 は 勝手 に インストーラ ー が 起動 し ます 64 bitOS だ と 参考 を クリック し た 時 に 違う フォルダ に 行っ て いる ので 上 に 有る ローカルディスク を クリック し て Prog ram Files の 方 を クリック 後 は JAVA の フォルダ から の 説明 は 上 と 書い て ある の と 同じ です これ で java の 関連 付け が でき た はず です 
当該 エラー に関して 調べ た ところ 、 Oracle より この よう な 情報 が 提供 さ れ て おり まし た 。 https :// www . java . com / ja / download / help / error _ 1603 . xml 
とりあえず 今 の あなた の ソースコード を 見せ て ください 。 保有 アカウント の 都合 上 、 paiza . IO に アップロード し て URL を 教え て いただける と 助かり ます 。 
Minecraft Forge の サイト で 、 Modding 用 ソース が ダウンロード でき ます 。 ここ を 参考 に 。 http:// minecraft jp . info / modding / index . php / Minecraft Forge % E 5 % B 0 % 8 E % E ... この コード を 読め ば 、 Minecraft が どの よう に 書か れ て いる か 全て わかり ます 。 可読性 を 落とす ため 、 メソッド 名 や フィールド 名 が 改変 さ れ て おり 、 読み にくい ソース です が 、 色々 おもしろい か と 思い ます 。 
ノートンアンチウイルス の 不具合 です ので 、 シマンテック に クレーム を 出し て ください 。 その インストール する と 消さ れる ソフト も 、 送り つけ て やっ て ください 。 シマンテック の 誤認 識 は 、 本当に 腹 が 立ち ます ね 。 わたし なんて 、 Visual C++ で 仮想 キーボード の プログラム を 作っ て い たら 、 キーロガー だって 消さ れ た 事 が あり ます 。 その とき も 、 消さ れ た ソフト を 送り付け て 、 改修 さ せ まし た 。 まったく 、 それで 未知 の 脅威 に も 対応 とか 言っ て いる の は 、 本当に 腹 が 立ち ます ね 。 ちょっと 虐め て やっ て ください 。 https :// support . symantec . com / ja _ JP / article . TECH 164387 . html 
こんな 感じ です か 。 一 か所 に break 入れ た だけ です 。 package test 20160724 ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class yahoo { public static void main ( String [] args ) throws IOException { // 標準入力 の 準備 BufferedReader buf = new BufferedReader ( new InputStreamReader ( System . in )); // 計算 の ため の 適当 な 初期 値 を 設定 int xn = 0 ; int a = 2061 ; int b = 7 ; int c = 65536 ; int computer ; // コンピュータ の 数値 int guess ; // ユーザ の 予想 while ( true ) { // 常に true の ため 無限ループ xn = (( xn * a ) + b ) % c ; // ごちゃごちゃ と 計算 し て computer = ( xn % 10 ) + 1 ; // 値 の 範囲 を 1 ～ 10 まで に 制限 System . out . print (" Your guess : "); guess = Integer . parseInt ( buf . readLine ()); // 入力 を 標準入力 より 取得 System . out . println (" Computer ' s number was : " + computer ); // コンピュータ 側 の 数値 if ( computer == guess ) { System . out . println (" 正解 !"); // あたり break ; // ★ 追加 箇所 } } } } 
こんな イメージ か な ・ ・ 。 import java . io .*; public class ReadInt { public static void main ( String [] args ) throws Exception , IOException { BufferedReader buf = new BufferedReader ( new InputStreamReader ( System . in )); // 標準入力 の 準備 System . out . print (" 数値 を 入力 し て ください : "); int cnt = Integer . parseInt ( buf . readLine ()); for ( int i = 1 ; i <= cnt ; i ++){ System . out . println ( i ); } } } BufferdReader を 利用 する 場合 は 、 スロー 宣言 か try ～ catch 文 を 使っ て 、 エラー に 対処 する 必要 が あり ます 。 上記 は スロー 宣言 だけ を し て い ます 。 出力 は 1 から 入力 し た 数値 まで を 表示 する と し て い ます 。 質問 の 意図 と 違っ たら スルー し て ください 。 
すぐ ？ に 知る 方法 は ありません が 、 関数 名 を 右クリック → 呼び出し 階層 の 表示 を 選択 → 呼び出し 階層 ウインドウ が 開く 。 呼び出し 階層 ウインドウ の 「 呼び出し 先 」 を たどっ て main まで たどり着けれ ば 、 main から 呼ば れる 可能性 が あり ます 。 
普通 は 可能 です 。 OS から 再インストール すれ ば 、 大体 の 物 は 大丈夫 です 。 
一 例 です 。 import java . io .*; public class OKadai 052303 { public static void main ( String [] args ) throws Exception { String comment = " 小さい 方 は :"; int a , b ; BufferedReader buf = new BufferedReader ( new InputStreamReader ( System . in )); // 一つ 目 の 入力 を 取得 System . out . print (" 1つ 目 の 数値 を 入力 ："); a = Integer . parseInt ( buf . readLine ()); // 二つ目 の 入力 を 取得 System . out . print (" 2つ 目 の 数値 を 入力 ："); b = Integer . parseInt ( buf . readLine ()); if ( a >= b ) System . out . println ( comment + b ); else System . out . println ( comment + a ); } } 最後 の if 文 の 条件 式 だけ を 理解 する と 良い でしょ う ね 。 
Processing で 描画 を し たい 場合 は 必ず draw メソッド の 最初 に background ( 背景色 ); を 入れ ましょ う 。 void draw (){ background ( 255 ); // 追加 分 for ( int i = 3 ; i < vec _ data .s ize (); i ++){ one = vec _ data . get ( i ); two = vec _ data . get ( i - 1 ); three = vec _ data . get ( i - 2 ); four = vec _ data . get ( i - 3 ); bezier ( one . x , one . y , two . x , two . y , three . x , three . y , four . x , four . y ); } } と する だけ で かなり 違い ます 。 
参考 サイト http:// www . tokihano . com /? eid = 26 こんな 感じ です か 。 package test 20160723 ; public class Report 2 _ 3 { public static void main ( String [] args ) { // 10 個 の 整数 値 を 持つ 配列 を 生成 int [] data = { 8 , 52 , 20 , 100 , 32 , 15 , 1 , 89 , 42 , 34 }; ////////////////// // ここ から 下 を 編集 ////////////////// for ( int i = 0 ; i < data . length ; i ++) { for ( int j = 0 ; j < data . length - 1 - i ; j ++) { if ( data [ j + 1 ] < data [ j ]) { int temp = data [ j ]; data [ j ] = data [ j + 1 ]; data [ j + 1 ] = temp ; } } } for ( int i = 0 ; i < data . length ; i ++) { System . out . println ( data [ i ]); } } } 
■ 0 - 9 枠 の カウント について int 型 配列 を 定義 し て いる ので 初期 値 0 が 入っ て いる よう です 。 for 文 の 「 counts [ kokugo [ i ] / 10 ]++;」 で 0 - 9 枠 に カウント さ れ て しまい ます 。 上記 を 回避 する ため に 国語 の 点数 を String 型 で 宣言 する の は どうでしょう か ？ if 文 で null チェック を する こと で カウント を 回避 でき ます 。 ■ グラフ について カウント を 10 で 割っ て + 1 し た もの を 長さ に し て 「*」 を 出力 する という やり方 が あり ます 。 ■ 以下 サンプル です 。 （ 国語 の 集計 に 特 化 し た もの 。 入力 は 乱数 使っ て ます 。 ） -- ソース -- package test 20160723 ; import java . util . Random ; public class KeisanTest 1 { public static void main ( String [] args ) { int [] counts = new int [ 11 ]; String [] kokugo = new String [ 1000 ]; // ★ String 型 で 宣言 // ランダム に 500 個 の 点数 を 入力 Random random = new Random (); for ( int i = 0 ; i < 500 ; i ++) { kokugo [ i ] = String . valueOf ( random . nextInt ( 101 )); } for ( int i = 0 ; i < kokugo . length ; i ++) { if ( kokugo [ i ] != null ) { // ★ null 出 ない 場合 、 カウント counts [ Integer . parseInt ( kokugo [ i ]) / 10 ]++; } } for ( int i = 0 ; i < counts . length ; i ++) { // グラフ 作成 String Builder graph = new String Builder (); int length = counts [ i ] / 10 + 1 ; // ★ グラフ の 長さ は 割る 10 し た もの + 1 for ( int j = 0 ; j < length ; j ++) { gr ap h. append ("*"); } // 出力 System . out . print (( i * 10 ) + " - " + ( i * 10 + 9 ) + " : "); System . out . print ( counts [ i ]); System . out . print ( graph ); // ★ グラフ 出力 System . out . println (); } } } -- 実行 結果 -- 0 - 9 : 53 ****** 10 - 19 : 61 ******* 20 - 29 : 47 ***** 30 - 39 : 36 **** 40 - 49 : 58 ****** 50 - 59 : 52 ****** 60 - 69 : 53 ****** 70 - 79 : 46 ***** 80 - 89 : 47 ***** 90 - 99 : 44 ***** 100 - 109 : 3 * 
拡張子 を 書き換えれ ば いい の では ？ 
一番 最後 に 「 main Frame . revalidate ();」 を 追加 し たら 上手く いき まし た 。 「 main Frame .s etVisible ( true );」 で 画面 描画 し た 後 に コンポーネント を 追加 し て いる ので 、 再 描画 が 必要 な の だ と 思い ます 。 
こんな 感じ です か 。 package test 20160723 ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Calendar ; public class Report 2 _ 1 { public static void main ( String [] args ) throws IOException { // キーボード から の 入力 を 受け付ける BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); // 入力 さ れ た 文字 を 変数 day に 代入 System . out . print (" 日付 を 入力 し て ください 。 ： "); int day = Integer . parseInt ( br . readLine ()); System . out . print (" 2016年 7月 " + d ay + " 日 は "); ////////////////// // ここ から 下 を 編集 ////////////////// Calendar c = Calendar . getInstance (); c . clear (); c .s et ( 2016 , 6 , day ); System . out . println ( transFrom ( c . get ( Calendar . DAY _ OF _ WEEK )) + " です 。 "); } private static String transFrom ( int key ) { String s = ""; switch ( key ) { case Calendar . SUNDAY : s = " 日曜日 "; break ; case Calendar . MONDAY : s = " 月曜日 "; break ; case Calendar . TUESDAY : s = " 火曜日 "; break ; case Calendar . WEDNESDAY : s = " 水曜日 "; break ; case Calendar . THURSDAY : s = " 木曜日 "; break ; case Calendar . FRIDAY : s = " 金曜日 "; break ; case Calendar .S ATURDAY : s = " 土曜日 "; break ; default : break ; } return s ; } } 
Sougou _ kuizu . main BufferedReader . BufferedReader InputStreamReader . InputStreamReader br . readLine kaito u. equals System . out . println System . out . print e . printStackTrace こんな ところ か な 。 main と 、 new で の コンストラクタ が 分かり にくい です ね 。 
1 . pg _ hba . conf で 自分 の PC から の 接続 が 有効 に なっ て い ない 2 . postgresql . conf の listen _ address が localhost オンリー に なっ て いる 3 . FireWall で 弾か れ て いる の どれ か で は ない か と 思わ れ ます 。 まずは postgres の data ディレクトリ の pg _ hba . conf と postgresql . conf の 設定 を 確認 し て ください 。 
mti 66666 さん ご 参考 に 。 implicit none real * 8 :: a ( 3 , 3 ) integer :: n , i , j data a / 0 , 1 , 2 , 1 , 1 , 1 , 2 , 1 , 1 / n = 3 write (*,*) ' Matrix [ A ]' do i = 1 , n write (*,'( 10 f1 0 . 3 )') ( a ( i , j ), j = 1 , n ) enddo write (*,*) call matinv ( a , n ) write (*,*) ' Inverted Matrix [ A ]- 1 ' do i = 1 , n write (*,'( 10 f1 0 . 3 )') ( a ( i , j ), j = 1 , n ) enddo end subroutine matinv ( a , n ) real * 8 :: a ( n , n ), c , dum , anmax integer :: n , i , j , k , km , row ( 1000 ) ! Pivot Operation do i = 1 , n anmax = 0 . 0 km = i do k = i , n if ( abs ( a ( k , i ))> anmax ) then anmax = abs ( a ( k , i )) km = k endif enddo do j = 1 , n call swapr ( a ( i , j ), a ( km , j )) enddo row ( i )= km c = a ( i , i ) if ( abs ( c )< 1 . 0 d - 6 ) then write (*,*) " Pivot is cloze to Zero at ", i stop endif enddo do k = 1 , n c = a ( k , k ) a ( k , k )= 1 . 0 do j = 1 , n a ( k , j )= a ( k , j )/ c enddo do i = 1 , n if ( i /= k ) then dum = a ( i , k ) a ( i , k )= 0 . 0 do j = 1 , n a ( i , j )= a ( i , j )- dum * a ( k , j ) enddo endif enddo enddo do j = n , 1 ,- 1 if ( j /= row ( j )) then do i = 1 , n call swapr ( a ( i , j ), a ( i , row ( j ))) enddo endif enddo end subroutine matinv subroutine swapr ( a , b ) implicit none real * 8 :: a , b , c ! c = a a = b b = c ! end subroutine swapr 
実行 する コマンド を ・ 上書き なら java ClassName > number . txt ・ 追記 なら java ClassName >> number . txt ・ エラー 出力 も 書き出す なら java ClassName 2 > number . txt と する と いい ですよ System .s etOut ( new PrintStream ( new File (" number . txt "))); こんな こと を し て System . out . print () の 出力 先 を ファイル に 設定 する こと も でき ます 。 標準出力 と ファイル 出力 を 一緒 に し たい なら 、 System .s etErr ( 上 の やつ と 同じ ); で System . err . print () を 利用 する という 手 も あり ます 。 PrintWriter とか が わかり づらい なら これら の 簡潔 な やり方 で 対処 し ましょ う 。 
へん すう ある ね 。 。 。 
create table 文 に カンマ が 足り ない と 思い ます 。 
それ だけ で は 送信 でき ない ので SUBMIT ボタン を 付け ましょ う 。 
この くらい の 課題 は 自分 で やり ましょ う 。 教科書 を 見れ ば すぐ に わかり ます 。 わから なかっ たら 、 どこ が でき なかっ た の か 教え て 下さい 。 
a と A は 10 進数 の 10 を 16 進数 で 表記 し た もの な ので 合っ てる の で は ？ 
public class Hoge { public int MyMethod ( int a ){ <- これ が メソッド 。 C で いう 関数 のようなもの int b = 0 ; return a + b ; <- これ が メソッド の 戻り値 } } for や if は 、 メソッド の 中 に 記述 する もの で 、 実際 の 処理 （ 繰り返し や 、 判断 ） を 行う 、 制御 文 と いい ます 。 BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); これ は インスタンス 生成 。 System . out . prinrln (" アイウエオ "); prinrln が メソッド と なり ます 。 
そもそも 日本 に は レディ ファースト なる 文化 は 存在 し ませ ん 。 仮に あっ た として も あなた は それ から 除外 さ れる べき 人 の よう です が ・ ・ ・ 。 
System . out . println ( ); と System . out . println ( x1 +" + " + x 2 + " = "); の 間 に 以下 を 使え ば よい と 思い ます 。 ただし 、 整数 値 が 入力 さ れる 前提 です 。 int ans = x1 + x 2 ; int count = 0 ; Scanner scan = new Scanner ( System . in ); while ( true ){ String s = scan . next (); count ++; if ( ans == Integer . parseInt ( s )) { break ; } } scan . close (); System . out . println (" 回答 数 :" + count ); 
オーバーフロー の チェック は Java 7 まで は 自前 で 行う 必要 が あり まし た 。 しかし これ は Java 8 リリース 時 に 大きな 話題 と なり まし た ので 、 最新 の Java を キャッチアップ でき て いる Java 技術者 なら 知っ て いる こと だ と 思い ます が 、 Java 8 の Math に 追加 さ れ た Exact 系 メソッド で は オーバーフロー の チェック が できる よう に なっ て い ます 。 int 型 あるいは long 型 の 加算 の 場合 、 Math . addExact を 利用 する と 、 オーバーフロー 時 に は ArithmeticException が throw さ れ ます 。 よって int a = 13245657 ; int b = 123 ; と し た 場合 、 int sum = 0 ; try { sum = Math . addExact ( a , b ); } catch ( ArithmeticException e ){ // オーバーフロー し た とき の 処理 } という 記述 が でき ます 。 
ValueAnimator の 時間 を 短く する 。 （ setDuration の 値 を 小さく する 。 ） 
コード チェック し て ない ので 間違い ある かも です 。 // 必要 で あれ ば 0 チェック し て ください import java . util .S canner ; import java . util . ArrayList ; class Main { private static int evenCout , oddCout = 0 ; private static ArrayList < Integer > ary = new ArrayList <>(); public static void main ( String [] args ){ System . out . print (" 正 の 整数 : "); Scanner stdIn = new Scanner ( System . in ); do { int num = Integer . parseInt ( stdIn . next ()); if ( num % 2 == 0 ){ evenCout ++; if ( evenCout != 3 ) System . out . print (" 正 の 整数 : "); stdIn = new Scanner ( System . in ); continue ; } oddCout ++; ary . add ( num ); System . out . print (" 正 の 整数 : "); stdIn = new Scanner ( System . in ); } while ( evenCout != 3 ) int total = 0 ; for ( Integer i : ary ) total += i ; System . out . println (" 奇数 は "+ oddCout +" 個 入力 さ れ て その 合計 は "+ total +" です "); } } 
自分 で 作れ ば いい でしょ 。 プラグイン 仕様 は 公開 さ れ てる ん だ から 。 GitHub あたり に 登録 すれ ば 無形 の 多数 が 手助け し て くれる でしょ 。 無い もの を 自分 で 作る 気 が ない なら OpenSource 使う 資格 は ない よ 
11 行 目 「 System . out . printf (" Ave = % d \ n ", sum / i );」 変数 i を 使っ て ます 。 for ( int i = 0 ) で 宣言 し た 変数 i は for 文 の 繰り返し 処理 内 で のみ 使え ます 。 
> 自社 開発 の 魅力 って 何 です か ？ お金 が 掛から ない 。 個別 の ニーズ に 迅速 に 対応 出来る 。 自社 の ノウハウ が 外 に 漏れ ない 。 > 自社 開発 で ない 場合 の 大変 さ って 何 です か ？ お金 が 掛かる 。 ニーズ が 有っ て も 作っ て もらう 必要 が 有る ので 手間 が 掛かる 。 自社 の ノウハウ が 外部 に 漏れる 。 
よく ある 現象 です 。 追加 し た jar ファイル を 開い て こちら を 参考 に アクセス ルール を 設定 し て ください 。 ※ ライブラリ に 合わせ て パッケージ 名 は 変更 し て ください ね 。 http:// blog . bit meister .jp /? p = 1486 
notifyAll で wait 中 の main スレッド が 再開 さ れ ない の は モニター が 違う から です 。 public synchronized void actionPerformed ( ActionEvent e ) { notifyAll (); } この コード は 以下 と 等価 です 。 public void actionPerformed ( ActionEvent e ) { synchronized ( this ) { this . notifyAll (); } } 同様 に main は synchronized ブロック を 使っ て モニター オブジェクト ( ロック オブジェクト ) を 明示 する と 以下 の よう に なり ます 。 public synchronized int [] main () throws InterruptedException { frame = new Select _ button (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etBounds ( 10 , 10 , 500 , 500 ); frame .s etTitle (" ボタン ウィンドウ "); frame .s etVisible ( true ); wait (); return input _ number ; } public int [] main () throws InterruptedException { synchronized ( this ) { frame = new Select _ button (); //( 中略 ) this . wait (); return input _ number ; } } wait や notify , notifyAll は synchronized の 後 の () で 指定 し た モニター オブジェクト の メソッド を 呼び出す 必要 が あり ます 。 また notify , notifyAll が 作用 する の は 同じ モニター オブジェクト の wait メソッド で 待機 状態 と なっ た スレッド です 。 this と は プログラム 実行 時 に インスタンス メソッド ( や コンストラクタ など ) が 呼び出さ れ た オブジェクト の 参照 を ソースコード 上 で 表す キーワード です 。 インスタンス メソッド や インスタンス 変数 を 単純 名 で アクセス し て いる コード は this . が 省略 さ れ て いる と 解釈 する 事 が でき ます 。 Game _ main :: main の 以下 の 部分 で 変数 window は 生成 し た Select _ button オブジェクト の 参照 を 保持 し て い ます ね 。 Select _ button window = new Select _ button (); select _ number = window . main (); window . main () 実行 時 の main の 中 の this は window が 保持 し て いる Select _ button オブジェクト の 参照 です 。 つまり main の synchronized ブロック の モニター オブジェクト は window が 保持 し て いる Select _ button オブジェクト です 。 もう 一方 の actionPerformed の モニター オブジェクト です が 、 これ は window が 参照 し て いる Select _ button オブジェクト で は なく 、 Select _ button :: main メソッド 内 で 生成 し た Select _ button オブジェクト です 。 frame = new Select _ button (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); つまり window と frame は 別 の オブジェクト で window . wait (); で 待機 状態 に し た スレッド を fra me. notifyAll (); で 再開 さ せよ う と し て いる ので うまく 機能 し て い ない わけ です 。 モニター オブジェクト を 同じ Select _ button オブジェクト に すれ ば 解決 する の です が 、 その 前 に イベントディスパッチスレッド ( EDT ) について 理解 する 必要 が あり ます 。 Swing で は コンポーネント に対する メソッド 呼び出し を EDT 上 で 行う という ルール が あり ます 。 Swing の スレッド ・ ポリシー ( Oracle サイト ) https :// docs . oracle . com / javase / jp / 8 / docs / api / javax / swing / package - su ... actionPerformed など の イベント 発生 時 の コールバック メソッド など は すべて EDT 上 で 呼び出さ れる ので 通常 は スレッド を 考慮 する 必要 は ない の です が 、 ウインドウ 生成 時 の main スレッド や アプリケーション で 独自 の スレッド を 生成 し た 場合 など に は EDT を 意識 し た プログラミン が 必要 に なり ます 。 mofmof _ chamochamo さん の プログラム の 場合 に は main スレッド 上 で SwingUtilities :: invokeLater を 呼び出し EDT 上 で フレーム を 作成 表示 さ せ 、 main スレッド は Object :: wait で 待機 状態 に 入り 、 EDT 上 で ボタン 押下 時 に Object :: notifyAll で 待機 状態 の main スレッド を 再開 さ せる 事 に なり ます 。 ある スレッド が 別 の スレッド の ローカル 変数 に アクセス する 事 は 出来 ませ ん ので 、 main スレッド と EDT で メッセージ の やり取り を 行う ため に は いくつ か の 条件 を 満たす 必要 が あり ます 。 ( メッセージ を 仲介 する 為 の オブジェクト が ヒープ に 存在 し て いる 必要 が あり ます ) ・ 両 スレッド で モニター オブジェクト の 共有 ・ EDT で 生成 し た Select _ button オブジェクト の 参照 あるいは input _ number 配列 を 格納 する 為 の インスタンス 変数 を 持つ オブジェクト の 共有 ・ main スレッド の wait は ループ の 中 に 記述 する 必要 が ある がそ の 条件 変数 を EDT から 操作 する 為 の オブジェクト を EDT が 保持 する これら は もちろん 実装 可能 な の です が 、 通常 GUI アプリケーション の 場合 は main メソッド は アプリケーション ウインドウ を 表示 し たら 処理 が 終了 する 場合 が 多い です 。 アプリケーション の ロジック は main で は なく フレーム クラス や GUI を コントロール する クラス に 記述 する の が 良い か と 思い ます 。 もし コンソール を 使っ て 何 か を 表示 し たり 、 ユーザー から 入力 を 受け取る の で あれ ば 、 それら も GUI コンポーネント を 使っ て 実装 する 方 が 自然 です し 、 その 場合 に は リスナー さえ 登録 し て おけ ば 、 コールバック し て くれる ので ユーザー の アクション を 待つ 為 に wait や notify を 使う 必要 も あり ませ ん 。 単純 に Select _ button を 表示 さ せ て いる だけ です が main の SwingUtilities :: invokeLater の コード は 以下 の よう に なり ます import java . awt . FlowLayout ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import java . util . Arrays ; import javax .s wing . JButton ; import javax .s wing . JFrame ; import javax .s wing . JPanel ; import javax .s wing .S wingUtilities ; public class Select _ button extends JFrame implements ActionListener { private int [] input _ number = new int [ 2 ]; Select _ button () { JButton button 0 = new JButton (" Button 0 "); button 0 . addActionListener ( this ); button 0 .s et Action Command (" 0 "); JButton button 1 = new JButton (" Button 1 "); button 1 . addActionListener ( this ); button 1 .s et Action Command (" 1 "); JPanel p = new JPanel (); p .s etLayout ( new FlowLayout ()); p . add ( button 0 ); p . add ( button 1 ); add ( p ); } @ Override public void actionPerformed ( ActionEvent e ) { String cmd = e . get Action Command ();// アクション コマンド の 取得 switch ( cmd ) { case " 0 ": input _ number [ 0 ] = 3 ; input _ number [ 1 ] = 8 ; break ; case " 1 ": input _ number [ 0 ] = 5 ; input _ number [ 0 ] = 2 ; break ; } System . out . println ( Arrays . to String ( input _ number )); } public static void main ( String [] args ) { SwingUtilities . invokeLater (() -> { Select _ button frame = new Select _ button (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etBounds ( 10 , 10 , 500 , 500 ); frame .s etTitle (" ボタン ウィンドウ "); frame .s etVisible ( true ); }); } } 
多分 メモリ 不足 です 。 私 も なり まし た 。 gradle w に 下記 の オプション を 追加 し て み て ください 。 - DXms 1g - DXmx 1g 
多分 メモリ 不足 です 。 私 も なり まし た 。 gradle w に 下記 の オプション を 追加 し て み て ください 。 - DXms 1g - DXmx 1g 
Java は これから 仕事 無くなる から 食べ て いく なら Web 系 プログラム に する か swift に し た 方 が いい よ Java なんて 業務 系 派遣 プログラマ しか 仕事 は ない よ 
if ( (( 条件 A ) && ( 条件 B )) && ( 条件 C ) ){ System . out . println (" 真 "); } else { System . out . println (" 偽 "); } これ で いい と 思い ます よ 。 括弧 と && を 組み合わせれ ば 、 条件 が 3つ だろ う 4つ だろ う と 書け ます 。 
逆 じゃ あり ませ ん か 。 コンソール から 読む とき は Scanner の ほう が 便利 だ けど 、 ファイル から 読む とき は BufferedReader 使っ た ほう が いい でしょ う 。 あと ファイル 名 たぶん FindWord です よ ね … … … public static void main ( String [] args ){ try ( BufferedReader br = Files .new BufferedReader ( Paths . get (" ファイル 名 ")); // 文字コード が Shift - jis なら ↓ の よう に charset 指定 // BufferedReader br = Files .new BufferedReader ( Paths . get (" ファイル 名 "), Charset . forName (" MS 932 ")); ){ String word = new Scanner ( System . in ). nextLine (); System . out . println ( br . lines (). anyMatch ( line -> line . indexOf ( word )>= 0 )?" あっ た ":" なかっ た "); } catch ( Exception e ){ e . printStackTrace (); } } 
int [][] i = new int [ 4 ][ 3 ]; ↓ int [][] i = new int [ 4 ][ 0 ]; i [ 0 ] = new int [ 3 ]; i [ 1 ] = new int [ 3 ]; i [ 2 ] = new int [ 3 ]; i [ 3 ] = new int [ 3 ]; この よう に 、 一 次元 配列 を 格納 し て いる 配列 が 二 次元 配列 です 。 int [][] i = new int [ 4 ][ 0 ]; i [ 0 ] = new int [ 4 ]; i [ 1 ] = new int []{ 2 , 2 , 5 }; i [ 2 ] = new int [ 6 ]; i [ 3 ] = { 1 , 2 , 3 }; の よう に 中 に 入る 一 次元 配列 の 要素 数 や 形式 は バラバラ でも 構い ませ ん 。 配列 の 中身 を すべて 参照 する 場合 は 次 の よう に なり ます 。 for ( int n = 0 ; n < i . length ; n ++){ for ( int m = 0 ; m < i [ n ]. length ; m+ +){ System . out . print ( i [ n ][ m ] + ":"); } } i . length で 、 配列 の 長 さ を 取得 でき ます 。 i [ n ]. length で 、 配列 の 中 の 配列 の 長 さ を 取得 でき ます 。 使い方 です が 、 例えば 文章 を 読み取る とき に 、 行 と 単語 を 取得 し たい と なっ たら String text = " file data \ n 適当 な 英文 ファイル データ が 入っ てる "; // 改行 単位 で 分割 する String [] line = text .s plit ("[\ n \ r ]"); // 単語 単位 で 分割 する 。 ( スペース で 分割 ) String [][] word = new String [ line . length ][ 0 ]; for ( int n = 0 ; n < word . length ; n ++){ word [ n ] = line [ n ]. split ("\ s "); } これ で 、 word [] に は 行 が 、 word [][] に は 単語 が 入る こと に なり ます 。 スペル チェック など に 便利 です 。 split は java . lang . String # split ( String ) です 。 
前提 や 意図 が よく 分から ない の です が 、 、 、 データベース と の やりとり で 、 接続 → 問い合わせ → 切断 は セオリー です 。 これ 以外 聞い た こと が あり ませ ん 。 トランザクション を 閉じ ない と いけ ませ ん し 、 リソース は 解放 し ない と いけ ませ ん 。 http:// www . javadrive .jp / servlet / database / index 6 . html データベース 接続 の 方法 は いくつ か あっ て 、 それ によって は 、 先 に 述べ た 流れ を 意識 し なく て も よい 場合 は あり ます 。 S2JDBC を 使っ た 場合 とか 。 
javascript です か ？ ？ 
＞ 開く こと が でき ない という の は 、 ファイル は 開け られる の です が 中身 が ない という 状態 です 。 どういう ファイル を 見 て いる の でしょ う か Windows と Mac の Android Studio の バージョン 、 SDK など が 同じ で あれ ば 移行 でき ます 。 移行 する もの は project 全部 です Windows で プロジェクト を zip に し て 送り 、 Mac で 解凍 し て Android Studio で 開く だけ です （ Eclipse の 時 は 文字化け など が あっ た ので ちょっと 面倒 でし た が ） 読み込み 時 に SDK の パス が 違う ので ワーニング が で ます が Android Studio が うまい 事 やっ て くれ ます 。 
Java の 過去 の ほぼ 全 バージョン が ダウンロード でき ます 。 ただし ユーザー 登録 が 必要 です 。 http:// www . oracle . com / tech network / java / archive - 139210 . html 
24 ÷ 4 ＝ 6 6 ÷ 2 ＝ 3 3 ÷ 1 ＝ 3 24 ÷ 8 ＝ 3 単純 に 計算 すれ ば こう なり ます が 理由 なんか あり ます ？ 1 ＋ 1 は なぜ 2 に なる の か を 説明 しろ と 言っ てる の と 一緒 ですよ ？ 
その 処理 だ と JSP ファイル が 2つ 必要 だ と 思う の です が 、 1つ で 無理やり 書こ う と し てる の です か ね 。 最初 の JSP の 方 で は JavaScript を 使わ ず 、 最後 の JSP の 方 で JavaScript を 使う よう に すれ ば 望む 結果 が 得 られる と 思い ます 。 
もしかして テキスト フィールド に は 書か れ た 文字列 を 数値 に 代入 する の が でき ない って こと です か ？ https :// docs . oracle . com / javase / jp / 6 / api / java / awt / TextField . html ここ に 書か れ て いる 通り getText メソッド を TextComponent から 継承 し てる ので これ を 使い ます 。 これ の 戻り値 は String 型 な ので これ を int に し ましょ う 。 やり方 は Integer クラス static メソッド parseInt ( String ) を 使い ます 。 円 の 半径 の データ を 入れる 変数 = Integer . parseInt ( TextField の インスタンス . getText ()); こんな 感じ です 。 これ で 数値 が 得 られ ます 。 Checkbox です が 、 普通に インスタンス化 し て 、 addItemListener を 呼ん で 、 get State メソッド で チェック さ れ てる か どう か を 取得 すれ ば 良い の で は ？ 
label .s etOpaque ( true ); 
> JAVA で 自動 ツール （ マクロ ） を 作成 できる か 出来 ます しかして 、 自動 ツール を 作れる よう な 人物 は 、 UWSC の スクリプト言語 を すごく 簡単 に 理解 でき て 書ける よう な 人物 で あり 、 あなた の 思い描く JAVA で の 自動 ツール が 完成 し た 暁 に は 、 UWSC の スクリプト も ラク に 理解 できる よう な 人間 に なれ ます 。 
catct の 綴り が 違う の と 中 括弧 が 足り ない の が 原因 だ と 思い ます 。 以下 、 修正 し た もの を 載せ ます 。 package test 20160718 ; import java . applet . Applet ; import java . awt . Graphics ; public class Sample 1 extends Applet implements Runnable { int num ; public void init () { Thread th ; th = new Thread ( this ); th .s tart (); } public void run () { try { for ( int i = 0 ; i < 10 ; i ++){ num = i ; repaint (); Thread . sleep ( 1000 ); } } catch ( InterruptedException e ){ } } public void paint ( Graphics g ) { String str = num + " です "; g . draw String ( str , 10 , 10 ); } } 
c :\ Program Files \ Java \ jre 1 . 8 . 0 _ 91 \ bin の jre を jdk に すれ ば 動く と 思い ます 。 
まず ない です 。 というのも 、 System . out . println 文 で 引き渡さ れ た String インスタンス は その 場 限り で 使い 捨て られる ため 、 GC 回収対象 に なる ため です 。 むしろ メモリリーク する と し たら Connect ion の クローズ 漏れ や File の クローズ 漏れ を 疑っ た ほう が いい です 。 
Eclipse で Android 開発 を 行う に は 、 Android SDK とい 、 Eclipse 上 で Android 開発 を 行う の に 必要 な 各種 ファイル が インストール さ れ て い ない と いけ ませ ん 。 Android SDK が 入っ て い ない と 、 必要 な クラス が 参照 でき ず エラー に なり ます 。 
http:// normal se . hatena blog .jp / entry / 2015 / 03 / 13 / 200755 ajp モジュール を 使用 すれ ば 、 Apache と Tomcat が 連携 さ れ ます 。 
出来 た ところ まで 載せ て ください 。 
java の 標準 API で は 難しい です 。 JodaTime という Java の 時間 操作 を 拡張 し 、 便利 に する ライブラリ を 使う の を お勧め し ます 。 JodaTime で あれ ば おそらく できる と 思い ます 。 http:// www . joda . org / joda - time / 
問題 あり ませ ん 。 PHP は テキストエディタ で 開発 し て ます （ し て まし た ） が 、 すべて 自前 で 例外処理 を 記述 し て い ます ｗ ちなみに 、 eclipse で も php の 環境 あっ た と 思い ます よ 。 
愚痴 を 知恵袋 に 求める の も 、 どう か と 。 飲み屋 とか に 行く こと を お勧め し ます 。 
以下 で エラー なく 動き まし た 。 他 の 箇所 の エラー で は ない でしょ う か ？ < c : set var =" i " value =" 0 " /> < c : forEach var =" count " begin =" 101 " end =" 110 "> < c : set var =" i " value ="${ i + 1 }" /> ${ i }< br > </ c : forEach > 
> 型 の サイズ の サイズ と は どういう こと です か ？ データ型 の 使用 メモリ 量 が サイズ と なり ます 。 良く 利用 さ れる データ型 で は 以下 の よう な サイズ です 。 boolean → 1b it char → 16 bit int → 32 bit double → 64 bit 例えば 、 整数型 ( int ) の 「 10 」 を メモリ 上 に 格納 する と 「 0 0 0 0 0 0 0 0000000000000000000001010 」 として 格納 さ れ ます 。 単なる 「 5 」 な の です が 、 実際 は 32 桁 の 大き さ で 格納 さ れる という こと です 。 > コンパイル という の は Java コード で 書い た もの を 一旦 中間 ソース （ class ） に 翻訳 する こと が コンパイル です ね 。 class ファイル は 、 JVM によって 実行 さ れ て 動作 する こと に なり ます 。 Java は 、 この JVM を 利用 する こと で 、 どの プラットフォーム で の 実行 できる という メリット を 持ち ます 。 
> m _ yunicadegenki さん 2016 / 7 / 616 : 01 : 46 > どこ に なん の 記述 を 付け足せ ば 解決 する の か さっぱり わかり ませ ん 。 他人 の 制作 物 を 説明 する に は 解析 から 始める 必要 が あり ます 。 なので 無料 で とか 考え て いる の なら 自分 で 知識 を 付ける しか 有り ませ ん 。 
[ 一番 早く 実行 が 可能 な 場所 ] Program . cs ファイル で の using System ; using System . Collections . Generic ; using System . Linq ; using System . Windows . Forms ; name space LoadDrawingNGSampleP { static class Program { /// < summary > /// アプリケーション の メイン エントリ ポイント です 。 /// </ summary > [ STAThread ] static void Main () { Application . EnableVisualStyles (); Application .S et Comp at ibleTextRenderingDefault ( false ); Application . Run ( new Form 1 ()); } } } において 、 Application . Run ( new Form 1 ()); より 前 の 位置 で 、 メソッド を 実行 し ます 。 しかし 、 すんなり うまく 行け ば よい の です が 、 うまく 行か ない 場合 は 、 結構 大変 です 。 マルチ スレッド 使う とか 、 結構 大変 に なる 傾向 です 。 [ 二 番目 に 早く 実行 が 可能 な 場所 ] Form 1 クラス で の public Form 1 () { InitializeComponent (); } において 、 InitializeComponent (); より 前 の 位置 で 、 メソッド を 実行 し ます 。 [ 三 番目 ] Form 1 _ Load () メソッド 内 で 該当 メソッド を 実行 。 
https :// paiza . io / projects / z 5 NBB 7 IkW 0 Fo 0 w _ Fy 9 v - iQ こんな 感じ で どう です か ？ 
とりあえず 、 sample / calc ap p/l ogics / CalcLogic . java sample / calcapp / main / Calc . java という フォルダ 構成 だっ た と 仮定 し て 、 【 コンパイル 】 cd sample javac calc ap p/l ogics / CalcLogic . java javac calcapp / main / Calc . java 【 実行 】 java calcapp . main . Calc 
キーボード から の 文字列 入力 ↓ 文字列 の 数値 へ の 変換 ↓ 数字 を 比較 ↓ 結果 を 表示 この よう な 流れ で 構成 する と 思い ます 。 ・ キーボード から の 文字列 入力 String str = System . console (). readLine (); ・ 文字列 の 数値 へ の 変換 int i = Integer . parseInt ( str ); ・ 数字 を 比較 if ( i % 7 == 0 ){ // 真 } else { // 偽 } ・ 結果 を 表示 System . out . println ( i + " は 7 の 倍数 です "); ヒント だけ 。 どうして も わから なけれ ば おっしゃっ て ください 。 
Java 8 で スマート な 書き方 を する か 、 Java 6 まで の 書き方 に 限る か Map の 値 型 に immutable の Integer を 使う か 、 mutable な int [] （ 長さ 1 の int の 配列 ） を 使う か この 組み合わせ で 5 通り の コード が 考えつい た https :// paiza . io / projects / 8 PDZLltgOKF 8 GIHZB 4 - rTA String → int 変換 は parseInt が 最も 効率 が 良く て 簡単 keySet より entrySet の ほう が 効率 が いい HashMap リファレンス https :// docs . oracle . com / javase / jp / 8 / docs / api / java / util / HashMap . html Java 6 以前 / 7 以降 の close の 書き方 docs . oracle . com / javase / jp / 7 / techno tes / guides / language / try - with - resources . html Java で 1 行 ずつ テキスト データ を 読み込む イディオム の 変遷 argius . hatena blog .jp / entry / 2015 / 06 / 06 / 234315 
https :// docs . oracle . com / javase / jp / 6 / ap i/o verview - summary . html 参考 まで に 。 質問 の 内容 は なん です か ？ 表 の 画像 を 表示 する の です か ？ プログラム だけ で 表 を 作る の です か ？ 標準出力 です か ？ 質問 の 内容 から する と BMI の 基準 は 不変 です ので 基本的 に は 画像 が 好ま れる でしょ う 。 自分 で 画像 作っ て 描画 すれ ば いい と 思い ます 。 
フィールド 変数 と 、 メンバー 変数 は 、 同じ もの を さし て い ます 。 この メンバー 変数 は 、 クラス 内 だっ たら 、 どこ の メソッド から も 使える 変数 です 。 また 、 インスタンス が 存続 する 限り 値 が 保持 さ れ ます 。 要するに 、 初め に new で 作る とき に 初期化 で も し て おけ ば 、 全部 の メソッド から 参照 、 変更 が できる 変数 です 。 値 も 保持 さ れる ので 便利 です 。 ローカル 変数 は 、 メソッド の 中 で その 場 限り で 使わ れる 変数 です 。 一時 的 な 変数 です ね 。 メソッド を 抜ける と 普通 は 破棄 さ れ て しまい ます 。 有効 範囲 が ローカル な 変数 です 。 
build . gradle の dependencies の 前 あたり に 以下 を 追加 し て み て ください 。 repositories { maven { url ' http:// repo 1 . maven . org / maven2 ' } jcenter { url " http:// jcenter . bintray . com /" } } 
@ Override を つけ て も つけ なく て も 、 メソッド の 働き に 違い は あり ませ ん 。 しかし 、 @ Override は オーバーライド し て い ない メソッド に対して 付加 する と 、 エラー に なり ます 。 です から 、 オーバーライド 時 に @ Override を 常に つける よう に し て おく と 、 タイプミス 等 で メソッド 名 や 引数 を 間違え て 記述 し た とき に 、 オーバーライド さ れ ない という ミス を 防ぐ こと が でき ます 。 また 、 この メソッド は オーバーライド さ れ て いる ん だ 、 と 確認 する こと が できる ため 、 可読性 が 上がり ます 。 その 程度 の 効果 です 。 
> 普段 使っ て いる パッケージ の 内容 と かなり 異なっ て いる ため Android は 確か に java 言語 で 記述 さ れ て い ます が Android 固有 の API を 使わ ない と いけ ませ ん Java から の 転用 は 基本 的 な も の 以外 は それ程 でき ない と 思っ た 方 が いい です > これ を 使え ば いい という パッケージ 、 クラス など Google の Reference が 基本 です https :// developer . android . com / reference / android / package - summary . htm ... 後 は ネット 情報 でしょ う か 、 API の 仕様 は Java と 比べる と 比較 に なら ない くらい 変更 が 早い です ので ネット 情報 も 最新 （ ３ ヶ月 以内 とか ） で ない と 古く て 使え ない 場合 も あり ます 本 も そういう 意味 で は 最新 で ある こと が 難しい ので 基本 的 な こと 以外 は 使え ない こと が 多い です ね ＞ オーディオ で は どう な の か https :// akira - watson . com / android / audio - player . html ＞ タップ する ため の クラス https :// akira - watson . com / android / touchevent . html など など 
補足 を 優先 し まし た が 、 以下 の よう な 感じ でしょ う か ？ package test 20160720 ; public class Main { private static int nA = 0 ; // 操作 A を 行っ た 回数 private static int nB = 0 ; // 操作 B を 行っ た 回数 public static void main ( String [] args ){ for ( int m = 2 ; m <= 100 ; m+ +){ int n = m ; nA = 0 ; nB = 0 ; while ( n != 1 ) { n = ope ( n ); } System . out . println (" m =" + m + ", A =" + nA + ", B =" + nB ); } } private static int ope ( int n ) { if ( n % 2 == 0 ) { // A ) 整数 n が 偶数 なら ば 、 ２ で 割れる だけ 割っ て その 商 を n と する while ( n % 2 == 0 ) { n = n / 2 ; } // 操作 A を 行っ た 分 インクリメント nA ++; } else { // B ) 整数 n が 奇数 なら ば 、 ３ 倍 し て １ 加え た 整数 を n と する 。 n = 3 * n + 1 ; // 操作 B を 行っ た 分 インクリメント nB ++; } return n ; } } 
それ は 、 html ソース 部分 に ブレークポイント を つけよ う と し た ため と 思わ れ ます 。 たとえば < body > ほげ <% out . print (" ふ が "); %> </ body > という 記述 が あっ た 場合 、 ブレークポイント を 設定 できる の は out . print (" ふ が "); の 行 だけ で 、 それ 以外 は html要素 で プログラム で は ない ため 、 ブレークポイント が 設定 でき ませ ん 。 
int [] judge = new int [ 3 ]; for ( int i = 0 ; i < judge . length ; i ++) { switch ( i ) { case 0 : if ( judge [ i ]>= 25 ) { System . out . println (" 年齢 が ダメ ");} break ; case 1 : if ( judge [ i ]< 173 ) { System . out . println (" 身長 が ダメ ");} break ; case 2 : if ( judge [ i ]< 75 ) { System . out . println (" 体重 が ダメ ");} break ; } } 簡単 です 。 あと 、 プログラム は 楽しみ ましょ う よ 。 勉強 する 感覚 だ と 続か ない と 思う 。 
食べログ は API が 無くなっ た みたい な ので ， やる と すれ ば スクレイピング 1 択 に なり ます ． ただし ， 利用規約 を よく 読ん で 抵触 する 項目 が 無い か 確認 し た 上 で ， すべて 自己責任 で 行っ て ください ． 以下 の よう な 理不尽 な 事件 も 過去 に 起こっ た こと が あり ます ． 岡崎市立中央図書館事件 https :// ja . wikipedia . org / wiki /% E 5 % B2 % A1 % E 5 % B4 % 8 E % E 5 % B 8 % 82 % E 7 % AB % 8 B %... ライブラリ 無し の スクレイピング に関して は 以下 に まとめ て い ます ． Goutte を 使う と もう ちょっと ラク に 書け ます が ， 最初 は これ で 十分 でしょ う ． PHP ネイティブ の DOM による スクレイピング 入門 http:// qiita . com / mpyw / items / c 0312271819 baee 09132 
https :// paiza . io / projects / UQK _ I 06 hTkWD 9 otgAZVEZw こんな 感じ で どう です か ？ 
windows 環境 です か ？ もし そう で eclipse 使う なら Pleiades の Full パッケージ 落とせ ば 、 JDK も つい て き ます よ 。 http:// mergedoc . osdn .jp / 単に 学習 目的 なら これ で 十分 でしょ う 。 JDK 単体 で の ダウンロード なら http:// www . oracle . com / tech network / java / javase / download s / index . html と なり ます 。 5年前 なら Java 6 か 、 ぎりぎり Java 7 です ね 。 その 範囲 で 使う なら 、 大きな 変更 は あり ませ ん 。 Java 8 は Java 1 . 4 から Java5 くらい の 大きな 違い が あり ます が 。 
JavaEE と Java の 違い を 勉強 し 直し て から 出直せ 。 Java を swift に 変わる なら わかる が JavaEE が swift に 代わる とか 無知 丸出 し すぎる 。 
https :// paiza . io / projects / ixgLea 4 yP 9 tf2 JWERkmUpA こんな 感じ で どう です か ？ 
dd と dd 2 と dd 3 は それぞれ 独立 性 が 担保 さ れ て おり 、 dd そのもの の 変更 は dd 2 や dd 3 に 影響 を 与え ませ ん 。 ※ ただし 、 dd が 指し示し て いる dammy 2 インスタンス 内部 の 変更 は dd 2 や dd 3 に 影響 を 与え ます 。 その ため 、 dd を null に する こと で 自動的 に dd 2 や dd 3 を null に する こと は でき ませ ん 。 もし どうしても 使え なく し たい なら 、 class で ラッピング する の が いい でしょ う 。 class dammy 3 { dammy 2 dammy ; public dammy 3 ( int num ){ dammy = new dammy 2 ( num ); } public dammy 2 getDammy 2 (){ return dammy ; } public void setDammy 2 ( dammy 2 dammy ){ this . dammy = dammy ; } } という クラス を 作り 、 dammy 3 dd = new dammy 3 ( 789 ); dammy 3 dd 2 ; dammy 3 dd 3 ; dd 2 = dd 3 = dd ; dd . getDammy 2 () .s yori _ suru (); dd .s etDammy 2 ( null ); と すれ ば 、 dd 2 や dd 3 の getDammy 2 () は null を 返し ます 。 
for 文使 って 、 身長 が 高い 人 の インスタンス を 格納 する よう な 感じ でしょ う か 。 以下 、 サンプル です 。 package test 20160719 ; import java . applet . Applet ; import java . awt . Graphics ; public class MyStudentApplet extends Applet { public void paint ( Graphics g ){ MyStudent [] student ={ new MyStudent (" 花子 1 ", 151 ), new MyStudent (" 花子 2 ", 161 ), new MyStudent (" 太郎 1 ", 155 , 50 ), new MyStudent (" 太郎 2 ", 165 , 00 ), }; // 身長 の 最大 の 生徒 を 求める MyStudent myStudentMaxHight = null ; int maxHight = 0 ; for ( MyStudent s : student ) { if ( maxHight < s . getstudentHight ()) { myStudentMaxHight = s ; } } g . draw String ( " 身長 が 最大 の 人 ：" + myStudentMaxHight . getstudentName () + " 身長 ：" + myStudentMaxHight . getstudentHight () + " ", 30 , 30 ); } } 
メソッド の 定義 が 「 static void show () 」 なら ば 、 エラー は 出 ない です 。 「 public static void main ( String [] args )」 は static メソッド な ので 同じ クラス の static メソッド の 呼び出し は 可能 です 。 基本的 に 以下 の 書き方 を 覚えれ ば よい の で は ない でしょ う か 。 ・ static メソッド の 呼び出し [ クラス 名 ].[ メソッド 名 ] 例えば 、 Math クラス に は staic メソッド が 用意 さ れ て ます 。 それ を 使う 場合 です 。 ・ 非 static メソッド の 呼び出し [ インスタンス ].[ メソッド 名 ] 質問 内容 の aaa .s how () は （ aaa に 格納 さ れ た ） インスタンス の show メソッド の 呼び出し です 。 インスタンス フィールド の 書き方 が 似 て いる の は 文法 だ から 仕方 ない と 思い ます 。 「 .」 が 参照 を 表す と 解釈 すれ ば 納得 いく かも しれ ませ ん 。 
１ ． x = new X () は 事前 に 「 public X x 」 として フィールド が 宣言 さ れ て いる から です 。 事前 に 宣言 さ れ て い なけれ ば 、 X x = new X () で なく て は なら ない です が ... ２ ． 静的 メンバ に アクセス する 際 は 、 「 インスタンス . メンバ 名 」 か 「 クラス 名 . メンバ 名 」 の どちら か で アクセス が 可能 です 。 後者 で も アクセス が できる の は 、 静的 メンバ が インスタンス 無し で アクセス できる から です 。 
条件 が わから な すぎる ため 、 ざっくり し た 回答 に なっ て しまい ます が 、 印刷 ボタン を 自力 で 作っ て 、 クリックイベントリスナー で javax . print 系 を 使用 する こと に なり ます 。 javax . print に関して は 、 「 javax . print 」 とか 「 Java Print Service api 」 とか で 検索 すれ ば サンプル も 手 に 入り ます 。 
音声 形式 について あまり 知り ませ ん が 、 47 MB から 130K B まで の 圧縮 は 実に 400 分の 1 と いう こと に なり ます 。 WAV 形式 が リニアPCM だ と し ます と 、 チャンネル 数 を 減らし た として も 200 分の 1 です から 、 約 200 Hz の 周波数 という こと に なり ます 。 それ を 音声 に 直す と さらに 半分 に なる ので 、 100 Hz まで の 音 しか 聞こえ ませ ん 。 これ は 極 低 音域 以外 全て カット さ れ て いる という こと です 。 音声 の 圧縮 方法 に は MP3 や OGG など を 使用 し た ほう が いい と 思い ます 。 しかし 、 もと の サイズ で ある 47 MB だっ た として も 、 設定 次第 で 再生 でき そう に 思い ます 。 設定 です が 、 [ コントロールパネル ]->[ プログラム ]->[ Java ] で Java コントロールパネル を 開き 、 [ Java ]->[（ Java アプリケーション と アプレット の ・ ・ ・ ） 表示 ] で Java Runtime Environment 設定 を 開き 、 [ ランタイム ・ パラメータ ] を 以下 の よう に し て み て ください 。 - Xms 512m - Xmx 512m 512m と は 、 512 MB の メモリ を 確保 する という こと です 。 ここ は 、 マシン の メモリ 容量 と 相談 し て 決め て ください 。 多分 これ で 大丈夫 で は ない か と 思い ます 。 
「 アクセサリ メソッド 」 が いまいち よく 分かり ませ ん ね ・ ・ ・ 。 まぁ 、 多分 「 アクセッサメソッド 」 （ ゲッター と セッター の こと ） だ と 思う ので そう 解釈 し て おき ます 。 「 ____」 は タブ に 置き換え て ください 。 // B extends A で 「 クラス A を 継承 し た クラス B 」 と なる public class Circle extends Figure { ____// インスタンス フィールド 「 radius 」 です 。 ____ private double radius ; ____ ____// これ が コンストラクタ （ 引数 を 1つ 受け取っ て インスタンス フィールド 「 radius 」 を 初期 化 し て いる ） ____ public Circle ( double r ) ____{ ________// インスタンス フィールド 「 radius 」 に コンストラクタ の 引数 r を 代入 し て いる 。 （ this を 抜い て も 大丈夫 です 。 ） ________ this . radius = r ; ____} ____ ____// これ が ゲッター （ アクセッサメソッド の 1つ で 、 外部 の クラス から この クラス の インスタンス フィールド 「 radius 」 の 値 を 取得 し たい とき に 使わ れる ） です 。 ____ public double getRadius () ____{ ________ return radius ; ____} ____ ____// これ が セッター （ アクセッサメソッド の 1つ で 、 外部 の クラス から この クラス の インスタンス フィールド 「 radius 」 の 値 を 設定 し たい とき に 使わ れる ） です 。 ____ public void setRadius ( double r ) ____{ ________// インスタンス フィールド 「 radius 」 に 呼び出し 元 から 渡さ れ た 引数 r を 設定 し て いる 。 ________ this . radius = r ; ____} ____ ____// getArea メソッド を オーバーライド し て い ます 。 （ Figure クラス に getArea メソッド が ありません が 、 その スーパークラス （ 継承 元 の クラス ） で 実装 さ れ て いる と 仮定 し ます （ でないと オーバーライド は 出来 ない ので ） ） また 、 「@ Override 」 は つけ なく て も 良い です が 、 つける の が 一般的 です 。 （ その 方 が コンパイラ が しっかり チェック し て くれ ます 。 ） ____@ Override ____ public double getArea () ____{ ________// π r ^ 2 を 計算 し て それ を 呼び出し 元 に 返し て い ます 。 ________ return Math . PI * Math . pow ( radius , 2 ); ____} ____ ____// print メソッド を オーバーライド し て い ます 。 ____@ Override ____ public void print () ____{ ________/* ________ 名前 と 半径 と 面積 を 表示 し て い ます 。 ________ 名前 は Figure クラス の getName メソッド を 利用 し て い ます 。 ________ 半径 は getRadius () で 取得 し て い ます 。 （ インスタンス フィールド 「 radius 」 を 直接 使っ て も 大丈夫 だ と 思い ます 。 ） ________ 面積 は 上 の getArea メソッド を 利用 し て い ます 。 ________*/ ________ System . out . println (" 名前 :" + getName () + ", 半径 :" + getRadius () + ", 面積 :" + getArea ()); ____} } 
final Image [] img = new Image [ 4 ]; img [ 1 ] = new Image (" 各停 東 . gif "); img [ 2 ] = new Image (" 快 東 . gif "); img [ 3 ] = new Image (" 特快 東 . gif "); img [ 4 ] = new Image (" 通特 東 . gif "); 配列 の 添字 が 間違っ て い ます 。 正しく は 0 から 3 です 。 例外 の 表示 に ちゃんと 書い て あり ます よ 。 Caused by : java . lang . A rr a y IndexOutOfBoundsException : 4 at TimeTable .s tart ( TimeTable . java : 52 ) 
public static void main ( String [] args ) { キチガイ 1 (); キチガイ 2 (); } main メソッド 内 で 他 の メソッド を 呼び出し て い ない から です ね 。 あと 、 クラス 、 パッケージ 、 メンバ など に 日本語 を 用いる こと は 可能 です が 、 推奨 さ れ ない ので ご 注意 を 。 
コード が ない と なんとも 言え ませ ん 。 
文字コード の 設定 でしょ う か ？ 以下 の よう に response. setContentType メソッド を 使え ば 表示 さ れる と 思い ます 。 protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws Servlet Exception , IOException { response. setContentType (" text / html ; charset = UTF-8 "); // 文字コード の 設定 PrintWriter writer = response. get Writer (); writer . println (" 2016 / 7 / 32 大吉 "); } 
一 例 です 。 import java . io .*; public class RandTest { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); try { while ( true ){ System . out . print (" 1 ～ 10 の 整数 の いずれ か １つ 入力 ："); int num = Integer . parseInt ( br . readLine ()); int com = ( int )( Math . random ()* 10 )+ 1 ; if ( num != com ){ System . out . println (" You :"+ num +" Com :"+ com +" でし た 。 "); } else { System . out . println (" You :"+ num +" Com :"+ com +" で 正解 です 。 "); break ; } } } catch ( Exception e ){ System . out . println (" 不正 な 入力 が あり まし た 。 "); } System . out . println (" 終了 "); } } 
インスタンス に 通し番号 を 振り たい の でしょ う か 。 その 場合 、 static int と int を クラス 変数 に 用意 し て 、 コンストラクタ で 調節 すれ ば よい と 思い ます 。 以下 、 サンプル です 。 -- ソース -- package test 20160715 ; public class CarTest { public static void main ( String args []) { Car ca r1 = new Car (); Car ca r2 = new Car (); Car ca r3 = new Car (); ca r1 .s how _ num (); ca r2 .s how _ num (); ca r3 .s how _ num (); } } class Car { private static int serialNum = 0 ; private int num ; public Car () { serialNum ++; num = serialNum ; } public void show _ num () { System . out . println ( num ); } } -- 結果 -- 1 2 3 
先日 は BA ありがとう ござい まし た 。 今回 の 質問 の よう に 、 いろんな 人 の 意見 を 聞か れる と よい か と 思い ます 。 まだ お 一 人 です が 。 さすが に ２ 倍 も 違う と は 思っ て い ませ ん でし た が 、 それでも 通常 利用 で 処理 速度 が ２ 倍 も 違う こと は ない です ね 。 金 に もの を 言わ せ て スペック に 酔いしれる か 、 効率的 に 限り ある 資金 を 投資 する か 。 。 。 同じ ２ コア なら i 5 でも いい よう な 気 が し ます 。 特に 費用対効果 が 。 私 も Vaio の i 7 を 買い まし た が 、 次ぎ は i 5 で いい やっ て 思っ て い ます 。 早い の は いい こと です が 発熱 が スゴイ ので 、 ファン が まわり っぱなし に なり ます 。 。 。 体感 できる か どう か は 、 電器 屋 で ちょっと つつけ ば 分かる と 思い ます 。 CPU の 計算 も 大切 です が 、 情報 の アクセス は メモリ を 介し て HDD （ SSD ) や ネット 環境 で おこなう ので 、 すべて の バランス が 大切 です 。 VisualStudio 2015 は 確か に メモリ 消費 が 大きい と 思い ます から 、 できれ ば ８ G ある と いい です ね 。 私 が 何 度 言っ て も 無意味 な ので 、 他 に 気 に なっ た こと を 。 二つ に 絞っ て おら れ た PC です が 、 どちら も テンキー 付き の 、 横 幅 380m m ある 15 インチ タイプ です よ ね 。 図書館 に 持ち運ぶ の に は 大き すぎる よう に 思い まし た 。 今 の PC も その 大き さ なら 構い ませ ん が 、 この 分野 も 、 コンパクト で 軽い ほど 高く なる ので 。 。 。 選択 と 金額 の バランス で 悩む とき は 、 あと から 換装 でき たり 、 USB で 追加 出来 たり する か どう か を 考え て みる と 良い です 。 メモリ や HDD 、 DVD など 。 そうなると CPU は 最 上位 に し て おく べき って なり ます が 。 SSD を 強く 薦め て しまい まし た が 、 デュアルブート という こと な ので 、 容量 重視 の HDD で も よい と 思い ます 。 少なくとも 今 所有 し て おら れる PC から する と 、 i 3 でも 十分 早い と 思い ます 。 
ジェネリクス と 言い ます 。 別名 、 総称 型 や テンプレート と 呼ば れる こと が あり ます 。 Java5 から 加わっ た 新しい 文法 です 。 public class List < E > { public void set ( E e ); public E get (); } ジェネリクス で は クラス 名 の 後ろ に < 仮 の 型 > を つけ ます 。 仮 の 型 に 意味 は あり ませ ん 。 今回 は E に し て い ます が 、 お 好き な 文字 で どうぞ ... そして 、 利用 する とき に 、 実際 の 型 として クラス （ 今回 は Integer クラス ） を 定義 し て 以下 の 文法 で 初期 化 する と List < E > list = new List < Integer >; Java は 裏 で すべて の E が Integer に 置き 変わっ た クラス を 定義 し て 使い ます 。 public class List < Integer > { public void set ( Integer e ); public Integer get (); } これ が ジェネリクス です 。 
何 を どこ に 書き 足せ ば 、 と 言わ れ て も 、 あなた が 書い た コード が 判ら なけれ ば 回答 でき ませ ん （;￣O￣） 
> 前者 の ほう が 高速 で メモリ 効率 も いい と 思う た ぶんそう だ けど ， 理由 が 違う 気 が する ． > 後者 は クラス ローダー が Math クラス を 読み に いか なく て は なら ない static メソッド な ので ， コンパイル 時 に 単純 な メソッド 呼び出し に 変換 さ れる はず ． よって ， クラス ローダ が いちいち Math クラス を 読み に いく と は 考え づらい （ Java の 挙動 に は 詳しく ない ので ， 間違っ てる かも しれ ない けど ） ． 一方 で ， 単純 な 算術 和 が メソッド 呼び出し に なる ので ， その コスト は かかる はず ． ただし ， 実行 中 に 最適 化 さ れる はず な ので ， それ も 大きな 差 に は なら ない と 思う ． で ， 問題 は ， addExact メソッド が オーバーフロー が 絶対 に あり 得 ない と 保証 でき ない 限り ， オーバーフロー チェック を する という こと ． 単純 な 算術 和 は ， この チェック 機能 が ない分 高速 な はず ． 
たぶん に 曖昧 な 質問 です けど 、 > javac : ファイル が 見つかり ませ ん … と 出 て き て ... と ある ので Path の 話 じゃ ない と 思う 。 ・ javac コマンド が 、 ・ 指定 さ れ た ソース ファイル は 存在 し ない わ よ と 文句 言っ てる エラー だ と 思っ た 。 かんじん の エラーメッセージ 、 その まんま もれなく コピペ し て くれ て あれ ば まだしも 、 それ も ない ので 、 可能性 は いっぱい 。 ・ タイプミス で びみょ ー に 異なる ファイル 名 打っ てる が 、 気づい て ない 。 ・ カレントディレクトリ の 知識 欠如 。 HelloWorld . java を 置い て いる ディレクトリ ( フォルダ ) じゃ ない ところ で javac HelloWorld . java と やっ て いる 。 ・ Windows の 「 拡張子 を 表示 し ない 」 に ダマ さ れ て いる 。 本人 は HelloWorld . java という ファイル 名 だ と 思っ て いる が 、 実は HelloWorld . java . txt だっ たり 。 など など 。 Windows コマンドプロンプト で やっ てる ん です よ ね ？ あなた が javac で エラー に なる 状況 で dir と タイプ し 、 < Enter > キー し て み て ください 。 dir コマンド は 、 カレントディレクトリ に ある ファイル や フォルダ を 一覧 表示 する もの 。 そこ に 、 あなた が javac に 指示 し た の と 1 文字 も 違わ ない ソース ファイル 名 が 、 あり ます か ？ 
ステップ 的 な 話 を する なら 、 あまり 変わり は ない です 。 たとえば if (! 処理 ()){ // 異常 系 } else { // 正常 系 } という コード は コンパイル 時 に if 判定 後 に 正常 処理系 に 飛ぶ ため の アドレス ジャンプ が 発生 し ます 。 if ( 処理 ()){ // 正常 系 } else { // 異常 系 } で あれ ば 、 正常 処理系 で は アドレス ジャンプ が 発生 し ませ ん が 、 結局 if 文 内 の 処理 が 終わっ た 後 に アドレス ジャンプ が 発生 し て しまい 、 ステップ 数 は 稼げ ませ ん 。 ただし 、 正常 系 の 場合 は return する 、 といった 処理 で 、 if 文 の 後ろ で 何 も し ない の で あれ ば 、 後者 の ほう が 若干 速く なる 可能性 は あり ます 。 もっとも 、 それ で 稼げる 時間 は アドレス ジャンプ １ 回分 に 過ぎ ない ので 、 よほど シビア で ない 限り は 不要 な 高速化 です 。 
> その よう な プログラム は 公開 さ れ て い ます か ? ↓ 録音 装置 （ 公開 キー ： 2K CN 83 C4 ） http:// wiki . hosiken .jp / pet c3 gou /? Toukou % 2 F % CF % BF % B2 % BB % C1 % F5 % C3 % D6 ↓ WAVREC （ 公開 キー ： JRNEV 28 V ） http:// www . aogondo .net / PetitCom 3 / WAVREC . php 
そう です 。 実装 し ない と そこ まで 保存 さ れ ませ ん 。 直列 化 の 対象外 は 、 １ ． transient 修飾 子 で 修飾 し た フィールド ２ ． 静的 フィールド ３ ． Serializable を 継承 し ない クラス 型 の フィールド が 対象外 です 。 
フォーカス を その ウィンドウ に 設定 し て あげ ましょ う 。 requestFocusInWindow (); JComponent で 定義 さ れ て いる メソッド です 。 https :// docs . oracle . com / javase / jp / 6 / api / javax / swing / JComponent . html この サイト に は 全て の パッケージ の 概要 が 載っ て いる ので 便利 です 。 この 中 に 以上 で 挙げ た メソッド も 載っ て い ます 。 参考 に し て み て ください 。 
主キー は null に は なら ない ので 、 おそらく 検索 し て 取得 し た レコード が ０ 件 だっ たら 、 という 意味 だ と 思い ます が 、 違い ます か ？ ResultSet rs = st . executeQuery (" select hoge from fuga where 条件 "); if (! rs . next ()){// レコード が ない st . executeUpdate (" insert into fuga values ( 値 )"); } みたい な ？ 
でき ます ． JavaScript や C# の async / await みたい な コード が 書ける 自作 の ライブラリ が ある ので 紹介 し ます ． https :// github . com / mpyw / co ただ ， ライブラリ の コード が かなり 汚い 上 に バグ が ある ので ， 今 リファクタリング 中 です … （ ちょっと まだ リメイク 版 は 完成 の メド が たって ない です ） https :// github . com / mpyw / co / issues / 7 
elipse 立ち 上げ て 、 プロジェクト 新規作成 し て 、 クリック し た とき に 画像 を 表示 する よう な プログラム 組め ば いい では ない です か ？ （ 作り方 です よ ね ？ ） ※ 演習 の 問題 な ので 、 自分 で 考え て （ 作っ て み て ） その 上 で わから ない ところ や 、 エラー に なっ て しまう ところ 、 想定 通り に 動か ない 所 など の 質問 なら ば 、 回答 も し やすい の です が 、 画像 貼ら れ て 作り方 教え て なんて 、 丸投げ な 質問 に は 回答 し づらい です 。 
Android 開発 と の こと です ので 、 ・ 画面 設計書 （ レイアウト ） ・ 画面 遷移 図 も 欲しい か と 。 （ 前 段階 の 基本 設計 レベル か な ？ ） データベース や ファイル 類 を 使用 する なら ば 、 DB 設計書 や ファイルレイアウト 設計書 も 欲しい ところ です が 、 使わ ない か な ^^; あと は 、 非同期 処理 が ある なら ば 、 シーケンス 図 作っ と くと わかり やすい です 。 
String urlPath = getClass (). getResource (" resource / resource . txt "). getPath (); String path = URLDecoder . decode ( urlPath , " UTF-8 "); これ で いけ ます でしょ う か ？ 
内部 クラス Test を 定義 し て おら れ ます ね 。 内部 クラス の インスタンス は 、 それ を 所有 する クラス の インスタンス に 関連づけ られ て い ます 。 です から 、 ご 提示 の コード の 場合 こう する 必要 が あり ます 。 public class Test 113 { public static void main ( String [] args ) { int a ; a = 10 % 3 ; System . out . println (a) ; // Test 113 の インスタンス を 生成 Test 113 t 113 = new Test 113 (); Test t = t 113 .new Test (); // OK ! } public class Test { int b = 3 ; void tes t2 () { if ( this . b == 3 ) { System . out . println ( this . b ); } } } } 内部 クラス を 外側 の クラス と 関連 づか ない よう に する に は 、 内部 クラス の 宣言 に static を つけ ます 。 public static class Test { // static を つける int b = 3 ; void tes t2 () { if ( this . b == 3 ) { System . out . println ( this . b ); } } } 
Statement から クエリ を 実行 し 、 ResultSet を 受け取っ たら 、 next で 行 を 移動 し ながら 値 を 読め ば いい です 。 ResultSet rs = stmt . executeQuery (" select * from table 1 "); while ( rs . next ()) { id = rs . getInt ( 1 ); name = rs . get String ( 2 ); } 
// まず double に 変換 できる か 。 try { double d = Double . parse Double ( ss ); // 変換 でき た 場合 は 、 さらに Int に 変換 できる か try { int i = Integer . parseInt ( ss ); return 1 ; } catch ( NumberFormatException e ){ // Int 変換 失敗 return 2 ; } } catch ( NumberFormatException e ){ // double 変換 失敗 return 0 ; } try {} catch ( NumberFormatException e ){} は 、 try {} 内 で 処理 し た 内容 で 、 NumberFormatException という 例外 （ エラー ） が 発生 し た 場合 、 catch (){} 内の 処理 を 実行 する という 、 例外処理 に なり ます 。 な ので 、 まず 、 数値 として 有効 か どう か （ 少数 も 含み で ） を チェック する ため double に 変換 できる か を チェック し 、 そのうえで 、 Int （ 整数 か どう か ） に 変換 し て い ます 。 
「 public static void main ( String [] args )」 を 投稿 内容 に 合わせ て 実施 し まし た 。 ○ 1回 目 ***************** * ランダム 数値 * ***************** 6 - ゲーム 終了 --- ○ 2回 目 ***************** * ランダム 数値 * ***************** 1 - ゲーム 終了 --- ランダム に 数値 が 表示 さ れる よう です 。 
体感 的 に は 、 両者 の CPU の 違い は ない と 思わ れ ます 。 それ より SSD に し た 方 が 、 起動 時間 を 含め 大幅 に スピードアップ する と 思い ます 。 私 なら 、 i 5 に 落とし て でも SSD に し ます ね 。 
その stream の 使い方 なら parallel 入れ た方 が いい の で は ない か という の は 置い て おい て 、 enum の デフォルト 機能 で でき ます よ 。 ただし 、 unmatch は exception で 判定 する こと に なり ます 。 enum . valueOf メソッド は 、 その 指定 さ れ た 文字列 と 一致 する enum を 返す メソッド です 。 アンマッチ の 場合 は IllegalArgumentException が 発生 し ます 。 これ を 利用 し ます 。 public void execute () { boolean b = isMatch (" juice ");// true ; boolean c = isMatch (" huice ");// false ; } private boolean isMatch ( String key ) { try { return Drink . valueOf ( key )!= null ; } catch ( IllegalArgumentException e ) { return false ; } } 
[ Tomcat インストール 先 ]\ webapps \[ Web アプリ 名 ]\ WEB - INF \ classes の 下 です 。 
x1 = ( int )( Math . random () * 100 ); y1 = ( int )( Math . random () * 100 ); 上記 を run メソッド に 移動 し て み て は どうでしょう 。 
ca r2 .s how ( tax _ price ); の 前 に tax _ price = ca r2 . tax _ calc (); で 計算 し て ない から でしょ う ね ca r3 も 同様 
普通に ストリーム が 閉じ て いる 可能性 は ない の です か ？ BufferedInputStream は 、 なん の ストリーム を ラッピング し て い ます か ？ 
自分 なら ば 、 Table 1D ao から FooDao を 派生 さ せ て 、 FooModel を 作成 し ます 。 まぁ 、 この 辺 は 作る 人 と 、 使う 言語 、 フレームワーク の 種類 によって 変わっ て くる と 思い ます が ^^; 
＞ Androidアプリ 作成 初心者 です 既に 開発 し て いる の で あれ ば ご存知 でしょ う けれど いま は Android Studio が Google の 推奨 環境 です > Eclipse で 作ろ う か と 思っ て いる の です が Androidアプリ を eclipse で 作る の は やめ た 方 が いい でしょ う 自力 で なん でも 解決 し て いける 自身 が 無い 限り は 情報 が 極端 に 少なく なっ て い ます あっ て も 古く て 使え ない ＞ PC 上 で アプリ を 実行 し て みる ソフト ？ emulator として は こういう の が ある らしい の です が 2 . 1 Google 公式 「 Android Studio 」 2 . 2 速さ と 機能 の 「 Genymotion 」 2 . 3 すぐ に 使える 「 BlueStacks 」 2 . 4 無料 な のに 高 機能 な 「 Andy 」 2 . 5 低 スペック で も OK の 「 YouWave 」 2 . 6 サクサク 軽い 「 Windroy 」 https :// blog . codecamp .jp / android _ emulatorandroid ただし 、 １ 年 前 な ので 情報 的 に は 古い です 去年 の 秋 以前 ( Android 6 , Android Studio 2 以前 ) の 情報 は 、 既に 前 の もの と 思っ て 読ん だ 方 が いい でしょ う 動か ない 可能性 も あり ます 
コマンドプロンプト 自体 を 埋め込む 方法 は ちょっと わから ない です 。 しかし 、 コマンド を 実行 し て 出力 を 得る 方法 なら あり ます 。 以下 の よう に Runtime クラス を 使い ます 。 GUI で は 、 テキストボックス など で コマンド の 入力 を 検知 し て 結果 を 表示 する よう に すれ ば いい か と 思い ます 。 public static void main ( String [] args ) { Runtime runtime = Runtime . getRuntime (); Process p = null ; try { p = run time. exec (" cmd / c dir "); try ( InputStream is = p . getInputStream (); BufferedInputStream bs = new BufferedInputStream ( is ); InputStreamReader sr = new InputStreamReader ( bs ); BufferedReader br = new BufferedReader ( sr )) { br . lines (). forEach ( x -> System . out . println ( x )); } p . waitFor (); } catch ( IOException ex ) { ex. printStackTrace (); } catch ( InterruptedException ex ) { ex. printStackTrace (); } } 
例外 が 発生 する と コンソール に 例外 の スタックトレース が 出力 さ れ ます 。 それ を 読む の が 一番 早い の で は ない でしょ う か ？ 見当 が つか ない 場合 、 発生 し た 例外 の クラス 名 で 検索 すれ ば よい と 思い ます 。 以下 、 例 を 挙げ ます 。 -- プログラム 例 -- package test ; public class Test 20160711 { public static void main ( String [] args ) { int a = 1 ; int b = 0 ; System . out . println ( a / b ); } } -- 実行 結果 -- Exception in thread " main " java . lang . ArithmeticException : / by zero at test . Test 20160711 . main ( Test 20160711 . java : 9 ) 上記 の 場合 、 「 ArithmeticException java 」 で 検索 すれ ば どの よう な とき に エラー が 発生 する か 出 て き ます 。 また 、 「 Test 20160711 . java : 9 」 の よう に 例外 が 発生 し た行 も 出力 さ れる ので そこ を 中心 に 見直し ます 。 今回 の 場合 、 b = 0 が 原因 だ と 判明 し ます 。 
UserData . dat ファイル が 読み取り 専用 だ から でしょ う 。 ( 書き込み 権限 が ない 。 ) OS が Windows なら ファイル の プロパティ を 開い て 属性 や アクセス 許可 を 確認 し て ください 。 OS が UNIX 系 なら chmod し て ください 。 そもそも 安易 に 設定 変更 し て よい ファイル な の か 確認 す べき です 。 
https :// docs . oracle . com / javase / jp / 8 / docs / api / これ に よる と 、 アクセス が 拒否 さ れ た 場合 です ね 。 アクセス 権 が ない 、 不正 な 値 を 使っ て いる など です 。 あと 、 こういう 質問 の 時 は 可能 な 限り 、 ソースコード と スタックトレース を 表記 し ましょ う 。 そう し ない と どこ で エラー が 発生 し た か 、 どの よう な ソース か が 分から ない ので 、 回答者 も 回答 でき ない の です 。 
スクリプト の 全体像 が 見え ない し 、 最終 的 に どの 様に し たい の か の 情報 も 不足 し て いる ので 想像 で 回答 し ます 。 お門違い な こと を 書い て い たら すみません 。 ---- ＞ 小さい も じ （ あ に対する ぁ 等 です ） が ある と 誤変換 する こと が あり ます 。 上手く いく 事 も 場合 も ある し 、 上手く いか ない こと も 有る という こと でしょ う か ？ 恐らく です が 、 小文字 の 有無 が 直接 の 原因 で は ない と 思い ます 。 変換 対象 の 文字列 str の 中 に 、 複数 の 「 あ 」 や 「 ぁ 」 が 含ま れ て いる はず です 。 / ぁ | あ / では str に 含ま れる 、 最初 の 「 あ 」 か 「 ぁ 」 が 「 ぼ たん 」 に 置換 さ れる だけ で 、 全て の 「 あ 」 と 「 ぁ 」 を 置換 する こと は でき ませ ん 。 正規表現 リテラル に global オプション を 付加 し て / ぁ | あ / g の 様に し て み て 下さい 。 全て の 「 あ 」 と 「 ぁ 」 が 「 ぼ たん 」 に 置換 さ れる はず です 。 ---- ＞ 正規表現 を 使い 、 以下 の 様 な ５ ０ 音 の 各 文字 を 置き換える プログラム で 「 あ ～ お 」 だけ で なく 、 50 音 全て で 同様 の 処理 を 行う 場合 下記 の 様 な 理由 で 、 想定 通り に 動か ない 可能性 が ある と 思い ます 。 例えば です が 、 str = str . replace ( / ぁ | あ / g , " ぼ たん ") ; の 処理 を 実行 し た 後 に str = str . replace ( / ん / g , " しゃくやく ") ; の 様 な 処理 を 実行 し た 場合 、 置換 後 の 文字列 「 ぼ たん 」 に 含ま れる 「 ん 」 まで 、 「 しゃくやく 」 に 置換 さ れ て しまい ます 。 もしも これ が 想定外 の 挙動 な の だ と する と 、 文字列 変換 の ロジック 自体 を 見直す 必要 が ある かも しれ ませ ん 。 
Java の 場合 は 、 広く 認知 さ れ た 慣習 ・ もはや 定着 文化 な 気 が し ます けど ね 。 (^_^;) 言語 の 構文 上 、 クラス 名 と する 識別子 は 大文字 始まり で なけれ ば いけ ない という ふう に は なっ て ない ので 、 > 大文字 に し なけれ ば なら ない ... という こと は ない です 。 けど 、 全部 小文字 で 命名 し た ソースコード は 、 他 の Java プログラマ の 多く に 違和感 を 感じ させる ん じゃ ない か と 思い ます 。 なんで 、 こんな 慣習 が 定着 し た か は 、 正確 な ところ は 存じ ませ ん が 、 ・ 標準 クラス ライブラリ が みな こう し て いる ところ に 由来 し てる ん じゃ ない かしら 。 元祖 Java を 作っ た Sun Microsystems で は 、 コーディング 規約 を 定め た ん じゃ なかっ た っけ ？ ＃ 曖昧 な 風聞 記憶 。 出典 は 示せ ませ ん 。 m (;_ _) m そして 、 Java を 気に入っ た プログラマ たち も 、 みな その コーディング 規約 を そのまま 尊重 、 定着 し て 今 に 至る ... じゃ ない か と 思い ます 。 なんで 元祖 の 規約 上 の 命名 則 が そう なっ た か ？ は 、 やはり 英語 で の 慣習 じゃ ない です か ね 。 クラス 名 は 、 基本的 に 名詞 。 そして 、 英文 で は 文中 の 固有名詞 は 大文字 始まり です から 。 歴史 経緯 は どう で あれ 、 Java の コード スタイル ・ 規約 は 、 他 の 文脈自由文法 な プログラミング言語 に 比べれ ば 、 圧倒的 に 単一 な 印象 が あり ます 。 # オレコーディング 規約 が 乱立 する C言語 族 と は 対照的 。 歴史 経緯 ・ 個人 の 好み は どう でも 、 多く の プログラマ が これ が 正しい と 思っ て 定着 し て て 、 かつ 大きな 不便 も 感じ て ない わけ です 。 一 人 異なる 主張 を する の は 、 自分 に 閉じ た コード なら かまわ ない けど 、 複数人 で チーム プレイ で Java で お 仕事 する ... といった 場合 、 ハンデ に なる と 思い ます 。 Java の 場合 は 特に 「 郷 に 従え 」 が 有利 だ と 思い ます けど ね 。 そんなに 「 違和感 」 あり ます か ？ (^_^;) 
実行 ボタン の 横 の 三角 を クリック し て 、 実行 > Java アプリケーション で いけ ます か ？ 
可能 ちゃー 可能 だ けど 、 その へん を 考え だす と 、 きり が ない ので 。 Java なら 、 ソースコード の 難読 化 くらい が 、 妥協 点 として は いい と 思う 。 Java は 、 ソースコード が 丸見え に なる から なー 。 そこ から 解析 さ れる って パターン は 、 多 そう 。 
for 文 の 手前 で 「 rei = new Rect [ 10 ];」 で 良い と 思い ます 。 「 private Rect [] rei ;」 は Rect 配列 を 参照 する 変数 rei を 宣言 し た のみ で 、 配列 そのもの が 格納 さ れ て ない の です 。 
・ new を 使う 理由 これ は つまり 、 int a = 0 ; と 書ける のに 、 Object b = new Object (); に する 必要 が ある の は なぜ か 、 という こと です よ ね 。 少し ややこしい の です が 、 Object b ; と 宣言 し た 時点 で 、 Object の インスタンス は 作ら れ ませ ん 。 b は あくまで メモリ 上 の 住所 、 番地 を 格納 する 変数 です 。 つまり Object b = new Object (); と し た 時点 で 、 変 数b に は 0 x 27 F C5 B など の よう な メモリ 番地 が 入る の です 。 この よう な 型 は 参照 型 と いい ます 。 ここ で Object b = new Object (); と する と 、 new によって メモリ 上 の ある 部分 に Object の インスタンス が 作ら れ 、 その 位置 が b に 代入 さ れる の です 。 しかし 、 int の よう な 型 は ちがい 、 int a = 0 ; と すれ ば a に 0 そのもの が 代入 さ れ ます 。 この よう な 型 は プリミティブ 型 と いい ます 。 ちなみに インスタンス と は クラス を new し た 時 に 作ら れる クラス の 実体 です 。 ここら へん は 本や ほか の webサイト を 探せ ば いくら でも 詳しく 書い て あり ます 。 ・ 戻り値 の 特徴 メソッド が 処理 の 結果 を 返し た もの です 。 数字 で も 文字 で も インスタンス で も 、 なん でも 返せ ます 。 また 、 何 も 返さ ない 場合 も あり ます 。 その 場合 の 戻り値 の 型 は void （ 意味 は 「 空っぽ の 」 ） です 。 ・ クラス に 定義 出来る 物 クラス に は 変数 ・ 定数 と メソッド を 定義 でき ます 。 また 、 それら に アクセス できる 範囲 も 指定 でき ます 。 ・ 継承 の ルール Java は 多重 継承 を 認め て い ませ ん 。 つまり 、 複数 の クラス は 継承 し ませ ん 。 しかし 、 インタフェース なら いくつ でも 継承 でき ます 。 ・ スーパークラス と サブクラス の メソッド 名 の ルール 重複 し た 名前 が ある と 、 オーバーライド という もの が 起こり ます 。 つまり サブクラス の メソッド が スーパークラス の メソッド を 覆い 隠し て しまう の です 。 そうすると 外 の クラス から は 隠さ れ た メソッド を 呼び出せ ませ ん 。 ただし 、 その クラス の 中 で super . メソッド 名 (); と すれ ば 隠さ れ た クラス も 呼び出せ ます 。 また その スーパークラス の メソッド に final が 指定 さ れ て いる と 、 コンパイル 時 に エラー が 起き ます 。 ・ super の 意味 super は スーパークラス が あらかじめ 入っ て いる 変数 です 。 this （ 自身 の クラス の 変数 ） と セット で 覚え ましょ う 。 また 、 これら を コンストラクタ 内 で メソッド の よう に 使う と 、 スーパークラス の コンストラクタ や 、 オーバーロード さ れ た 別 の コンストラクタ を 呼び出せ ます 。 ・ コンストラクタ の 制限 戻り値 を 返せ ませ ん 。 （ ちなみに 非公開 ( private ) に する と 、 外部 から new でき なく なり ます ） ・ インタフェース の 実装 の 制限 ・ 記述 し て いい こと インタフェース は 外 から 呼び出せる 定数 ・ メソッド 名 を 連ね た もの です 。 これら は 抽象 メンバ と 呼ば れ ます 。 また 、 すべて の 変数 に public abstract final 、 メソッド に は public abstract が つい て いる の と 同じ 扱い です 。 余談 です が 、 Java 8 から static な メンバ も インタフェース に 含める こと が できる よう に なり まし た 。 
うまく 回転 でき ない という の は 、 node .s etRotation () を 呼ん で も 表示 が 全く 変わら ない という こと です か ？ それとも 、 回転 さ せる と 位置 が ずれる 、 あるいは 表示 が 消える 、 と いっ た こと でしょ う か ？ 
Eclipse は 重い から ね 。 非力 な PC で は 作業 し にくい です 。 NetBeans を 使っ て み たら どう です か ？ https :// blogs . oracle . com / wlc / entry / javaee _ c1 53 
たぶん いける ね 。 。 。 
オブジェクト指向 を 使っ た ほう が 単純 に なる なら 、 どしどし 使っ た ほう が 良い と 思い ます 。 ( なお 、 自分 は processing を 使っ た こと が ありません ) 
JDK は 入っ て い ます か ？ クラスパス は 指定 し て い ます か ？ コンパイル エラー は 出 て い ませ ん か ？ オプション の 指定 を 間違え て い ませ ん か ？ 思いつく 原因 は これ くらい です 。 
set path この コマンド を 打つ と 設定 を 見れ ます 。 ここ で 正しく 設定 が さ れ て いる か 見 て ください 。 win 10 の GUI 機能 で 書き換え た の と path の 値 が 違う 場合 更新 さ れ て い ない 場合 が あり ます 。 cmd を 再起動 し たり PC を 再起動 し たり し て 更新 が 適応 さ れる よう に 試し て み て ください 。 GUI の と path が 同じ なら 、 単純 に 設定 し て いる ディレクトリ を 間違え て いる かも しれ ませ ん 。 パス の 途中 に jdk が 含ま れ て い て 、 末尾 が bin に なっ て いる こと を 確認 し て ください 。 
SA Struts は Apahce Struts を 拡張 し て 使い やすく し た もの です 。 です ので SA Struts を 学習 する 前 に Struts を 知っ て おい た ほう が いい でしょ う 。 Apahce Struts は java で Web アプリケーション （ 主 に ブラウザ で 閲覧 する サイト ） を 作成 する の を 簡易 に する ため の もの です 。 Struts は 使い やすく 優れ た もの です が 、 xml ファイル に 大量 の 設定 を 書か なけれ ば なら ない という 欠点 も あり ます 。 SA Struts は その あたり を 改良 し て xml ファイル を 書か なく て も 使える よう に し た もの です 。 それ 以外 に も いくつ か の 改良 点 が あり ます 。 ただ 、 はっきり 言っ て SA Struts も Struts も 完全 に 時代遅れ の 製品 です 。 SA Struts は Struts の バージョン 1系 を もと に し て いる の です が 、 Struts 1 は 作成 元 の Apache が 2013年 に 今後 一切 の 保守 ・ サポート は し ない という 宣言 を 出し て い ます 。 WindowsXP と 同じ 状態 です 。 2014年 4月 に Struts 1 に 重大 な セキュリティホール が 発覚 し た こと が ある の です が 、 この 時 も Apache は 何 の 対処 も せ ず 、 パッチ も 出さ れ ませ ん でし た 。 その ため 、 当時 Struts 1 を 使っ て い た 企業 は 自力 で パッチ を 作成 する 、 対処 方法 を 考える など の 対処 に 追わ れ まし た 。 また 、 SA Struts も 今 は サポート し て いる ところ は ある の です が 、 これ も 2016年 9月 に サポート を 終了 する と 宣言 し て い ます 。 2016年 現在 、 仕事 で Struts 、 SA Struts を 使う など という 選択肢 は 考え られ ませ ん 。 これ は 今 、 WindowsXP を 使っ て は いけ ない という こと と 同じ です 。 過去 、 すでに SA Struts で 作成 し た システム が あっ て その 保守 の ため と いう なら ば しょうが ない です が 、 新規 に SA Struts で システム を 作成 する と いう なら ば 最初 から 考え を あらためる べき です 。 
while の 条件 、 i と j が 逆 です ね 。 
提示 さ れ た webページ で は 14 行 目 「 Human h = new Human ( name 1 );」 で Human オブジェクト を 生成 し 、 変数 h に 格納 し て い ます 。 な ので 、 質問 内容 の プログラム で も どこ か の タイミング で Human オブジェクト を 変数 h に 格納 する 必要 が あり ます 。 例えば 、 「 Human h = new Human (" test ");」 と 書き ます 。 また 、 Human クラス が 必要 です 。 提示 さ れ た webページ で 88 行 目 から が Human . java の 記述 です 。 別途 java ファイル を 作る 必要 が あり ます 。 
３ 歩 進ん で ２ 歩 戻る 。 まず 先 に 、 C言語 で 、 構造体 に 関数 の ポインタ を 入れ て プログラム を 作っ て ください 。 まず 、 これ が 疑似 クラス です 。 これ が 普通 に 使える よう に なっ て ください 。 これ が 理解 でき て ない なら 、 クラス とか 以前 の 問題 です 。 次に 『 C++ の 絵本 』 、 『 C++ クラス と 継承 完全 制覇 』 という 本 を 読ん で ください 。 別 の 言語 の 書き方 を 覚える より 先 に オブジェクト指向 を 理解 し て から 、 Java 言語 の 書き方 を 覚え て ください 。 そう すれ ば 、 自然 と Java 言語 が 理解 でき ます 。 
n 番目 の 素数 を 求める 公式 のようなもの は あり ませ ん 。 1 ･ 3 ･ 5 ･ 7 ･ 9 ～ の よう に 奇数 に対して 、 素数 で ある か の 判定 を 行っ て 、 素数 で あれ ば カウント し て いく しか 方法 は ない か と 思い ます 。 
( 1 ) 多重 継承 は でき ませ ん 。 複数 の スーパークラス に 同じ 名前 の メンバ が ある と 名前 が 被っ て しまい ます し 、 そう で なく て も 利用 し たい メンバ が どの クラス に ある の か 特定 でき ませ ん 。 ( 2 ) 決まっ て い ませ ん 。 スーパークラス は 、 継承 さ れ た か どう か を 判断 し ませ ん 。 ( 3 ) よく やり ます 。 まず 、 すべて の クラス は Object クラス を 継承 し て いる ので 、 Object クラス 以外 を 継承 する と 必ず その 状態 に なり ます 。 ( 4 ) そう し て は いけ ない という 制限 は あり ませ ん 。 2 でも 書い た よう に 、 スーパークラス は どの クラス から 継承 さ れ て いる の か を 判断 し ませ ん 。 ( 5 ) それら の こと を シグニチャ と いい ます が 、 オーバーライド と 言っ て シグニチャ が 同じ メソッド を 定義 し て 上書き する こと が でき ます 。 ( 6 )( 7 ) メソッド は 継承 さ れ ます 。 インスタンス 変数 は メンバ 変数 で ある 限り 継承 さ れ ます 。 アクセス 修飾 子 が protected 以上 で ある 必要 が あり ます 。 ( 8 ) サブクラス で 宣言 し た 場合 サブクラス の コンストラクタ が 実行 さ れ ます 。 宣言 し なけれ ば スーパークラス に 渡さ れ ます 。 宣言 し た 場合 でも 、 super () で コンストラクタ を 呼び出せ ます 。 ( 9 ) 必要 あり ませ ん 。 import も 必須 で は ありません が 、 使う と 便利 です 。 カレントディレクトリ や クラスパス の 影響 が 強い です 。 ( 10 ) 正しく は コンストラクタ で は なく オブジェクト です 。 オーバーライド し た メソッド で super . method () と する と スーパークラス の method が 呼び出せ ます 。 インスタンス 変数 と は new で 作ら れ た インスタンス を 格納 する もの で 、 ついに なる もの は プリミティブ 型 変数 です 。 まるで メソッド と 同列 で ある か の よう に 書か れ て い ます が 、 それ は メンバ 変数 です 。 ( static なら クラス 変数 と も 呼ぶ ) メソッド と メンバ 変数 は どちら も 継承 さ れ ます が 、 再 定義 する と 上書き さ れ ます 。 
int lv = ; 文法 に 誤り です 。 28 点 以下 でも 平均 以下 の 問題 です が 、 28 点 も 63 点 以下 です よ ね 。 だから その 63 点 以下 の if 文 に 引っかかる ん です よ ね 。 具体 的 に どう すれ ば 良い か 、 簡単 です if ( lv > 28 && lv <= 63 ) これ で いいじゃない です か 。 
ファイル共有 を 行え ば いい です 。 サーバー を 設置 する なり 、 GitHub を 借りる なり すれ ば 複数人 で 編集 が でき ます 。 あと 、 競合 を 起こし て ファイル を 壊さ ない よう に 注意 し なけれ ば なら ない です が 。 
なかなか いい 問題 か と 思い ます 。 Q 1 for ( int e : a ) ↑ これ は 、 配列 a の 先頭 から 順番 に 値 を 取り出し て e に 代入 し 、 ループ さ せる という 文 です 。 配列 に は 奇数 および 偶数 が 格納 さ れ て い て 、 それ を if 文 で 、 奇数 か 偶数 か 判定 し 、 判定 が 真 で あれ ば " odd " と 、 偽 で あれ ば " even " と 表示 さ せ て い ます ね 。 です から 、 if 文 の 条件 式 は 、 e が 奇数 で ある か どう か 、 という もの に なり ます 。 Q2 配列 a を 順次 見 て ゆき 、 値 が 今 まで より 大きかっ たら max に 格納 してやれ ば 、 すべて の 値 を 見 終わっ た とき に max に 最大 値 が 格納 さ れ ます 。 Q 3 前 問 と ほぼ 同様 です が 、 前 問 で max = 0 と 初期 化 し て い た の に対し 、 本 問題 で 同様 に min = 0 と し て しまう と 、 例えば a の 中 に 正の数 しか 格納 さ れ て い ない 場合 、 min == 0 の まま と なっ て しまい 、 うまく 最小 値 を 見つける こと が でき ませ ん 。 これ は 、 0 が データ 中 に 存在 し ない から 発生 する こと です ね 。 Q 4 i ++ の 処理 を インクリメント と いい ます 。 インクリメント で 検索 し て み て ください 。 Q5 条件 に 合う 値 が 見つかっ た とき 、 個数 を 1 つ 増やせ ば 、 最終 的 に 個数 が わかり ます ね 。 指 で 数える の と 同じ こと です 。 Q 6 a . length は 、 配列 の 要素 数 を 表す フィールド です 。 Q 7 Q 8 少し ややこしい です が 、 min に は a の 中 で 最小 値 と なる 要素 の 添字 を 記録 し て い ます 。 今 見 て いる 要素 の 添字 は i に 記録 し て い ます 。 Q 9 有効 な 値 のみ の 平均値 を 求め なけれ ば なり ませ ん 。 有効 な 値 か どう か 、 if ( e > 0 ) によって 判定 さ れ 、 有効 で あっ た 場合 のみ 、 n を インクリメント し て いる ところ が ポイント です 。 Q10 s は int 型 です 。 そのまま int 型 で 除算 する と 、 小数点 以下 が 切り捨て られ て しまい ます 。 
けっこう 多い ですよ。 Java プログラマ で あっ た けど 、 OOP として は 素人 同然 と か 。 デザインパターン など を 使い OOP として 、 設計 さ れ て いる こと なんて 、 要件 聞い た こと が ない （ あれ 、 昔 あっ た かも 。 。 ） ので 、 そんなに 意識 し ない と 思い ます 。 なんで わざわざ Factory から インスタンス とる の ？ なんて レビュー 指摘 さ れ て も 、 面倒くさく ない です か ？ 
ここ より も 人が 多い http:// forum . minecraft user .jp / viewtopic . php ? f = 5 & t = 132 に 聞い て みる の は どうでしょう か ？ ※ あっち で 質問 する 前 に 、 こっち の 質問 を 回答 でき ない よう に し て ください 。 
Processing は よく 知ら ない の です が 、 millis () という メソッド が ある そう です 。 この メソッド は 、 プログラム を 実行 し 始め て から の ミリ 秒 単位 の 時間 を float 型 で 返し ます 。 startTime など の 名前 で フィールド を 宣言 し て おき 、 setup () 内 で startTime = millis () と し 、 draw () 内 で 、 if ( millis () - startTime > 30 * 1000 ) など と 判定 すれ ば よい か と 思い ます 。 
Enemy enemy ; これ を 、 Enemy [] enemies ; と し ます 。 続い て 、 setup () 内 にて 初期化 を 行い ます 。 enemies = new Enemy [ 5 ]; for ( Enemy enemy : enemies ) { enemy = new Enemy (); } そして 、 draw () 内 の 描画 処理 を 書き ます 。 for ( Enemy enemy : enemies ) { enemy . update (); } おそらく これ だ と 5 体 の 敵 が 重なっ て しまう ので 、 enemy . pos は 適切 に 設定 し て ください 。 慣れ て き たら 、 ArrayList を 使う の も いい と 思い ます 。 
① jFrame の 初期 画面 を jPanel 1 に する 方法 JFrame （ 以下 、 MyJFrame と 呼び ます ） の コンストラクタ で 、 以下 の よう に する と 、 JFrame の 中 に JPanel 1 が 配置 さ れ ます 。 setContentPane ( new JPanel 1 ()); ② イメージ の 通り に イベント を 行う 方法 JPanel 1 の コンストラクタ に 以下 の 処理 を 追加 する と 、 パネル が 切り替わり ます 。 button . addActionListener ( new ActionListener () { @ Override public void actionPerformed ( ActionEvent e ) { MyJFrame frame = ( MyJFrame ) MyPanel . this . getTopLevelAncestor (); frame .s etContentPane ( new JPanel 2 ()); } }); 
うち で はやっ て ます よ 。 パフォーマンス 検証 や サイジング だけ で 半年 くらい かけ た プロジェクト も あり ます 。 
1 . 認識 間違っ てる よう に 思え ます 。 import 文 と 、 import static 文 は 、 対象 が 異なり ます 。 前者 は 「 クラス 」 です が 、 後者 は 「 クラス 変数 や クラス メソッド 」 です 。 http:// www . atmarkit . co.jp / ait / articles / 0801 / 15 / news 158 _ 2 . html 2 . ＃ 質問 の TPO が あいまい だ と 思い ます が 。 。 。 使い たい クラス が あっ て 、 その ため の import 文 を あなた が 書く ... という とき は 、 まず 「 クラス あり き 」 です から 、 見分け が つく ・ つか ない という 問題 は ありえ ない 気 が ...。(^_^; l ) 使い たい クラス が 初 な やつ な ので 、 API リファレンス から 調べ て ... という とき に 「 よく わからん 」 という こと でしょ う か ？ Java の クラス ライブラリ は 、 事実上 javadoc スタイル な こと が 大半 です から 、 リファレンス 見れ ば わかる の で は ？ ( e . g .) http:// docs . oracle . com / javase / jp / 7 / api / index . html ? java / util / ArrayLi ... 漠然と java . util . ArrayList という 字面 だけ 見 て 、 パッケージ 名 部分 と 単純 クラス 名 部分 が 区別 できる か ? という 質問 なら 、 不可能 で は 。 これ が 完全 な クラス 名 だ 、 という 前提 に たてる なら 、 . ( ドット ) で 区切ら れ た 末尾 の ArrayList が クラス の 単純 名 で 、 その 前 は パッケージ 階層 だ と わかり ます 。 けど 、 その 前提 が ない なら 、 全部 が パッケージ 階層 な の かも しれ ず 、 構文 上 見分ける 術 は ない です 。 ただ 、 命名 の 慣習 上 、 ・ パッケージ 階層 の 名前 は 小文字 ・ クラス ( の 単純 ) 名 は 大文字 始まり な こと が 多い ので 、 . 区切り の 末尾 要素 が 大文字 始まり 単語 なら 、 たいてい の 場合 は 単純 クラス 名 と みなし て 、 ほぼほぼ アタリ で は あり ます 。 3 - 1 あっ てる 気 は する ん だ けど ...。(^_^;) org . hamcrest Class CoreMatchers は 、 javadoc 形式 API リファレンス 見 て ... の 話 です よ ね ？ 私 は 一見 し て 直感 的 に パッケージ 名 org . hamcrest 単純 クラス 名 CoreMatches の 二分 意識 です 。 org と hamcrest を 分けて 考え たり は 全く し ませ ん 。 名字 と 名前 と 同じ かん じ 。 どんなに 長かろ う が 名字 は 名字 です 。 両方 合わせ て 完全 な 名前 です 。 3 - 2 合っ てる と 思い ます 。 ただ 、 これ は 「 import 」 で は なく 「 import static 」 です 。 (^_^;) # 細かく て 、 ごめんなさい 。 
Android 5.0 以降 で いう ところ の □ ボタン の こと だろ う か ？ この ボタン は Overview と いい ます が 、 この キー は dispatchKeyEvent など で 捉える こと が でき ない OS 直接 制御 の キー な ので 、 キー コード も 定義 さ れ て い ませ ん 。 
プロンプト に 設定 さ れ て いる 文字コード が 原因 でしょ う か ？ 添付 し た 画像 キャプチャ は win 10 32 bit で eclipse 付属 の jre で の javac 実行 画面 です 。 文字コード を 確認 し た ところ Shift-JIS でし た 。 
Sushi クラス に 下記 メソッド を 追加 し て ください 。 @ Override public String to String () { return name + " x " + num ; } 
あの う 、 sudo apt - get install tomcat 7 と やっ たら 、 もう 起動 し て ます よ 。 
環境変数 の 設定 を 間違え て いる よう で あれ ば 、 ファイル を 確認 し フル パス 指定 で 実行 し て ください 。 因みに jd k-8 u 92 - indows - x64 . exe で インストール し た の で あれ ば ” C :\ Program Files \ Java \ jdk 1 . 8 . 0 _ 92 \ bin \ java c.e xe " です 。 毎回 入力 する の が 面倒 な 場合 は バッチファイル に 書い て 実行 し ます 。 
格納 し た 後 で ソート で 良けれ ば 、 Arrays .s ort メソッド が あり ます 。 
格納 し た 後 で 良い なら 、 Collections .s huffle メソッド が あり ます 。 - 例 - List < Integer > list = new ArrayList <>(); for ( int i = 0 ; i < 10 ; i ++) { list . add ( i ); } Collections .s huffle ( list ); for ( int n : list ) { System . out . println ( n ); } - 結果 - 0 5 3 6 4 2 7 8 1 9 
( int )( Math . random ()* 9 )+ 1 ; ↓ java . util . Random ran = new java . util . Random (); と すれ ば 、 ran . nextInt ( 9 )+ 1 ; で 1 ～ 9 の 乱数 が 表示 でき ます 。 ロジック は 課題 っぽい ので 全部 は 書き ませ ん 。 if ( ans == randomNum ){ // ここ に 当たっ た 処理 } else if ( ans < randomNum ){ // 小さい とき の 処理 } else { // 大きい 時 の 処理 } と すれ ば いい でしょ う 。 
「 プチコン ３ 号 」 に は 通信 機能 が 無い ので 無理 です 。 ↓ 命令 表 http:// smile boom . com / special / ptcm 3 / reference / 
pleiades \ eclipse の 下 に あり ませ ん か ？ もし エクスプローラー で 開い た とき に 拡張子 を 表示 し ない 設定 に なっ て いる とき は 画像 で 示し た アイコン が つい て いる 「 eclipse 」 が そう です 。 
jsp と は 、 Java Server Pages の 略 で 、 html の 中 に Java の 文 を 埋め込む 形式 の プログラム です 。 拡張子 は . jsp です 。 
リファレンス 実装 https :// ja . wikipedia . org / wiki /% E3 % 83 % AA % E3 % 83 % 95 % E3 % 82 % A1 % E3 % 83 % AC %... リファレンス 実装 （- じ っ そう 、 reference implementation ） は 、 なんらかの 機能 を 実現 する ハードウェア または ソフトウェア で あり 、 他者 が それ を 参考 に し て 独自 に 実装 する こと を 助ける 目的 で 作ら れ た もの を 言う 。 参考 実装 と も 呼ば れる 。 
Java は プログラミング言語 です 。 Java で Web アプリケーション を 作る ため に 作ら れ た 仕組み が サーブレット です 。 サーブレット は Java 用 に 作ら れ た 仕組み な ので 、 これ を 作る に は Java で プログラム を 書き ます 。 
Web システム を 作れ ます 。 例 ： スケジュール管理 システム http:// www . javadrive .jp / servlet / schedule / 
Java コントロール ・ パネル の 例外 サイト ・ リスト に その サイト の URL を 追加 する 必要 が あり ます 。 1 . Java コントロール ・ パネル を 起動 し て ください 。 [ スタート ] → [ すべて の プログラム ] → [ Java ] → [ Configure Java ] 2 . [ セキュリティ ] → [ サイト ・ リスト の 編集 ] から 、 指定 さ れ た URL を 追加 し て ください 。 
基本的 に 、 できあがっ たら エクリプス は 関係 あり ませ ん 。 java ランタイム が インストール さ れ て いれ ば 動き ます 。 
こんな 感じ でしょ う か 。 public MyFrame () { addWindowListener ( new WindowAdapter () { @ Override public void windowClosing ( WindowEvent arg 0 ) { if ( JOptionPane .s howConfirmDialog ( MyFrame . this , " Exit ?") == JOptionPane . YES _ OPTION ) { System . exit ( 0 ); } } }); setDefaultCloseOperation ( JF ra me. DO _ NOTHING _ ON _ CLOSE ); // ... } 
こんな 感じ で どうでしょう か 。 http:// www . perurin .jp / archives / 115 
SpringLayout :: putConstraint の API ドキュメント です https :// docs . oracle . com / javase / jp / 8 / docs / api / javax / swing / SpringLayo ... putConstraint は 引数 を 5つ 取り ます が 最初 の 2つ の 引数 で 指定 し た コンポーネント の 辺 を edge 1 最後 の 2つ の 引数 で 指定 し た コンポーネント の 辺 を ed g e2 3 番目 の 引数 で 指定 し た エッジ 間 の 固定 距離 を pad と する と edge 1 = ed g e2 + pad と なる よう な 制約 が 設定 さ れ ます 。 ( pad は 右 方向 、 下 方向 が正 です ) 以下 の 2 点 を 修正 すれ ば テキスト フィールド が 表示 さ れ ます 。 ( 最初 の は 左端 の テキスト フィールド の 左辺 を 、 パネル の 右辺 の 右 10 ピクセル の 位置 に 配置 する 事 に なり 描画 領域 の 外 に なっ て い ます ) // フレーム の 真横 layout . putConstraint ( SpringLayout . WEST , text [ j + m * i ], 10 , SpringLayout . EAST , p ); ↓ layout . putConstraint ( SpringLayout . WEST , text [ j + m * i ], 10 , SpringLayout . WEST , p ); // フレーム の 真下 layout . putConstraint ( SpringLayout . NORTH , text [ j + m * i ], 10 , SpringLayout . SOUTH , p ); ↓ layout . putConstraint ( SpringLayout . NORTH , text [ j + m * i ], 10 , SpringLayout . NORTH , p ); また 、 パネル と テキスト フィールド 群 は 左 ( WEST ) と上 ( NORTH ) では スプリング で 繋がっ て い ます が 、 右 と下 は 繋がっ て い ませ ん 。 その 為 pack で フレーム サイズ を 計算 さ せ て も つぶれ て しまい ます 。 以下 の よう に パネル の 右 と下 に も スプリング を 設定 する と pack で フレーム サイズ を 正しく 計算 できる よう に なり ます 。 ---------- Window . java ---------- import javax .s wing . JFrame ; import javax .s wing . JPanel ; import javax .s wing . JTextField ; import javax .s wing .S pringLayout ; import javax .s wing .S wingUtilities ; import static javax .s wing .S pringLayout .*; public class Window extends JFrame { JTextField [] text ; public Window ( int n , int m ) { super (" Matrixin "); SpringLayout layout = new SpringLayout (); text = new JTextField [ n * m ]; JPanel p = new JPanel (); p .s etLayout ( layout ); // this .s etTitle (" Matrixin "); // this .s etVisible ( true ); // this .s etBounds ( 10 , 10 , 65 * n + 40 , 25 * m + 50 ); int lastRow = n - 1 ; int lastCol = m - 1 ; int pad = 10 ; for ( int i = 0 ; i < n ; i ++) { for ( int j = 0 ; j < m ; j ++) { JTextField tf = new JTextField (" 0 ", 5 ); text [ j + m * i ] = tf ; p . add ( tf ); if ( j != 0 ) { layout . putConstraint ( WEST , tf , pad , EAST , text [ j + m * i - 1 ]); } else { layout . putConstraint ( WEST , tf , pad , WEST , p ); } if ( j == lastCol ) { layout . putConstraint ( EAST , p , pad , EAST , tf ); } if ( i != 0 ) { layout . putConstraint ( NORTH , tf , pad , SOUTH , text [ j + m * ( i - 1 )]); } else { layout . putConstraint ( NORTH , tf , pad , NORTH , p ); } if ( i == lastRow ) { layout . putConstraint ( SOUTH , p , pad , SOUTH , tf ); } } } add ( p ); pack (); } public static void main ( String [] args ) { SwingUtilities . invokeLater (() -> { JFrame frame = new Window ( 3 , 5 ); frame .s etLocation ( 10 , 10 ); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etVisible ( true ); }); } } 
> 拡張子 Jar を エディタ で 開い て UTF-8 表示 当該 の Jar ファイル を 、 コピー する こと で バックアップ を 取っ て 、 拡張子 を .zip に 変え て ください すると 拡張子 が zip に 変わる ので 、 それ を 解凍 し て ください すると 中 に は ファイル や フォルダ が いろいろ と 詰まっ てる ので 、 それ を 確認 し て ください これ が 第 一 段階 です ＊ ＊ ＊ 拡張子 を zip に 変える と 本当 の 姿 を 見せる … … という ファイル は 、 他 に は 例えば docx や xlsx など が あり ます 。 今後 そのよう な テクニック が 必要 に なる かも しれ ない ので 、 それら の オフィス の ファイル も 同様 に 拡張子 を 変え て 、 解凍 なり を 試し みる と いい でしょ う 
動画 見 て み まし た 。 なごむ ・ ・ ・ 線 を 引く 途中 で 色 は 変更 でき ない です し 、 ArrayList < ArrayList < PVector >> lines ; の 2つ 目 の ArrrayList を 自作 の クラス に し て 、 そこ に 色 の 情報 を つけれ ば いい と 思い ます 。 ArrayList < MyLine > lines ; こんな 感じ に なる の か な ？ そして 、 MyLine クラス に # drawLine を 定義 し て 、 そこ に ある 色 の 情報 を 使っ て 線 を 引け ば いい と 思い ます 。 頑張っ て ください 。 この 時 に 両方 の ArrayList を クラス に し て ＃ draw を それぞれ に 付け た い人 より 
桁 を 揃える ため の 書き方 です 。 % d の 表示 対象 と なる 数値 の 桁 に関して 、 d の 直前 の 数字 の ぶん だけ 桁 が ない 場合 は 、 数値 の 直前 に スペース が 追加 さ れ ます 。 その ため 、 System . out . printf ("% 3d % n ", 1 ); System . out . printf ("% 3d % n ", 10 ); System . out . printf ("% 3d % n ", 100 ); の よう に 出力 する と 、 数値 が 右 揃え で 表示 さ れ ます 。 また 、 System . out . printf ("%- 3d % n ", 10 ); この よう に マイナス を つける と 、 直後 に スペース が 追加 さ れ て 左 揃え に なり ます 。 System . out . printf ("% 03 d % n ", 10 ); この よう に 0 を つける と 、 足り ない 桁 に 0 が 追加 さ れ 、 " 010 " と 表示 さ れ ます 。 
これ で 意図 通り に なり ませ ん か ？ public class Mouth { ___ boolean startFeed = false ; ___ public synchronized void feed () { ___ ___ while ( startFeed ) ___ ___ ___ try { wait ();} catch ( InterruptedException e ) {}; ___ ___ startFeed = true ; ___ ___ notify (); ___ } ___ public synchronized void eat () { ___ ___ while (! startFeed ) ___ ___ ___ try { wait ();} catch ( InterruptedException e ) {}; ___ ___ startFeed = false ; ___ ___ notify (); ___ } } 他 クラス は 、 その まんま 。 P.S. System . out . println は 、 今 の 位置 じゃ 真実 を ( 必ずしも ) 示さ ない ん じゃ ない かしら 。 スレッド 排他 は 、 あくまで class Mouth の 2 メソッド に 閉じ て て 、 System . out . println は その 排他 区間 外 に ある から 。 実際 に は feed , eat , ... と きれい に 動い て て も 、 println の 印字 順序 は その 通り に なる と は 限ら ない と 思う わ 。 
C# （ .NET 世界 の 言語 ） に 予約語 回避 機能 が ある の は 、 言語 （ C# / VB / etc. ） ごと に 予約語 が 異なる ため です 。 Java の 予約語 は Java で しか 使わ れ ませ ん から 、 予約語 を 回避 する 機能 を 盛り込む 必要 が ない ん だ と 思い ます 。 
Maven2 の セントラル リポジトリ 検索サイト で 探せ ば 、 「 Guava : Google Core Libraries For Java 」 も 含め て 、 沢山 見つける こと が でき ます 。 http:// mvnrepository . com / open - source 沢山 の ライブラリ を 組み合わせ て 使う 場合 、 各々 の ライブラリ の バージョン の 組み合わせ が 面倒 だ が 、 この サイト で は 、 どの バージョン の 組み合わせ なら 動作 確認 さ れ て いる か ？ という 情報 も pom . xml 形式 ファイル で 提供 さ れ て い て 、 Guava 等 の オリジナル サイト より 便利 です 。 
利用 しよ う と し て いる 参照 型 変数 に null が 格納 さ れ て いる と こう なり ます 。 null が 格納 さ れ て いる か if 文 で 判断 し て 、 null が 格納 さ れ て いる ところ を 見つけ ましょ う 。 
質問 に すら なっ て ない 。 ちっ た ぁ 調べよ う と 思わ ない か ね ？ 
API で 確認 し まし た が ファイル の 種類 という 項目 を 非表示 に する メソッド は 用意 さ れ て い ませ ん でし た 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / javax / swing / JFileChoos ... 以下 の コード を 試し て み まし た が 、 空 の ドロップダウンリスト が 表示 さ れ て しまい まし た 。 JFileChooser chooser = new JFileChooser (); chooser . removeChoosableFileFilter ( chooser . getAcceptAllFileFilter ()); 一応 MetalFileChooserUI の ソースコード を 見 て み まし た が 、 ファイル の 種類 という 項目 に 表示 さ れる JComboBox の 部分 は フラグ の 確認 など 無し で 必ず 表示 さ せる よう に なっ て い まし た ので 、 やはり 非表示 に する メソッド は ない よう です 。 以下 ご 質問 の 内容 から 少し はずれ ます が 、 どうしても 非表示 に し たい 場合 に は BasicFileChooserUI か 、 使用 する ルックアンドフィール の FileChooserUI を 継承 し た クラス を 作成 する こと に なる と 思い ます 。 結構 面倒 で 、 ルックアンドフィール を ユーザー に 強制 する か 、 ユーザー が 使用 可能 な ルックアンドフィール すべて の 分 の FileChooserUI を 用意 する 必要 が あり ます 。 実装 に 依存 する 邪道 な 方法 で よけれ ば 以下 のようなもの が あり ます 。 これ は MetalFileChooserUI の ソースコード を 見 て 、 Metal ルックアンドフィール の JFileChooser が BorderLayout を 採用 し て いる 事 、 その SOUTH に JPanel が 貼ら れ て い て その 3 番目 に 張り付け られ た の が 、 ファイル の 種類 という 項目 の パネル で ある という 実装 に 基づい て ます 。 API を 使っ た プログラム で は 公開 さ れ て いる API ドキュメント が すべて で 、 そこ に 記述 が ない 事 は 実装 部分 と なり ます 。 実装 はいつ 変更 さ れる か 分から ない ので 、 それ に 依存 し た コード はいつ 不具合 や 動作 不能 の 原因 と なる か わから ない 危険 な コード と なり ます 。 よって 以下 の コード は 公開 する よう な ライブラリー や アプリケーション で は 使え ませ ん 。 特定 の バージョン の Java で 個人的 に 利用 する の で あれ ば どの よう な コード でも 自由 な の です が 、 スマート な 方法 で は ない 事 は ご 了承 ください 。 import java . awt . BorderLayout ; import java . awt . Container ; import javax .s wing . JFileChooser ; 上記 インポート し て JFileChooser の 生成 部分 は 以下 の よう に し ます 。 Java 8 の Metal と Nimbus ルックアンドフィール で は 動作 し まし た 。 JFileChooser chooser = new JFileChooser (); BorderLayout bl = ( BorderLayout ) chooser . getLayout (); Container buttonPanel = ( Container ) bl . getLayoutComponent ( chooser , BorderLayout . SOUTH ); buttonPanel . remove ( 2 ); 
> java の プログラム ソース を 表記 できる プログラム 言語 と 表記 が でき ない プログラム 言語 を なるべく 多く 教え て ください 。 宜しく お願い し ます 。 質問 を し て いる 目的 を なるべく 詳しく 補足 し て ください 。 
Java SE の 機能 範囲 の 中 でも 、 可也 限定 し た 機能 範囲 しか 使わ ない コード なら Ruby 言語 に 直訳 でき ます 。 でも 、 Java 2 Enterprise Edition の 機能 範囲 や 、 OSS として 頒布 さ れ て いる 様々 な Java ライブラリ を 使っ た コード と なる と 、 Ruby で 記述 でき ない こと は ある もの です 。 例えば 、 DB の XA トランザクション 処理 とか 、 DB コネクション ・ プーリング 機能 とか 、 DB コネクション の 解法 漏れ の 自動 close 機能 とか 、 Ruby に は 未だ 無い ライブラリ の 機能 は あり ます 。 逆 に 、 Ruby 側 で は 簡素 に 記述 できる コード を 、 Java で 書こ う と する と 、 トテモ 長い コード に なる という こと も 、 多い です 。 
> java の プログラム ソース を Objective-C で 表記 できる か 教え て ください 。 出来 ます ね 。 
> ava の プログラム ソース を ｐｈｐ で 表記 できる か 教え て ください 。 出来 ます ね 。 
質問 に すら なっ て ない 。 ちっ た ぁ 調べよ う と 思わ ない か ね ？ 
質問 に すら なっ て ない 。 ちっ た ぁ 調べよ う と 思わ ない か ね ？ 
質問 に すら なっ て ない 。 ちっ た ぁ 調べよ う と 思わ ない か ね ？ 
ブラウザ キャッシュ によって not found に なっ て いる 可能性 が 高い です 。 この よう な 現象 が 発生 し た 場合 の 対策 として は 、 画像 ファイル が キャッシュ さ れ ない よう に 、 プレビュー 画面 で の 画像 ファイル の < img src > タグ 生成 時 に 、 ファイル 名 の 後ろ に ? を つけ て 番号 を 付与 する という no cache テクニック が あり ます 。 例 ： String fileUrl =" アップロード する ファイル の URL "; // ファイル 名 を ユニーク に 加工 fileUrl +="?"+ Calendar . getInstance (). getTimeInMillies (); 
> 教え て 欲しい もの が 四つ あり まし て あなた は おそらく ターミナル で の コマンド を 先 に 習熟 し た 方 が よい かも しれ ませ ん コマンドライン 上 で の CUI 操作 です ハッカー 気分 に 浸る こと が でき ます curl や wget など を 試し て み て 、 画像 など を 一挙に DL する 用途 不明 の バッチファイル を 書い て み て も よい でしょ う 最終 的 に は vi とか emacs など も 選択 の 視野 に いれ ます 
その フォルダ に バッチファイル ( install . bat ) を 作成 し て 、 テキストエディタ で 開い て 次 の 1 行 を 書い て 保存 し ます 。 java - jar forge *. jar そして install . bat を ダブルクリック し ます 。 
> java の プログラム ソース を Swift で 表記 できる か 教え て ください 出来 ます ね 。 
> java の プログラム ソース を Python で 表記 できる か 教え て ください 。 出来 ます ね 。 
> java の プログラム ソース を c ＃ で 表記 できる か 教え て ください 。 出来 ます ね 。 
> java の プログラム ソース を JavaScript で 表記 できる か 教え て ください 。 出来 ます ね 。 
魚眼レンズ の 効果 は 、 色々 投影 の 仕方 が ある みたい です が 、 視界 を 放 物 面 に 投影 し て 、 それ を 平面 に 平行 投影 する 変換 が わかり やすい です 。 視点 から 放 物 面 中心 まで の 距離 を 1 と し 、 画像 中心 を ( 0 , 0 , z ) と おき ます 。 z は 視点 から 画像 まで の 距離 で 、 任意定数 です ね 。 変換 前 の 座標 ( x , y )、 変換 後 の 座標 ( px , py ) として 、 以下 の 変換 と なる そう です 。 px = x * ( sqrt ( x ^ 2 + y ^ 2 + z ^ 2 ) - z ) / ( x ^ 2 + y ^ 2 ) py = y * ( sqrt ( x ^ 2 + y ^ 2 + z ^ 2 ) - z ) / ( x ^ 2 + y ^ 2 ) この 式 の 形 だ と 、 サンプル 点 p 0 ( px 0 , py 0 )、 p 1 ( px 0 +d , py 0 )、 p2 ( px 0 , py 0 +d )、 p 3 ( px 0 +d , py 0 +d )、 の 4 点 間 で 補間 が 必要 そう です ね 。 私 自身 は 検証 し て い ない ので 、 自己責任 で どうぞ 。 
同じ 内容 で 「 変換 先 」 言語 を 変え た だけ の 質問 を 濫造 し てる よう だ し 、 そういう 荒らし か な 
> java の プログラム ソース を Perl で 表記 できる か 教え て ください 。 出来 ます ね 。 
> java の プログラム ソース を HTML で 表記 できる か 教え て ください 。 出来 ます ね 。 
質問 に すら なっ て ない 。 ちっ た ぁ 調べよ う と 思わ ない か ね ？ 
Windows の 場合 Path に 設定 さ れ ない ので 環境変数 の Path に 追加 する か 、 直接 フル パス で 実行 し て 下さい 。 jd k-8 u 91 - windows - i586 . exe の 場合 多分 ” C :\ Program Files ( x86 )\ Java \ jdk 1 . 8 . 0 _ 91 \ bin \ java c.e xe ” と 推測 し ます が 確認 し て 下さい 。 
MyFrame の コンストラクタ で add する 前 に 、 getContentPane (). setLayout ( null ); を 実行 し たら どう なり ます か ？ 
＞ where を し た ところ ＞ where は 、 内部 コマンド または 外部コマンド 、 操作 可能 な ... etc と なり まし た ワオ 。 そりゃ 大変 。 まず 、 > C :\ Program Files ( x86 )\ Java \ jdk 1 . 8 . 0 - 91 \ bin ; C :\ Program Files ( x86 )\ Java \ jdk 1 . 8 . 0 - 91 \ bin PATH が 上 の よう に なっ て いる 時点 で 、 本来 の PATH 変数 の 情報 が 消え てる 。 例えば 、 where コマンド も where . exe という プログラム が あっ て 、 そこ に PATH が 通っ て いる から 実行 さ れる 。 where . exe は windows の システムプロ グラム な ので 、 まず 、 デフォルト の システム へ の PATH を あなた は 消し て しまっ た はず 。 その ため http:// answers . microsoft . com / ja - jp / windows / forum / windows _ 7 - update /%... を 参照 し て まずは システム 初期 値 に 戻す 必要 が ある と 思い ます 。 その 上 で PATH を システム の 次 に 来る よう に し ない と いけ ない 。 システム パス ; Java の 順番 。 
なんだか だんだん 不安 に なっ て き た の です が 、 これ って インターネット に UP し て いい ソース な ん です よ ね ？ 一応 答え ます と 、 これ は サーブレット です ね 。 サーブレット と は 、 簡単 に 言う と HTTP の リクエスト に対する 反応 を 記述 する クラス です 。 HTTP について は ご 自身 で お 調べ ください 。 GET および POST の 両方 で 、 同じ perform () という 動作 を し て い ます 。 perform () 内 で は 、 まず 、 入力 さ れ た Admin の ID から Admin クラス の インスタンス を 作成 し 、 セッション に 保存 し て い ます 。 その後 、 検索 ボタン が 押さ れ て い たら 、 管理者 名 が 存在 する 場合 は adminresult . jsp へ 、 そう で なけれ ば adminrefer . jsp へ フォワード し ます 。 また 、 ログイン ボタン が 押さ れ て い たら 、 管理者 名 が 存在 する 場合 は admin . jsp へ 、 そう で なけれ ば adminlogin . jsp へ フォワード し ます 。 
DB の 接続 を 所持 する クラス です 。 それ 以外 に 何 も し て い ない の が 不可解 です が ・ ・ ・ 。 コンストラクタ が private で 定義 さ れ て い ます 。 つまり 、 外部 から は 呼べ ませ ん 。 これ は 、 シングルトン という 仕組み に 必要 な こと です 。 シングルトン と は 、 アプリケーション を 実行 し て いる 間 、 この クラス の インスタンス が ただ 1つ のみ 存在 する よう に する 仕組み の こと です 。 コンストラクタ で は 、 MySQL の ドライバ を ロード し 、 shopdb に 接続 し て い ます 。 getDBManagerAdmin () で は 、 先ほど 説明 し た シングルトン の ただ 1つ の オブジェクト を 返し ます 。 
「 プログラム から 開く 」 で 再度 実行 し たい プログラム を 選び ます 。 今後 も その プログラム で 起動 し たい 場合 は 「 別 の プログラム を 選択 」 で 「 常に この アプリ を 使っ て . java ファイル を 開く 」 に レ 印 を 付け て プログラム を 選び 「 OK 」 を し ます 。 
> If Range (" A " & iSerchRow + 1 ) <> "" Then どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> MsgBox (" × ！ 正しい 検索 条件 を 入力 し て 下さい ！！") どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 2 人 目 ： 120 得点 は 、 ０ 〜 １ ０ ０ の 値 を 入力 し て ください 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
なに この 連続 質問 の キチガイ は 
>' そして 、 検索対象 が 複数 件 発生 する ので 、 表示 行 を １ 行 ずらす どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 画面 から 入力 さ れ た ５つ の 数値 を 、 入力 さ れ た 逆順 に 表示 さ せ なさい 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
たぶん request という 変数 名 が 間違っ て いる の でしょ う 。 そこ より 上 の 方 で 変数 宣言 さ れ て いる 必要 が あり ます 。 
これ は 古い 書き方 の HTML です 。 見 た 通り の ログイン 画面 です ね 。 ２つ の テキスト フィールド に 、 それぞれ 管理者 ID と パスワード を 入力 し 、 ログイン ボタン を 押す と 、 AdminReferServlet が 起動 する よう に なっ て い ます 。 テキスト フィールド に 入力 さ れ た値 は 、 POST で サーブレット に 渡さ れ ます 。 
これ は JSP っぽい です が 、 JSP の 機能 を 使っ て い ない HTML です ね 。 見 て の 通り の 管理者 検索 画面 です 。 管理者 ID を テキスト フィールド に 入力 し 、 検索 ボタン を 押す と AdminReferServlet へ 飛び ます 。 管理者 ID は POST で サーブレット に 渡さ れ ます 。 
小計 が 何 を 意味 し て いる の か が わかり ませ ん ので 、 小計 部分 は ちょっと わかり ませ ん が 、 合計 が おかしい の は 、 daikin に shokei を 足し こん で いる ところ が おかしい ため です 。 ロジック 上 、 daikin は 小計 の 合計 と する なら 、 小計 を 計算 し た 直後 に 小計 を 足し て あげ ない と 、 次 の 入力 時点 で 小計 は リセット さ れ て しまい ます 。 具体 的 に は daikin += shokei ; を shokei = ryo * tanka ; の 直後 の 行 に 移動 さ せれ ば いい でしょ う 。 
それ 、 貴方 が 聞か れ てる ん です よ 。 
>' ⑥ リスト の 最終 行 ？ ' = = = = = = = = = = = = = = = = = = = ========================= どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 問 ２ ． 次 の よう な 図形 を 表示 する プログラム を 作成 し なさい 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
生産性 の 高さ 、 管理 の し やす さ で は Java が 一 枚 上手 でしょ う 。 しかし 、 どちら も 一長一短 です 。 また 、 どちら の 言語 も 用途 が 限ら れ て おり 、 どんな もの を 作り たい か によって 、 選ぶ べき 言語 が 変わり ます 。 組み込み で は ほとんど の 場合 、 C の コンパイラ が 提供 さ れ て いる ので 、 C を 使う こと に なり やすい か と 思い ます 。 ( Java も 組み込み で つかわ れ て い ます が ) 
見 て の 通り の 管理者 ページ です 。 ○ ○ さん （ 管理者 の 名前 ） ログイン 中 と 表示 さ れ 、 ログアウト ボタン を 押す と LogOutServlet へ 飛び ます 。 
管理者 （ Administrator ） を 表す クラス です ね 。 完全 な 詳細 は わかり ませ ん が 、 だいたい 下記 の よう な 感じ でしょ う 。 ・ コンストラクタ は 引数 の auid を 元 に 、 管理者 の ID 、 パスワード 、 姓名 を 取得 し 、 自身 の オブジェクト に 記憶 し て い ます 。 ・ get ○ ○ () 系 メソッド は 、 管理者 の 情報 を 外部 から 取得 する ため の もの です 。 ・ set ○ ○ () 系 メソッド は 、 管理者 の 情報 を 外部 から 設定 する ため の もの です 。 ・ isAdminCertify () は 、 パスワード の 照合 を し て い ます 。 ・ isExist () は 、 ファースト ネーム が 存在 する か どう か を チェック し て い ます 。 
>、 入力 する 数値 を 任意 に できる よう に 修正 しな どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> ５つ の 数値 を 、 小さい 順 に 表示 し なさい 。 ＜ 実行 例 ＞ どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> MsgBox ("○！ 検索 結果 を 表示 し まし た ！") どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> If Range (" A " & iSerchRow + 1 ) <> "" Then どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> さい 。 ただし 、 １ ５ の 倍数 は 合計 し ない 。 （ ファイル 名 ： Ren 06 _ Toi 02 ） どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
>※ 消費税 は ８ ％ と し 、 割引 率 を 選択 できる よう に す どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 問 ３ ． １ ～ １ ０ ０ まで の 整数 で 、 指定 し た 数値 の 倍数 を 合計 し 出力 し なさい 。 （ ファイル 名 ： Ren 06 _ Toi 03 ） どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 15 20 30 90 の ソース の 回答 と 解説 を 宜しく お願い し ます 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
この プログラム の 仕様 と いう か 、 何 を する プログラム で ある か を 教え て ください 。 3つ の 文字列 を 入力 する こと は 理解 できる が 、 、 、 その 文字列 の 中 に A が いくつ ある か を 数える プログラム に なる の でしょ う か 。 printf ("[ a ] の 数 は % d です .\ n ", a ); これ だ と 、 例えば [ a ] の 数 は 5 です . と 表示 さ れる が 、 数え て いる の は A で 意味 が 通じ ない 。 # include < stdio . h > # define WORD 3 # define CHARACTER _ COUNT 10 int main ( void ) { char words [ WORD ][ CHARACTER _ COUNT ]; int i , j , a ; printf ("% d 字 以内 の 三つ の 文字列 を 入力 し て ください .\ n ", CHARACTER _ COUNT - 1 ); for ( i = 0 ; i < WORD ; i ++){ printf ("% d つ 目 :", i + 1 ); scanf ("% s ", words [ i ]); } for ( i = 0 ; i < WORD ; i ++) printf (" 配列 words [% d ] の 文字列 は % s です .\ n ", i , words [ i ]); for ( a = 0 , i = 0 ; i < WORD ; i ++) for ( j = 0 ; words [ i ][ j ]!='\ 0 '; j ++) if ( words [ i ][ j ]==' A ') a ++; printf ("[ a ] の 数 は % d です .\ n ", a ); return 0 ; } とりあえず 、 A を 数える プログラム として 、 全面的 に 書き換え た 。 文字列 の 入力 で は 最後 に NULL (\ 0 ) が 付加 さ れる ので 確保 さ れ た サイズー 1 まで に 抑える 必要 が ある 。 サイズ を 超え て の 入力 で も 動作 は する が 表示 内容 が 正常 で ない 場合 が ある 。 
管理者 の 検索 結果 を 表示 する JSP です 。 セッション に 保存 さ れ た Admin クラス の 情報 を 表 形式 で 表示 し て い ます 。 
先ほど 回答 し た Admin クラス の 内容 から 察 する に 、 DB と データ を やり取り する 際 に 使う 、 データ の 集合 です ね 。 ID 、 パスワード 、 姓名 の 情報 が 含ま れ て い ます 。 
DB から 特定 の ID を 持つ 管理者 の 情報 を 検索 し て 返す クラス です 。 コンストラクタ で DB へ の 接続 を 取得 し て い ます 。 adminRefer () で は 、 SQL を 発行 し 、 取得 し た 管理者 情報 を AdminDTO クラス に 格納 し て 返し ます 。 
String tmp ; void setup () { size ( 640 , 480 ); background ( 0 ); text (" please input key !", 0 , 20 ); tmp = ""; } void draw () { /* background の 代わり に 画面 全体 に 薄い 黒 の 四角 を 書き 続ける */ fill ( 0 , 0 , 0 , 10 ); rect ( 0 , 0 , 640 , 480 ); noFill (); } void keyPressed () { background ( 0 ); println (" key pressed key =" + key + ", keyCode =" + keyCode ); float x = 200 ; float y = 100 ; if ( keyCode == 8 ) { // backspace . if ( tmp . length () >= 1 ) { tmp = tmp .s ubstring ( 0 , tmp . length ()- 1 ); } } else { tmp += key ; } fill ( 255 ); text ( tmp , x , y ); noFill (); } _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _________________________ void draw () の 追加 と text ( tmp , x , y ); の 変更 を し まし た 。 画面 全体 に 薄い 黒 を 塗り 続ける こと で 、 だんだん 文字 の 色 が 薄く なっ て き ます 。 ただし この ソース だ と 、 キー を 押す と 全文 が 表示 し 直さ れる ので 、 文字 を 打つ 度 に 消え かかっ て い た 文字 の 色 が 復活 する の が 難点 です 。 プログラム 中 で 日本語 を 表示 する 方法 は http:// www 2 . kobe - u. ac.jp /~ tnishida / misc / processing - japanese . html の 「 フォント 作成 手順 」 を 参照 し て ください 。 
断片 抜粋 コード だ し 、 根拠 なし 想像 です が 。 気 に なる の は 、 ２ 点 。 ( 1 ) ewderna さん ご 指摘 済み の scanf ("% d ",& N ) じゃ ない の ？ の 件 。 ( 2 ) scanf の "% c " を 使っ てる とこ 。 scanf は 落とし穴 が いっぱい ある けど 、 中でも % c は 要 注意 。 https :// ja . wikipedia . org / wiki / Scan f# scanf . E3 . 81 . AE . E 5 . 95 . 8 F . E 9. A1 . 8 ... 
tomcat が そもそも プロパティ 間違っ て て 上がっ て ない の で は ？ 8080 ポート は リッスン し て ます ？ 
Scanner scan = new Scanner ( System . in ); System . out . println (" 数値 を 入力 し て ください 。 "); System . out . println ( IntStream . rangeClosed ( 1 , 5 ). map ( i ->{ System . out . print (" 数値 "+ i +"："); return scan . nextInt (); }). ordered (). collect ( Collectors . joining (" "))); 解説 1 ～ 5 の 数字 stream を 作成 し 、 それ を map で 入力 さ れ た 数字 に 変換 。 変換 さ れ た 数字 を orderd メソッド で 昇順 に 並べ て 、 joinner で 空白 を セパレータ に join し 、 でき た 文字列 を 表示 。 
> 数値 2 ： 45 数値 3 ： 30 数値 4 ： 25 数値 5 ： 60 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 引き算 ： ○ から △ を 引い た 結果 は 、 □ です 。 かけ算 ： ○ と △ を かけ た 結果 は 、 □ です 。 割り算 ： ○ を △ で 割っ た 結果 は 、 □ です 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 問 ２ ． 次 の よう な 図形 を 表示 する プログラム を 作成 し なさい 。 ＜ 実行 例 ＞ 何 段 の 図形 を 表示 し ます か ： 3 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 合計 を 求める 数値 ： 6 合計 は 、 816 です 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
>、 １ ５ の 倍数 は 合計 し ない 。 （ ファイル 名 ： Ren 06 _ Toi 02 ） どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
まず 物体 に Rigidbody の コンポーネント を 追加 し て ください 。 --- スクリプト ( C# ) いろいろ 省略 し て … // 進む 速さ を 調節 し て ネ public float speed = 0 ; void update (){ // 直進 transform . position += transform . forward * Time. deltaTime * speed ; } private void OnCollisionEnter (){ transform . Rotate ( Vector 3 . up , 180 ) } 
下記 サイト から オフライン 版 を ダウンロード し 、 実行 し て ください 。 https :// www . java . com / ja / download / manual . jsp Java の インストール は 以上 で 終わり です が 、 ブラウザ 上 で Java を 起動 する に は 当該 Web サイト 毎 に 以下 の 設定 が 必要 です 。 1 . Java コントロール ・ パネル を 起動 し て ください 。 [ スタート ] → [ すべて の プログラム ] → [ Java ] → [ Configure Java ] 2 . [ セキュリティ ] → [ サイト ・ リスト の 編集 ] から 、 当該 Web サイト の URL を 追加 し て ください 。 
とりあえず 、 Java を インストール し て から 起動 を 試み て ください 。 それ で 失敗 する 場合 は 、 私 の 以前 の 回答 が 参考 に なる と 思い ます 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 16049757 ... 
拡張 for 文 は 配列 を 回す とき に 使う もの です 。 
for 文中 の セミコロン は 区切り と 考え て いい です 。 そう すれ ば 理解 できる と 思い ます 。 あと 、 そういった 文法 に関する こと は 考え ない ほう が いい です 。 何で Java は 文 の 後 に セミコロン が つく の ？ 何故 条件 分岐 で は if 文 を 使う の ？ とか 言っ て い たら きり が ない ので 、 この よう な 疑問 の 答え は 「 Java の 文法 だ 」 と 割り切っ て 考える の が 一番 の 解決 策 です 。 
synchronized メソッド は 、 自身 の インスタンス を 用い た synchronized ブロック と 同じ 効果 です 。 すなわち 、 void px (){ synchronized ( this ) { for ( int i = 1 ; i < endlength ; i ++){ for ( int j = 1 ; j < endlength ; j ++){ System . out . print ( x ); } System . out . println (); } } } これ と 同じ こと です 。 排他 に this を 使う という こと は 、 同じ インスタンス の 処理 だけ しか 排他 に なら ない という こと です 。 ご 提示 の コード で は 、 pint a = new pint ("-"); a . px (); ↑ これ と 、 pint a = new pint ("|"); a . px (); ↑ これ は 別 の インスタンス です から 、 排他 に なり ませ ん 。 で は どう する の か と いう と 、 まず 、 pint クラス に これ を 定義 し ます 。 static Object syncRoot = new Object (); そして 、 px メソッド を こう し ます 。 void px (){ synchronized ( syncRoot ) { for ( int i = 1 ; i < endlength ; i ++){ for ( int j = 1 ; j < endlength ; j ++){ System . out . print ( x ); } System . out . println (); } } } これ で 排他制御 用 の インスタンス が 共通 に なっ た ので 、 うまく 排他 に なる はず です 。 
int 型 同士 で は オーバーフロー の 可能性 は あり ませ ん 。 しかし 、 ArithmeticException という 例外 が 発生 する 可能性 が あり ます 。 ans = 1 / 0 ; // throws ArithmeticException ! ゼロ で 割っ た 場合 です ね 。 これ は 整数型 のみ の 話 で 、 浮動小数 点 型 で は 発生 し ない 点 に ご 注意 ください 。 
private 宣言 を public 宣言 に 変え ます 。 > SurfaceEx surface = new Surface Ex (); > と インスタンス 生成 の 記述 する と () の 下 に 赤い 波線 SurfaceEx (); の コンストラクタ に 渡す パラメータ が 無い から でしょ う 。 
カテゴリー が Java に なっ て い ます 。 この 質問 は 削除 さ れ て 、 改めて JavaScript を カテゴリー に 選択 し て 同じ 内容 で 質問 さ れる の が よろしい か と 思い ます 。 
http:// www . miya war e.c om / blog / 2014 / 11 / eclipse . html ↑ この サイト の 方法 を 試し て み て は いかが です か 。 
> ckg _ 1 nenn _ tanaka さん > ソース の 回答 と 解説 を 宜しく お願い し ます 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
> ckg _ 1 nenn _ tanaka さん > アルゴリズム と 考え方 を 教え て ください 。 何 十 件 も 回答 が 必要 で 、 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> アルゴリズム と 考え方 を 教え て ください 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> アルゴリズム と 考え方 を 教え て ください 。 聞く だけ で 放置 の 質問 が 何 百 件 も ある の なら 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> アルゴリズム と 考え方 を 教え て ください 。 何 百 件 も わから ない 事 が ある の なら 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> Java の ソース の 回答 と 解説 を 宜しく お願い し ます 。 何 百 件 も わから ない 事 が ある の なら 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
public static void main ( String [] args ){ int total time = 6584 ; Calendar calendar = Calendar . getInstance (); calendar .s etTimeInMillis ( totaltime * 1000 - 9 * 60 * 60 * 1000 ); System . out . println ( new String Builder () . append ( totaltime ) . append (" は 、 ") . append ( calendar . get ( Calendar . HOUR )) . append (" 時間 ") . append ( calendar . get ( Calendar . MINUTE )) . append (" 分 ") . append ( calendar . get ( Calendar .S ECOND )) . append (" 秒 です 。 "). to String () ); } 
> Java の ソース の 回答 と 解説 を 宜しく お願い し ます 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
System . out . println ( IntStream . of ( 19 , 28 ). reduce (( i 1 , i 2 )-> i 1 * i 2 ). getAsInt ()); 
自分 で 考え て 自分 の 言葉 で 書か なきゃ 意味 ない こと くらい わからん の か ？ 
この 辺 は 全部 探し まし た か ？ http:// sounansa .net / archives / 1326 
> ckg _ 1 nenn _ tanaka さん > アルゴリズム と 考え方 を 教え て ください 。 クラウドソーシング 頼む と 考え て 貰える と 思い ます 。 
> ckg _ 1 nenn _ tanaka さん > アルゴリズム と 考え方 を 教え て ください 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
> ckg _ 1 nenn _ tanaka さん > アルゴリズム と 考え方 を 教え て ください 。 何 十 件 も 回答 が 必要 で 、 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> アルゴリズム と 考え方 を 教え て ください 。 何 が 理解 出来 ない の か 補足 し て 下さい 。 
> ソース の 回答 と 解説 を 宜しく お願い し ます 。 何 が 理解 出来 ない の か 補足 し て 下さい 。 
入力 値 が 2 で 割り切れる か ， 割り切れ ない か を 判定 すれ ば 良い です ． 2 で 割り切れれ ば ， それ は 偶数 ． 割り切れ なけれ ば ， 奇数 です ． 2 で 割り切れる か どう か は ， 2 で 入力 値 を 割っ た とき に 余り が ０ に なる か どう か ， で 判断 すれ ば よい です ． ちょうど ， 余り を 求める 演算子 である % という もの が あり ます ので これ を 使い ます ． ％ は ＋ や ー など と 同じ よう に 使え ます ． 入力 値 ％ ２ ＝ 余り です ので ， 左辺 の 計算 結果 で ある 右辺 が ０ で ある か どう か を 判定 し ましょ う ． 簡単 に 書く と 以下 の よう に なり ます int input ; if ( input % 2 == 0 ) then echo " 偶数 " else echo " 奇数 " fi 
> 問 ３ ． 入力 さ れ た 数値 が 、 偶数 か 奇数 か を 表示 し なさい 。 （ ファイル 名 ： Ren 03 _ Toi 03 ） どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> アルゴリズム と 考え方 を 教え て ください 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 6584 秒 は 、 1 時間 49 分 44 秒 です 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 解説 を 宜しく お願い し ます 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
> 問 ５ ． 入力 さ れ た 数 の べき乗 を 求め なさい 。 （ ファイル 名 ： Ren 05 _ Toi 05 ） どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> ckg _ 1 nenn _ tanaka さん > ソース の 回答 と 解説 を 宜しく お願い し ます 。 何 十 件 も 回答 が 必要 で 、 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> ckg _ 1 nenn _ tanaka さん > アルゴリズム と 考え方 を 教え て ください 。 何 十 件 も 回答 が 必要 で 、 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> ソース の 回答 と 解説 を 宜しく お願い し ます 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
>※ 大きい 方 の 数値 から 小さい 方 の 数値 を 引く 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> アルゴリズム と 考え方 を 教え て ください 。 何 百 件 も わから ない 事 が ある の なら 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> Java の 回答 と 解説 を 宜しく お願い し ます 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> Java の 回答 と 解説 を 宜しく お願い し ます 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
だし て ください 。 。 。 
> お願い し ます 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
Stream . of (" ３ 教科 の 平均 点 は 、 ", String . valueOf (( int ) IntStream . of ( 80 , 65 , 98 ). average (). getAsDouble ())," 点 です 。 "). forEach ( System . out :: print ); 
Stream . of (" 支払 額 は 、 ", IntStream . of ( 200 , 6 ). reduce (( i 1 , i 2 )->( int )( i 1 * i 2 * 1 . 08 )). getAsInt ()," 円 です 。 "). forEach ( System . out :: print ); 
ブラウザ の 設定 で は ない の でしょ う か ？ Google chrome だけ は 、 サーバー が 生き て いる 間 は 保証 さ れ て い ます が 、 他 の ブラウザ は 、 60 秒 とか 、 115 秒 に なっ て い て 設定 を 変更 し ない と ダメ みたい です 。 http:// qiita . com / ichikawa _ 0829 / items / 8 b4 dce 1 c 6 e 95850 bf d6 d 
> ckg _ 1 nenn _ tanaka さん > ソース の 回答 と 解説 を 宜しく お願い し ます 。 何 十 件 も 回答 が 必要 で 、 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> ckg _ 1 nenn _ tanaka さん > ソース の 回答 と 解説 を 宜しく お願い し ます 。 何 十 件 も 回答 が 必要 で 、 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> ckg _ 1 nenn _ tanaka さん > ソース の 回答 と 解説 を 宜しく お願い し ます 。 何 十 件 も 回答 が 必要 で 、 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> アルゴリズム と 考え方 を 教え て ください 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 100 点 満点 と し 、 評価 は 、 合計 が 240 点 以上 で あれ ば 「 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> 入力 さ れる 数値 は 整数 値 のみ と する 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> アルゴリズム と 考え方 を 教え て ください 。 聞く だけ で 放置 の 質問 が 何 百 件 も ある の なら 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
ウヘ ～。 あっ たま 、 いいねぇ ～ 
> 表示 する 記号 の 個数 を 入力 ： 7 ■▲■▲■▲■ どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> ckg _ 1 nenn _ tanaka さん > ソース の 回答 と 解説 を 宜しく お願い し ます 。 クラウドソーシング 頼む と 考え て 貰える と 思い ます 。 
> ckg _ 1 nenn _ tanaka さん > ソース の 回答 と 解説 を 宜しく お願い し ます 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
> ckg _ 1 nenn _ tanaka さん > アルゴリズム と 考え方 を 教え て ください 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
> ソース の 回答 と 解説 を 宜しく お願い し ます 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> アルゴリズム と 考え方 を 教え て ください 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> ソース の 回答 と 解説 を 宜しく お願い し ます 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> アルゴリズム と 考え方 を 教え て ください 。 どの 部分 が 理解 出来 ない の か 補足 し て 下さい 。 
> Java の ソース の 回答 と 解説 を 宜しく お願い し ます 。 聞く だけ で 放置 の 質問 が 何 百 件 も ある の なら 出題 者 に 直接 聞い た 方 が 早い と 思い ます 。 
> と 解説 を 宜しく お願い し ます 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
> Java の ソース の 回答 と 解説 を 宜しく お願い し ます 。 人 に 聞い て 良い 物 なら 、 出題 者 に 直接 聞い た 方 が 判り やすい と 思い ます 。 
以下 の よう に し た ところ 、 try - with - resource 部 を 網羅 でき まし た 。 ここ まで する 必要 が ある か どう か は 微妙 です が 。 import java . io .*; import org . junit . Test ; public class ExampleTest { private boolean resourceNull = false ; private boolean create Error = false ; private boolean logic Error = false ; private boolean close Error = false ; private void testable () throws Throwable { try ( Close able c = createCloseable ()) { do Something (); } } private Close able createCloseable () throws Throwable { if ( resourceNull ) { return null ; } if ( create Error ) { throw new Throwable (); } else if ( closeError ) { return new InputStreamReader ( System . in ) { @ Override public void close () throws IOException { throw new IOException (); } }; } else { return new InputStreamReader ( System . in ); } } private void do Something () throws Throwable { if ( logic Error ) { throw new Throwable (); } } @ Test public void test 1 () { try { testable (); } catch ( Throwable t ) { } } @ Test public void tes t2 () { try { resourceNull = true ; testable (); } catch ( Throwable t ) { } } @ Test public void tes t3 () { try { resourceNull = true ; logic Error = true ; testable (); } catch ( Throwable t ) { } } @ Test public void tes t4 () { try { create Error = true ; testable (); } catch ( Throwable t ) { } } @ Test public void test 5 () { try { logic Error = true ; testable (); } catch ( Throwable t ) { } } @ Test public void test6 () { try { logic Error = true ; closeError = true ; testable (); } catch ( Throwable t ) { } } } 
ブラウザ は 何 を 使っ て ます ？ Internet Explorer で 試し て み て ください 。 
Windows 7 なら 、 初め から 日本語 対応 に なっ て いる Pleiades を 使っ た 方 が 良い と 思い ます 。 http:// mergedoc . osdn .jp / 
post で 受け取る なら 普通 に フォーム から の 送信 の 時 と 同じ 様 に すれ ば よい か と .... http:// www . ed u. tuis . ac.jp /~ nagai / SYS / SYS 10 n . html 
# include < stdio . h > # define BUFFER _ SIZE 256 # define NUM 5 struct profile { int number ; char name [ BUFFER _ SIZE ]; int age ; double height ; double weight ; char home [ 10 ]; char hobby [ 25 ]; }; void sort ( struct profile * pro ); void swap ( struct profile * pro , int m , int n ); int main ( void ) { int num , i ; struct profile pro [ NUM ]={ { 0 ," 立命 太郎 ", 20 , 175 . 0 , 70 . 0 ," 滋賀 "," 英会話 "}, { 1 ," 草津 二郎 ", 22 , 180 . 0 , 65 . 0 ," 京都 "," プログラミング "}, { 2 ," 衣 笠 花子 ", 21 , 160 . 0 , 52 . 0 ," 大阪 "," スポーツ 全般 "}, { 3 ," 茨木 華子 ", 20 , 162 . 0 , 55 . 0 ," 京都 "," プログラミング "}, { 4 ," 滋賀 三郎 ", 22 , 168 . 0 , 70 . 0 ," 大阪 "," 英語 "},}; for ( i = 0 ; i < 2 ; i ++){ if ( i == 0 ) printf (" 現在 の 登録 情報 は 、 \ n "); if ( i == 1 ) printf ("\ n 身長 順 の 登録 情報 は 、 \ n "); for ( num = 0 ; num < NUM ; num ++){ printf (" 番号 ： % d \ n ", pro [ num ]. number ); printf (" 名前 ： % s \ n ", pro [ num ]. name ); printf (" 年齢 ： % d \ n ", pro [ num ]. age ); printf (" 身長 ： % 5 . 1 f \ n ", pro [ num ]. height ); printf (" 体重 ： % 4 . 1 f \ n ", pro [ num ]. weight ); printf (" 出身 ： % s \ n ", pro [ num ]. home ); printf (" 特技 ： % s \ n ", pro [ num ]. hobby ); printf ("\ n "); } if ( i == 0 ) sort ( pro ); } printf ("\ n # 正常 終了 #\ n \ n "); system (" pause "); return 0 ; } void sort ( struct profile * pro ) { int i , j ; for ( i = 0 ; i < NUM - 1 ; i ++) for ( j = i + 1 ; j < NUM ; j ++) if ( pro [ i ]. height < pro [ j ]. height ) swap ( pro , i , j ); } void swap ( struct profile * pro , int m , int n ) { struct profile tmp ; tmp = pro [ m ]; pro [ m ]= pro [ n ]; pro [ n ]= tmp ; } 
# include < stdio . h > # define NUM 3 struct profile { int number ; // 学生 番号 char Jname [ 14 ]; // 名前 char Ename [ 20 ]; // 名前 （ ローマ字 ） char address [ 47 ]; // 住所 46 から 47 に 修正 }; void print _ date ( struct profile * p ); int main ( void ) { struct profile date [ NUM ] ={{ 1 ," 立命 太郎 "," Ritsumei Taro "," 滋賀県草津市野路東 1 - 1 - 1 "}, { 2 ," 衣 笠 花子 "," kinugasa Hanako "," 京都府京都市北区等持院北町 56 - 1 "}, { 3 ," 朱雀二郎 "," suzaku Jiro "," 京都府京都市 中央区 西ノ京 朱雀町 1 "}}; print _ date ( date ); return 0 ; } void print _ date ( struct profile * p ) { int num ; for ( num = 0 ; num < NUM ;++ num ){ printf (" 学籍 番号 ： % 6 d \ n 名前 ： % s \ n 名前 （ ローマ字 ）:% s \ n 住所 ： % s \ n \ n ", p -> number , p -> Jname , p -> Ename , p -> address ); ++ p ; } } ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ 京都府京都市 中央区 西ノ京 朱雀町 1 上記 だ と 漢字 1 文字 を 3 バイト する と 漢字 が 15 文字 で 45 バイト 、 最後 の 1 が 半角 で 1 バイト で 合計 46 バイト に なる が 、 最後 に \ 0 を 付加 する 必要 が ある ので 47 バイト に なる か と 思い ます 。 漢字 1 文字 が 3 バイト に なる の は UTF-8 です ので 、 S-JIS , EUC だ と 関係 ない が 、 、 、 、 、 
/* 2016 / 7 / 6 00 : 40 : 40 エラー が 出る の です が イマイチ どこ が 間違っ て いる の か わかり ませ ん 。 場所 として は 、 初期 化 し て いる ところ です 。 ＞ ＞ ＞ //@@＿ 実行 時 エラー の 発生 元 に なる //@＿ エラー に は なら ない が 、 出力 文字列 が 不ぞろい ＿ ＿ ＿ 出身地 の 「 地 」 を 削る と キッチリ 揃う 。 「 出身 」 という ＿ ＿ ＿ 表現 も おかしく ない ので 、 改良案 として 修正 を 表示 し て み た 。 */ # include < stdio . h > # include < stdlib . h > # define ＿ BUFFER _ SIZE ( 256 ) # define ＿ NUM ＿ ＿ ＿ ＿ ( 5 ) struct profile { ＿ int ＿ ＿ number ; ＿ char ＿ ＿ name [ BUFFER _ SIZE ]; ＿ int ＿ ＿ age ; ＿ double ＿ height ; ＿ double ＿ weight ; ＿ char ＿ ＿ home [ 5 ];＿＿//@@ [ 3 ]; ＿ char ＿ ＿ hobby [ 15 ];＿//@@ [ 7 ]; }; int main ( void ){ ＿ int num ; ＿ ＿ struct profile profile [ NUM ]={ ＿{ 0 ," 立命 太郎 ", 20 , 175 . 0 , 70 . 0 ," 滋賀 "," 英会話 "}, ＿{ 1 ," 草津 二郎 ", 22 , 180 . 0 , 65 . 0 ," 京都 "," プログラミング "}, ＿{ 2 ," 衣 笠 花子 ", 21 , 160 . 0 , 52 . 0 ," 大阪 "," スポーツ 全般 "}, ＿{ 3 ," 茨木 華子 ", 20 , 162 . 0 , 55 . 0 ," 京都 "," プログラミング "}, ＿{ 4 ," 滋賀 三郎 ", 22 , 168 . 0 , 70 . 0 ," 大阪 "," 英語 "},}; ＿ ＿ printf (" 現在 の 登録 情報 は 、 \ n "); ＿ for ( num = 0 ; num < NUM ; num ++){ ＿ ＿ printf (" 番号 ： % d \ n ", profile [ num ]. number ); ＿ ＿ printf (" 名前 ： % s \ n ", profile [ num ]. name ); ＿ ＿ printf (" 年齢 ： % d \ n ", profile [ num ]. age ); ＿ ＿ printf (" 身長 ： % 5 . 1 f \ n ", profile [ num ]. height ); ＿ ＿ printf (" 体重 ： % 4 . 1 f \ n ", profile [ num ]. weight ); ＿ ＿ printf (" 出身 ： % s \ n ", profile [ num ]. home );＿ //@ 出身地 ＿ ＿ printf (" 特技 ： % s \ n ", profile [ num ]. hobby ); ＿ ＿ printf ("\ n "); ＿} ＿ ＿// 一時停止 後 ， 任意 キイ 押下 で 継続 （ main 終了 ） ＿ printf ("\ n # 正常 終了 #\ n \ n "); // 確認 表示 ＿ system (" pause ");＿// コマンド pause 実行 （ キイ 待ち 停止 ） ＿ return 0 ;＿ // main () 終了 } /* 実行 出力 ： console 現在 の 登録 情報 は 、 番号 ： 0 名前 ： 立命 太郎 年齢 ： 20 身長 ： 175 . 0 体重 ： 70 . 0 出身 ： 滋賀 特技 ： 英会話 番号 ： 1 名前 ： 草津 二郎 年齢 ： 22 身長 ： 180 . 0 体重 ： 65 . 0 出身 ： 京都 特技 ： プログラミング 番号 ： 2 名前 ： 衣 笠 花子 年齢 ： 21 身長 ： 160 . 0 体重 ： 52 . 0 出身 ： 大阪 特技 ： スポーツ 全般 番号 ： 3 名前 ： 茨木 華子 年齢 ： 20 身長 ： 162 . 0 体重 ： 55 . 0 出身 ： 京都 特技 ： プログラミング 番号 ： 4 名前 ： 滋賀 三郎 年齢 ： 22 身長 ： 168 . 0 体重 ： 70 . 0 出身 ： 大阪 特技 ： 英語 # 正常 終了 # 続行 する に は 何 か キー を 押し て ください . . . */ 
watasihagenius さん 1 . やり たい こと は ? 2 . 検索 すれ ば 、 ある はず 。 
本屋 さん に 並ん で いる 、 Androidアプリ の 作り方 の 本 を １ 冊 買っ て き て 、 一 通り 読め ば 、 その 程度 なら 作れる と 思い ます よ 。 
> みなさん どの よう に 開発 さ れ て いる の か なー と ふと 思っ た の が 一つ 。 私 は 後述 の IDE を 使っ て 、 ソース を 書き 、 JUnit という ライブラリ で テスト を し て javadoc を 生成 し 、 jar アーカイブ し て 終わり です 。 ここ は 個人 で それぞれ 違う 方法 で 開発 する でしょ う 。 > ソフト だけ で コンパイル まで 自動 で やっ て くれる よう な ソフト は ある の でしょ う か 。 あり ます 。 統合開発環境 （ IDE ） と 言い まし て 、 この ソフト だけ で コンパイラ から 実行 、 jar アーカイブ 、 予測 入力 など など を 行っ て くれる ソフト です 。 代表 的 な もの に Eclipse 財団 の 「 Eclipse 」 、 Oracle 社 の 「 NetBeans 」 が 有り ます 。 どちら も 無料 です 。 因みに 私 は NetBeans を 使っ て い ます 。 
① BufferedReader は 「 一行 ずつ 」 キーボード 入力 を 読み込む ため に 必要 です 。 InputStreamReader が キーボード から の 入力 を 受け持つ わけ です が 、 これ を そのまま 使う と 「 一文字 ずつ 」 読み込む こと に なり 効率 が 悪い です 。 その ため BufferedReader が 必要 に なり ます 。 ② boolean 型 の 変数 flag による 真偽 判定 は 「 すでに 同じ 文字 が 使わ れ て いる か どう か 」 の 確認 の ため に 使わ れ て い ます 。 「 同じ 数値 を 使わ ない 」 という 数 当て ゲーム の ルール に 合わせる ため です 。 同じ 数 が 使わ れ て い た 場合 、 flag を True に し て 、 別 の 数値 を 作る よう 再び ループ さ せ ます 。 ③ j = i - 1 と なっ て いる の は ② でも 書い た 「 同じ 数値 を 使わ ない 」 という ルール の 確認 の ため です 。 i は 現在 の 文字 の 位置 （ インデックス ） を 表し 、 j は 現在 の 文字 より 前 の 文字 の 位置 を 表し ます 。 最初 i - 1 と なっ て いる の は 現在 の 文字 の 1 文字 前 から 初める ため です 。 j -- で 一文字 ずつ 前 に 戻し て いき 、 現在 の 文字 と 同じ 数字 が 使わ れ て い ない か ひとつひとつ 確認 し て いき 、 J = 0 、 つまり それ 以上 前 の 数値 が なくなっ た とき に ループ が 終了 し ます 。 ④* 6 + 1 さ れ て いる の は 1 ～ 6 の 数値 を 出す サイコロ を 表現 する ため でしょ う 。 Math . Random は 0 以上 1 未満 の 間 の 小数 を 返す ので 、 6 倍 する と 、 0 以上 6 未満 の 小数 に なり ます 。 サイコロ の 数値 は 0 では なく 1 から 始まる ので ＋ １ し て 1 以上 7 未満 の 小数点 に 直し ます 。 最後 に ( int ) として 、 整数型 に キャスト し て いる ので 、 小数点 以下 は 切り捨て られ て 、 1 ～ 6 の 整数 が 作ら れ ます 。 
i _ 10 _ 18 _ tr さん C言語 の 例 int masu [ 10 ][ 20 ]; 値 - 1 壁 、 回り を うめる 。 0 空 1 白 2 黒 int test ( int x , int y , int k )// k = 1 or 2 ( 白 or 黒 ) { int i , d ; for ( i = 0 ; i < 4 ;++ i ) { d = fx ( x , y , k , i ); if ( d == 5 ) { return 1 ;// 完成 } } return - 1 ; } POINT w [ 4 ] = {{ 1 , 0 },{ 0 , 1 },{ 1 , 1 },{ 1 ,- 1 }}; int fx ( int x , int y , int k , int u ) { int d , s , t ; d = 0 ; s = x ; t = y ; do { s += w [ u ]. x ; t += w [ u ]. y ; ++ d ; } while ( masu [ s ][ t ] == k ); -- d ; s = x ; t = y ; do { s -= w [ u ]. x ; t -= w [ u ]. y ; ++ d ; } while ( masu [ s ][ t ] == k ); return d ; } 
C 直下 に 置い た から じゃ ない です か ねぇ 。 C 直下 に フォルダ （ たとえば 、 C :\ pleiades ） を 作っ て その 中 で やっ たら 、 うまく いく かも しれ ませ ん よ 。 Windows Vista 以降 で は 、 UAC （ User Account Control ） の 関係 で 、 「 C :\」「 C :\ Program Files 」 「 C :\ Windows 」 など で は 、 通常 の 設定 で は ファイル 等 の 作成 が 制限 さ れ て い ます 。 参考 サイト ： Windows8 で 、 C ドライブ 直下 に 置い た はず の ファイル が なくなっ て いる 件 について 。 http:// www . yorozu - sys .net / monooki / 20130421104809 Vista 以降 で UAC が 有効 だ と ファイル の 作成 等 に 失敗 する 問題 の 対処 法 http:// dobon .net / vb / dotnet / system / uac . html 
String [] message = {" 情報 概論 ", " Java ", " アルゴリズム "}; int total = 0 ; for ( int n = 0 ; n < message . length ; n ++){ System . out . print ( message [ n ] + " の 点数 :"); total += Integer . parseInt ( System . console (). readLine ()); } int ave = total / message . length ; System . out . println (" ３ 教科 の 平均 点 は 、 " + ave + " 点 です 。 "); 単純 に 入力 値 を 合計 し て 教科 数 で 割る プログラム です 。 数字 以外 を 入力 し た 時 の 例外処理 は し て い ませ ん 。 例外処理 を し たい for 文 の 中身 を 場合 は 下 の よう に し て ください 。 System . out . print ( message [ n ] + " の 点数 :"); try { total += Integer . parseInt ( System . console (). readLine ()); } catch ( Exception e ){ n --; System . err . println (" エラー : 数値 を 入力 し て ください 。 "); continue ; } 
1 . 7 . 10 です が 、 バージョン 番号 の 最後 の 数字 が 違う もの で も 動く 場合 が ある ので 書い て おき ます 。 1 . 7 . 2 で の 動作 確認 は し て い ませ ん 。 （ ちなみに 、 バージョン 番号 の 2つ 目 が 違う の は 大きな 仕様変更 な ので 基本的 に 動き ませ ん 。 ） 乗り物 系 紹介 動画 を 上 から 順番 に 3つ と も 見る こと を お勧め し ます 。 ・ exRollerCoaster （ ジェットコースター MOD ） ジェットコースター を 追加 し ます 。 紹介 動画 : http:// www . nicovideo .jp / watch / sm 27353636 アップデート : http:// www . nicovideo .jp / watch / sm 27443131 ・ MineFerrisWheel （ 観覧車 MOD ） 観覧車 を 追加 し ます 。 観覧車 と 言っ て ます が 、 いろいろ な ブロック を 回転 さ せる こと が 出来 、 それ に 乗る こと が 出来 ます 。 応用 すれ ば 直線 運動 も 出来 ます 。 紹介 動画 : http:// www . nicovideo .jp / watch / sm 28566125 レッドストーン 系 ・ Computer Craft 「 コンピューター 」 や 、 プログラム で 動く 「 タートル 」 を 追加 し ます 。 この Mod の プログラミング は そんなに 難しく ない です し 、 なん なら インターネット から の コピペ で も 動き ます 。 ・ ProjectRed RedPower 後継 Mod その １ 。 レッドストーン より も 遥か 遠くまで 信号 を 送信 できる 赤 合金 ワイヤー （ 壁 や 天井 に 張り付ける こと も 出来る ） が 追加 さ れ 、 NOT 回路 や AND 回路 、 OR 回路 、 タイマー 回路 、 Toggle - Latch 回路 など の 基本 的 な 回路 （ これら も 壁 や 天井 に 張り付け られる ） が 追加 さ れ ます 。 更に 、 IC （ 集積回路 ） という もの が 追加 さ れ 、 自分 で 作っ た 回路 が 1 ブロック に 収まり ます 。 ちなみに 、 カット ブロック など も ある ので 、 レッドストーン 関係 無く 建築 の 幅 も 広がり ます 。 ・ BluePower RedPower 後継 Mod その ２ 。 ProjectRed と 非常 に よく 似 て い ます 。 ただ 、 カット ブロック は まだ 実装 さ れ て い なかっ た はず です 。 青い 回路 の 見た目 が 好き な ので ProjectRed と 一緒に 導入 し て い ます 。 上 に も 書き まし た が 、 すべて 1 . 7 . 10 用 です 。 ただ 、 1 . 7 . 2 でも 動く 可能性 は 十分 ある と 思い ます 。 いっそ の こと 1 . 7 . 10 に 移る の も お勧め です 。 Mod の 種類 が 多い ので 。 
jsp で も でき ます が 、 エラー 制御 が 困難 な こと 、 セキュリティ 不具合 など によって 万が一 フロントエンド の コード が 流出 し た 場合 、 DB の ID と PASSWORD （ あるいは その 設定 が さ れ て いる ファイル の 場所 ） が 流出 する という リスク が ある ため 、 サーブレット で 処理 さ せる の が 普通 です 。 一応 、 jsp を 用い た DB 接続 について 書き ます 。 １ ． page タグ に import =" java .s ql .*" を 追加 し ます 。 ２ ． DB の 設定 に従って コネクション を 取得 し ます 。 Connect ion con = DriverManager . getConnection ( JDBCURL , ID , PASSWORD ); ※ JDBCURL は DB によって 異なり ます ので 、 各 DB の サンプル コード を 参照 し て ください 。 ３ ． SQL を 実行 する ため の statement を 取得 し ます 。 Statement st = con . createStatement (); ※ セキュリティ を 重視 する 場合 は 、 PreparedStatement を 使用 し ます 。 ※ こちら について は 調べ て み て ください 。 ４ ． SQL を 実行 し ます 。 ResultSet rs = st . executeQuery (" select hoge from fuga "); ５ ． ResultSet の 中 に 返っ て き た レコード を 表示 し ます 。 while ( rs . next ()){ out . write ( rs . get String ( 1 )+"< br />"); } ６ ． 開い た リソース を 閉じ ます 。 st . close (); con . close (); close 処理 は 今 は try - with - resource で 書く こと が 多い です 。 try ( Connect ion con = DriverManaqer . getConnection ( 略 ); Statement st = con . createStatement (); ){ // ここ で データ 取得 など の 処理 } この 書き方 だ と 、 finally を 書か なく て も 勝手 に con と st が close さ れ ます 。 
右クリック → プログラム から 開く → Java 
同様 の 症状 の 経験 が ない ので 完全 に あてずっぽ です が 、 ・ ユーザー 名 も アルファベット だけ の ユーザー を 作っ て ( c :\ Users \ SomeUser \... に なる よう に ) 試す ・ Processing 2 . 2 . 1 で 試し て みる とか ? 
受信 の 方 に 送信 プログラム を 書い ちゃっ て ます よ それ と 、 while で 毎回 ソケット を 生成 する こと は ない と 思い ます 。 毎回 ソケット を 接続 しよ う として も 、 サーバー が マルチスレッド で なけれ ば １つ の ソケット に 接続 が 占有 さ れ ます 。 すぐ に new で オブジェクト を 渡し て いる ので 接続 中 の ソケット が 上書き さ れ て 、 その 結果 破棄 さ れ てる ん じゃ ない です か ね 。 一 度 の 接続 で 生成 する ソケット を 一つ に し て み て ください 。 
http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1412790509 ... ここ と 同じ かな ？ Java の 再インストール と 右クリック で Java ( TM ) を 試す と いい と 思い ます 。 
こちら が 公式 の インストール 方法 です ね 。 https :// android . aldebaran . com / doc / installation . html 日本語 だ と こちら が 参考 に なり そう です 。 http:// www . slideshare .net / atelire - akihabara / 20160529 - 30 - androidwork ... すで に 使っ て いる 方 も いる よう です ね http:// www . slideshare .net / ohwada / 20160529 - pepper - android sdk - 6252624 ... 
Web デザイナー です 。 eclipse 、 Jsp 、 servlet は 使っ た こと が あり ませ ん ので 確証 は ありません が 、 CSS も 含め て プログラム の ソース ファイル は テキスト データ だ から どの テキストエディター で も 開け ます 。 ただ 、 Dreamweaver は 文字コード の 変換 に 弱い という 弱点 が ある ので 何らかの ツール で 文字コード を 変換 する 必要 は ある かも しれ ませ ん 。 この 投稿 を 見る 限り 、 Dreamweaver を 使う 意味 が ある の か 疑問 に 感じ まし た 。 私 も 業務 で Dreamweaver を 使い ます が 、 別に 無く て も 大して 困り ませ ん 。 最悪 メモ帳 で 代用 できる し 、 Web 用 の テキストエディター は いくらでも あり ます 。 デザイナー の 感覚 で いう と 、 ＞ レイアウト を 考える 上 で 使用 し たら 楽 か な と 思っ て い ます 、 こういう こと は 、 手書き で 紙 に 書く 、 Photoshop 、 Illustrator など で 完成 画面 を 作る 。 など の 段階 で 決める こと で イメージ を 固め て から ソース を 書く よう に し ます 。 ＞ Html と css だ と 全体 的 な レイアウト を いちいち 表示 さ せ ない と イメージ が 分から ない の です こう いっ た HTML 、 CSS を 実際 に 書き ながら 検討 し たい 作業 は ローカル 環境 や 、 テスト サーバー に データ を 置い て ブラウザ で 開き 、 ブラウザ の デベロッパー ツール ( F1 2 ツール と も 言わ れ て い ます ) で 実際 に 記述 し ながら 行い ます 。 な ので 、 Dreamweaver じゃ ない と 困る 作業 を する 感じ に 見え ませ ん 。 私 が Dreamweaver を 使う 理由 は 慣れ の 問題 が 一番 大きく 、 Dreamweaver で 重宝 する 点 は ・ F1 2 を 押す と 、 ブラウザ で プレビュー できる 。 ・ 予測 変換 で タグ 、 CSS が 表示 さ れ て キーボード の タッチ 数 が 減る 。 ・ ソース 文 に エラー が 生じる と 色 が 変わる ので イージー ミス に 気づき 易い 。 ・ 特定 の 文字列 検索 や 置換 が 指定 し た フォルダ 内 全て の データ など 、 複数 の ファイル に 干渉 できる 。 など の 理由 で Dreamweaver じゃ ない と 困る 点 は ほぼ あり ませ ん 。 お話 を 見る 限り 、 Dreamweaver を 導入 する メリット が 見え ない ので もう一度 検討 し た 方 が いい と 思い ます 。 
C :\ Windows \ YJSample \ 01 は まずい ですよ。 C :\ Windows は 特別 な フォルダ な ので そこ に 作成 する の は よく ない です 。 C :\ YJSample \ 01 と す べき です 。 その 本 に も そう 書い て あり ます 。 エクスプローラ で C :\ の 直下 に YJSample フォルダ を 作成 し 、 さらに 01 フォルダ を 作成 し て ください 。 
可能性 1 半角 ¥ 記号 ( U + 00 A5 ) である ( ブラウザ で 見る 限り は これ ) 可能性 2 全角 ￥ 記号 ( U + FFE 5 ) である 正解 半角 \ 記号 ( U + 005 C ) 注 あなたに \ が どう 見え て いる か は わたし に は わかり ませ ん 。 ¥ と \ が 同じ に 見え て いる か 、 違っ て 見え て いる か 、 そもそも 記号 として 見え て いる か は わたし に は わかり ませ ん 。 ¥ や \ を どう やっ て 入力 すれ ば いい の ? という 質問 に は ( 簡単 に は ) 答え られ ませ ん 。 あなた の 質問 も 私 の 回答 も 、 Yahoo! 知恵袋 が 勝手 に 文字 を 置きかえ て しまっ て 意図 し た 文字 で は なくなっ て いる 可能性 も 存在 し ます 。 文字コード を 調べ られる エディタ に 貼り 付け て 、 コード ポイント を 調べ て み ましょ う 。 信頼 できる の は 、 あなた の 環境 で 文字 の コード ポイント を 調べる ツール を 使っ て み た 値 か 、 バイナリエディタ で 見 た 値 です 。 
pc は Windows です か ？ Windows だっ たら installer で は なく installer - win を ダウンロード し て やっ て み て 下さい 。 
検索 語 を そのまま プレースホルダ に 充てる の で は なく 、 String . format など で 前後 を % で 挟む よう に 加工 し たら 良い と 思い ます 。 
stdin は たぶん Scanner の インスタンス 。 hasNext は 、 次 の データ が 存在 する か という チェック 。 よって while ( stdin . hasNext ()) は 、 「 データ が 存在 する 限り ループ する （ データ が 無くなっ たら ループ から 抜ける ） 」 という 意味 に なり ます 。 
INSERT INTO ` ＰＣ 利用 状況 ` (` 利用者 名 `, ` ＰＣ 名 `) VALUES (` 山田太郎 `,` YAMADA - PC `); で 1 件 入っ て ます ね 。 それ を 利用者 名 だけ 取得 し たい 場合 は SELECT * FROM ` ＰＣ 利用 状況 ` WHERE ` 利用者 名 ` = ` 山田太郎 `; とすれば 山田太郎 だけ 取得 する こと が でき ます 。 
プロジェクト を 右クリック し て 、 Run As -> Java Application で いける と 思い ます 。 
> プロセッシング を 作ろ う って の は 変 だ なぁ 。 プログラム を 作ろ う ? あるいは Processing 流 に 言え ば スケッチ を 作ろ う 、 かな 。 > 今 は この 部分 の 作り方 が わから なく て この 部分 って どの 部分 ? > ある程度 形 が でき て い て なら 、 それ を きちんと 示し て もらっ て 、 それ を ベース に 「 どう し たい か 」 を 具体 的 に 教え て もらわ ない と アドバイス の しよう も ない 。 「 など 」 とか 「 別 の モノ 」 とかいう 曖昧 な 表現 は プログラム に なら ない から 。 # ま さか下 の が 「 形 」 とか いわ ない よ ね ... 
println が str の あと に 改行 コード を 追加 する から 。 × System . out . println ( str ); ○ System . out . print ( str ); 
コマンドプロンプト を 起動 し て 「 java 」 と 入力 し て Enter キー を 押下 する と java の 使用 方法 が 表示 さ れ ます か ？ 
検索 すれ ば 解決 し ませ ん か ？ http:// www . oracle . com / tech network / java / javase / download s / java - archiv ... 
setActivityName の . class を 抜い て も 解決 し ませ ん か ？ 多分 パッケージ 名 . クラス 名 で 指定 する はず 。 
わかり やすい サイト は 存在 し ませ ん 。 という か 、 やっ てる 内容 が そこそこ 難しい ので 、 一旦 理解 でき なく なる と 、 自分 の やっ て いる 作業 の 意味 が わから なく なっ て しまい ます 。 仮に 類似 の サイト を 見 て も 、 意味 が わから ない 以上 、 どの 情報 を 選択 し て いい か 理解 でき ない と 思い ます 。 ここ で 、 他 の サイト を 見る こと は 、 より いら ない 情報 を 仕入れる だけ で かえって 混乱 し ます 。 早々 に 、 ヘルプ を 求める こと を お勧め し ます 。 他 の メンバー へ の 質問 を 躊躇っ て いる よう です が 、 自身 で 抱え込む こと は 、 自分 だけ で なく 、 ほか の メンバー に も 迷惑 を かける 可能性 が あり ます 。 聞く は 一瞬 の 恥 、 聞か ぬ は 一生 の 恥 です 。 
書け ない の も 当然 です 。 恐ろしく 難しい です 。 思わず 必死 に 作成 し まし た 。 まず 、 libmetadata - extractor - java という java の ライブラリ が 必要 です 。 Debian jessie で の 場合 です が 、 sudo apt - get install libmetadata - extractor - java で 、 インストール する と 、 / usr / share / java / metadata - extractor . jar に 入り ます 。 別 の Linux で は 、 別 の 入れ 方 で 別 の 場所 に 入る かも しれ ませ ん が 、 とりあえず 、 これ で 仮定 し て プログラム を 作成 する と 、 こんな 感じ です 。 import com . drew . metadata .*; import com . drew . metadata . exif .*; import com . drew . imaging .*; import java . io . File ; import java . util . Date ; import java . text .S impleDateFormat ; public class Extractex { public static void main ( String [] args ) { try { File file = new File ( args [ 0 ]); Metadata metadata = ImageMetadataReader . readMetadata ( file ); ExifSubIFDDirectory director y = metadata . getDirectory ( ExifSubIFDDirectory . class ); Date date = director y . getDate ( ExifSubIFDDirectory . TAG _ DATETIME _ ORIGINAL ); SimpleDateFormat dtf = new SimpleDateFormat (" yyyyMMddHHmm "); File file 2 = new File ( dtf . format ( date )+". jpeg "); file . renameTo ( file 2 ); } catch ( Exception e ) { e . printStackTrace (); } } } これ を 、 Extractex . java で 保存 し て コンパイル し ます 。 javac - cp / usr / share / java / metadata - extractor . jar Extractex . java 実行 し ます 。 java - classpath / usr / share / java / metadata - extractor . jar :. Extractex Yahoochiebukuro .jp eg これ で 、 出来 まし た 。 
すみません 。 単に 、 一番 最後 に 、 } だけ の 行 が 足り ない だけ です 。 
駄目 で は ない です 。 c言語 など で は オブジェクト指向 で は ない ので よく やり ます 。 です が 、 代入 し て ほしく ない 値 が あっ たり 計算 し て から 値 を 入れ たい 場合 など に メソッド で 書き換え たり する こと が 多い です 。 class Day { private int week ; // セッタ public void setweek ( int week ){ if ( 0 <= week && week <= 6 ) this . week = week ; else throw new NumberFormatException (" week に は 0 ~ 6 の 数字 "); } } こんな 感じ 仕様書 とか で ここ の 変数 に は どの 数字 ～ とか 書か なく て も 用途 など が 相手 に 伝わり ます 。 な ので 、 共同開発 や ソースコード を 公開 する 場合 など に 役に立ち ます 。 また 、 ファイル を 指定 個数 生成 し て 管理 する など システム 的 な こと を する とき に ファイル を 1 万 個 とか 生成 さ れ たら たまっ た もの で は ない ので フールプルーフ の 観点 から ファイル 生成 数 の 上限 を 決める ～ とか だっ たら セキュリティ に 関わっ て き ます ね 。 
これ で どうでしょう 。 item . add ( new Sushi ( shinamono , kazu )); なお 、 Vector は パフォーマンス が 悪い です 。 ArrayList を 使い ましょ う 。 
システムの復元 で 何 日 か 前 の 復元 ポイント まで 戻す の が 簡単 だ と 思わ れ ます 。 
面白 そう な ので 解い て み まし た 。 public static void main ( String [] args ){ // 総 当たり で 解い て みる 。 // GHIJK の 配列 作成 LinkedList < Integer > baseList = new LinkedList < Integer >(){{ add ( 1 ); add ( 2 ); add ( 5 ); add ( 6 ); add ( 7 ); }}; List < List < Integer >> ansList = new ArrayList <>(); // 再帰 で 5 != 120 通り の 組み合わせ を 作成 する 。 conv ( baseList , new ArrayList < Integer >(), ansList ); // でき た 組み合わせ ( ansList ) から 条件 に 合う リスト を 抽出 し て 、 A を 表示 する 。 ansList . stream () . filter ( list -> list . get ( AlphaNum . C . ordinal ())!= list . get ( AlphaNum . F . ordinal ()))// C != F . filter ( list -> list . get ( AlphaNum . D . ordinal ())+ list . get ( AlphaNum . K. ordinal ())== 6 )// D + K = 6 . map ( list -> makeAnsString ( list )) . forEach ( System . out :: println ); } private static String makeAnsString ( List < Integer > list ) { return IntStream . rangeClosed (' A ',' K' ) . map ( c -> list . get ( AlphaNum . valueOf ( String . valueOf (( char ) c )). ordinal ())) . mapToObj ( String :: valueOf ) . collect ( Collectors . joining (",")); } enum AlphaNum { G , H , I , J , K , D , E , F , B , C , A ; } private static void conv ( final LinkedList < Integer > baseList , final List < Integer > nowList , List < List < Integer >> ansList ) { for ( Integer i : baseList ) { LinkedList < Integer > list = new LinkedList < Integer >( baseList ); List < Integer > curList = new ArrayList < Integer >( nowList ); curList . add ( i ); list . remove ( i ); if ( list . isEmpty ()) { ansList . add ( addABCDEF ( curList )); } else { conv ( list , curList , ansList ); } } } private static List < Integer > addABCDEF ( List < Integer > list ) { // D = G と H の 大きい 方 list . add ( Math . max ( list . get ( AlphaNum . G . ordinal ()), list . get ( AlphaNum . H. ordinal ()))); // E = I と J の 大きい 方 list . add ( Math . max ( list . get ( AlphaNum . I . ordinal ()), list . get ( AlphaNum . J . ordinal ()))); // F = K と 3 の 大きい 方 list . add ( Math . max ( list . get ( AlphaNum . K. ordinal ()), 3 )); // B = D と E の 大きい 方 list . add ( Math . max ( list . get ( AlphaNum . D . ordinal ()), list . get ( AlphaNum . E . ordinal ()))); // C = F と 4 の 大きい 方 list . add ( Math . max ( list . get ( AlphaNum . F . ordinal ()), 4 )); // A = B と C の 大きい 方 list . add ( Math . max ( list . get ( AlphaNum . B . ordinal ()), list . get ( AlphaNum . C . ordinal ()))); return list ; } 答え は 7 , 7 , 4 , 5 , 7 , 3 , 2 , 5 , 6 , 7 , 1 7 , 7 , 4 , 5 , 7 , 3 , 2 , 5 , 7 , 6 , 1 7 , 7 , 4 , 5 , 7 , 3 , 5 , 2 , 6 , 7 , 1 7 , 7 , 4 , 5 , 7 , 3 , 5 , 2 , 7 , 6 , 1 
？？？ ？？？ ？ ？？？ ？ ？？？ 
済み ませ ん が 【 実機 で ・ ・ 】 の 意味 が 不明 です 。 Android Studio で 実機 が USB 接続 さ れ た 状態 で デバッグ する でしょ う から 、 端 から 実機 だ と 思う の です が ？ 実機 デバッグ で トレース すれ ば path = Environment . ge tExternalStorageDirectory (). getPath () の 位置 は 一目瞭然 な ので どこ に ダウンロード さ れ た か が 判ら ない という こと に は なら ない と 思い ます 。 
まず 「 Android Studio と 実機 」 という 言い回し が 意味 が 通り ませ ん 。 多分 「 エミュレーター と 実機 」 な の だろ う けど 。 「 Android Studio で は 実行 できる 」 と いう と 、 実機 と USB ケーブル で 接続 し て の 実行 も 通る の ？ 単体 で 動かし た とき 「 だけ 」 だめ な の ？ という 話 に なっ ちゃ い ます し 。 Android Studio と 実機 を 接続 し て 、 Android Studio から 実機 に対して 作成 中 の アプリ を デバッグ 実行 さ せる こと も でき ます から 。 実機 と USB ケーブル で 接続 し て 動かせる 環境 に ある の なら 、 前述 の 通り Android Studio で デバッグ 実行 し て 変数 path に 何 が 入る の か 確認 し て み て は どうでしょう か 。 Environment は 機種 ごと 固有 の 情報 を 吸収 する ため の もの な の だ から 、 それ が 「 信用 でき ない 情報 」 で は 、 Androidアプリ の 大半 が 成り立た なく なっ て しまう はず です けど ね 。 
コンソール に 表示 可能 な 行 数 を 超え て いる ため 、 最初 の 行 から 消え て いっ て いる だけ です 。 
0 に なる 理由 です が 状態 を 出力 する プリント 文 を 入れ て み た の が 下 の Test です 。 //---------- Test . java ---------- import java . util . Arrays ; public class Test { public static void main ( String [] args ) { int [] a = { 1 , 2 , 1 }; System . out . println (" a : " + Arrays . to String (a) ); sort (a) ; System . out . println (" a : " + Arrays . to String (a) ); } public static void sort ( int [] a ) { int b [] = new int [ a . length ]; System . out . println (" b : " + Arrays . to String ( b ) + "\ n "); for ( int i = 0 ; i < a . length ; i ++) { int P = a . length ; for ( int j = 0 ; j < a . length ; j ++) { if ( a [ i ] >= a [ j ]) { P -= 1 ; } System . out . println (" a [" + i + "]:" + a [ i ] + " a [" + j + "]:" + a [ j ] + " P :" + P ); } b [ P ] = a [ i ]; System . out . println ("---------------- b [" + P + "] = " + a [ i ] ); } for ( int i = 0 ; i < a . length ; i ++) { a [ i ] = b [ i ]; } } } //-------------------- 実行 は 以下 です 。 a : [ 1 , 2 , 1 ] b : [ 0 , 0 , 0 ] a [ 0 ]: 1 a [ 0 ]: 1 P : 2 a [ 0 ]: 1 a [ 1 ]: 2 P : 2 a [ 0 ]: 1 a [ 2 ]: 1 P : 1 ---------------- b [ 1 ] = 1 a [ 1 ]: 2 a [ 0 ]: 1 P : 2 a [ 1 ]: 2 a [ 1 ]: 2 P : 1 a [ 1 ]: 2 a [ 2 ]: 1 P : 0 ---------------- b [ 0 ] = 2 a [ 2 ]: 1 a [ 0 ]: 1 P : 2 a [ 2 ]: 1 a [ 1 ]: 2 P : 2 a [ 2 ]: 1 a [ 2 ]: 1 P : 1 ---------------- b [ 1 ] = 1 a : [ 2 , 1 , 0 ] [ 1 , 2 , 1 ] を ソート さ せ た 結果 が [ 2 , 1 , 0 ] と なり ます 。 配列 は 0 で 初期 化 さ れる ので b の 各 要素 は 初期 状態 で すべて 0 が 格納 さ れ て い ます 。 上 の 出力 を 見 て 分かる 通り 、 b [ 2 ] に は なに も 代入 さ れ て い ない ので 初期 状態 の 0 まま で 、 それ が a [ 2 ] に 代入 さ れる ので この よう な 結果 と なっ て しまい ます 。 解決 法 です が b [ P ] = a [ i ]; の 部分 で b [ P ] に すでに 何 か 設定 さ れ て いる 場合 は b [ P + 1 ] = a [ i ]; の よう に 次 の 要素 に 代入 すれ ば 良い と 思い ます 。 ( 次 の 要素 も 設定 さ れ て い た 場合 は その 次 の 要素 に なり ます ) b の 各 要素 へ の 値 の 設定 、 非 設定 の 状態 を 表す boolean 型 の 配列 を 使っ た 解決 法 が 以下 の Test 2 です 。 //---------- Test 2 . java ---------- import java . util . Arrays ; public class Test 2 { public static void main ( String [] args ) { int [] a = { 1 , 2 , 1 }; System . out . println (" a : " + Arrays . to String (a) ); sort (a) ; System . out . println (" a : " + Arrays . to String (a) ); } public static void sort ( int [] a ) { int b [] = new int [ a . length ]; boolean [] isSet = new boolean [ a . length ]; System . out . println (" isSet : " + Arrays . to String ( isSet )); System . out . println (" b : " + Arrays . to String ( b ) + "\ n "); for ( int i = 0 ; i < a . length ; i ++) { int P = a . length ; for ( int j = 0 ; j < a . length ; j ++) { if ( a [ i ] >= a [ j ]) { P -= 1 ; } System . out . println (" a [" + i + "]:" + a [ i ] + " a [" + j + "]:" + a [ j ] + " P :" + P ); } while ( isSet [ P ]) { P ++; } b [ P ] = a [ i ]; isSet [ P ] = true ; System . out . println ("---------------- b [" + P + "] = " + a [ i ] + " isSet : " + Arrays . to String ( isSet )); } System . out . println (" isSet : " + Arrays . to String ( isSet )); for ( int i = 0 ; i < a . length ; i ++) { a [ i ] = b [ i ]; } } } //-------------------- 実行 結果 は 以下 が 出力 さ れ ます 。 a : [ 1 , 2 , 1 ] isSet : [ false , false , false ] b : [ 0 , 0 , 0 ] a [ 0 ]: 1 a [ 0 ]: 1 P : 2 a [ 0 ]: 1 a [ 1 ]: 2 P : 2 a [ 0 ]: 1 a [ 2 ]: 1 P : 1 ---------------- b [ 1 ] = 1 isSet : [ false , true , false ] a [ 1 ]: 2 a [ 0 ]: 1 P : 2 a [ 1 ]: 2 a [ 1 ]: 2 P : 1 a [ 1 ]: 2 a [ 2 ]: 1 P : 0 ---------------- b [ 0 ] = 2 isSet : [ true , true , false ] a [ 2 ]: 1 a [ 0 ]: 1 P : 2 a [ 2 ]: 1 a [ 1 ]: 2 P : 2 a [ 2 ]: 1 a [ 2 ]: 1 P : 1 ---------------- b [ 2 ] = 1 isSet : [ true , true , true ] isSet : [ true , true , true ] a : [ 2 , 1 , 1 ] b [ P ] に すでに 何 か 設定 さ れ て いる 場合 に 次 の 要素 の インデックス に する という 動作 は 以下 の 部分 です 。 while ( isSet [ P ]) { P ++; } 以上 で 大きい 順 に 並べ 替える よう に は なる の です が 、 もし urabnag 13 さん が 自分 で ソート アルゴリズム を 考え て み たかっ た の で あれ ば 、 それ は とても 有意義 な 事 だ と 思い ます が 、 そう で は なかっ た 場合 に は 、 Java に は java . util . Arrays に ソート を 実装 し た メソッド が 用意 さ れ て いる ので それ を 使っ た 方 が 良い か と 思い ます 。 import java . util . Arrays ; と インポート し て おけ ば int [] a = { 1 , 2 , 1 }; Arrays .s ort (a) ; で 昇順 ソート さ れ ます 。 昇順 ソート な ので 小さい 順 に なっ て しまい 、 取り出す 時 に 後ろ から 取り出す 必要 が あり ます が 、 これ を 使う の が 最も 高速 な 処理 に なる と 思い ます 。 どうしても 大きい 順番 に し たい 場合 に は " java 配列 reverse " で 検索 する と 順番 を 逆 に する コード が 見つかり ます 。 標準 の API で int 型 配列 の 降順 ソート する と なる と 、 一旦 Integer 型 配列 に し て それ を 降順 ソート し 、 結果 の Integer [] を 必要 に 応じ て int [] に 変換 し たり 元 の int [] に 詰め なおす 事 に なる と 思い ます が 、 Arrays :: sort で ソート し て それ を 逆順 に する 方 が 速い と 思い ます 。 
一 通り の プログラミング が 出来る なら 、 この 辺 が 参考 に なる か と 。 http:// mct k. blog .jp / archives / 38862877 . html この 記事 で は ブロック の 破壊 を 禁止 し て い ます が 、 破壊 さ れる 瞬間 に 、 アイテム を 放出 する よう に 出来れ ば ・ ・ ・ 
その 前 に 、 Google 先生 を 訪問 する 知識 を 得 ましょ う 。 
オブジェクト指向 分析 / 設計 で ない 設計書 、 で ない か ? オブジェクト指向 って プログラミング だけ で は ない し 、 UML は 無敵 でも ない 。 
> You may be using a library that ' s imcompatible with t his version of Processing . 参考 URL と 同じ バージョン の もの を 使っ て ます か 。 
それ は 本当に 開い て いる ん です ね 。 開く （ 解凍 ） では 無く 、 開く （ 起動 ） に なり ます 。 それ は java で 開い て ない の で は ない の でしょ う か ？ 解凍 さ れ て いる よう に 見え ます 。 です が 今更 1 . x 鯖 を 開く の です か ... 
constant 3141592119 さん ポインタ は 単純 です 。 C言語 が わかり やすい か な 。 配列 は 、 メモリ 上 に 、 順に 並ん で いる ので 、 ポインタ ( アドレス ) を 使う と 、 大量 の データ が 簡単 に アクセス できる 。 
勤め て い た 会社 が ブラック で 、 リタイア し た 者 です 。 大手 メーカー の 子会社 の 下請け 、 といった 感じ でし た 。 大手 は 平気 で 無理 な 仕事 を 発注 し 、 下請け は それ を 平気 で 受け ます 。 ヒラ 社員 は それ を 我慢 し て やり ます 。 そういった 仕事 に 当っ て しまう と 、 残業 は 日付 が 変わっ て も 続き 、 休日 は あり ませ ん 。 それ が プロジェクト 進行 中 、 長期間 続き ます 。 ブラック な 会社 な ので 残業 も つき ませ ん 。 私 は 、 体 の 疲労 に プラス 、 サービス残業 ＝ 自分 の 労働 が 認め られ て い ない という 精神 的 ストレス から うつ病 に なり 、 退職 し まし た 。 現在 も 療養 が 続い て い ます 。 こう いっ た 勤務 状況 でも 元気 に 働い て いる 人 も 多い です が 、 下請け の プログラマ 、 システムエンジニア は 私 の よう な 状況 に なる 可能性 が ある という こと です 。 
システム の プロパティ から 環境変数 編集 すれ ば 良い の で は ？ 
よく わからん 。 import java . util .*; import java . util . stream .*; public class Main { public static void main ( String [] args ) { // Coordinate 生成 List < Coordinate > cList = new ArrayList < Coordinate >(); for ( int i = 0 ; i < 10 ; ++ i ) { for ( int j = 0 ; j < 10 ; ++ j ) { cList . add ( new Coordinate ( i , j )); } } // CoordinatePerY 生成 List < CoordinatePerY > cyList = cList . stream () . collect ( Collectors . groupingBy ( c -> c . y )) . entrySet (). stream () . map ( e -> new CoordinatePerY ( e . getValue (). stream (). map ( c -> c . x ). collect ( Collectors . toList ()), e . getKey ())) . collect ( Collectors . toList ()); // 表示 cyList . stream (). forEach ( cy -> { System . out . println ( cy . y ); cy . x . stream (). forEach ( x -> System . out . println (" " + x )); }); } private static class Coordinate { public int x ; public int y ; public Coordinate ( int x , int y ) { this . x = x ; this . y = y ; } } private static class CoordinatePerY { public List < Integer > x ; public int y ; public CoordinatePerY ( List < Integer > x , int y ) { this . x = x ; this . y = y ; } } } 
アクティビティ は すでに Activity クラス を 継承 し て い ます ので 、 他 の クラス を 継承 する こと は でき ませ ん 。 代替 手段 として 、 アクティビティ に 、 質問者 さん が 継承 しよ う と し て いる クラス を 持た せる （ has - a ） 、 もしくは 、 自作 の interface を アクティビティ に 実装 さ せる 、 など の 方法 が 考え られ ます 。 
先頭 に コロン は いれ ない で ください 。 
どこ に お 悩み な の か 、 わかる よう で わから ない の です が 。 (^_^;) あなた の いう 表示 という の が 、 ターミナル コンソール に テキスト 文字 が 出れ ば いい 、 という 意味 なら 、 for ( int a = 0 ; a < aiueo .s ize ()&& a < 5 ; a ++){ ___ System . out . println ( aiueo . get (a) ); } で いい ん で は ？ P.S. > 新しい ほう から ... っていう の は ??? です 。 (^_^;) あなた の 書い てる for 文 の は 、 ・ ArrayList 内 の 、 要素 の 先頭 から 5 つ です 。 それ 以上 の 意味 は 無い 。 ・ ArrayList # add しか 使っ て ない ( 末尾 へ の 要素 追加 しか し て ない )。 ・ 「 新しい 」 って の は 、 「 最後 に add し た ほど 新しい 」 の 意味 なら 、 逆 っす ね 。 先頭 ( インデックス 0 ) が 最古 です から 。 
使い方 は 自由 です が 、 一般的 に は ０ は 正常 終了 で １ は 異常 終了 の 場合 が 多い 思い ます 。 
私 の windowsキー ボード （ デスクトップ 用 ） で は バックスペースキー の 左 に 有り ます が ... まあ 、 読み は 「 縦棒 」 で いい と 思い ます 。 縦棒 で 変換 する と 「|」 が 出 て き ます し 。 
大文字 で 始まる の は 、 Class / Interface 名 です 。 そう 決まっ て いる 訳 で は ありません が 、 Java の 命名規則 で そう なっ て い て 、 利用者 も それ に 合わせる の が 一般的 です 。 小文字 で 始まる の は 、 変数 または パッケージ 名 または メソッド 名 など です 。 予約 後 など も 大抵 小文字 で 始まり ます 。 int double など の 組み込み 型 も 小文字 です 。 単語 の 途中 に 大文字 が 挟まる の は 、 std in と 2 単語 以上 の 言葉 で でき て いる もの です 。 stdIn , stdOut の よう に なり ます 。 キャメルケース ( ラクダ という 意味 ) と いい ます 。 Java の 命名規則 で は この キャメルケース を 使い ます が 、 略称 とか は そう で ない 場合 が あり ます 。 単語 の 繋げ 方 に は 言語 や 機能 により 、 書き方 に バリエーション が あり ます 。 stdin 直接 つなげる タイプ 。 C言語 で 使う std _ in 小文字 の スネーク ケース 。 C++ で 使う STD _ IN 大文字 の スネーク ケース 。 C言語 の マクロ で 使う 。 定数 の 時 に 使う 。 StdIn 大文字 で 始まる キャメルケース または パスカル ケース 。 Java の クラス 名 、 Win32 API など で 使う import の 後ろ に スペース が 付く の は 、 import 文 が そういう 文法 だ から です 。 別 に 区切り 文字 は タブ など で も 問題 なかっ た と 思い ます 。 「 java . util 」 の よう に . が 繋がっ て いる 物 は 「 パッケージ 名 」 で 最後 の 部分 ( Scanner ) が クラス 名 です 。 これ は元 を たどれ ば C言語 の 構造体 の メンバー を 指す とき の 表記 から き て い ます 。 java で も this . member の よう に 書き ます 。 この 長い 表記 は 関数 内 で も 必要 が ある とき は 使い ます 。 商品 など で は 一般 に URL の ドメイン名 を 逆 に 繋げ た もの を 使い ます 。 co.jp . yahoo . project name. ClassName の よう に なり ます 。 この 表記 を 完全 修飾 名 と いい ます 。 たまたま 同じ 名前 の クラス を 、 他 の プロジェクト で 名づけ て も 衝突 し ない よう に する ため に 使い ます 。 import java . util .S canner ; という の は 、 本 文中 の Scanner は java . util .S canner です よ 、 という 意味 です 。 
基本的 に ブラウザ 上 で Java は 利用 でき なく なる 方向 です 。 唯一 の 例外 が Internet Explorer です 。 どうしても Java が 必要 な 場合 だけ Internet Explorer を 使い 、 普段 は 別 の ブラウザ を 使う の が 賢い やり方 だ と 思い ます 。 
これ だけ で は 分かり ませ ん 。 どの よう に し て 、 この 表示 を 作成 し た か 、 表示 桁 数 の 指定 を 割い た か 、 4 捨 5 入 など 丸め 操作 を 行っ て いる か 。 など の 情報 が 必要 です 。 
ただ Java の プログラム を 実行 する だけ なら JRE だけ で 十分 です 。 JDK は Java で プログラミング を する 人 用 。 Eclipse は その 開発 を 楽 に する ため の ソフト です 。 
他 の 言語 を やっ てる 人 です が 、 その よう な こと は ほぼ あり ませ ん 。 心配 の し 過ぎ で は ・ ・ ・ > Java で 作っ た 、 フォルダー 、 ファイル 等 削除 出来 ない こと は あり ませ ん か 。 プログラム が ファイル を 開い た まま の 場合 、 削除 でき なく なる こと は あり ます が 、 プログラミング を し て い なく て も 起きる もの で 、 起き た として も その プログラム を 終了 さ せれ ば いい だけ な ので 大丈夫 です 。 
軌跡 が 残る よう に する に は 手段 が 二つ あっ て 、 過去 の 描画 を 更新 せ ず に 残し て おく か 、 あるいは 軌跡 用 の オブジェクト を 作る か 。 図形 クラス に xy の 座標 と 移動 速度 を もたせ て 、 定時 に 座標 に 移動 速度 を 足す 。 その 時 前回 更新 分 描画 を 消す か 、 あるいは 前回 更新 位置 の 座標 を 持つ オブジェクト を 作り 移動 速度 を ゼロ に する 。 後者 の 場合 は 一 定数 の 軌跡 が 増え たら 古い の から 削除 する 。 
JavaFX で XML は 必須 です 。 というのも 、 Pane の レイアウト を FXML という XML で 記述 する から です 。 XML は 他 の プラットフォーム で も レイアウト を 作成 する 際 に 必須 です 。 また 、 単純 に データ構造 として も 汎用性 が 高い ので 、 Web や ネットワーク で データ を やり取り する 場合 に も よく 使わ れ ます 。 XML は 言語 と いう より 、 汎用性 の 高い データ構造 という 側面 が 強い ので 、 どんな 言語 で も 使用 さ れる か と 思い ます 。 頑張っ て 勉強 し て ください 。 
変数 の 宣言 （ 変 数 a に 100 を 代入 する 場合 ） 。 > 通常 の やり方 int a ; a = 100 ; > 省略 記法 int a = 100 ; 配列 の 宣言 （ 要素 数 5 の 配列 を 宣言 し て 文字 を 代入 する 場合 ） 。 > 通常 の やり方 String [] array ; array = new String []{" 1 ", null , " Hello ", " a ", " こんにちは "}; > 省略 記法 １ String [] array = new String []{" 1 ", null , " Hello ", " a ", " こんにちは "}; > 省略 記法 ２ String [] array = {" 1 ", null , " Hello ", " a ", " こんにちは "}; 宣言 と 定義 に 違い は ない と 思い ます 。 
問題 あり ませ ん 。 という か 、 実務 で は その 順番 です 。 実務 において は 一 人 で DB も フロント も バックエンド も やる という こと は 稀 で 、 それぞれ の 開発者 が 連携 し て １つ の プログラム を 作成 し ます 。 この とき 重要 な の は 他 開発者 と の 連携 部分 です 。 その 連携 を 担う の が Bean で あり DAO です から 、 まずは そこ を 定義 し て から 実際 の BLogic なり jsp なり を 記述 し た ほう が 他 の 開発者 の 進捗 に 影響 を 受け にくい です し 、 連携 部分 が 定義 さ れ て いる と 早め に 仕様 上や 設計 上 の 不具合 を 発見 でき ます 。 
① 原本 の 値 を 参考 に 属 攻 ％+ １ を AK % の 表記 として い まし た ので 以下 の 部分 を 訂正 し て ください 。 tm = streg . replace (/\#/, cw [ d ][ 2 ][ e ]+ 1 ); ↓ tm = streg . replace (/\#/, parseInt ( cw [ d ][ 2 ][ e ]- 1 )* 2 ); value = 2 の とき 属 攻 2 ％ / AK 2 ％ ･･･( 2 - 1 )* 2 value = 3 の とき 属 攻 3 ％ / AK 4 ％ ･･･( 3 - 1 )* 2 value = 4 の とき 属 攻 4 ％ / AK 6 ％ ･･･( 4-1 )* 2 value = 5 の とき 属 攻 5 ％ / AK 8 ％ と なり ます 。 ･･･( 5 - 1 )* 2 内部 の 値 として は [" AK #％＆ 属 攻 #％", 2 , 3 , 4 , 5 ]] の 二つ目 の ＃ 部分 を ２ ～ ５ に 置き換え た あと 1つ 目 の ＃ の 部分 を ２ ～ ５ を 基準 と した値 を 上記 の 数式 で 補正 した値 を セレクト ボックス の 値 に 表示 し ます ② 正しく は 0010000 で 上手く 動き ます でしょ う か ？ ？ 2 ～ ５ の 値 を DDD に対して のみ 加算 と する の で あれ ば それで 動き ます （´∀｀） 
パーミッション は 基本的 に は app --> manifest --> AndroidManifest . xml に 記述 し ます 。 ※ --> は フォルダ 構造 を 表す 。 
API 23 まで は JDK 7 で コンパイル でき まし た が 、 API 24 から は JDK 8 が 必要 に なり まし た 。 それ が 、 JDK 8 が 検出 さ れ ない ため の エラーメッセージ な ん です けど ね 。 JDK 7 と JDK 8 が 両方 インストール さ れ て い て 、 Android Studio の 設定 で は JDK 7 が 選択 さ れ て いる といった こと は あり ませ ん か ？ 今 まで API 23 を 使っ て い た 限り で は 影響 が なかっ た のに 、 API 24 を インストール し て それ による プロジェクト を 作成 し た ため に 表面 化 し た と か 。 Android Studio の トップ 画面 で 、 右 下 の Configure から Project Defaults → Project Structure を 選択 する と 、 Android SDK や JDK の 場所 を 設定 する 画面 が 出 て き ます 。 この 画面 で JDK location の 設定 は どう なっ て いる でしょ う か 。 
for ( String key : json . keys ()) { System . out . println ( json . get String ( key )); } 
質問 の 文章 が よく 分かり ませ ん が … ファイル を 相対パス で 指定 し て いる から で は ない か と 
eMbeddeed Visual C++ なら マリオン I で も 動作 し ます ね 。 Java を Windows CE で コンパイル ・ 動作 さ せる こと は でき ませ ん 。 Waba で どうにか する しか ない です 。 Waba について は こちら を どうぞ 。 http:// web . cc . yamaguchi - u. ac.jp /~ shingo / WabaWorld / 
簡単 に 言え ば オブジェクト の 種類 が 違っ て も 同じ よう に 振る舞う こと 
そういう もの だ から 。 
正直 、 躓く ところ が 一杯 あり すぎ て わかり ませ ん 。 そもそも サーブレット が 動か ない 可能性 も あり ます し 、 サーバー の 設定 が 間違っ て いる 場合 も あり ます 。 エラーナンバ で 絞り込む こと は でき ます よ 。 
1 . 690450477236629 × ( 10 の - 4 乗 ) 
利用 する フレームワーク に も より ます が 、 オブジェクト の 結合 で 表現 する もの や 、 mybatis の よう に 、 結果 セット を 外部 定義 する もの が あり ます 。 トランザクション 境界 も フレームワーク によって 、 アノテーション など で 決め られ ます 。 
言葉 の 意味 を いくら 深め て も 、 プログラム は 組め ませ ん 。 具 的 な ソース だけ を 見 て 意味 を 考え て ください 。 主 に 、 フレームワーク で 使用 し ます 。 逆 に 、 フレームワーク に 用が ない なら 使わ なく て も いい の で は ない でしょ う か 。 
１つ の main メソッド に 戻り 値 を 返さ ない メソッド と 戻り値 を 返す メソッド を 記述 する 一 例 です 。 public class Test 11 { public static void main ( String [] args ) { System . out . println ( keisan 1 ( 45 , 19 )); kei sa n2 ( 45 , 19 ); } static String keisan 1 ( int a , int b ){ return " a + b = " + ( a + b ); } static void kei sa n2 ( int a , int b ){ System . out . println (" a + b = " + ( a + b )); } } 
いったい なに ？ おまけ に HN ミス ？ http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1116085567 ... 
べき乗 という 演算 は 、 元 の 数 を x 回 掛け た もの 、 という こと です 。 例えば 掛け算 は 、 2 * 3 = 2 + 2 + 2 と 、 2 を 3回 足し た もの です ね 。 べき乗 は 、 2 ^ 3 = 2 * 2 * 2 と 、 2 を 3回 掛け た もの に なり ます 。 （^ この 記号 は Java で は 使え ませ ん が 、 一般的 に べき乗 を 表す もの です ） 話 は 変わり ます が 、 ビット は 0 か 1 を 表現 できる 桁 の こと です ね 。 1 ビット なら 0 か 1 です 。 2 ビット なら 00 か 01 か 10 か 11 です 。 3 ビット なら 000 、 001 、 010 、 011 、 100 、 101 、 110 、 111 、 と なり ます 。 0 と 1 のみ で 表さ れる この よう な 数 を 2 進数 と いい ます 。 お気づき かも しれ ませ ん が 、 1 ビット は 2 種類 、 2 ビット は 4 種類 、 3 ビット は 8 種類 の 数値 を 表現 でき ます 。 これ は 、 言い換えれ ば 1 ビット は 2 ^ 1 種類 、 2 ビット は 2 ^ 2 種類 、 3 ビット は 2 ^ 3 種類 と いえ ます 。 これ で べき乗 と ビット が 繋がり まし た ね 。 余談 です が 、 普段 使う 0 ～ 9 で 表さ れる 数 を 10 進数 と いい ます 。 1 桁 なら 10 （ 10 ^ 1 ） 種類 、 2 桁 なら 100 （ 10 ^ 2 ） 種類 、 3 桁 なら 1000 （ 10 ^ 3 ） 種類 と なっ て い ます 。 さて 、 int 型 は 32 ビット でし た ね 。 です から 、 2 ^ 32 種類 （ 約 42 億 種類 ） の 数値 を 扱え ます 。 です が 、 int 型 は 正の数 だけ で なく 負 の 数 も 扱い ます 。 この 場合 、 どう やっ て 数 を 表し て いる か と いう と 、 ・ 先頭 の 1 ビット は 符号 を 表す 。 （ 0 なら 正 、 1 なら 負 ） ・ 残り の 31 ビット で 数値 を 表す 。 という 仕組み に なっ て い ます 。 31 ビット です から 、 2 ^ 31 です 。 2 ^ 32 と 2 ^ 31 で は 、 2 を 掛け て いる 回数 が 1回 分 異なっ て いる ので 、 2 ^ 31 は 2 ^ 32 の 半分 です 。 これ で 、 + 約 21 億 ～- 約 21 億 という 、 合わせ て 約 42 億 種類 の 数 が 表現 さ れ ます 。 なお 、 ご 質問 の （） の 中 の "←" です が 、 これ は ただ の 矢印 です ね 。 式 で は ない です 。 ここ で 、 重要 な こと な ん です が 、 先 ほど 先頭 の ビット は 符号 だ と いい まし た 。 では 、 残り の 31 ビット は 正 の とき と 負 の とき で 同じ に なっ て いる の か と いう と 、 実は 違い ます 。 負 の 数 の 表し 方 は 、 「 2の補数 」 という 特殊 な 表現 を 利用 し て い ます 。 これ は 、 興味 が あっ たら 是非 調べ て み て ください 。 最後 に 、 プログラミング言語 に 数学 は 必要 か という ご 質問 です が 、 答え は 「 時々 必要 」 です 。 しかし 、 そんなに 身構え なく て も いい です 。 難しい 微分積分 なんか が 必要 に なる こと は ない です し （ そういう 分野 も あり ます が ） 、 普通に 高校 まで の 勉強 で 身 に つく レベル で 大抵 何とか なり ます 。 質問者 さん は 中学生 か 高校生 か わかり ませ ん が 、 焦る こと は ない です 。 でも 、 ゲーム を 作り たい と 思っ たら 、 数学 の ベクトル と 、 物理 の 力学 は 頑張っ て おき ましょ う 。 以上 です 。 
でき ない 気 が し ます 。 Integer か Double か を 確定 さ せ ない と 、 型 として 成立 し ませ ん から 。 
いったい なに ？ おまけ に HN ミス ？ http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1316085572 ... 
SpyHunter で 検索 し て みる と 、 極めて うさんくさい ソフト の よう です 。 ほとんど 危険 性 も ない もの を さも 危険 で ある よう に 見せ て 恐怖 感 を 煽っ て 買わ せる 商法 の よう に 見え ます 。 http:// blogs . yahoo . co.jp / fireflyframer / 33563605 . html に 沿っ て SpyHunter は 消し て しまう 方 が いい の で は ない か と 思い ます 。 「 ウイルス に 感染 し て いる の で は 」 と 心配 で あれ ば 、 「 まとも な 」 ウイルス対策 ソフト を 使う べき だ と 思い ます 。 例えば 、 家電量販店 で 売っ て いる よう な もの と か 。 Windows 8 や 8 . 1 、 Windows 10 で あれ ば Windows Defender という ウイルス対策 ソフト が 標準 添付 さ れ て い ます し 、 Windows Vista や Windows 7 なら ば Microsoft Security Essentials という 無料 の ウイルス対策 ソフト が 使える かも しれ ませ ん ( Windows の エディション による )。 この 辺 は 、 Windows の 製造元 で ある Microsoft が 作っ て いる もの な ので 、 少なくとも 怪しい こと は し て い ない と 信頼 できる と 思い ます ので 、 お金 を 払い たく なけれ ば この辺 を 使っ て みる の も いい でしょ う 。 詳しく は 使っ て いる Windows の 種類 に 応じ て 、 Windows Defender や Microsoft Security Essentials で 調べ て み て ください 。 
一応 それでも 動く と 思い ます 。 ただ 、 クリック し た 位置 が 図形 の 範囲 内 で ある か どう か を チェック し て やる 必要 が あり そう です ね 。 
ソースコード を 全て 載せ ましょ う 
eclipse って 言語 が 有る ん です か 、 知ら なかっ た 。 オブジェクト指向言語 で あれ ば 、 カード クラス を 作っ て 手札 内 を 検索 すれ ば 良い ん じゃ ない です か ね 。 同じ スート 、 同じ 数字 が 3 枚 なら スリー カード 。 数字 を 配列 にとって ソート 、 切れ目 なく 5 枚 なら ストレート 、 5 枚 全部 同じ スート なら フラッシュ 。 って 、 手 役 毎 に ロジック 作る しか ない でしょ う ね 。 
パッケージ という の は 、 ルート から 見 た フォルダ パス と 同じ に なり ます 。 この 「 Persona lInfoCheckServlet . java 」 という ファイル は どこ に 配置 し まし た か ？ パッケージ エクスプローラー の 「 （ デフォルト ・ パッケージ ） 」 という ところ に 配置 し て い ませ ん か ？ もし そう なら 、 以下 の 方法 を 実施 し て ください 。 ・ 現在 の アン マッチ し て いる パッケージ を 合わせる ため 、 java ファイル の 先頭 の package ～ という 行 を 削除 し て 保存 。 ・ src を 右クリック し て 、 「 新規 」 → 「 パッケージ 」 で 「 chap 03 」 という パッケージ を 作り 、 そこ に 記述 し た java ファイル を ドラッグ ＆ ドロップ で 移動 さ せる 
html や jsp に forward すれ ば よい です 。 http:// www . javadrive .jp / servlet / dispatch / index 2 . html 
ざっと 検索 し て み まし た が 、 当てずっぽう な ので 見当 違い かも しれ ませ ん 。 Crosswalk の make _ ap k. py で apk に パッケージング する 方法 を 紹介 し て いる サイト が 見つかっ た の です が 、 その 方法 の 場合 は manifest . json が あやしい と 思い ます 。 manifest . json の name の 値 に 全角 文字 ( 日本語 ) は 使用 不可 と あり まし た 。 それ なら ば icons の 設定 部分 も 全角 は 使え ない はず な ので 、 そこで 全角 文字 を 使用 し て いる 場合 は アイコン の ファイル 名 を 半角 英 数 に 変更 し て み て ください 。 また 設定ファイル として XML など を 修正 し て いる 場合 に は そこ に 全角 文字 を 使っ て ない か 、 全角 空白 が 紛れ込ん で い ない か 確認 し て み て ください 。 
「 構造 化 手法 と オブジェクト指向 」 は 、 プログラム 作成 上 の 視点 が 違う ので 共通点 は 無い と 云う の が 一般 的 な 考え方 です 。 です から プログラム 作成 の ため の システム 分析 という よう に 、 段階 に 区分 し た として も 中身 は 異なり ます 。 あなた の 言葉 を 借りる と 、 プログラム を 部品 化 する の か 、 プログラム 対象 を グループ 分け する の か と 云う 点 から 違っ て き ます 。 言葉 の 上 で 、 抽象 的 に 同じ よう に 区分け し て も 無意味 で は 有り ませ ん か ？ 
語れる ほど 、 習得 も し て い ない ので 、 こちら を 参照 。 http:// qiita . com / Co _ Pilot / items / a 5 fc 93 d 72 fe a1 e 0 deb 60 
もしかして 明日 まで に プログラム 完成 さ せ ない と いけ ない みたい な かなり 厳しい 境遇 に おら れる 方 です か ね 
Panel クラス に 、 MouseListener インターフェイス を 実装 し て ください 。 implements MouseListener です 。 そして 、 5つ の メソッド を 実装 し ます 。 public void mouseClicked ( MouseEvent e ){ // マウス が クリック さ れ た とき } public void mousePressed ( MouseEvent e ){ // マウス ボタン が 押さ れ た とき } public void mouseReleased ( MouseEvent e ){ // マウス ボタン が 離さ れ た とき } public void mouseEntered ( MouseEvent e ){ // マウスポインタ が 重なっ た とき } public void mouseExited ( MouseEvent e ){ // マウスポインタ が 離れ た とき } そして 、 Panel の コンストラクタ 内 で 、 addMouseListener ( this ); と し て ください 。 多分 これ で できる か と 思い ます 。 
マルウェア ソフト （ ブラウザ ハイジャッカー ） です ね 。 どこ まで 感染 し て しまっ た か は 分かり ませ ん が 、 一番 確実 な の は クリーンインストール （ 中身 を 一旦 全て 削除 し て 、 １ から windows を インストール する ） です ね 。 残念 ながら この 手 の マルウェア に ウィルスバスター 等 の セキュリティー ソフト は 意味 を 成し ませ ん 。 また 感染 元 の フリーソフト を 削除 し て も 、 マルウェア は インストール の 際 に PC の 様々 な 場所 に マルウェア を 仕込み ます ので ... （ レジストリ 、 プログラム フォルダ 内 、 タスク など ） とりあえず 以下 の ページ に 記載 さ れ て いる 削除 方法 を 試し て み て ください 。 http:// www . malwarerid .jp / malware / globasearch - com /# h2 _ globasearch - co ... （ 上記 で ダメ な 場合 、 初期化 も 視野 に 入れ ましょ う ） 
main () メソッド 内 で 、 new C () を し て いる こと から 、 c の インスタンス は C型 です ね 。 ここ で 、 c . g () が 呼ば れ まし た 。 C型 に g () の 定義 は ありません が 、 C の 親 で ある B に は g () の 定義 が あり ます から 、 g () は B に 書か れ た コード として 実行 さ れ ます 。 その コード に は 、 this . f () を 実行 し て 返せ 、 と あり まし た 。 「 this 」 と は 、 自分自身 の インスタンス を 示す もの です 。 自分自身 の インスタンス は C型 でし た ね 。 です から 、 C に 書か れ て いる f () を 実行 し 、 3 が 返る 、 という 仕組み です 。 なお 、 B の g () 内 で this を 省略 し て f () と 書い て も 、 this . f () と 同じ 意味 です ので 、 結果 も 同じ に なり ます 。 this の この 性質 により 、 コード 上 の 型 で は なく 、 インスタンス の 実際 の 型通り に 、 オーバーライド さ れ た メソッド が 呼ば れる こと に なり ます 。 これ により 、 オブジェクト指向 における 多態性 が 生まれ ます 。 次に 、 c . h () が 呼ば れ まし た 。 h () は C 内 に 定義 が ありません から 、 親 の B の h () を 実行 し ます 。 B の h () に は 、 super の f () を 実行 し て 返せ 、 と あり まし た 。 ここ で 注意 し なけれ ば なら ない の は 、 「 super 」 は 「 this の 親 」 という 意味 で は ない 、 という こと です 。 this の C型 の 親 は B型 です が 、 それ は ここ で いう super で は あり ませ ん 。 super は 、 「 それ を 使用 し た クラス の 親 」 です 。 今 、 super は Bクラス の メソッド 内 で 使用 さ れ まし た 。 です から 、 super は B の 親 の Aクラス です 。 という わけ で 、 A の f () が 呼ば れ 、 1 が 返り ます 。 super の この 性質 により 、 オーバーライド さ れ た メソッド にて 、 継承 チェイン を 一つ ずつ 遡っ て 処理 を 行なう よう な こと が 可能 と なり ます 。 とりわけ 、 コンストラクタ が 最 上位 の 親 から 順に 初期化 処理 を 行なう とき なんか に 役立っ て い ます 。 
コンパイル し て み まし た か ？ エラー が 出る か と 思い ます 。 error : incompatible types : < null > cannot be converted to int int は 参照 型 で は ない ので 、 null を 代入 する こと は でき ませ ん 。 int [] x1 = new int [ 5 ]; int [] x 2 ={ 0 , 0 , 0 , 0 , 0 }; これ なら 内容 は 同じく なり ます 。 int 型 の 既定 値 は 0 です から 、 new し た とき に 0 で 初期 化 さ れ ます 。 
InputStream と は 、 ネット 上 の ファイル で ある とか 、 ローカル の ファイル とか 、 メモリ 上 の 配列 など 、 一連 の データ 列 を 取得 する ため も ので 、 まあ 、 データ の 通り道 だ と 思っ て ください 。 URL は 、 インターネット ブラウザ で 閲覧 できる アドレス の 他 、 ローカル の ファイル の 場所 なんか も 記述 でき ます 。 URLConnection を 使用 する と （ ご 提示 の 内容 の connect ion です ） 単純 に 自分 の PC の テキストファイル を 開く こと も 、 インターネット に 接続 し て Webページ を 取得 する こと も 、 裏 で 勝手 に やっ て くれ て 、 共通 の インターフェイス を 用い て データ に アクセス でき ます 。 
正しく インストール さ れ て ファイル が 存在 する か 確認 し て 下さい 。 例えば jd k-8 u 92 - windows - x64 . exe で インストール し た 場合 は ” C :\ Program Files \ Java \ jdk 1 . 8 . 0 _ 92 \ bin \ java c.e xe " です 、 ここ に 無けれ ば インストール に 問題 が 有り ます 、 有る 場合 は 環境変数 の 設定 に 誤り が 有り ます 。 尚 、 環境変数 設定 後 に コマンドプロンプト を 再 立ち 上げ し ない と 、 環境変数 は 設定 さ れ て い ない ので 注意 が 必要 です 。 
答え の コード を まんま 書い て も 勉強 に なら ない ので 、 ヒント として 大枠 と 中 に 書く 処理 の 内容 だけ 記載 し て おき ます 。 講義 の 課題 で あれ ば 、 講義 で 使用 し て いる 参考書 を 読ん で み て ください 。 質問 の 内容 に 類似 し た コード が 最初 の 方 に 書か れ て いる と 思い ます 。 「 クラス 名 を 宣言 」{ 「 メイン メソッド を 宣言 」{ 「 数値 型 の 変数 x を 宣言 し 、 100 を 入れる 」 「 数値 型 の 変数 y を 宣言 し 、 200 を 入れる 」 「 数値 型 の 変数 z を 宣言 し 、 300 を 入れる 」 「 数値 型 の 変 数 m を 宣言 し 、 7 を 入れる 」 「 x に x と 1 の 合計 を 入れる 」 「 y に ｙ÷m の 結果 を 入れる 」 「 z に z÷m の 余り を 入れる 」 「 x を 表示 」 「 y を 表示 」 「 z を 表示 」 } } 
似 た よう な アプリ を 作っ て いる ので その サンプル を 貼り ます ね 。 。 Yahoo の RSS を 取得 し て ListView に 追加 する という 簡単 な 機能 だけ な ので 理解 できる と 思い ます 。 できる なら 自分 で 一度 写経 し て み て ください 。 https :// github . com / Ooshita / CommunityTool 
Windows の アカウント 名 に 日本語 を 使わ ない よう に 。 半角 英字 だけ に し ましょ う 。 トラブル の 元 です 。 
SDカード へ の Path 取得 は 、 http:// d . hatena . ne.jp / gsh - kz / 20130826 / 1377525919 書き込み 方法 は 、 http:// tech booster .jp n . org / andriod / application / 1126 / ただし 、 ver 4 と ver 5 では 制限 が 異なる ので 、 注意 。 
m . hp -= 10 ; で 「 シンボル が 見つから ない 」 と 出る なら 、 「 m に hp が ない 」 という こと 。 m は Monster 型 の インスタンス だ から 、 Monster の 実装 を 見る 。 Monster の 実装 は interface Monster { public abstract void attack (); } と なっ て いる 。 ここ に ある の は attack () メソッド だけ で hp は ない 。 だから 、 コンパイル エラー に なる 。 
１ 、 使用 する 開発 環境 ( JDK ) の バージョン 使用 する バージョン が 違う と コンパイル に 失敗 する ( jdk 8 から 追加 さ れ た ラムダ式 とか を jd k7 で は コンパイル でき ない ) ２ 、 使用 を 想定 する java の 実行 環境 ( JRE ) の バージョン jdk 8 で コンパイル → java 7 で 実行 でき ない jd k7 で コンパイル → ja v a8 で 実行 できる ( バージョン が 小さい 方 が 多く の 実行 環境 に 対応 できる けど 、 セキュリティ や 記述法 など は バージョン が 大きい 方 が 優れ て いる など 一長一短 ) ３ 、 命名 ルール java ファイル 名 、 クラス 名 、 メソッド 名 、 変数 名 、 入出力 ファイル 名 、 パッケージ 名 など の 簡単 な 命名 ルール を 決める 。 あらかじめ 設計図 が あれ ば いら ない かも 。 ４ 、 文字コード と 改行 コード コンパイル する ため に 文字コード を 統一 する 必要 が ある 。 Windows 環境 なら 文字コード は SJIS 、 改行 コード は CR LF が 一般的 ５ 、 コメント コメントアウト で クラス や メソッド の 宣言 ごと に 説明 書き を 入れる か 、 どの 程度 いれる か など 。 予め 設計図 が ある なら いら ない かも 。 ６ 、 その他 ・ アノテーション の 記述 アノテーション が 使える なら ぜひ 。 無理 に 使う と エラー の 原因 に なる かも しれ ませ ん 。 ・ java コマンド の オプション コマンド に - encode や - ae 等 付ける と 案外 エラー が 起き たり 起き なかっ たり 。 できるだけ オプション を 入力 し ない と 決め た 方 が いい でしょ う 。 ぱっと 思いつい た ので これ くらい です 。 特に １ ， ２ ， ４ は 失敗 し て も 修正 は 可能 です が 面倒 な こと に なり かね ませ ん 。 ３ ， ５ を し ない と コード が 読み づらく なる かも しれ ませ ん 。 
何 ％ か 具体 的 に 調べ られ ませ ん でし た が 、 この サイト に いろんな ランキング が 載っ て い ます 。 http:// paiza . hatena blog . com / entry / 2014 / 10 / 07 /% E3 % 80 % 90 Java % E3 % 81 % 8 C ... 世界 の 情報 で は ない よう です が 。 Java を 使いこなす 人 は 、 おそらく 上級 者 でしょ う 。 どんな 言語 で も 、 使いこなす ため に は 言語 以外 に も 色々 な 知識 が 必要 です から ね 。 
java という か 、 表示 自体 は コマンドプロンプト 側 が し て い ます 。 そういった java を 呼び出し て 出力 を 受け取っ て ルート を 描画 する ツール を 作っ て も いい です が 、 フォント の 表示 形式 とか 色々 弄る 必要 が あり そう な ので 現実的 で は ない です 。 ルート が 適応 さ れ て いる 範囲 を 指定 する なら java の 標準 機能 に 合わせる の は どうでしょう 。 平方根 を 求める もの に Math # sqrt () という の が あり ます 。 3s qrt ( 13 ) って なり ます か ね 。 単に 3 √( 13 ) と 指定 し た 方 が いい です か ね 。 見 やすい 方 を 使い ましょ う 。 
M -> V -> C という 順 で いいんじゃない でしょ う か 。 大学 の 授業 楽し そう だ なー 。 
MVC モデル は 、 超 大型 案件 以外 で は 全く 利用 でき ませ ん 。 MV 間 、 VC 間 、 MC 間 で よっぽど 強固 に 仕様 を 決め て おく か 、 または 打ち合わせ を 密 に し ない かぎり 、 意思 疎通 漏れ が 不具合 の 温床 と なり 、 ３ 日 で 尻 に 火 が 付き ます 。 一般 に は 、 1 人 の 担当者 が MVC 全て を 面倒 み て 、 担当 分け は 機能 単位 ・ 画面 単位 で 行う の が 一般的 です 。 これ は 、 「 M 」 「 V 」 「 C 」 単位 で 担当 を 分ける ため に は 、 プロジェクト の 関係者 全員 が コンピューター の プロフェッショナル じゃ ない と いけ ない から で 、 「 ビュー 部分 を 、 デザイン の プロ （ ＩＴ の ド 素人 ） に 依頼 しよ う 」 なんて こと が でき なく なる ため です 。 
コード の 書き方 は 千差万別 だっ たり し ます ので 、 正解 か どう か 判定 する の が 難しい ん です 。 その ため 、 そういう 問題集 は 見かけ ない です ね 。 酷い コード で も 良けれ ば 、 CodeZine の 脱 初心者 あたり か な と 。 https :// codezine .jp / article / corner / 58 
画像 を テキスト で 記し て ください 。 
質問 に 記入 さ れ た プログラム は 、 間違い が 沢山 あり ます 。 質問 を やり直し て ください 。 
compileSdkVersion は 23 以上 な の でしょ う か （ プロジェクト の Gradle .s cripts を 展開 し て 、 「 build . gradle ( module : app )」 という ファイル を 開け ば 確認 でき ます ） 。 API 23 から 、 プログラム で 外部 デバイス に 読み書き する ため の User Per mission の 仕組み が 変わっ て い ます 。 22 以前 で は 、 質問 に 記さ れ た よう な < uses - per mission > タグ を 用いる の です が 、 23 から は 方法 が 変わっ て い ます 。 それから 、 openFileInput の よう な Android 固有 の ファイル I/O API を 用い て い ます が 、 これ で は 特別 な 領域 （/ data / data /< パッケージ 名 >/ files ） 以外 の 読み書き は でき ませ ん 。 質問 の コード だ と 、 両方 の 手法 が ごちゃまぜ に なっ て いる ので 、 それ も 不都合 要因 に なっ て いる の でしょ う 。 ちょっと ずるい 方法 です が 、 先 の build . gradle の compileSdkVersion を 22 に し て しまう （ 合わせ て com.a ndroid .s upport : appcompat - v 7 も 22 . 2 . 1 に 変更 する 必要 が ある ） という の も 一つ の 方法 です 。 これ なら ば API 22 以前 の 方法 が 使える ので 、 Android Manifest . xml に < uses - per mission > タグ で 指定 する 方法 が 通用 する はず です 。 そして 、 一般 的 な Java の ファイル I/O を 用いれ ば 、 内部 ストレージ 領域 へ の 読み書き が できる はず です 。 なお 、 compileSdkVersion に 22 を 指定 する ため に は 、 SDK マネージャー で API 22 の SDK Platform を インストール し て おく 必要 が あり ます 。 API 23 の 方式 に 合わせる に は 、 それなり に 改め なけれ ば なら ない こと も あり ます 。 そこ で 引っかかる より も 、 まずは 旧来 の 方式 で 作る ところ まで 作っ て うまく いく こと を 確認 し て から でも いいんじゃない か な と 思い ます 。 ちょっと 反則 的 な 方法 で ある こと は 抑え て おい て ください ね 。 いずれ 改めよ う という こと は 忘れ ず に 。 
> sakimotokazuma さん > 追加 対象 の プログラム と 機能 等 を 考え て 纏め て ソース で 回答 し て ください 。 まずは 、 目的 、 予算 を 補足 し て ください 。 
> kasimatetuya さん > ソース を 教え て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> kasimatetuya さん > ソース を 教え て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
追加 は 自分 で どうぞ 。 public class Ren 01 _ Toi 04 { public static void main ( String [] args ) { int sum ; // 合計 sum = 80 + 65 + 98 ; int avg = sum / 3 ; System . out . println (" 3 教科 の 平均 は 、 " + avg +" 点 です 。 "); } } 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
public static void main ( String [] args ) throws IOException { System . out . println ( new String Builder (). append (" ３ 教科 の 平均 点 は 、 "). append (( int ) IntStream . of ( 80 , 65 , 98 ). average (). getAsDouble ()). append (" 点 です 。 ")); } 
public static void main ( String [] args ) throws IOException { System . out . format (" 支払 額 は 、 % d 円 です 。 ",( int ) Double Stream . of ( 200 , 6 ). reduce (( d1 , d2 )-> d1 * d2 * 1 . 08 ). getAsDouble ()); } 
> なに も 反応 が 起き ませ ん 問題 が ２つ あり ます ＞ s ==" あいうえお " java で は 文字 を 比較 する とき は s . equals (" あいうえお ") の よう に し ます http:// qiita . com / mitunn 827 / items / 01 bd 0 f4 c21 69 d 928 d0 f3 ここ を 修正 すれ ば 動作 する こと も あり ます onButton ( View v ) どう 読ん で いる か わかり ませ ん が EditText に 設定 し て いる と 呼ば れ ない かも しれ ませ ん onButton ( View v ) を 別 の ボタン を 作っ て 明示 的 に 呼ば れる よう に し た ほう が いい でしょ う https :// akira - watson . com / android / edittext . html 
今日 の コード 大喜利 は これ か 。 // for Java 7 String str =" 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 "; for ( int i = 0 ; i <= str . length ()/ 2 ; i ++){ System . out . println ( str ); str = str .s ubstring ( 18 )+","+ str .s ubstring ( 0 , 17 ); } str =" 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 "; for ( int i = 0 ; i <= str . length ()/ 2 ; i ++){ System . out . println ( new String Builder ( str ). reverse (). to String ()); str = str .s ubstring ( 18 )+","+ str .s ubstring ( 0 , 17 ); } // for Java 8 Stream . iterate (" 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ", s -> s .s ubstring ( 18 )+","+ s .s ubstring ( 0 , 17 )). limit ( 10 ). forEach ( System . out :: println ); Stream . iterate (" 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ", s -> s .s ubstring ( 18 )+","+ s .s ubstring ( 0 , 17 )). limit ( 10 ). map ( s -> new String Builder ( s ). reverse (). to String ()). forEach ( System . out :: println ); 
visual j # の こと です か ？ 利用者 が 少なく て 、 Visual Studio 2008 から 削除 さ れ まし た 。 https :// msdn . microsoft . com / ja - jp / library / 7 xsxf 8 e2 ( v = vs . 90 ). aspx 
> sakimotokazuma さん > 追加 対象 の プログラム と 機能 等 を 考え て 纏め て ソース で 回答 し て ください 。 まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sakimotokazuma さん > 追加 対象 の プログラム と 機能 等 を 考え て 纏め て ソース で 回答 し て ください 。 まずは 、 目的 、 予算 を 補足 し て ください 。 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
パッケージ 略 import java . util .S canner ; public class Ren 02 _ Toi 05 { public static void main ( String [] args ){ Scanner sc = new Scanner ( System . in ); System . out . print (" 秒 数 ："); int time = sc . nextInt (); int second =( time % 3600 )% 60 ; int minute =(( time - second )/ 60 )% 60 ; int hour =( time - second )/ 3600 ); System . out . println ( time +" 秒 は 、 "+ hour +" 時間 "+ minute +" 分 "+ second +" 秒 です 。 "); } } 自 下げ し て ない です が 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください 。 近所 の システム 屋 に でも 頼む と バリエーション だ し し て くれる と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください 。 まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください 。 近所 の システム 屋 に でも 頼む と 考え て 貰える と 思い ます 。 
ディープラーニング で は なく 機械学習 全般 に関する 入門 者 向け の 内容 です が 、 Coursera の Machine Learning の 講座 を お勧め し ます 。 MOOC という の でしょ う か 、 ビデオ を 使っ た オンライン 講座 で 、 コース を 修了 する 頃 に は 機械学習 で やっ て いる 基本 的 な 部分 が 大体 つかめる よう に なる という か 、 分かっ た よう な 気 に なれ ます 。 ディープラーニング の 基礎 と なる ニューラルネットワーク も 含ま れ て いる ので 、 こちら で 学習 し て から ディープラーニング に 向かっ た 方 が 理解 し やすい かも しれ ませ ん 。 以下 の サイト に ビデオ と 字幕 を ダウンロード する 方法 が 紹介 さ れ て い ます 。 Coursera の 講座 Machine Learning に 日本語字幕 を つけ て 、 Android の MX Player で 視聴 する 方法 http:// qiita . com / ynott / items / c 089 a1 c1 18 ed 8386 d0 c 0 私 の 場合 は ダウンロード し た ビデオ を PC ( VLC ) で 再生 し て 予習 し 、 ノート を 取り まし た 。 オンライン の 方 は 復習 と クイズ や テスト を 受ける 為 に 利用 し まし た 。 テスト は 自分 が 理解 でき て い ない 部分 など 明らか に なり 、 有用 だ と 感じ まし た 。 DL し た ビデオ だけ で 済まさ ず に 、 オンライン で も 受講 する 方 が 良い か と 思い ます 。 ( テスト は 英語 で の 出題 です ) 機械学習 を 理解 する に は どうしても 線形代数 ( 行列 ・ ベクトル ) や 微分 など 数学 の 知識 が 必要 に なる よう で 、 数式 の 説明 も し て くれ て い ます が 、 私 の 場合 は 理解 でき ない 部分 は ネット で 検索 し て 学習 する という 方法 で なんとか 最後 まで つい て いく 事 が 出来 まし た 。 画像 認識 や 何らかの AI 開発 を 行い たい と の 事 です が 、 現在 で は 機械学習 の ライブラリ も けっこう ある よう です 。 機械学習 の 基礎 的 な 部分 を 理解 し た 後 に は 、 それら の ライブラリ を Java や Python など から 利用 する 方法 を 習得 する 事 が 、 やり たい 事 を 実現 する 近道 に なる の で は ない でしょ う か 。 
> 機能 等 を 追加 し て ください 追加 対象 の プログラム と 機能 を 書き なさい 。 
> 機能 等 を 追加 し て ください 追加 対象 の プログラム と 機能 を 書き なさい 。 
public static void main ( String [] args ) throws IOException { Stream . of ( IntStream . of ( 15 , 20 ). mapToObj ( String :: valueOf ). collect ( Collectors . joining ("、 高さ ："," 底辺 ："," の 三角形 の 面積 は 、 ")), String . valueOf ( IntStream . of ( 15 , 20 ). reduce (( i 1 , i 2 )-> i 1 * i 2 / 2 ). getAsInt ())," です 。 "). forEach ( System . out :: print ); } 
> sonodasennmu さん > 機能 等 追加 の ソース を 加え て ください 。 まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください 。 まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> 機能 等 を 追加 し て ください 追加 対象 の プログラム と 機能 を 書き なさい 。 
> 機能 等 を 追加 し て ください 追加 対象 の プログラム と 機能 を 書き なさい 。 
> 機能 等 を 追加 し て ください 追加 対象 の プログラム と 機能 を 書き なさい 。 
１つ 圧縮 できる ロジック が 書け た なら 、 それ を public void zip ( File inFile , File zipFileName ){ } の よう な メソッド に 切り出し て しまい ましょ う 。 そう すれ ば for ( File f : new File (" フォルダ 名 "). listFiles ()){ zip ( f , new File ( f . getPath ()+". zip ")); } の よう に し て 、 順々 に 圧縮 する こと が でき ます 。 
> kasimatetuya さん > ソース を 教え て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
public static void main ( String [] args ) throws IOException { final int time = 6584 ; final String [] outputString =" 秒 は 、 , 時間 , 分 , 秒 です 。 ". split (","); List < Integer > timeList = IntStream . iterate ( time , i -> i / 60 ). limit ( 3 ). map ( i -> i % 60 ). boxed (). collect ( Collectors . toList ()); timeList . add ( time ); Collections . reverse ( timeList ); IntStream . range ( 0 , outputString . length ). mapToObj ( i -> timeList . get ( i )+ outputString [ i ]). forEach ( System . out :: print ); } 
クラス図 見れ ば > 継承 関係 は 俯瞰 でき ます 。 が 、 > 重複 機能 は 、 UML ダイアグラム 見る だけ で 一目瞭然 って こと は 、 ない と 思い ます 。 P.S. 類似 の 質問 、 なさっ て ます よ ね ？ 既知 だっ たら 、 もうしわけ ない です が 、 UML は あくまで ・ 表記法 に すぎ ない です 。 ぶっちゃけ て 言え ば 、 ・ 図 ( ダイアグラム ) の 書き方 の 決め 事 に すぎ ない です 。 UML 使う だけ で 、 すばらしい 設計 が できあがる 、 、 、 という 直接 因果関係 は 、 ない です 。 結局 、 書く 人 ・ 読む 人 の スキル 依存 です 。 
> kasimatetuya さん > 問 ４ ． ３ 科目 （ 情報 概論 、 Java 、 アルゴリズム ） の 合計 点 を 求め 、 評価 を 出力 し なさい 。 まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sonodasennmu さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください 。 まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
public class Ren 01 _ Toi 03 { public static void main ( String [] args ) { double p ; // 支払 額 p = 200 * 6 * 1 . 08 ; System . out . println (" 支払 額 は 、 " + ( int ) p +" 円 です 。 "); } } 追加 は 、 自分 で どうぞ 。 
public class Ren 01 _ Toi 01 { public static void main ( String [] args ) { int s ; // 面積 s = 19 * 28 ; System . out . println (" 縦 ： 19 、 横 ： 28 の 長方形 の 面積 は 、 " + s +" です 。 "); } } 追加 は 、 自分 で やり ましょ う 。 
> sonodasennmu さん > ソース の 良い 所 と 悪い 所 の 評価 を し て ください まずは 、 目的 、 予算 を 補足 する べき だ と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください 。 近所 の システム 屋 に でも 頼む と 考え て 貰える と 思い ます 。 
> sumidarema さん > より 高度 な プログラム に 仕上げ たい ので 幅広い 視点 で 教え て ください 。 システム 屋 に でも 頼む と 対応 し て 貰える と 思い ます 。 
この 問題 流行っ てる の ？ なんか 怖い わ 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 16049176 ... http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1316048667 ... http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1416048995 ... 
質問 を 細分 化 し て ください 。 現状 で は 「 プログラム を 作っ て ください 」 と 差異 あり ませ ん 。 
小数点 以下 を 切り捨てる 方法 は いくつ か あり ます 。 代表 的 な もの として は 、 parseInt ( su m1 ) Math . floor ( su m1 ) ※ 正の数 に 限る su m1 | 0 この あたり でしょ う か 。 それぞれ 試し て み て ください 。 sample : truncating decimal number - JSFiddle https :// jsfiddle .net / sii _ side / mL 4u h 050 / －－－－－－－－－－－－ （ 余談 ） ・ JavaScript と は 別に 、 Java という 全く 異なる 言語 が あり ます ので 、 JavaScript を Java と 略す の は 避け ましょ う 。 ・ 変数 は 必ず var で 宣言 し て ください 。 ・ この 計算 において eval は 不要 です 。 無く て も 結果 は 変わり ませ ん ので 、 外し ましょ う 。 
jdbc ドライバ が 適切 な 場所 に あり ませ ん 。 postgres の jdbc ドライバ を 適切 な 場所 に 配置 し ない と 正しく 動作 し ませ ん 。 今回 の ケース です と 、 postgresql - 9. 4 . 1208 . jre 7 . jar を 、 パス の 通っ た 場所 に 置く 必要 が あり ます 。 Eclipse で あれ ば 、 プロジェクト エクスプローラー から プロジェクト を 右クリック し て 、 プロパティ → Java の ビルド パス → ライブラリー → 外部 jar 追加 で postgresql - 9. 4 . 1208 . jre 7 . jar を 追加 し て ください 。 なお 、 面倒 で あれ ば jdk インストール パス の lib \ ext の 下 に postgres の ドライバ を 入れ て しまう という 手 も あり ます が 、 バージョン 変更 時 に ハマる ので お勧め しません 。 また 、 もう 一 点 、 postgres の data フォルダ の pg _ hba . conf で localhost から の 接続 ( 127.0.0.1 から の 接続 ） を 有効 に し て い ない と DB に 接続 でき ませ ん ので 、 注意 を 。 
どちら が いい か を あなた が 本当に 知る ため に は 、 その どちら を もやっ て みる の が いい と 思い ます 。 どちら か で なけれ ば 出来 ない 作業 で も な さ そう だ し 。 
「 Java の 使える 」 エンジニア なら 余る ほど い ます が 、 Java の 「 使える エンジニア 」 は 不足 し て い ます ね 。 
中学生 でも 受け られ ます 。 年齢 は 関係 あり ませ ん 。 
declare a NVARCHAR 2 ( 32 ): = kmk _ id ; b NVARCHAR 2 ( 32 ): = lang _ cd ; が 不要 でしょ う 。 まだ 宣言 さ れ て い ない kmk _ id とか lang _ cd とか 宣言 し て も 使え ない です し 、 使っ て も い ませ ん し 。 なお 、 実際 に insert する とき に エラー が 出る よう なら 、 こちら を 参考 に bulk 化 し て ください 。 http:// www .s hift - the - oracle . com / plsql / select . html 
「 英語 」 カテゴリ も 「 Oracle 」 カテゴリ も 関係 ない 質問 でしょ う 。 「 マインクラフト 」 カテゴリ が ある の です から そっち で 質問 し ましょ う 。 
別々 の リスナー を 登録 し て 、 そこ から 同じ メソッド を 呼び出せ ば 同じ リスナー を 登録 せ ず に 済む と 思い ます よ 
意味 の 分から ない 日本語 の 文章 を 矯正 する に は どう し たら いい でしょ う か ？ どうせ 矯正 し た ところ で 意味 不明 な 文章 です 。 文章 を 書く の が 上手 な 人が 書き直し た ほう が いい と 思い ます 。 
この アルゴリズム は 、 下 と 右 に 動く 時 は コスト １ 、 右 下 に 動く 時 は コスト ０ か １ という もの で 、 コスト は 増える 一方 で 減る こと は ない という の が 肝 です 。 そして 、 コスト が 11 と なっ た 時点 で 、 その 経路 は 落選 です よ ね 。 たとえば 、 表 の 左下 の ほう に 以下 の よう な エリア が あっ た と し ます 。 （ 表 が ずれ て しまっ て すみません ） 8 9 9 9 10 9 10 11 10 11 11 10 12 ※ 11 13 ※ ※ 14 ※ ※ ↑ 一番 左 の 列 ※ の 部分 、 左上 、 左 、 上 全て が 11 か それ 以上 な ので 、 計算 せ ず とも 11 以上 が 確定 です 。 今回 は 11 以上 は 落選 な ので 、 同じ 列 の それ 以降 の ※ も 、 11 以上 、 落選 が 確定 し ます 。 ちなみに 、 上記 は 表 の 右 上部 分 で も 同じ こと が 起こり ます 。 その 結果 、 長さ 1000 で コスト 10 で あれ ば 、 対角線 部分 の ごく 一部 を 残し て 殆ど が ※ に なる だろ う と 思い ます 。 ＞ 左 どなり の マス と上 の マス と 左上 の マス の 値 が 必要 だ から 、 ＞ でき ない ん じゃ ない か すで に 11 以上 に なっ て いる マス を 通る 経路 は どうせ 落選 です から 、 ※ の セル に 隣接 し て いる セル の 計算 は 、 ※ セル を 無視 し て 計算 すれ ば OK です （ ３つ 計算 し て 、 小さい 値 を 採用 する こと を 思い出し て 下さい ） 。 ただ 、 上記 は 幅 １ ０ の 範囲 を 超えれ ば 、 ※ に なる という 前提 が 必要 です 。 それ が 「 対 角 成分 を 中心 として 幅 10 のみ で よい 」 という こと な の だ と 思い ます が 、 本当に 幅 10 ぴったり で それ より 外 が ※ に なる の か は はっきり 分かり ませ ん でし た 。 ただ 、 対角線 部分 が コスト 最小 で 、 外 に いく につれ コスト が 上がる の は 当然 な ので 、 そう な の かも しれ ませ ん 。 
「 弾 の 生成 位置 を カメラ に する の は ＮＧ で お願い し ます 」 という の は なんで でしょ う か ？... まぁ それ は 置い とい て 、 1 : クリック さ れ た とき の 2 : 画面 中心 の クロス ヘア と カブ る （ 重なっ た ） 場所 の 座標 を 取得 3 : 「 クロス ヘア と 重なっ た 座標 」 ー 「 銃口 の 座標 」 ＝ 「 弾 が 飛ぶ べき ベクトル 」 4 : 銃口 から 弾 を 飛ばし て 当たっ た か 判定 する みたい な こと に なり ます 。 それぞれ Unity だ と どう 実現 すれ ば 良い か と いう と 、 1 と 2 : Ray ray = ScreenPointToRay (/* ここ に 画面 上 の クロス ヘア の 2D 座標 */) みたい に し て 、 レイ を 作成 し 、 それ が いま どこ と 当たっ てる か を Physics . Raycast ( ray , out hit ) とか やっ て 調べ ます 。 3 : Physics . Raycast ( ray , out hit ) の hit の 座標 を 調べれ ば 、 どこ に 当たっ た の か が わかり ます 。 これ が 「 クロス ヘア と 重なっ た 座標 」 、 あと は 銃口 の 座標 は べつに 言わ なく て も わかる と 思い ます 、 で 、 こんど は 「 クロス ヘア と 重なっ た 座標 」 ー 「 銃口 の 座標 」 ＝ 「 弾 が 飛ぶ べき ベクトル 」 と 引き算 を し ます 。 4 : あと は 、 弾丸 を 銃口 から 「 弾 が 飛ぶ べき ベクトル 」 で 飛ばせ ば よい です 。 飛ばす 、 と いっ て も 実際 に モノ を 飛ばす ん じゃなくて 計算 で 弾道 上 に ある か どう か 調べる だけ です が 。 C# か C++ と いう と 、 Unity か Unreal Engine で 作っ てる ん です か ？ 私 は Unity ( C# を 使う ) の こと しか わかん ない です 。 
以下 の 部分 が 間違っ て い ます ね 。 × for ( int y = 0 ; y < ary . length ; y ++) ○ for ( int y = 0 ; y < ary [ x ]. length ; y ++) まあ それ は いい として 、 下 の 文 を 見 て ください 。 int x = 5 ; x = x * x ; こう する と 、 x が 25 に なる の は 分かり ます でしょ う か 。 こうして 2 乗 を 計算 する こと が でき ます 。 それ から 2 重 の for 文 です が 、 for ( int x = 0 ; x < ary . length ; x+ +) { for ( int y = 0 ; y < ary [ x ]. length ; y ++) { System . out . print ( ary [ x ][ y ] + " "); } } } } これ だけ だ と 、 1 2 3 4 に なる の は お わかり でしょ う か 。 この 処理 の 流れ を 見 て みる と 、 ・ x に 0 を 代入 ・ y に 0 を 代入 ・ ary [ 0 ][ 0 ] を 表示 ・ y を 加算 し て 1 に ・ ary [ 0 ][ 1 ] を 表示 ・ y を 加算 し て 2 に ・ y の ループ の 条件 y < ary [ 0 ]. length から 外れる ので ループ 終了 ・ x を 加算 し て 1 に ・ y に 0 を 代入 ・ ary [ 1 ][ 0 ] を 表示 ・ y を 加算 し て 1 に ・ ary [ 1 ][ 1 ] を 表示 ・ y を 加算 し て 2 に ・ y の ループ の 条件 y < ary [ 1 ]. length から 外れる ので ループ 終了 ・ x を 加算 し て 2 に ・ x の ループ の 条件 x < ary . length から 外れる ので ループ 終了 こんな 感じ です 。 これ で 、 1 2 3 4 が 表示 さ れ ます ね 。 という わけ で 、 2 乗 の 計算 と 、 2 重 ループ を つかう と 、 1 2 3 4 を 各 2 乗 し た 1 4 9 16 が 表示 さ れる という わけ です 。 
GC に関して 詳しい わけ で は ない の です が 、 興味 が あっ た ので Java パフォーマンス ( オライリー ) という 書籍 が 手元 に あっ た ので GC に関する 部分 を 読み直し 、 ざっと ネット で 検索 し て み て 提示 さ れ た 実行 環境 と GC ログ について 考え て み まし た 。 GC ログ を 見る と ヒープ 全体 で 3G で Young 領域 に 1 G 、 Old 領域 に 2G の 構成 です ね 。 提示 さ れ た 部分 で は マイナー GC 2回 、 フル GC 、 マイナー GC 2回 の 順 で GC が 実行 さ れ て い ます 。 フル GC は 起動 し て から 117515 秒 ( 32 時間 ) 後 に 発生 し て い ます が 、 " １ ～ ２ 日 に １ 回 " と の 事 です ので これ が 最初 の フル GC と 解釈 し まし た 。 フル GC の 以下 の 部分 です が [ Times : user = 2 . 88 sys = 2 . 73 , real = 244 . 12 secs ] User CPU time , System CPU time , Real time です が user と sys を 合わせ て 5 . 5 秒 程 で これ は すべて の コア の 合計 な ので 実際 に CPU が 使用 さ れ て いる 時間 は もっと 短い はず です 。 それ に対して フル GC の 開始 から 終了 まで に 4 分 掛かる の は 長 すぎる と 思い ます 。 OS が メモリ 枯渇 、 あるいは 一定 時間 使わ れ なかっ た 為 、 ヒープ を HDD へ ページング ( スワッピング ？) し て いる と 思わ れ ます 。 空き メモリ が 少なく なっ て ページング さ れ て いる 場合 は メモリ 増設 しか ない と 思い ます 。 一定 時間 使わ れ なかっ た 為 に ページング さ れ て いる 場合 も メモリ に 余裕 が あれ ば 回避 さ れる の で は ない でしょ う か 。 もし WindowsServer に 特定 の プロセス が 使う メモリ 領域 を ページング から 除外 する よう な 設定 が 存在 すれ ば 有効 だ と 思い ます 。 です が ページング を 回避 でき た として も 3G の フル GC だ と それなり に 時間 が 掛かる かも しれ ませ ん 。 フル GC を なるべく 実行 さ せ ない よう に する に は 、 GC の アルゴリズム を CMS に 変更 する という 方法 が あり ます 。 Java 1 . 6 デフォルト の GC アルゴリズム は 、 マイナー GC で Young 領域 を 整理 し 、 一定 回数 の マイナー GC 後 に Young 領域 に 生き残っ た オブジェクト が Old 領域 に 移さ れ 、 Old 領域 が 一 杯 に なる と フル GC が 実行 する という もの で 、 マイナー GC も フル GC も すべて の スレッド が 停止 さ れ ます 。 CMS の 場合 は マイナー GC 、 フル GC で すべて の スレッド が 停止 さ れる の は 同じ です が 、 アプリケーションスレッド と は 別 スレッド で Old 領域 の 解放 を 行っ て おり 、 この 際 に すべて の スレッド が 停止 する 時間 は とても 短い もの と なっ て い ます 。 うまく 動作 すれ ば Old 領域 が 一 杯 に なら ない ので フル GC が 発生 し にくく なっ て い ます 。 CMS の 欠点 は CPU を 余計 に 使う 事 以外 に Old 領域 が 断片 化 さ れ た まま に なる 点 です 。 Young 領域 から 大きな オブジェクト を Old 領域 に 移そ う として も 虫食い の ため 必要 な 領域 が 確保 でき ない 場合 など は フル GC が 発生 し ます 。 Java 1 . 6 で CMS を 使う 場合 に は いくつ か の パラメータ の 設定 に 注意 が 必要 かも しれ ませ ん 。 ( NewRatio , Survivor Ratio , MaxTenuringThreshold 等 ) デフォルト の 設定 は 以下 の コマンド で 確認 でき ます 。 ( Java の バージョン によって デフォルト の 値 が 違う よう です が 、 同じ バージョン で も OS , 32 bit , 64 bit 、 コア の 数 など 違っ て くる かも しれ ない ので 、 実機 で 確認 し た 方 が いい と 思い ます ) java - XX :+ UseConcMarkSweepGC - XX :+ PrintFlagsFinal - version 使える GC アルゴリズム は 他 に も あり ます 。 CMS の Old 領域 の 断片化 の 欠点 を 修正 し た G1 という GC です 。 G1 は CMS の 後継 という 位置づけ です 。 G1 は ヒープ サイズ が 大きい 場合 ( 4 G 以上 推奨 ) に 利用 さ れる よう で 、 小さい 場合 は CMS より も パフォーマンス が 劣る よう です 。 G1 は Java の 7 u 4 以降 で 実装 さ れ 、 6 u 14 以降 で 実験 的 に 実装 さ れ て いる と 記述 を ネット 上 で 見 まし た 。 1 . 6 . 0 _ 35 において 成熟 し て いる と 言える 実装 内容 か どう か は わかり ませ ん 。 デフォルト の 設定 は 以下 の コマンド で 確認 でき ます 。 java - XX :+ UseG 1 GC - XX :+ PrintFlagsFinal - version サポート さ れ て い ない JVM の 場合 は 以下 が 出力 さ れる はず です 。 Unrecognized VM option ' UseG 1 GC ' 以上 まとめ ます と 以下 の よう な 対処 方法 が 考え られる と 思い ます 。 ・ メモリ の 増設 を する ・ GC タイプ を CMS に 変更 する ・ メモリ を 増設 し た 上 、 ヒープ サイズ を 大きく し GC タイプ を G1 に する 御 検討 の 上 、 GC タイプ 変更 の 際 に は 書籍 や ネット 等 で CMS や G1 の 詳細 や パラメータ の 設定 など を 御 確認 ください 。 フル GC が 長い 事 へ の 解決 に は なり ませ ん が 、 2日 に 一 回 ぐらい の ペース で 発生 する の で あれ ば 、 アクセス の 少ない 時 に フル GC を 強制的 に 行う という 方法 も ある の で は ない でしょ う か 。 " フル GC 強制 " など で 検索 し て み て ください 。 もしも Web アプリケーション の コード の 変更 が 可能 な 場合 です が 、 提示 さ れ た GC ログ の マイナー GC は 3 秒 弱 おき に Young 領域 の 1 G が 一 杯 と なっ て 発生 し て い ます 。 提示 さ れ た 部分 で は これ が 4回 繰り返さ れ て い ます 。 マイナー GC 後 の ヒープ の 総 使用 量 の 増加 から 、 Old 領域 に 移さ れ て いる の は 5 M から 20 M ぐらい な の が 分かり ます 。 もし 平均 し て マイナー GC の 際 に 10 M ずつ Old 領域 が 増え て いく と する と Old 領域 は 2G な ので フル GC の 前 に 200回 程 マイナー GC が 発生 し て いる 計算 に なり ます 。 3 秒 おき 200回 マイナー GC が 発生 し て い たら 10 分 ごと に フル GC と なる ので 、 実際 に は マイナー GC が 連続 発生 する 時間 と あまり 発生 し ない 時間 が ある という 事 が 分かり ます 。 これ は 特定 の Web アプリケーション が 実行 さ れ て いる 時 に 大量 に 、 あるいは 大きな サイズ の オブジェクト が 多数 生成 さ れ て いる から で は ない でしょ う か 。 ( Tomcat 自体 が 行っ て いる 処理 の 可能性 も あり ます が ) それとも アクセス が 集中 する 時間帯 など に この よう な マイナー GC の 連続 が 発生 し て いる の でしょ う か 。 オブジェクト を 大量消費 し て いる Web アプリケーション が 原因 で あれ ば その コード を 修正 する 事 で マイナー GC の 間隔 を 大きく する 事 が 出来る かも しれ ませ ん 。 
Out pu t StreamWriter これ は 、 任意 の OutputStream に対して 書き込み を 行なう クラス です 。 OutputStream に は いろいろ 種類 が あっ て 、 ・ System . out : コンソール が 出力 先 ・ FileOutputStream : ファイル が 出力 先 ・ ByteArrayOutputStream : メモリ が 出力 先 ・ PipedOutputStream : 他 の InputStream が 出力 先 など です 。 Out pu t StreamWriter は 、 write () が 呼ば れ た 際 、 テキスト の エンコーディング を 適切 に 変換 し 、 それ を 書き込む 準備 を し て 、 書き込み ます 。 write () が 呼ば れる たび に 、 エンコーディング 変換 等 の オーバーヘッド が 発生 する 特徴 が あり ます 。 BufferedWriter は 、 書き込み 先 が Writer です 。 Writer に は 当然 Out pu t StreamWriter も 含ま れ ます 。 BufferedWriter は 、 write () が 呼ば れ た 際 、 自身 が 保持 する バッファ 内 に 書き込み 内容 を 保管 し て おき 、 適切 な タイミング で 、 書き込み 先 の Writer へ と 受け渡 し ます 。 使用 方法 は 次 の とおり です 。 Writer out = new BufferedWriter ( new Out pu t StreamWriter ( System . out )); こう する と 、 BufferedWriter が 書き込み 内容 を Out pu t StreamWriter へ と 受け 渡す よう に なり ます 。 write () が 呼ば れ た 際 、 Out pu t StreamWriter へ の 書き込み は すぐ に は 行なわ れ ず 、 あと で まとめ て 書き込ま れる ため 、 オーバーヘッド が 減少 し ます 。 上記 の Writer の 作成 例 の よう に 、 Out pu t StreamWriter を 使用 する 際 に は 、 BufferedWriter を かぶせる よう に し ましょ う 。 同様 の 理由 で 、 OutputStream 系 に データ を 書き込む 際 の オーバーヘッド を 緩和 する 目的 で 、 BufferedOutputStream が 使わ れる べき です 。 
どんな やり方 な の か も 書か ず に 「 私 の やり方 で は うまく いき ませ ん 。 」 こんな こと 言わ れ て も 回答 が 難しい です 。 http:// www 26 . atwiki .jp / minecraft / pages / 340 . html wiki や 個人サイト など に たっぷり ある の です から 、 質問 する 前 に もっと 調べ ましょ う 
java c.e xe が 、 実際 、 何処 の 格納 さ れ て いる か を 確かめ ましょ よう 。 c :\....\....\ java \ jdk 1 . 8 . 0 _ 91 \ bin \ java c.e xe と 云う 形 で 格納 さ れ て いる と 思い ます 。 c :\ userseData \ java \... c :\ ProgramFiles \ java \... c :\ ProgramFiles ( 86 )\ java \... 上記 の いずれ か でしょ う 。 見つかっ たら 、 \ bin フォルダー に コマンドプロンプト を 移動 し て 、 予め そこ に 格納 し た java の ソース プログラム ( Test 4 . java ) を 起動 し て み ましょ う 。 これ で 起動 出来 たら 、 環境変数 の 設定 間違い です 。 起動 出来 ない なら 、 c :\ Java \ bin \.. の 形 に 移動 し て み ましょ う 。 
eclipse の 冗談 に 丸 型 の 緑色 に 白色 の 三角 マーク の 隣 に 黒い 矢印 が ある ので そちら を クリック し て ください 。 ( ややこしい です が 、 かばん の マーク が ある 左 隣 に あり ます ) → 次に 実行 の 構成 を クリック 。 その後 に 、 引数 タブ を クリック し 、 下 に ある 作業 ディレクトリ を デフォルト に 設定 し て み て ください 。 
ID 非公開 さん 俳句 と プログラム は 自作 し ない と 、 無理 。 絵 の 模写 も ほぼ 自作 ( 絵の具 の 選択 など ) 
＞ 先ほど まで は 何 の 問題 も なく 動い て くれ て い た の です が 、 画面 の 表示 部分 の 設定 を 少し いじっ た 後 サーバー を 動かし たら 、 この よう な 状態 に なっ て しまい まし た 。 いじっ た 部分 を 元 に 戻し て 確かめ て み た の か ？ 質問 する なら それ から だ と 思う ん だ が 。 
> Java サーブレット で 作ら れ た WEBサイト の 場合 、 JRE を インストール し て なく て も Java を 動かす こと は できる の でしょ う か ？ はい 。 サーブレット は サーバ 側 で 動作 し ます ので 、 ブラウザ 側 に JRE を インストール する 必要 は あり ませ ん 。 ブラウザ で は サーバ から 返っ て き た HTML を 表示 し て いる だけ です 。 一方 、 アプレット は ブラウザ 側 で 動作 し ます 。 
まず 、 if ( i % 10 == 0 ) これ です が 、 10 の 倍数 の 判定 は 必要 ない ので 、 要り ませ ん 。 あと は 、 else if ( i % 3 == 0 ) else if ( i % 5 == 0 ) です が 、 else if 文 は 上 から 順に 処理 さ れる ので 、 15 の 倍数 の とき に 優先 的 に Five と 表示 さ せる に は 、 各 else if ブロック を 入れ替え て ください 。 
fizzbuzz の 亜種 です ね if ( i % 10 == 0 ){ System . out . println (); else ( i % 15 == 0 ){ System . out . print (" Fifteen "); } else if ( i % 3 == 0 ){ System . out . print (" Three "); } else if ( i % 5 == 0 ){ System . out . print (" Five "); } else { System . out . print ( i ); } 
1 . 2 から Calendar クラス で 指定 の 年月日 の 日 の 最大 値 （ 末日 ） を 求める とか そんな メソッド が ある らしい です 。 https :// docs . oracle . com / javase / jp / 6 / api / java / util / Calendar . html # 昔 は 日の 範囲 チェック を し て い ない ので 「 翌月 0 日 」 ＝ 当月 末日 という 手法 が あっ た らしい （ 「 Java 翌月 0 日 」 で インターネット 検索 し て みよ う ） 
エラー が 出 て いる 処理 を 関数 化 する と エラー が で なく なる と 思う java は クラス 直下 に 処理 が 書け ない 言語 です 
すみません 。 何 を 求め て いる の でしょ う か ？ 日本語 の 部分 から も 、 画像 から も わから ない こと だらけ です 。 詳しく 書い て いただけれ ば 、 何 かお役 に 立てる かも しれ ませ ん 。 ( 当然 、 力不足 立て ない かも しれ ませ ん けど 。。。) 
public Sequence ( boolean z ){ this . z = z ; if (! z ) y =- y ; } 引数 の ある コンストラクタ 。 new で の 呼び出し に対して boolean 型 の 引数 を 受け取る 。 メンバ 変数 の z を 引数 で 上書き し て 、 false なら y を マイナス の 値 に する 。 1 →- 1 -------------------- public int next (){ int t = x ; x = y ; if ( z ) return ( y = t + y ); else return ( y = t - y ); } x を y に し て 、 y は x と y を 足し た値 ( コンストラクタ で false に 設定 し た 場合 は 減算 ) に する 。 x は y の 一つ 前 の 状態 を 保持 する 。 -------------------- for ( int i = 0 ; i < 5 ; i ++){ b = s . next (); System . out . println (a) ; System . out . println ( b ); } a に は 値 を 代入 し て い ない ので 常に 0 b は next で 更新 さ れ 続ける 。 false を 設定 し た ので 初期 値 は - 1 で 、 トレース する と x = 1 ,- 1 , 2 ,- 3 , 5 , 8 y =- 1 , 2 ,- 3 , 5 ,- 8 , 13 と なり ます 。 -------------------- y の トレース 結果 を 見る 限り 、 この プログラム は true が 与え られ た 場合 に は プラス の 、 false が 与え られ た 場合 は マイナス の フィボナッチ数列 と 0 を 交互 に 表示 する プログラム でしょ う 。 そして Sequence クラス は フィボナッチ数列 を 求める ため の クラス でしょ う 。 
自分 の クラス の コンストラクタ を 呼び出す 命令 です 。 例えば Instance クラス に Instance () コンストラクタ と Instance ( String name ) が 定義 さ れ て い ます 。 その 時次 の よう に 書く こと で Instance ( String name ) が 呼び出せ ます 。 Instance (){ this (" Sample ");// 文字列 は なん で も 良い } this () を 使う と 修正 が 簡単 に なっ たり 簡潔 に 記述 でき たり し ます 。 
DragViewListener とか を 作っ て 座標 を 取得 し て 、 キューブ の 座標 に 変換 すれ ば いい と 思い ます 。 http:// kurukurupapa . hatena blog . com / entry / 20120422 / 1335098811 
ファイル 読み込み なら 最初 から char の 配列 に 読み こめ ば いい の では ? int とか char とか ファイル 読み込み とか 言う 前 に 、 どういう データ から 何 を 得 たい の か 、 レベル の 「 なに を し たい の か 」 の 話 を し た 方 が より よい 方法 が 見つかり そう な 気 が する 。 
C# で 動い て いる プログラム を Java で 書き直し て み まし た 。 goto 命令 が 無 い事 と 文字列 比較 を 関数 を 使わ ない と 出来 ない 事 で 大幅 な 修正 と なり 苦労 し まし た 。 Scala は 、 試し て み ませ ん 。 
↓ Activity の ライフサイクル http:// tatete . blogspot .jp / 2012 / 01 / activity . html 上記 に ある よう に 、 画面 回転 時 は onDestroy () と onCreate () により Activity の 内容 が 再 生成 さ れる ので 注意 し て ください 。 Android Studio の 場合 、 「 View 」->「 Tool Window 」->「 Android Monitor 」 で Logcat を 閲覧 可能 です 。 デバッグ 実行 すれ ば Exception が 表示 さ れる と 思う ので 、 対処 可能 か と 思い ます 。 
railsim 界 で は プラグイン を 聞く こと は 、 NG な ん です 今回 は 、 リンク 貼り ます が 、 次 から は気 を つけ て ください ね http:// w w w3 . hp - ez . com / hp / rikka / page 1 六 花 氏 です 
Java 8 で こんな 感じ DateTimeFormatter fmt = DateTimeFormatter . ofPattern (" uuuuMMdd "); // 入力 を 受ける Scanner sc = new Scanner ( System . in ); System . out . println (" 何 週間 ? "); int nWeeks = sc . nextInt (); // 今日 以降 の 最初 の 月曜日 を 見つける LocalDate mon = Lo cal Date. now (). with ( TemporalAdjusters . nextOrSame ( DayOfWeek . MONDAY )); while ( nWeeks --> 0 ) { // 月曜日 と 金曜日 文字列 化 String name = fmt . format ( mon )+"_"+ fmt . format ( mon . plusDays ( 5 )); // フォルダ 生成 Files . createDirectory ( Paths . get ( name )); // 1 週 すすめる mon = mon . plusDays ( 7 ); } 
今 は 、 もう Eclipse の 一人勝ち です ね 。 日本語 で 、 Windows なら Pleiades です 。 http:// mergedoc . osdn .jp / 
タスクマネージャー から 強制終了 さ せ た だけ で は だめ な よう な ので 再起動 が 必要 です 。 JAVA を アンインストール する 必要 は なく 、 別 バージョン を インストール する 必要 も ない と 思わ れ ます 。 先ずは 次 の サイト を ご覧 に なっ て から 、 「 ダウンロード 」 の タブ を クリック し て 最新 版 を ダウンロード です 。 http:// ja . libreoffice . org / get - help / install - howto / windows / 
> どう すれ ば 動き ます か ？ ステータスバー の 右端 の あたり に 表示 さ れ てる の は SJIS です か それとも UTF-8 です か （ こちら から 見る と 肝心 の ところ が 撮影 さ れ て ない ） 
＞ エラー が 出 て しまい まし た 。 この 場合 エラー が 何 か に より ます が 張り付け た 画像 で は よく わかり ませ ん 画像 で は なく 文字 で 表示 し ない と わかり ませ ん build . gradle を 出し て いる の は そこ で エラー に なっ た という こと でしょ う か また 、 エラー と なっ て いる ところ を クック する と 解決 策 が 実行 さ れる こと も あり ます （ エラー が 何 か 分から ない ので 違う かも しれ ませ ん ） 
shizimi 0721 さん ファイル 操作 は 、 オープン し た か 、 必ず 、 チェック する 。 
配列 を 使え ば いい かも しれ ませ ん 。 JButton [] jb = new JButton [ 3 ]; その 上 で 、 JButton クラス は setBounds メソッド を 継承 し て いる ので 、 それ を 使い ます 。 いっぺんに やる と おっしゃい まし た ので for 文 で 楽 に し ましょ う 。 for ( int I = 0 ; I < 3 ; I ++) { jb [ i ]. setBounds ( 0 , 0 , 50 , i * 20 ); } どういう 配置 を し たい の か が わから ない ので 数字 は 適当 です が こんな 感じ に やれ ば うまく いく と 思い ます 。 
f ( n , k ) の 定義 は 、 k = 0 or k = n の とき 、 f ( n , k ) = 1 0 < k < n の とき 、 f ( n , k ) = f ( n - 1 , k - 1 ) + f ( n - 1 , k ) f ( 4 , 2 ) を 求める の だ から 、 n = 4 、 k = 2 を 代入 し て 解け ば いい 。 f ( 4 , 2 ) = f ( 4 - 1 , 2 - 1 ) + f ( 4 - 1 , 2 ) = f ( 3 , 1 ) + f ( 3 , 2 ) = f ( 3 - 1 , 1 - 1 ) + f ( 3 - 1 , 1 ) + f ( 3 - 1 , 2 - 1 ) + f ( 3 - 1 , 2 ) = f ( 2 , 0 ) + f ( 2 , 1 ) + f ( 2 , 1 ) + f ( 2 , 2 ) = 1 + f ( 2 , 1 ) * 2 + 1 = f ( 2 , 1 ) * 2 + 2 = ( f ( 2 - 1 , 1 - 1 ) + f ( 2 - 1 , 1 )) * 2 + 2 = ( f ( 1 , 0 ) + f ( 1 , 1 )) * 2 + 2 = ( 1 + 1 ) * 2 + 2 = 2 * 2 + 2 = 6 
とりあえず 解答 を 載せ て い ます 実行 済み な ので そのまま 貼り 付け て も 動く か と 思い ます メソッド の 引数 、 戻り値 など を すぐ に 記述 できる よう に なれ ば 自分 で スラスラ と コード が かける か と 思い ます アルゴリズム の 勉強 の 仕方 は 意外と 世の中 に 出 て い ない ので 大変 だ と は 思い ます が アルゴリズム を 自分 で すぐ に 考え られる よう に なる と だいたい の 問題 は 解け て しまい ます し 周り の 人 が でき ない こと も 簡単 に 答え が 作れる よう に なり ます 頑張っ て ください ね 一部 、 コード の 中 に は 短く かける ところ を わざと 短く し て い ない ところ も あり ます わかり やすく なる か な と 思っ て の こと な ので ご 容赦 ください ---------------- import java . util .*; import java . io .*; public class PrimeNumberTest { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println (" 素数判定 を 行い ます ． "); while ( true ){ // 無限ループ 開始 System . out . print (" 2 以上 の 自然数 を 入力 し て ください ． （ 終了 する 場合 は 0 以下 を 入力 ）："); int n = Integer . parseInt ( br . readLine ()); if ( n < 1 ){ System . out . println (" ０ 以下 の 数字 が 入力 さ れ た ので 終了 し ます 。 "); break ; // ここ で ループ を 抜ける } else if ( n == 1 ){ System . out . println (" 2 以上 を 入力 し て ください "); continue ; // 次 の ループ へ 移動 する } if ( booleanisPrimeNumber ( n )){ // 素数 なら true 、 それ 以外 は false を 返す メソッド System . out . println ( n +" は 素数 です "); } else { int work = in tgetSmallDivisibleNumber ( n ); // 割り切れる 最小 の 値 を work に 代入 System . out . println ( n +" は "+ work +" で 割り切れ ます 。 素数 で は ありません "); } } } public static boolean booleanisPrimeNumber ( int n ){ boolean check = true ; // 最初 check は true に 設定 for ( int i = 2 ; i < n ; i ++ ) { if ( n % i == 0 ){ check = false ; // 割り切れる なら false に 変更 break ; } } return check ; } public static int in tgetSmallDivisibleNumber ( int n ){ for ( int i = 2 ; i < n ; i ++ ) { if ( n % i == 0 ){ return i ; // 割り切れ た 瞬間 に return } } return 0 ; // これ 、 どうせ 使わ ない ので 何 の 数字 でも いい です } } -------------- こんな 感じ に なる か と 思い ます 引き続き 頑張っ て ください (^^) 
for ( i = 1 ; i <= 10 ; i ++){ // 行 for ( j = 1 ; j <= 10 ; j ++){ // 列 if ( j <= i ){ printf ("■"); } else { printf ("□"); } } printf ("\ n "); } こんな 感じ か な 
何 の フレームワーク を 入れ た の か わかり ませ ん が 、 ・ パースペクティブ が 特殊 な もの なら Java に する → 右 上 に パースペクティブ という の が ある ので 、 Java を クリック する 。 ・ ファイル → 新規 → で 「 Java プロジェクト 」 を 選択 する 。 Tomcat プロジェクト とか フレームワーク の プロジェクト とか は 選ば ない 。 ・ 実行 する 際 は 、 左 の パッケージ エクスプローラー から java ファイル を 選択 し 、 右クリック から 実行 → Java アプリケーション で 実行 する 。 これ で 実行 でき なかっ たら 、 Eclipse インストール し 直し た ほう が いい かも しれ ませ ん ね 。 
有り モノ の プログラム を いろいろ 改造 し て みる って の も いい こと だ けど 、 やっ ばり C の ( という か プログラム と いう ものの ) 基本 的 な ところ は 一 通り 勉強 し ない と 、 あまりに 効率 が 悪い です ... logFile . read () で データ を 読み だし て いる わけ です から 、 この 関数 の 返り 値 を 変数 に 代入 してやれ ば いい 。 せめて この 説明 が わかる 程度 まで は C言語 の 入門書 で も なん でも 使っ て 勉強 し て み て 下さい 。 > サンプル データ う～ ん 、 自分 が 何 を 必要 と し て いる か わかっ て い ない の です か ? 
2.0 と 2 . 2 で 互換性 は あり ます よ 。 直接 は 確認 し て い ませ ん が 、 2 . 2 でも 編集 可能 な はず です 。 
クラス 名 に カーソル を 合わせ て Alt + Enter で import し ます 半自動 です ね Ctrl + Alt + S で て て 来る Setting もしくは 設定 から 設定 を 変更 でき ます 。 Editor - General - Auto import を 開い て 、 java の 部分 を 編集 すれ ば どうにか なる と 思い ます 。 やっ た こと ない ので わから ない です けど 。 
今 、 知恵袋 の Java カテゴリー は 大 荒れ し て い ます ので 、 カテゴリー 違い の JavaScript の 質問 は スルー さ れる と 思わ れ ます 。 お手数 です が 、 カテゴリー を JavaScript に 変更 し て ください 。 
Animal クラス の " static " を 全て 消す 。 
質問者 さん は 実装 の レパートリー を クラス 群 に 追加 さ れ たい の でしょ う か ？ その よう な 場合 は デザインパターン の 「 Bridge 」 を 適用 し ます 。 「 Bridge パターン 」 https :// ja . wikipedia . org / wiki / Bridge _% E3 % 83 % 91 % E3 % 82 % BF % E3 % 83 % BC % E3 ... 
回答者 は エスパー で は あり ませ ん ので 、 この 質問 で は 回答 の しよう が あり ませ ん 。 １ ． eclipse で eclipse は 開発 に 用いる ツール の こと で 、 プログラミング言語 で は あり ませ ん 。 eclipse 上 で 動作 する 言語 は 多数 あり ます 。 もしかして Java の こと でしょ う か 。 ２ ． ポーカー の ストレート と スリー カード と フラッシュ その 前 に 、 ポーカー の プログラム （ トランプ 52 枚 を シャッフル し 、 ５ 枚 選択 する ） という 部分 は でき て いる の でしょ う か 。 もし そこ が でき て い て 、 ５ 枚 の カード が あり 、 その 役 を 判定 し たい という こと で あれ ば 、 その ５ 枚 の カード の オブジェクト を 提示 し て ください 。 
フォーム から hidden 属性 の パラメータ を 送信 し て やっ て 、 サーブレット 側 は その パラメータ で 処理 を 分岐 すれ ば よい か と … 
Java 自身 に 画面 に 描画 する 命令 は 有り ませ ん 、 この よう な 複雑 な 物 は クラス ライブラリ として 提供 さ れ て い ます 。 C言語 等 の 関数 は include で 宣言 し ます が 、 Java クラス ライブラリ は import を 使っ て 宣言 し ます 。 例えば 、 AWT による 画面 表示 は 「 import java . awt .*;」「 import java . awt . event .*;」「 import java . awt . print .*;」 等 を 設定 し ます 。 
http:// aidiary . hatena blog . com / entry / 20040918 / 1251373370 ここ の 「 キーボード の 使い方 」 が 役に立つ でしょ う 。 
ブロック {} 内 に 書か れ た 変数 は その 内部 で しか 利用 でき ない こと は ご存知 です よ ね 。 try の 中 で 宣言 し て しまう と 、 catch の 方 で 正常 に close する こと が でき ませ ん 。 catch 内 の try 文 は 、 普通 の try 文 と 同じ です 。 close が 失敗 し た 時 に catch に 移り ます が 、 対応 する catch の 中 で 特に 何 も し て い ない ので そのまま 処理 が 終了 し ます 。 
import は 必要 ない です Runtime . getRuntime (). exec ( new String []{" cmd . exe ", "/ k ", " 実行 し たい ファイル 名 ", " ファイル に対する コマンドライン 引数 "}); これ で 実行 できる はず です 。 コマンドライン 引数 は 0 ~ 複数個 でき ます 。 要素 を 分解 し ます と 、 String [] cmd = new String []{" cmd . exe ", "/ k ", " 実行 し たい ファイル 名 "}; Runtime . getRuntime (). exec ( cmd ); ---- String [] cmd = {" cmd . exe ", "/ k ", " 実行 し たい ファイル 名 "}; Runtime r = Runtime . getRuntime (); r . exec ( cmd ); とか に 変化 し ます ので 見 やすい もの を 使い ましょ う 。 
System . out . print ( i + " "); 変数 i と スペース を 標準出力 する 。 文字列 は + で くっつける こと が でき ます 。 System . out . print (" あ " + " い ");//[ あい ] 文字列 以外 を くっつける とき は 、 自動 で 文字列 に 変換 さ れ ます 。 double d = 1 . 12 ; System . out . print ( d + ":");//[ 1 . 12 :] System . out . print ("\ n "); エスケープシーケンス と いっ て 、 \ を 付け た 特殊文字 。 改行 を 出力 する 。 他 にも エスケープシーケンス は たくさん ある ので 調べ て みる と いい でしょ う 。 よく 使う もの を 挙げ ます 。 ・ エスケープ \\→\ を 出力 \"→" を 出力 \ r → カーソル を 左端 へ \ b → カーソル を 一つ 左 へ \ t → タブキー \ r \ n →\ n で 改行 でき ない とき の 文字 。 環境 による 自分 も 作ってみた ので 参考 まで に どうぞ 。 ループ 回数 が 非常 に 少ない です 。 int num = 300 ; int number = num ; int limit = ( int ) Math .s qrt ( num ); for ( int n = 2 ; n <= limit ; n ++){ int count = 0 ; while ( number % n == 0 ){ number /= n ; count ++; System . out . print ( n + " "); } } if ( number != 1 && num >= 2 ) System . out . println ( number ); 
さ れ ます ね 。 。 。 。 。 
Freqt の 場合 について 大きく 分け て ３ ステップ に 分け られる よう です 。 ・ JDK の 入手 と インストール ・ Freqt の ダウンロード と 展開 。 コマンドプロンプト で 展開 ディレクトリ を カレントディレクトリ に する 。 その 状態 で javac が 使える よう に する （ これら の 具体 的 方法 について は 、 過去 に 多数 Ｑ Ａ が 出 て ます ので それ を 参考 下さい ） ・ メイク makefile を 参照 し て 、 手動 で メイク し まし た 。 javac - classpath .;./ openxml . jar HashIndex . java javac - classpath .;./ openxml . jar UriOperator . java javac - classpath .;./ openxml . jar pattern . java javac - classpath .;./ openxml . jar Debug . java javac - classpath .;./ openxml . jar DomWrapper . java javac - classpath .;./ openxml . jar Freqt . java 下 は JDK が インストール さ れ た Windows 7 環境 で メイク し た 結果 です 。 ( Cygwin は 不要 でし た ） C :\ FREQT _ distMay 02 _ j5 0 > java - classpath .;./ openxml . jar Freqt Bad Parameters or Options . USAGE : java Freqt [ TARGET ] [ MINSUP ] [ OPTIONS ] TARGET is the input HTML / XML document . MINSUP is the minimum - support specified by pacentage . < OPTIONS > - dd (- nodd ) Enable ( or Disable ) Duplicate Detection - attr (- noattr ) Enable ( or Disable ) Attribute Expand - c < CONCEPT > Set Concept Tree with < CONCEPT > - l < MAXSTAGE > Set Stage Limit with < MAXSTAGE > No Options mean to add '- dd - noattr '. 以降 正常 に 動作 し て いる の か どう か について まで は 判断 し て おり ませ ん 。 
Point が 何者 な の か 不明 です が 、 なんらかの class だろ う という 前提 で 。 Java で は 、 算術 演算子 (+ とか / とか ) が 使える の は 言語 組み込み の 数値 型 に 限り ます 。 ＃ Java は 意図的 に 演算子 オーバーロード は 非 サポート 
int i = 0 ;← i = 0 while ( i < 2 ){ i ++;① i = 1 ③ i = 2 for ( int j = 0 ; j < 2 ; j ++){① j = 0 ② j = 1 ③ j = 0 ④ j = 1 system . out . print ( i * j + "");① i * j = 0 ② i * j = 1 ③ i * j = 0 ④ i * j = 2 よって 0102 ポイント は i ++ の あと j = 0 に 必ず なる 点 です 
参考 に 。 public class Calc Engine implements ActionListener { private JTextField displayField ; private String indicate ; private int mode ; private double number 1 ; private double numb er2 ; private double number 3 ; private int digitCount ; public Calc Engine ( JTextField displayField ){ this . displayField = displayField ; indicate = " 0 "; number 1 = numb er2 = number 3 = 0 ; displayField .s etText ( indicate ); } @ Override public void actionPerformed ( ActionEvent ae ) { String cmd = ae . get Action Command (); int m = 0 ; if ("+". equals ( cmd )) { m = 1 ; } else if ("-". equals ( cmd )) { m = 2 ; } else if ("*". equals ( cmd )) { m = 3 ; } else if ("/". equals ( cmd )) { m = 4 ; } else if (" c ". equals ( cmd )) { indicate = " 0 "; mode = 0 ; number 1 = numb er2 = number 3 = 0 ; digitCount = 0 ; } else if ("=". equals ( cmd )) { if ( digitCount > 0 ) { if ( mode > 0 ) numb er2 = convDouble ( indicate ); else number 1 = convDouble ( indicate ); } switch ( mode ) { case 1 : number 3 = number 1 + numb er2 ; break ; case 2 : number 3 = number 1 - numb er2 ; break ; case 3 : number 3 = number 1 * numb er2 ; break ; case 4 : if ( numb er2 != 0 . 0 ) number 3 = number 1 / numb er2 ; else number 3 = number 1 ; break ; default : number 3 = number 1 ; break ; } indicate = String . valueOf ( number 3 ); // . 0 を なくす indicate = trimDigit ( indicate ); digitCount = 0 ; number 1 = number 3 ; } else { int n = convNumber ( cmd ); if ( n >= 0 ) { if ( digitCount == 0 ) indicate = ""; indicate += String . valueOf ( n ); digitCount ++; } } if ( m > 0 ) { mode = m ; number 1 = convDouble ( indicate ); digitCount = 0 ; } displayField .s etText ( indicate ); } int convNumber ( String num ) { int r = 0 ; try { r = Integer . parseInt ( num ); } catch ( Exception e ){ r = - 1 ; } return r ; } double convDouble ( String num ) { double r = 0 . 0 ; try { r = Double . parse Double ( num ); } catch ( Exception e ){ r = - 1 ; } return r ; } String trimDigit ( String s ) { int r = s . indexOf (". 0 "); String s2 = s ; if ( r > 0 ) { if ( s.l ength () == r + 2 ) s2 = s .s ubstring ( 0 , r ); } return s2 ; } } 
方法 は ２つ あり ます 。 １ ． bbsManager . DeleteItem ( index , password ); を 何 回 も 実行 する ２ ． DeleteItem の 引数 を int [] 配列 に 拡張 する たぶん １ の ほう が わかり やすい でしょ う から 、 １ の ほう を 説明 し ます 。 int index = Integer . parseInt ( delindex ); は 、 password 取得 の 前 に 実行 する 意味 は あり ませ ん 。 後ろ で 実行 すれ ば いい でしょ う 。 具体 的 に は ＊ DeleteItem メソッド : インデックス に 対応 する メッセージ を 取っ て き て パスワード を 比較 し 、 同じ だっ た 場合 に 限っ て そこ を null で 置き換え ＊ で やっ て も 大丈夫 です 。 です ので 、 こちら に その 処理 を ループ で 入れ て for ( int i = 0 ; i < deli nd ex. length ; i ++){ int index = Integer . parseInt ( delindex [ i ]); bbsManager . DeleteItem ( index , password ); } と すれ ば いい でしょ う 。 なお 、 この for ループ は foreach 構文 で 書く と きれい に 書け ます 。 for ( String index : delindex ){ bbsManager . DeleteItem ( Integer . praseInt ( index ), password ); } 
NetBeans です か ...。 単に 編集 し たい プロジェクト や ファイル を クリック し て 編集 する だけ で 、 「 主 プロジェクト に 設定 」 は し なく て も いい と 思い ます 。 
Java に は 値 型 と 参照 型 の 二つ が あり ます 。 大抵 の クラス は この 両方 の 型 を 使える の です が 、 コレクション 関連 の よう に 稀 に 参照 型 しか 使え ない クラス が ある の です 。 参照 型 しか 使え ない と 値 型 で ある int 、 char 、 boolean など は 使え なく なる ので とても 不便 です よ ね ？ そこ で 使う の が ラッパー クラス です 。 ラッパー クラス は 先述 の 値 型 を 参照 型 として 使う こと の できる クラス で 、 int 型 は Intger 型 に 、 char 型 は Character 型 に 、 boolean 型 は Boolean 型 の 参照 型 変数 に 変換 できる の です 。 これ を 使え ば コレクション 関連 の 参照 型 しか 使え ない クラス で あっ て も int 型 を Intger 型 として 定義 する こと によって 疑似 的 に int 型 を 使える の です 。 つまり Intger クラス （ Intger 型 ） は int 型 が 使え ない 環境 で も int 型 が 使える よう に する ため の クラス だ と 思っ て くれれ ば いい です 。 ラッパー クラス の 一覧 > byte 型 Byte クラス （ Byte 型 ） > short 型 Short クラス （ short 型 ） > int 型 Intger クラス （ Intger 型 ） > long 型 Long クラス （ Long 型 ） > char 型 Character クラス （ Character 型 ） > double 型 Double クラス （ Double 型 ） > float 型 Float クラス （ Float 型 ） > boolean 型 Boolean クラス （ Boolean 型 ） 
条件 演算子 ( 三項演算子 ) です 。 http:// www . javadrive .jp / star t/o pe / index 13 . html 質問 に ある bullet = bullet == null ? new Bullet ( gun . getGun (). x , gun . getGun (). y ) : bullet ; は 以下 の if 文 と 同じ 結果 に なり ます 。 if ( bullet == null ) { bullet = new Bullet ( gun . getGun (). x , gun . getGun (). y ); } else { bullet = bullet ; } 
Complex [] a = new Complex [ 3 ]; ↑ これ は 、 Complex の 入れ物 を 3つ ぶん 作っ た だけ です 。 中身 は 入っ て い ない の です 。 空 です 。 それなのに 、 a [ 1 ]. x ↑ これ は 、 a [ 1 ] の 中身 に Complex が 存在 し て いる 時 に しか 使え ない 書き方 な の です 。 だから エラー に なり ます 。 改善 する に は 、 a [ 1 ] = new Complex (); a [ 1 ]. x = 1 . 0 ; と し ましょ う 。 
オプション の ビデオ 設定 から 、 パーティクル を 最小 に 設定 すれ ば いい か と 思い ます 。 重い の で あれ ば 、 Optifine を 導入 し て み て は いかが でしょ う 。 http:// minecraft six . com / optifine - hd - mod / 
class Hero { private String name = " ks "; private int hp ; }// 1 , クラス が ここ で 終了 し て いる public String getName (){// 2 , メソッド は クラス 直下 に 書く べき return this . name ; } }// 3 , 対応 する 始め 括弧 が 存在 し ない class King { void tolk (){ System . out . println (" ようこそ " + h. getName ());// 4 , 変数 h は 宣言 さ れ て い ない } } public class Main { public static void main ( String [] args ){ Hero h = new Hero ();// 5 , 変数 h は 利用 さ れ ない King k = new King (); k. tolk (); } } 上記 が エラー の 原因 に なっ て い そう な ところ です 。 1 , の "}" は ひとまず 消し ましょ う 。 それで 1 , 2 , 3 , は 解決 し ます 。 5 , で 利用 さ れ ない 変数 を 利用 する ため に は 引数 で 与える の が 一番 です か ね 。 // King の 宣言 側 coid tolk ( Hero h ){ System . out . println (" ようこそ " + h. getName ()); } // Main # main () の 呼び出し 側 k. tolk ( h ); これ で 4 , 5 , は 何とか なる と 思い ます 。 大変 でしょ う が 頑張っ て ください 。 
1 . JdbcBean の オブジェクト 生成 2 . それ を リクエスト の 属性 " JDBCBEAN " に 追加 3 . セッション を 取得 4 . セッション から 属性 " JDBCBEAN _ LIST " を 取得 （ 属性 値 は Object 型 な ので 、 ArrayList < JdbcBean > 型 に キャスト ） 5 . 取得 し た リスト が null なら 、 ここ で 新しい リスト を 作成 6 . リスト に jbean を 格納 7 . セッション の 属性 " JDBCBEAN _ LIST " に リスト を 追加 
> 入力 さ れ た 数字 まで に 7 が いくつ ある の か 数えよ う と し て い ます 。 > この 仕様 が よく わかり ませ ん 。 たとえば 、 78 を 入力 し た 時 は どう なり ます か ？ 7 が 付く の は 以下 の 16 コ 。 7 , 17 , 27 , 37 , 47 , 57 , 67 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 77 は 7 が 2つ な ので 2 コ と カウント さ れ て 、 結果 17 コ に なる の か な ？ と 想像 し て い ます が 。 
> 他 の クラス ( main ) に ある 変数 count の 値 を 別 の クラス で 使う 方法 が 知り たい です 。 クラス 変数 や インスタンス 変数 と 違い 、 main の よう な メソッド や コンストラクタ など の 内部 で 宣言 さ れ て いる ローカル 変数 は それ が 宣言 さ れ た メソッド や コンストラクタ を 実行 し て いる 時 に 生成 さ れ 、 それら の 処理 終了 と共に 破棄 さ れる ので 、 メソッド や コンストラクタ の 外 から は アクセス でき ませ ん 。 関連 する 内容 を 最近 回答 し て おり ます ので 、 変数 について ご 興味 が あれ ば ご覧 ください 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1216039237 ... コード を 提示 さ れ て い ない ので マウス を 放し た 点 を 中心 に 円 を 描画 する サンプル を 作っ て 見 まし た 。 描画 さ せる 図形 ( java . awt .S hape ) は getDrawnShape を オーバーライド する 事 で 変更 でき ます 。 描画 を 行う プログラム を 作成 する 場合 に 知っ て おい た 方 が よい 事 に repaint メソッド の 動作 が あり ます 。 repaint メソッド は 再 描画 を 要求 する メソッド です が 、 必ず 再 描画 さ れる と は 限り ませ ん 。 for ( int i = 0 ; i < 100 ; i ++) { repaint (); } この よう に 間 を おかず に 100回 repaint メソッド を 呼び出し て も せいぜい 数 回 しか 再 描画 さ れ ませ ん 。 この 場合 パネル の paintComponent も 100回 で は なく 数 回 しか 呼び出さ れ ませ ん 。 これ は イベント キュー に repaint が 溜まっ て いる と 最後 の repaint で まとめ て 描画 さ れる 動作 に より ます 。 TestFrame の 場合 は 円 を 必ず 100 , 200 と 交互 に 表示 する 為 に paintComponent メソッド の 中 で circle の 状態 を 変更 し て い ます 。 もしも 異常 な 速さ で クリック 可能 な 場合 に mouseClicked で circle の 状態 を 変更 し て いる と 再 描画 が 1回 間引か れ た 場合 など に サイズ 100 の 円 が 2回 続け て 描画 さ れる 可能性 が ある から です 。 です が 、 通常 は この イベント によって オブジェクト の 状態 を 変更 する 部分 は mouseClicked など の イベント 処理 メソッド に 記述 する 方 が 多い です 。 それぞれ の アプリケーション で repaint メソッド の 動作 を 考慮 に いれ て 設計 する 部分 だ と 思い ます 。 ////////// TestFrame . java ////////// import java . awt . Color ; import java . awt . Dimension ; import java . awt . Graphics ; import java . awt . Graphics 2D ; import java . awt .S hape ; import java . awt . event . MouseEvent ; import java . awt . event . MouseListener ; import java . awt . geom . Ellipse 2D ; import javax .s wing . JFrame ; import javax .s wing . JPanel ; import javax .s wing .S wingUtilities ; public class TestFrame extends JFrame implements MouseListener { private static final Dimension PANEL _ SIZE = new Dimension ( 600 , 400 ); private final JPanel paintPanel = new PaintPanel (); private final Ellipse 2D circle = new Ellipse 2D . Double (); private final int [] wArray = { 100 , 200 }; private int wArrayIndex ; protected MouseEvent lastMouseEvent ; public void configure () { setTitle (" TestFrame "); paintPanel .s etPreferredSize ( PANEL _ SIZE ); paintPanel .s etBackground ( Color . BLACK ); paintPanel . addMouseListener ( this ); add ( paintPanel ); pack (); } protected Shape getDrawnShape () { int width = wArray [ wArrayIndex ++]; if ( wArrayIndex == wArray . length ) { wArrayIndex = 0 ; } double radius = width / 2 ; double x = lastMouseEvent . getX () - radius ; double y = lastMouseEvent . getY () - radius ; circle .s etFrame ( x , y , width , width ); return circle ; } @ Override public void mouseReleased ( MouseEvent e ) { lastMouseEvent = e ; paintPanel . repaint (); } @ Override public void mouseClicked ( MouseEvent e ) {} @ Override public void mousePressed ( MouseEvent e ) {} @ Override public void mouseEntered ( MouseEvent e ) {} @ Override public void mouseExited ( MouseEvent e ) {} private class PaintPanel extends JPanel { @ Override public void paintComponent ( Graphics g ) { super . paintComponent ( g ); if ( lastMouseEvent == null ) { return ; } Graphics 2D g2 = ( Graphics 2D ) g ; g2 .s etColor ( Color . GREEN ); g2 . draw ( getDrawnShape ()); // g2 . fill ( getShape ()); } } public static void main ( String [] args ) { SwingUtilities . invokeLater (() -> { TestFrame frame = new TestFrame (); fra me. configure (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etVisible ( true ); }); } } 
500 が 出 て いる という こと は 、 サーバー 側 が html から リクエスト を 受け取っ て 、 その 処理 途中 で エラー が 発生 し て いる 、 という 状況 です 。 この エラー が 発生 し た 場合 、 tomcat 側 で エラーメッセージ が 出 て いる はず です 。 Eclipse の コンソール の Excepiton メッセージ を 見る と 、 どの コード の 何 行 目 で 、 何 の エラー が 出 た か わかり ます ので 、 それ を 参考 に プログラム を 確認 し て ください 。 
has - a 関係 は 、 包含 関係 と いい ます 。 車 has a ハンドル 車 has a ワイパー という よう に 、 車 は ハンドル や ワイパー を 持っ て いる という こと です ね 。 例えば 、 以下 の A と B という クラス が あり 、 実行 の Main クラス の 3つ が ある と し ます 。 クラス B は クラス A を 包含 し て い ます 。 public class A { public String voice (){ return " OK "; } } public class B { A a = new A (); // ← クラス A を インスタンス化 し て いる public String voice (){ return " NG "; } } public class Main { public static void main ( String [] args ) { B b = new B (); System . out . println ( b . a . voice ()); System . out . println ( b . voice ()); } } b . a . voice () という 箇所 を 見る と 、 b インスタンス の 中 の a インスタンス の voice メソッド を 呼び出し て い ます 。 つまり 、 b has - a a の 関係 だ から 呼び出せる こと に なり ます 。 対比 さ れる is - a は 継承 関係 です ね 。 extends で 継承 すれ ば is - a 関係 に なる こと を 意味 し ます 。 
Encore の スライドショー の オプション で 「 手動 で 進める 」 を 設定 し ます 。 写真 1 枚 ごと に ディレーション ( デフォルト 6 秒 ） を 経過 する と 、 一時停止 し ます 。 決定 ボタン により 、 1 枚 1 枚 手動 で 進める こと が でき ます 。 チャプター スキップ で は 前 / 後 の 写真 へ 移動 でき ます 。 ただし 、 決定 ボタン で は 、 再生 時間 （ ディ レーション ） を 経過 し た 後 で ない と 次に 進め ませ ん 。 ディレーション を 短く （ 12 フレーム （ 00 ; 00 ; 00 ; 12 ） 程度 ） する と 、 すぐ に 一時停止 に なる ので 、 決定 ボタン で も （ スキップ と 同 様に ） 連続 し て 次に 進める こと が でき ます 。 グループ 分け し た スライドショー を いくつ か 作成 し 、 メニュー 画面 と 組み合わせれ ば 、 ご 希望 の イメージ （ ライブラリ ） に なる と 思い ます 。 メニュー ボタン から 、 途中 の 写真 を 指定 し て リンク を はる こと も できる ので 、 チャプター メニュー から 細かい 検索 も でき ます 。 
Progress Bar p = new Progress Bar ( this ); p .s etMax ( 333 ); これ で どう です が ？ 
API ドキュメント から 引用 し まし た 。 java . awt . Graphics :: clearRect https :// docs . oracle . com / javase / jp / 8 / docs / api / java / awt / Graphics . html ... ---------- 指定 さ れ た 矩形 を 、 現在 の 描画 表面 の バックグラウンド ・ カラー で 塗りつぶす こと により クリア し ます 。 この 操作 は 、 現在 の ペイント ・ モード を 使い ませ ん 。 Java 1 . 1 以降 は 、 オフス クリーン の イメージ の バックグラウンド ・ カラー は システム により 異なり ます 。 アプリケーション は setColor に 続け て fillRect を 使う こと によって 、 オフスクリーン・イメージ を クリア し て 特定 の 色 に する こと を 保証 し ます 。 ---------- Graphics :: clearRect は AWT の コンポーネント で 使用 し て いる メソッド で Swing で は あまり 使い道 が ない と 思い ます 。 思いつく の は 、 GUI プログラム を 実行 し て いる ユーザー の システム デフォルト の 背景色 を 利用 し たい 場合 ぐらい でしょ う か 。 AWT の Canvas など で 再 描画 する 際 の デフォルト の 動作 は update メソッド で 再 描画 領域 を システム デフォルト の 背景色 で 塗りつぶし て から paint メソッド で 描画 を 行う と いう もの でし た 。 ( java . awt . Container :: update も 同じ 動作 です ) clearRect は この 塗りつぶし に 使わ れ て い ます が 、 システム デフォルト の 背景色 と は setBackground メソッド で 設定 さ れ て いる 色 で は なく 、 OS に 設定 さ れ て いる デフォルト の 背景色 だ と 思わ れ ます 。 AWT の コンポーネント の 描画 は OS の API に 依存 し て い た ので 、 この よう な 仕様 に なっ た の だ と 思い ます 。 システム デフォルト の 背景色 は java . awt . Frame に setBackground で 背景色 を 設定 し て い ない 場合 に 適用 さ れる 色 だ と 思い ます 。 以下 は その 色 を 確認 する プログラム です 。 //---------- AWTFrameTest . java ---------- import java . awt . Frame ; import java . awt . event . WindowAdapter ; import java . awt . event . WindowEvent ; public class AWTFrameTest { public static void main ( String [] args ) { Frame frame = new Frame (); frame .s etSize ( 300 , 200 ); fra me. addWindowListener ( new WindowAdapter () { @ Override public void windowClosing ( WindowEvent e ) { fra me. dispose (); System . exit ( 0 ); } }); System . out . println ( fra me. getBackground ()); // -> null frame .s etVisible ( true ); } } 
IntSummaryStatistics を 使え ば 、 何 も 考え ず に データ を 取得 する こと が 可能 です 。 public static void main ( String [] args ) throws Exception { try ( BufferedReader br = new BufferedReader ( new FileReader (" テキストファイル 名 "))){ IntSummaryStatistics statistics = br . lines () . limit ( 5 ) . mapToInt ( Integer :: parseInt ) .s ummaryStatistics (); // 以下 取得 方法 statistics . getMax ();// 最大 値 statistics . getMin ();// 最小 値 statistics . getAverage ();// 平均値 } } 
・ クライアント PC の OS の バージョン や スペック ・ サーバ PC の バージョン や スペック ・ JDK など の バージョン ・ データベース の 種類 や バージョン ・ 開発 に 使う ソフトウェア （ IDE など ） の 種類 や バージョン これら 全て 開発 環境 です 。 要は 開発 する 時 に 利用 する もの 全て の 環境 です 。 
そのまま 表現 し て いく こと に なり ます が n は 年数 な ので int 型 です x は int 型 の が 普通 です が 計算 上 面倒 な ので x , y 両方 とも Double に し ましょ う ついで な ので n , x , y は 全て 入力 を 受け付ける 形 に し ます 借金 が 利子 で 増え て いく とき の 計算 は どんな 感じ に なる でしょ う か ( 合計 ) = ( 今 まで の 合計 ) x ( １ ＋ 利子 ) これ に 加え て ( 合計 ) = ( 合計 ) + ( 毎年 の 借金 ) に なり ます よ ね 合計 を sum と すれ ば プログラム で 書く と sum = sum * ( 1 + y ); sum = su m + x ; これ を n 回 繰り返す こと に なる ので for でも 使え ば いい でしょ う という こと で 、 実際 に 作っ て みる と こんな 感じ です - - - - - - - - - - ------------------------- import java . util .*; import java . io .*; public class Main { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); Double sum = 0 . 0 ; System . out . print (" 年数 n > "); int n = Integer . parseInt ( br . readLine ()); System . out . print (" 利子 y > "); Double y = Double . parse Double ( br . readLine ()); System . out . print (" 毎年 x > "); Double x = Double . parse Double ( br . readLine ()); sum += x ; for ( int i = 0 ; i < n ; i ++){ sum = sum *( 1 + y ); sum += x ; } System . out . println ( n +" 年間 の 間 、 利子 "+ y +"% で 毎年 "+ Math . ceil ( x )+" 円 お金 を 借り て い た と する と 、 借金 の 総額 は 今 "+ Math . ceil ( sum )+" 円 です "); } } - - - - ------------------------- 返済 額 が 小数 に なる の は 気持ち が 悪い ので Math . ceil で 繰上げ し て い ます 。 こんな 感じ で 大丈夫 でしょ う か ？ 何 か あれ ば コメント 宜しく お願い し ます 
はい 。 作れ ます 。 サービス + thread サービス + AsyncTask で いける と 思い ます よ 。 
001 は 識別子 (= identifier ) として 不適切 で 、 クラス 名 や メソッド 名 、 変数 名 として 使え ませ ん 。 という エラー です 。 アルファベット 大文字 で 始まる 名前 に し て ください 。 ( もちろん ファイル 名 も ) 
素因数分解 を する アルゴリズム は 簡単 に 言え ば 一番 小さい 割り切れる 数 を 何 度 も 見つける 作業 です な ので 、 それ を 繰り返し で 行う だけ で 大丈夫 です これ が すぐ に 記述 できれ ば 楽々 と コード が 書け て しまう と 思う ので 頑張っ て ください ね 一応 、 コード を 作っ て テスト も 行っ た ので 載せ て おき ます ね ------------------------ import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Main { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); System . out . print (" 数字 を 入力 し て ください ："); int n = Integer . parseInt ( br . readLine ()); if ( n == 1 ){ System . out . println ( n + "= 1 "); // 1 の 時 は 終了 System . exit ( 0 ); } else if ( n < 1 ){ System . out . println (" 入力 さ れ た値 が 不正 です "); // ０ 以下 は 終了 System . exit (- 1 ); } System . out . print ( n +"="); int count = 0 ; while ( n != 1 ){ // 割っ て 最終 的 に 1 に なる まで 何 度 も 割り 続ける for ( int i = 2 ; i <= n ; i ++ ) { if ( n % i == 0 ){ // 割り切れる 最小 の 数 が 見つかる か どう か if ( count == 0 ){ System . out . print ( i ); // 出力 の 時 に 条件 分岐 で 工夫 し て ます } else { System . out . print (" x "+ i ); } count ++; n = n / i ; // 見つかっ た 素因数 で n を 割る break ; } } } System . out . println (); System . out . println (" 素因数分解 を 終了 し まし た "); } } ---------------------- こんな 感じ で 大丈夫 でしょ う か 頑張っ て ください ね ！ 
10 . 0 、 C に インストール ：\ プログラム ファイル （ x86 ） の \ Minecraft の \ ランタイム \ JRE - x64 の \ 1 . 8 . 0 _ 25 [ 13 時 23 分 17 秒 ] [ FATAL / メイン ][ FML ]： 改造 ディレクトリ に 抽出 し jar ファイル が ある よう に 思わ れ ます 。 これ は 非常 に 悪い です し 、 ほとんど うまく 動作 する こと は ありません [ 午前 13 時 23 分 17 秒 ] [ メイン / FATAL ][ FML ]： あなた は 唯一 の 改造 ディレクトリ に元 の jar ファイル を 配置 する 必要 が あり ます 。 改造 の ディレクトリ に 解凍 し ない で ください 。 【 午後 01 時 23 分 17 秒 ] は [ メイン / FATAL ][ FML ]： ディレクトリ は 以下 の jar ファイル を 抽出 し て いる よう に 見え ます 。 続行 する 前 に この 問題 を 解決 。 [ 13 グーグル にて 翻訳 し て み まし た 。 ( 重要 そう な 部分 を ) とりあえず mods ファイル に元 の DL し た jar ファイル を 導入 し て み て ください 。 また 、 前提 mod は DragonMounts littleMaidMob です ので そちら の mod が 導入 さ れ て いる かご 確認 ください 。 もしくは Forge の ver 不具合 かも しれ ませ ん 。 Forge の ver を 変更 し て み て ください 
csh は 使っ た こと ない (^_^;) ので 、 ネット で 調べ ながら やっ て み た 。 ＃ 行頭 ___ は 、 知恵袋 に 投稿 する と いんでんと なくなっ ちゃう ので 、 ＃ その 便宜 対策 。 同数 の 空白 文字 並び に 読みかえ て ください 。 「 配列 」 サポート は ある みたい 。 Cygwin の / bin / csh で は 動き まし た が 、 あなた の csh で 動く か どう か は わかり ませ ん 。 --------------- foo . csh ------------------ #!/ bin / csh # read from standard input $< set a = () set b = () while ( 1 ) ___ set field = ($<) ___ if ( "$ field " == "" ) then ___ ___ break ___ endif ___ set a = ($ a $ field [ 1 ]) ___ set b = ($ b $ field [ 2 ]) end # test print of result set i = 1 while ($ i <= $# a ) ___ echo " a [$ i ], b [$ i ] -> $ a [$ i ], $ b [$ i ]" ___ @ i ++ end --------------- foo . csh ------------------ 実行 結果 ： $ ls - l 合計 8 - rwxr - xr - x 1 me me 286 6月 7 11 : 29 foo . csh * - rw - r -- r -- 1 me me 24 6月 7 10 : 49 in $ cat in aaa bbb ccc ddd eee fff $ ./ foo . csh < in a [ 1 ], b [ 1 ] -> aaa , bbb a [ 2 ], b [ 2 ] -> ccc , ddd a [ 3 ], b [ 3 ] -> eee , fff P.S. なんだか 違和感 あり です ね 、 csh は 。 慣れ かも しれ ない けど 、 やっぱ sh , bash の が ラク 。 
「 上手 に 判断 」 って マンハッタン距離 が 1 以下 か 計算 する こと か と 思っ た Scanner sc = new Scanner ( System . in ); int x = sc . nextInt (); int y = sc . nextInt (); for ( int i = 1 ; i < 11 ; i ++) { for ( int j = 1 ; j < 11 ; j ++) { if ( Math . abs ( x - j )+ Math . abs ( y - i )<= 1 ) { System . out . print ("■");} else { System . out . print ("□");}} System . out . println ();} 
Android は Java な ので 、 でき ます よ text .s etText (" Hello World "); 超 ようやく する と これ だけ で 画面 内 に Hello World できる わけ です 。 
後ろ に カンマ が つく 件 少し コード が 汚く 見える ので 抵抗 ある かも しれ ませ ん が 条件 分岐 し て 終わり System . out . print ( i * j +","); の 部分 を if ( j == 9 ){ System . out . print ( i * j ); } else { System . out . print ( i * j +","); } に すれ ば 大丈夫 。 逆 バージョン は for ( int i = 9 ; i >= 1 ; i --){ for ( int j = 9 ; j >= 1 ; j --){ とすれば 解決 し ます 1 , 4 , 9 , 16 ... の やつ は i == j の 時 だけ 1 を 出力 すれ ば いい ので 条件 分岐 し ましょ う if ( i == j ){ System . out . print ( 1 +","); } else { System . out . print ( 0 +","); } 右側 の 図 は i + j == 10 で の 条件 分岐 に なり ます ね 大丈夫 でしょ う か ？ もし 何 か あれ ば コメント 待っ て ます ね (^_^) 
たいてい の 場合 、 サーバー 内 の データ ( 動画 など ) を 直接 見る 事 は 不可能 。 サーバー 側 で そういう サーバ 内 の データ を アプリ など で 使う 事 が できる よう に インターフェース を 用意 し て 、 公開 し て いる なら アプリ で 自由 に 使える が 、 そういう サイト は ほとんど ない から 。 
( 1 ) プログラム として はさ ほど 難しく ない です が 、 HTTP や HTML の 知識 が ない と 厳しい と 思い ます 。 ( ページ の 一部 を 抜き出す 道具 が あっ て も 、 その 使い方 など が 分から ない ) ( 2 ) 必須 と まで は 言い ませ ん が ( 使い方 によって は 必須 )、 サイト の 管理者 ( 事務所 の スタッフ など ) の 許可 を 得 て おい た 方 が 安全 です 。 通常 で あれ ば 合法 的 な 手段 で やっ て い た に も 関わら ず 、 相手 先 サイト の 問題 も あり 相手 先 サイト に アクセス でき なく なっ た 結果 、 プログラム の 作者 が 逮捕 さ れ た こと が あり ます ( 結果的 に は 起訴猶予処分 )。 参考 ： 岡崎市立中央図書館事件 ( https :// ja . wikipedia . org / wiki /% E 5 % B2 % A1 % E 5 % B4 % 8 E % E 5 % B 8 % 82 % E 7 % AB % 8 B %... 少なくとも 許可 を 得 た 上 で あれ ば 、 ここ まで 大事 に は なっ て い なかっ た と 思い ます 。 
http:// mergedoc . osdn .jp / 上記 サイト の Pleiades は 本家 の Eclipse に 有用 だ と 思わ れる プラグイン を 導入 し た もの を 日本語化 し た もの です 。 日本語化 に関して は それ 以上 何 も 必要 あり ませ ん 。 マシン パワー に 問題 が なけれ ば 余計 な 手間 の 係ら ない 良い 選択 だ と 私 は 思い ます 。 
java が widouws で も 、 LINUX で も なん でも 動く という の は 誤解 です 。 それぞれ の OS の もと で 動く 、 仮想マシン ( VM ) を 格納 し て いる から です 。 oracle が 、 各 OS 用 の VM を 提供 し て い ます 。 VM を コンピュータ から 削除 すれ ば 、 java は 動き ませ ん 。 「 ディスプレィ の 大き さ 」 とか は 、 プログラム 言語 に 無関係 です 。 OS が 制御 する もの です 。 
ある 時点 の スタックトレース を 表示 する ビュー のようなもの は ない と 思い ます 。 標準出力 や 標準 エラー は コンソール と なり ます 。 コンソール の 表示 は メニュー バー の 「 ウインドウ 」 → 「 ビュー の 表示 」 → 「 コンソール 」 です 。 以下 コード を 挿入 する と その 時点 の スタックトレース が コンソール に 出力 さ れ ます 。 new Throwable (). printStackTrace (); 
array [ i ] に 1 を 足し て い ます 。 例えば 、 array [ i ] の 内容 が 2 だっ たら 3 に なる だけ です 。 
> 一般男性 なんて こんな もん そんな 事 ない です 。 類は友を呼ぶ と いい ます 。 彼 の 周り が そういった 杜撰 な 人たち な の でしょ う 。 改善 の 兆し も ない です し 、 人 は 変わら ない もの です 。 避ける べき 人 でしょ う 。 そして きっと 、 まとも な 人 は 彼 から 去っ て 、 同類 が 残っ た 。 。 と 。 さらに 朱 に 交われ ば 、 、 、 と 言い ます 。 勤務 先 で の 評判 が 高い の で あれ ば 収入 も それなり な はず 。 なのに 金欠 という こと は 大 借金 や ギャンブル の 可能性 も 。 関係 を 断つ べき だ と 思い ます よ 。 
swift は 実は ほとんど 知ら ない の です が 、 少し いじっ て い て 何となく 分かっ た よう な 気 が する ので … 。 言葉 や 説明 が 不 正確 かも しれ ませ ん 。 予め 、 謝っ て おき ます 。 swift は サブクラス で 指定 イニシャライザ を 新た に 追加 し なけれ ば 、 全て の 指定 イニシャライザ を 継承 する よう です 。 また 、 スーパークラス の 全て の 指定 イニシャライザ が サブクラス に 存在 すれ ば 、 自動的 に 簡易 イニシャライザ も 継承 さ れる よう です 。 そう で なけれ ば 、 イニシャライザ は 自動的 に 継承 さ れ ない よう です 。 組み合わせる と 、 簡易 イニシャライザ を 自動的 に 継承 に する に は 、 サブクラス に ① 新た な 指定 イニシャライザ を 作ら ない もしくは ② 明示 的 に スーパークラス の 全 指定 イニシャライザ を override する という こと に なる よう です 。 今回 の 例 だ と 、 示さ れ た ソース の まま だ と 、 サブクラス 側 に 実装 さ れ た 新た な 指定 イニシャライザ 以外 の イニシャライザ は 存在 し ない の です が 、 サブクラス 側 に 以下 の よう に スーパークラス の 指定 イニシャライザ を override する と 、 簡易 イニシャライザ も 有効 に なり まし た 。 override init ( neck : Int , size : String ){ super . init ( neck : neck , size : size ) } 
エラー の 部分 を 見せ て もらえ ない と なんとも アドバイス でき ない ので よろしくお願いします ！ 
> if ( leet [ i ] == " A "){ ダブル な ので シングル に し ます ' A ' 
Groovy は 書か れ た コード を 一度 Java の ソースコード に 変換 し て 、 それ を javac で コンパイル し て class ファイル 化 し て い ます 。 Rhino も 同様 。 jsp も 同じ 原理 です 。 一度 Java ソースコード に コンパイル し 直す ため 、 Java の コード 限界 に 左右 さ れ ます （ Java で 書け ない コード は 書け ない 、 という こと ） 。 その ため 、 Java コード に 変換 し やすい スクリプト 系 言語 が この 仕組み を 利用 し て い ます 。 
そもそも 配列 に 20年 分 の データ を 入れ て おく 、 という 設計 自体 が 間違い だ と 気づけ 。 
字句解析器 ( lexer = lexical analyzer ) を 書い て 、 構文解析器 ( parser ) を 書い て 、 構文木 を 走査 し ながら 計算 する 、 という プログラム を 書く こと に なり ます 。 けっこう 大変 な ので 、 勉強 する 目的 で なけれ ば Compiler Compiler とか Parser Generator とか 呼ば れる プログラム を 使っ て 書く 方 が いい でしょ う 。 JavaCC https :// javacc . java .net / が Java だ と 古参 な ので 、 JavaCC 電卓 とか JavaCC caluclator とか で 検索 する と 他 の 人 の ソース が 参考 に できる と 思い ます 。 
何故 、 Forge の Latest 使っ てる ん です か ？ Forge は Mod に 要求 さ れる 場合 を 除い て 、 Recommended を 使う の が 普通 です 。 jar ファイル の 開き 方 について は 私 の 以前 の 回答 が 参考 に なる と 思い ます ので 、 そちら を 見 て ください 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q10 16049757 ... 
> コンパイル する と 、 確か クラス ごと に ファイル って できる の でし た か ？ Yes . > Java の 場合 それ が 普通 です か ？ Yes . クラス 名 . class に なり ます 。 
Unicode の コード ポイント で 12288 U + 3000 は 要するに 全角 空白 です 。 https :// ja . wikipedia . org / wiki / Unicode % E 4 % B 8 % 80 % E 8 % A6 % A 7 _ 3000 - 3 FFF 空白 ( U + 20 ) で ない と いけ ない ところ に 全角 空白 が 混じっ て い ます 。 
Java で は 型変換 です 。 コンパイラ に対して 「 いい から 黙っ て その 型 として みなし なさい 」 という 命令 みたい な もの です 。 でも 、 コンパイル が 成功 し て も 実行 時 に ClassCastException （ キャスト の 結果 、 型 が 全く 違う という 意味 の エラー ） が スロー さ れる こと が あり ます 。 私 は Java しか 使わ ない ので 他 の 言語 で は わから ない です 。 
Java で は 、 コンパイル する と 最初 に 実行 さ れる の は main メソッド と 決まっ て い ます 。 質問 の コード は Main クラス です 。 この Main クラス を コンパイル する と main メソッド が 実行 さ れ ます 。 main メソッド の 処理 は 「 methodA ();」 です 。 これ は 、 methodA () を 実行 し なさい と いう こと です 。 （ ※ static な ので インスタンス化 する 必要 なく 、 そのまま メソッド 名 を 書け ば 呼び出す こと が できる ） methodA () は 、 「 methodA という 文字列 を 表示 さ せる 」 、 そして 「 methodB () 」 と ある ので methodB メソッド を 実行 し なさい と なり ます 。 そこで methodB メソッド で は 「 methodB という 文字列 を 表示 さ せる 」 という 動作 を 行い ます 。 つまり 、 main メソッド に 「 methodA () 」 と 書く だけ で 、 methodA と methodB の ２つ の メソッド が 続け て 実行 できる こと に なり ます 。 仮に 、 main メソッド の 「 methodA () 」 を 「 methodB () 」 に 変え て み て ください 。 コンソール に 表示 さ れる の は 「 methodB 」 だけ です 。 何故 なら 、 methodB に は 、 methodA を 実行 さ せる コード が 書か れ て い ない から です ね 。 
試験 対策 の ため の 弊害 でしょ う か 。 実務 で は その よう に 細かく 区分 し て 仕様 を 意識 する よう な 使い方 はしません 。 グローバル 大域 的 に 利用 する 変数 ローカル スコープ 内 で のみ 利用 する 変数 メンバ クラス 内 で 利用 する 変数 この ３つ の 呼称 を 使い分ける だけ あり 、 普通 は 言語 による 呼称 の 違い など も 意識 し ませ ん 。 
> しかし niwa () に 遷移 する と 文字 が 動か なく なっ て しまい ます 。 noLoop (); と あり ます 。 draw 内 で loadImage する と 1 / 60 秒 ごと に ファイル を 読も う と する ので 、 setup で 行う の が 無難 です 。 細かい とこ です が state が 使わ れ て い ませ ん 。 下記 参考 。 http:// pastebin . com / CHhLnbB 1 
これ で どうでしょう か 。 http:// pastebin . com / k6 wM 4R 8 A 
if に 与え られ てる 式 が a = b な の でしょ う ？ a == b では なく 。 前者 は 代入 演算子 。 代入 は 、 式 として 評価 すれ ば 代入 後 の 値 として 評価 さ れる から 、 if (( a = b ) == true ) という 風 に 解釈 さ れる か と 。 b は 事前 に false と 初期 化 さ れ てる ので 、 成立 し ない 。 boolean a = false , b = false ; を boolean a = true , b = false ; に 変え て 、 やっ て み たら いい 。 結果 は 変わら ない はず 。 
> lovemika 9528202605 さん 2016 / 6 / 1517 : 00 : 02 > Eclipse で どう やっ て xml ファイル と xsl ファイル から xml ファイル を 変換 かける ん です か ？ それぞれ の 利用 言語 の 言語 仕様 に 合わせ て 行い ます 。 
演算子 に は 優先順位 が あり ます 。 http:// www . javadrive .jp / star t/o pe / in de x4 . html int i = j == 0 ? 処理 A : 処理 B ; は int i =(( j == 0 )? 処理 A : 処理 B ); // ただし 、 処理 A , B の 戻り値 が int で ある 必要 が あり ます 。 と 同じ です 。 例えば 、 int j = 0 ; int i = j == 0 ? 1 : 2 ; は int j = 0 ; int i ; if ( j == 0 ) { i = 1 } else { i = 2 ; } と 同じ です 。 
jd k7 です が ( 8 は 探し て ください ） ps :// osdn .jp / projects / sfnet _ jd k7 src / releases / 
... は 処理 の 省略 の 意味 で 使わ れ て いる と 思い ます 。 数学 の 小数点 以下 が 無限 の 場合 とか にも ... は 使用 さ れ ます 。 3.14 15926 ... あと は 数列 が 続く 場合 に も 。 1 , 2 , 3 , 4 , 5 ... なので 省略 の 意味 な ん だ と 思い ます 。 int max () { 省略 } 戻り値 が ある のに return 文 が 指定 さ れ て い ない 時点 で おかしい こと に 気 付ける と よかっ た です ね 。 これ は 、 インナー クラス の 勉強 用 の コード で は ない です か ？ 実行 結果 は 、 min : 1 min : 7 だ と 思い ます が 、 min と max 処理 が 省略 さ れ て いる ので そっち が 正しけれ ば ・ ・ ・ の 話 です 。 あと 、 表示 が 両方 とも min に なっ て いる の が き に なり ます 。 あと 、 Inner の コンストラクタ が 省略 すら 定義 さ れ て い ない の も ちょっと あれ です ね 。 たぶん 呼び出し 関係 とか の 勉強 用 の ソースコード な ので 、 実際 の 動作 や 実用 性 を 求め ない で ください 。 max と min と コンストラクタ を 実装 し て も まだ エラー が 出 ます 。 
http:// www . ne.jp / asahi / hishidama / home / tech / java / JavaCompiler . html 
Java 言語 仕様 と Java 仮想マシン 仕様 http:// docs . oracle . com / javase / specs / index . html コンパイラ の 作り方 は 確立 さ れ て いる ので 何 か 適当 な 書籍 を 読み ます 。 あと は 上記 仕様 に 合わせ て ひたすら 努力 する のみ 。 
> エラー が 大量 に 出 て しまい ます … > 原因 が > わかり ませ ん ど ういっ た エラー が 何 が で て いる の か とか いつ エラー が で た の か 、 build ? 実行 時 ？ 実機 で ？ あなた の 環境 は ？ windows ? mac ? linux ?... インストール は どう やっ た とか これ だけ の 情報 で 答え られる こと は インストール 手順 が 間違っ て い た の では くらい です ね インストール の 手順 は ネット で 調べ られ ます が 、 古い 情報 は そのまま やる と 失敗 する こと が あり ます 。 Android Studio 2.0 移行 の インストール 手順 で 確認 し ましょ う 。 参考 ： https :// akira - watson . com / android / adt - windows . html https :// akira - watson . com / android / adt - mac . html 
私 は 14 . 04 LTS な ので 同じ か どう か は わかり ませ ん が $ sudo add - apt - repository ppa : webupd 8 team / java $ sudo apt - get update $ sudo apt - get install oracle - ja v a8 - installer これ で 入り ませ ん か ？ firefox で 使う だけ なら 、 これ で 十分 です よ 。 
文字コード セット が おかしい から だ と 思い ます が 。 見 た ところ SJIS の html に対して String を そのまま output しよ う と し て い ます 。 Java の String は UTF で エンコード さ れ て い ます ので 、 response. setCharacterEncoding (" utf-8 "); を 入れる だけ で ？ ？ は 直る でしょ う 。 
多分 、 方法 に より ます が 、 100 ～ 数 100 行 程度 は 必要 な ので 回答 は 困難 です が 、 キーワード の 件数 や 、 画像 数 が 少なけれ ば 、 Canvas クラス を 利用 し て 、 予め 、 「 Bitmap bmp ;」 と でも 準備 し て おい て 、 予め リソース （ draw able ） に 画像 を ファイル 名 「 filename .jpg 」 として 保存 し て おけ ば 「 bmp = BitmapFactory . decodeResource ( getResources (), _ _ _ _ _ _ _ _ _ _ _ _________________________ R . drawable . filename ); で 、 読み込め ます 。 表示 は 、 「 canvas . drawBitmap ( bmp , 0 , 0 , null );」 で 、 出来 ます 。 キーワード の 判定 は 、 if 文 で も 良い の です が 判定 用 に クラス を 作っ た 方 が 良い と 思い ます 。 if 文 なら 、 入力 文字列 が 「 inputString 」 なら 「 if ( inputString . equals (" キーワード ")){～}」 で 判定 でき ます 。 追伸 ： 前 の 質問 や 、 前々回 の 質問 の 回答 の よう に キチンと し た システム開発 経験 者 を 含め て 画面 設計 、 機能 仕様 から 話 を 詰める か 。 Android Studio と 言う より Java の 基礎 から 数カ月 かけて 勉強 し て 、 機能 を 決める 事 を お勧め し ます 。 
ウィンドウ → 設定 → Java → エディタ → コンテンツ ・ アシスタント で 設定 でき ます 。 ※{} の 設定 なら 入力 の 「 自動的 に 閉じる 」 とか また 、 有効 に も 設定 できる よう に し たい なら 編集 → スマート 挿入 モード の チェック を 外す こと でも 可能 です 。 これ を 外す と 、 Eclipse 右 下 の 「 スマート 挿入 モード 」 が 「 挿入 」 に 変わり ます 。 
> この プログラム を 実行 する と 、 文字 と 赤い パネル が 表示 さ れ たり さ れ なかっ たり し ます 。 Eclipse 上 と JDK を 使っ て コンパイル し た class ファイル から の ２ 通り で 実行 し て み まし た が 、 私 の 環境 で は 常に 文字 と 赤い パネル の 両方 が 表示 さ れ て い ます 。 G am e2 の よう な シンプル な コード の 場合 は 大抵 は 大丈夫 な の です が 、 可能性 として は main スレッド 上 で Swing コンポーネント へ アクセス し て いる 事 が 考え られ ます 。 Java の 一番 古い GUI ライブラリ の AWT は スレッドセーフ に 設計 さ れ て い まし た が 、 あまり うまく いか なかっ た よう です 。 AWT を 使っ て 安全 な マルチスレッドプログラム を 作成 できる の は AWT の 開発 チーム の 人間 だけ とか 、 何 か で 見 た よう な 記憶 が あり ます 。 その くらい 複雑 な プログラミング と なり 、 AWT の 各 コンポーネント の 内部 動作 に も 精通 し て い ない と 安全 な マルチスレッドプログラム を 作成 でき ない という 意味 だ と 思い ます 。 そこで Swing で は イベントディスパッチスレッド ( EDT ) という 単一 の スレッド 上 で コンポーネント に アクセス する という ルール を 適用 する 事 で 複数 スレッド 間 の 排他制御 も 変数 の 値 の 同期 も 不要 に し まし た 。 その 為 、 マルチスレッドプログラム で Swing を 使う 場合 に は 、 必要 に 応じ て SwingUtilities :: invokeLater など を 使っ て 常に EDT 上 で Swing コンポーネント に アクセス する コード を 記述 する 必要 が あり ます 。 main スレッド も 例外 で は なく 、 main メソッド に SwingUtilities :: invokeLater など を 使わ ず に 、 直接 Swing コンポーネント に アクセス する コード を 記述 する 事 は NG です 。 書籍 や ネット上では main メソッド に Swing コンポーネント へ の 処理 コード を 記述 し て いる サンプル など が たくさん あり ます が 、 現在 で は 正しい 実装 で は あり ませ ん 。 main スレッド 上 で JFrame の 生成 など の コード を 記述 し た 場合 に 、 すべて の 処理 が main スレッド 上 で 処理 さ れれ ば 、 それ は それ で シングルス レッド と なり 安全 な の です が 、 各 Swing コンポーネント の 生成 過程 の コード に は たくさん EDT 上 で 実行 さ れる 部分 が ある ので 、 main スレッド と EDT の ２つ の スレッド が 一つ の コンポーネント へ の 操作 を 行う 事 で その コンポーネント の 内部 状態 を 壊し て しまう ( 変数 が 想定外 の 値 に なる ) 可能性 が あり ます 。 よって JFrame の 生成 や 表示 部分 も main スレッド で は なく EDT 上 で 行う コード を 記述 し なけれ ば なり ませ ん 。 EDT や SwingUtilities :: invokeLater に関して は " swing シングルス レッド " など で 検索 し て み て ください 。 Swing に 限ら ず JavaFX はじめ 、 他 の プログラミング言語 や GUI ライブラリ の 場合 でも 単一 スレッド 上 で 処理 を 行い 排他制御 や 同期 を 不要 に する という 設計 が 採用 さ れ て いる ので 、 学習 し た 事 は 無駄 に は なり ませ ん 。 Swing を 使っ て フレーム を 表示 さ せる プログラム の 場合 は JFrame の サブクラス を 作成 し て 、 main メソッド で は その フレーム を 生成 し て 表示 する コード を SwingUtilities :: invokeLater 内 に 記述 する ケース が 多い と 思い ます 。 G am e2 を JFrame の サブクラス に し て EDT 上 で フレーム の 生成 、 表示 を 行う よう に 書き換える と 以下 の G am e3 の よう に なり ます 。 G am e3 を 実行 し て み て ラベル と 赤い パネル の どちら か が 表示 さ れ ない 場合 に は 詳しい 状態 や 実行 環境 など を 返信 にて 提示 し て 頂けれ ば 何 か 分かる かも しれ ませ ん 。 //---------- G am e3 . java ---------- import javax .s wing . JFrame ; import javax .s wing . JLabel ; import javax .s wing . JPanel ; import java . awt . Font ; import java . awt . Color ; import javax .s wing .S wingUtilities ; public class G am e3 extends JFrame { public G am e3 () { // パネル を 作成 し 、 フレーム に 貼り 付け JPanel jp = new JPanel (); jp .s etBackground ( Color . BLACK ); add ( jp ); // ラベル を 作成 し 、 パネル に 貼り 付け JLabel jl = new JLabel (" こんにちわ "); jl .s etFont ( new Font ( Font .S ERIF , Font . ITALIC , 80 )); jl .s etForeground ( new Color ( 255 , 155 , 0 )); jp . add ( jl ); // パネル 2 を 作成 し 、 パネル に 貼り 付け JPanel jp 2 = new JPanel (); jp 2 .s etBackground ( Color . RED ); jp . add ( jp 2 ); } public static void main ( String [] args ) { // ウィンドウ を 作成 ・ 表示 SwingUtilities . invokeLater (() -> { JFrame jf = new G am e3 (); jf .s etBounds ( 70 , 300 , 1000 , 700 ); jf .s etVisible ( true ); jf .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); }); } } //-------------------- main メソッド は 無名 クラス を 使っ て 以下 の よう に も 書け ます 。 ( 内部 クラス 用 の class ファイル が 生成 さ れ ます ) SwingUtilities . invokeLater ( new Runnable () { @ Override public void run () { JFrame jf = new G am e3 (); jf .s etBounds ( 70 , 300 , 1000 , 700 ); jf .s etVisible ( true ); jf .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); } }); 御 質問 の 内容 と は 直接 関係 ない と 思い ます が 、 G am e2 を 実行 し た 際 に 、 ラベル の フォント が イタリック で サイズ が 23 以上 100 以下 の 場合 に は 私 の 環境 で は FlowLayout が 正しく 動作 でき ず に ラベル の 右端 に パネル の マージン が 重なっ て い まし た 。 御 質問 が この 事 に 起因 する 場合 に は 私 に は とても 対応 でき ませ ん 。 この 症状 に関して 検索 し 、 仕様 な の か 、 バグ な の か を 確認 し て 、 バグ の 場合 に 改善 が 必要 で あれ ば 、 バグ リポート に 報告 さ れ て いる か を 確認 し 、 報告 さ れ て い なけれ ば バグ の 報告 ( 改善 の リクエスト ) を する 事 に なる と 思い ます 。 
> キー " t " を 押し て も 、 線 の 色 が 半 透明 に なり ませ ん 。 fill () は 面積 の ある 図形 の 塗り 色 を 変える だけ な ので 、 line () の 色 に 影響 を 与え ませ ん 。 stroke () を 使う 必要 が あり ます 。 https :// processing . org / reference / stroke _. html 現状 の コード を 生かす と 例えば 下記 の よう な 感じ に なる か と 思い ます 。 http:// pastebin . com / ps2 JaT 8K http:// pastebin . com / L 8 y 6 Gcem 
基本的 に は 乱数 を 使っ て それ を 合計 し て いけ ば いい ので 簡単 に 作る こと が でき ます N が どういう 数 に 近づく か という こと が どういう 意図 で 聞い て いる の か が 少し 微妙 だっ た ので これ で 大丈夫 か な 一つ の サンプル です ----------------------- import java . util .*; import java . io .*; public class Main { public static void main ( String [] args ) throws IOException { Double nsum = 0 . 0 ; for ( int i = 0 ; i < 100 ; i ++ ) { Double n = 0 . 0 ; Double s = 0 . 0 ; while ( s < 1 . 0 ){ Double x = Math . random (); s += x ; n ++; } System . out . println ( n + " 回 で 1 . 0 を 超え ます "); nsum += n ; } Double average = nsum / 100 ; System . out . println (" 平均 " + average + " 回 で 1 . 0 を 超え ます "); } } ------------------- なにか あれ ば コメント を お願い し ます 
ご 質問 を 投稿 さ れ た カテゴリ が コンピュータ テクノロジー > プログラミング > Java つまり 「 Java 」 カテゴリ で ご 質問 の 出だし が 「 java script 」 って どういう こと です か ？？？ 「 Java 」 と 「 JavaScript 」 と は 全く 別物 です 。 また 「 JavaScript 」 は 「 JavaScript 」 という １つ の 単語 で あっ て 「 java script 」 とか 「 Java Script 」 の よう に 途中 に スペース など 入り ませ ん 。 とりあえず 第 一 に 「 何 の ご 質問 な の か 」 が わから ない の です 。 さらに 構造物 が どう なっ て いる の か など の 「 具体 的 な 状況 」 が わかり ませ ん 。 何だか 良く わかり ませ ん が ， ご 質問 が もし 「 Java 」 で は なく 「 JavaScript 」 で あっ た 上 で テキスト と は HTML ページ 内 に ある テキストボックス の こと だ と する なら その テキストボックス の 値 を parseInt () または parseFloat () 辺り で 数値 化 し て み て その 変換 し た データ が 入力 さ れ た データ と 違っ て いれ ば 0 扱い と すれ ば 良い かも しれ ませ ん 。 その parseFloat () を 使っ た 場合 の JavaScript 入り の 検証 用 HTML コード 全 文例 です ↓ 。 < html > < head > < meta charset =" shift_jis "> < title > Test </ title > < script type =" text / javascript "> // 関数 changeTreatm の 定義 function changeTreatm (){      // 左右 の 各 テキストボックス の 参照 を 代入 する 変数 を 宣言      var txtL , txtR ;      // 変数 i を 0 ～ 6 の 間 で 1 ずつ 加算 し ながら ループ      for ( var i = 0 ; i <= 6 ; i ++){          // 左側 の テキストボックス の 参照 を 取得          txtL = document . getElementById (" txtL " + i );          // 右側 の テキストボックス の 参照 を 取得          txtR = document . getElementById (" txtR " + i );          // 左側 の テキストボックス の 値 が 数値 化 し た もの と 違っ て いれ ば          if ( txtL . value != parseFloat ( txtL . value )){              // 右側 の テキストボックス の 値 を 0 に する              txtR . value = " 0 ";              // 以降 の 処理 は せ ず 次 の i ループ へ              continue ;          }          // 右側 の テキストボックス の 値 を 右側 と 同じ に する          txtR . value = txtL . value ;      } } </ script > </ head > < body > < input id =" txtL 0 " value =" 300 - 2 " size =" 10 "> →< input id =" txtR 0 " readOnly size =" 10 ">< br > < input id =" txtL 1 " value =" 300 2 " size =" 10 "> →< input id =" txt R1 " readOnly size =" 10 ">< br > < input id =" txtL 2 " value =" 300 . 2 " size =" 10 "> →< input id =" txt R2 " readOnly size =" 10 ">< br > < input id =" txtL 3 " value =" 3 , 300 " size =" 10 "> →< input id =" txt R3 " readOnly size =" 10 ">< br > < input id =" txt L4 " value =" i 300 " size =" 10 "> →< input id =" txtR 4 " readOnly size =" 10 ">< br > < input id =" txtL 5 " value =" 300 i " size =" 10 "> →< input id =" txt R5 " readOnly size =" 10 ">< br > < input id =" txtL 6 " value =" 300 " size =" 10 "> →< input id =" txtR 6 " readOnly size =" 10 ">< br > < br > < input value ="↑ 扱い 変更 ↑" type =" button " onclick =" changeTreatm ()"> </ body > </ html > 
Inner クラス min という メソッド ＝ 与え られ 数字 の 配列 の 最小 値 を 返す 。 max という メソッド ＝ 与え られ 数字 の 配列 の 最大 値 を 返す 。 って 事 だろ 。 Inner クラス が できれ ば Outer クラス の 足り ない 所 も わかる はず 。 
どの 言語 も 特性 が あり ます 。 Pthon の 良い とこ ・ 悪 いとこ も あれ ば 、 Java の 良い とこ ・ 悪 いとこ も あり ます 。 なので 一概に 「 Java 最高 ！ 」 だ とか 「 Java は クソ だ な ！ 」 と は 言え ませ ん 。 余談 です が 、 Java ” のみ ” だ と 確か に GUI は 弱い です 。 弱い と いう か 面倒 と いう か ･･。 
ma t h. rondom の 方 が いい ですよ。 int x =( int )( ma t h. rondom )* 10+1 ; 
ポインタ が 理解 でき ない から で は あり ませ ん 。 より 簡単 に 記述 できる 言語 が ある なら 、 そちら で 開発 し た 方 が コスト が 掛から ない の だ から 、 多く の 人 にとって 嬉しい でしょ う 。 
> mtaiyo 04 さん 2016 / 6 / 1501 : 53 : 12 > １ ） もし 、 HP 業者 に 維持管理 費 を 支払う と し たら 、 月 あるいは 年 単位 で どれ ぐらい の 費用 掛かる でしょ う か ？ 脳内 デザイナー の 場合 だ と 年間 1000円 くらい だ と 思い ます 。 > ２ ） もし 、 私 が 個人的 に 同 HP の 管理 を 任さ れる の で あれ ば 、 どれ ぐらい の スキル が 必要 です か ？ html を 1 週間 ならっ た くらい で できる と 思い ます 。 
＞ C [ ig 75 icd 64 . dll + 0 x 733 f3 ] Intel GPU の OpenGL ドライバ が エラー を 起こし て い ます java は 関係 あり ませ ん 。 intel グラフィック の アップデート を し て み て ください 。 
> 上記 の URL の 通り に やり まし た が 2011年 と は ５ 年 も 前 の 情報 です ね Android の 仕様 、 スペック は 数 か月 前 の 情報 で も 古く て 使え ない こと が あり ます ので 心して おき ましょ う ACCESS _ FINE _ LOCATION ACCESS _ COARSE _ LOCATION は Android 6 から は Dangerous Per mission と なり まし た https :// akira - watson . com / android / runtime - per mission . html checkSelfPermission を 実行 し て ユーザー から の 許可 を 得 ない と いけ ませ ん https :// akira - watson . com / android / gps . html 
ウィンドウ → 設定 → Java → エディター → 入力 の 「 Enter キー で 新しい 行 の インデント を 調整 する 」 に チェック か な 。 
> processing を ちゃんと 学ぶ に は java も 学ん だ ほう が いい です よ ね ？ です 。 一言 で 言え ば 、 Java に 一皮 かぶせ た よう な もの 、 です から 。 いろんな ところ で Java の テクニック を 必要 と し ます 。 
メソッド 化 って 聞い た こと が あり ませ ん 。 インスタンス化 で あれ ば 聞い た こと が あり ます 。 推測 です が 、 その メソッド 化 って 重複 し て いる コード など を 独立 し た メソッド に まとめる こと で は ない です か ？ 
セル の スタイル 設定 は この 辺 が 参考 に なり ます 。 http:// www . javadrive .jp / poi / cell / in de x4 . html ただし こちら の サンプル は xls 形式 に しか 対応 し て ませ ん ので ご 留意 下さい 。 （ xlsx 形式 に は 対応 し て い ない ） 
Minecraft は Window 10 では 動作 し にくい という 回答 が あっ た ので 。 Minecraft は java で 動い て い ます 。 java という の は どの デバイス で も 同じ よう に 動く 、 という の が 一番 の 目玉 です 。 Window で も Mac で も Linux で も 、 サーバー で も 。 なので Window 10 だ から 動作 し にくい という の は 理論 上 は おかしい の です で は 何故 Window 10 edition を 出し た の か 。 そして 何故 Window 10 では 動作 し にくい と の 情報 が ？ 前者 は Minecraft が Microsoft に 買収 さ れ た から です 。 何故 動作 し にくい の か （ と 言わ れ て いる の か ） それ は java 側 の 問題 です 。 大体 の 人 は Window 10 に し て も java が 最新 じゃ なかっ たり … … それで java の 不具合 で Minecraft が 重く なっ たり クラッシュ し たり し ます 。 質問 と は 全く 関係 ない 回答 で 失礼 し まし た 。 （ と 言う か 、 実際 1 . 9 が 出 た ので Java 版 を 捨てる よう な こと は あり ませ ん 。 ） で 、 エラーログ を 見 た ところ forge が 入っ て いる の が 気 に なる ものの それ っぽい エラー は 見え ない ので サーバー 側 、 もしくは ルータ 、 ネッワーク 側 の エラー の よう に 見え ます 。 もちろん 1 人 で は エラー は 起き ませ ん よ ね ？ は まち は 使っ て ない ので 分から ない ん です が 、 もしか する と は まち 側 の 問題 の 可能性 が あり ます 。 
それぞれ 特 化 し た スキル は 必要 です が 、 全般 の 知識 は 必要 です よ 。 例えば プログラマー は 言語 だけ 知っ て いれ ば いい という 訳 で は あり ませ ん 。 DB アクセス する なら その 知識 も 必要 です し 、 ネットワーク の 知識 だって 必要 です 。 基盤 構築 だって 、 ・ サーバ の 知識 。 ディスク ひとつ でも 回転速度 や 接続 の 形状 が 色々 あり ます 。 信頼性 と 予算 の 兼ね合い で どれ を 選定 する か という 役割 が あり ます 。 メモリ や 各 メーカー の サーバ だって 知識 が 必要 です 。 ・ OS も Windows な の か Linux な の か 、 また Windows で あっ て も サポート を 考え 最新 版 に する の か 、 動作 が 安定 し て いる １つ 前 の バージョン を 選定 する の か 判断 が 必要 です 。 ・ ネットワーク の 知識 も 必要 です し 、 ケーブル だって 通信 速度 や 品質 によって 色々 種類 が あり ます 。 これ も 求め られる 信頼性 と 予算 の 兼ね合い で 選定 し なく て は いけ ませ ん 。 
不可能 問題 。 ＞ public class boolean isOdd ( int x ) { return ( x % 2 == 1 ); } この 構文 が 致命 的 に 間違っ て いる ため 、 そもそも 解く こと が でき ませ ん 。 
この 辺 が 参考 に なり ます 。 http:// www . javaroad .jp / servlet jsp / sj _ servlet 1 . htm 
g2 は Graphics 2D クラス の インスタンス です 。 また 、 Graphics 2D . draw で 引数 として 渡せる の は Porigon クラス の インスタンス です 。 です から 、 g2 . draw ( gun ); は 実行 でき ませ ん 。 gun . draw ( g2 ) の 内部 処理 を 見 て みる と g2 .s etColor ( Color . YELLOW ); g2 . fill ( p ); g2 .s etColor ( Color . BLACK ); g2 . draw ( p ); と なっ て おり 、 Porigon の インスタンス p を 元 に fill や draw を 実行 し て い ます 。 もちろん 、 gun . draw ( g2 ); を 実行 せ ず に 、 Porigon 作成 から 含め た すべて の 処理 を 自前 で 書い て も 構い ませ ん が 、 コード が わかり にくく なる でしょ う ね 。 
この コード です と 、 最初 は 0 ～ 4 の 数字 が 1つ 入っ た 長さ 5 の list が 、 次 の loop で 再度 0 ～ 4 の 数字 が 追加 さ れ た 長さ 10 の list と なり 、 次に 長さ 15 の list と なり … … を 繰り返し て いる うち に 偶然 同数 が 多数 出る こと に なり ます 。 やり たい こと は たぶん 、 list の 長さ が 5 の まま で shuffle した値 を 表示 、 だ と 思い ます 。 です から 1 . list . add し て いる for 部分 を while より 前 に 実行 2 . list . add し て いる for 部分 の 前 で list . clear () を 実行 し て list を クリア の どちら か を 行う こと に なる でしょ う 。 毎回 0 ～ 4 の 値 を セット する 意味 は ない ので 1 の やり方 を お薦め し ます 。 参考 まで に 2 . の やり方 は コメント で 提示 し て おき ます が 。 for ( int t = 0 ; t < 5 ; t ++){ list . add ( new Integer ( t )); } while ( cnt < 10 ) { // 以下 の コメント 行 は 2 の 場合 の やり方 です 。 // list . clear (); // for ( int t = 0 ; t < 5 ; t ++){ // list . add ( new Integer ( t )); //} Collections .s huffle ( list ); for ( int i = 0 ; i < 5 ; i ++){ int n = list . get ( i ); System . out . println ( n ); } cnt ++; } 
for ( int i = 0 ; i < spell . length ; i ++){ tmp = spell [ i ]; spell [ i ]= spell [ work ]; spell [ work ]= tmp ; } この 時点 で 、 work は 0 固定 で 変更 が あり ませ ん 。 char 型 な ので 配列 の 要素 数 の 指定 に は 不適切 でも あり ます 。 この 場合 、 i は 1 ずつ 増え て いく ので 0 と 0 ~ 最大 まで の 交換 に なり ます 。 正しく 動作 さ せる ため に は 、 正 方向 と 逆 方向 から 参照 し て その 値 を 入れ替え て いく べき です 。 work を int 型 で 宣言 し なおし て 、 for ( int i = 0 ; i < spell . length ; i ++){ //--- 追加 --- work = spell . length - i - 1 ;// i の 反対 の 文字 の 番号 if ( work <= i ) break ; //---------- tmp = spell [ i ]; spell [ i ]= spell [ work ]; spell [ work ]= tmp ; } 上 の よう に 二 行 追加 し たら 動く と 思い ます 。 ついで に 。 char 型 配列 は char [] spell = " Anniversary ". toCharArray (); と する と 宣言 し やすい です 。 
空 リテラル （ null riteral ） http:// www . boh yo h. com / Java / DIC / NullLiteral . html 
unix ( 系 OS ) に 古く から 存在 する コマンド の こと で は 。 https :// ja . wikipedia . org / wiki / Tail unix なら ば 、 man tail など と 打て ば 、 オンライン マニュアル が 表示 さ れ ます 。 
import java . nio . file .*; import java . nio . charset .*; import java . io .*; import java . util . stream .*; class test { public static void main ( String [] args ) { Path path = Paths . get (" test . txt "); Charset sjis = Charset . forName (" MS 932 "); try ( BufferedReader br = Files .new BufferedReader ( path , sjis ); ){ Files . write ( path , br . lines (). map ( s ->"< p class =' c1 9 '>< span class =' c1 8 '>"+ s +"</ span ></ p >"). collect ( Collectors . toList ()), sjis ); br . close (); } catch ( FileNotFoundException e ){ System . out . println (e) ; } catch ( IOException e ){ System . out . println (e) ; } } } 
以下 の 言葉 に 置き換える と わかる かも 。 ヒープ 領域 → Java が 確保 し た メモリ メモリ 領域 → 空き メモリ 部分 
メリット ざんまい です 。 例えば こういう とき に 使い ます 。 ・ 抽象 親 クラス [ 食べ物 ]: abstract Food ・ 子 クラス 1 [ オムライス ]: Omurice （ extends Food ） ・ 子 クラス 2 [ うどん ]: Udon （ extends Food ） ・ 子 クラス 3 [ お 寿司 ]: Sushi （ extends Food ） 食べ物 クラス に 、 「 Eat （ 食べる ） 」 メソッド を 入れ て おき ます 。 これ は 仮想 メソッド として 、 継承 先 で オーバーライド し て 書き換え られる よう に し て おき ます 。 「 食べる 」 という 行為 は 食べ物 によって 実は やっ てる こと が 違い ます よ ね 。 それ を 子 クラス が 何 で ある か によって 分岐 さ せる の です 。 オムライス の 「 食べる 」 は 、 ケチャップ を かけて スプーン で 一部 崩し て口 に 運び ます 。 うどん の 「 食べる 」 は 、 お箸 で 数 本 つかん で すすり ます 。 お 寿司 の 「 食べる 」 は 、 手 で つかん で 醤油 に つけ て 口 に 入れ ます 。 これら の 食べ物 クラス たち を 使う 側 として は 、 これから 食べよ う と し て いる 食べ物 が 何 で あっ て も 「 食べ たい 」 わけ です 。 でも 、 食べ物 によって 食べる 側 が 場合 分け し て いちいち この 食べ物 だっ たら こう 、 これ だっ たら こう 、 とか やっ て られ ない です よ ね 。 そこで 、 使う 側 で は Food クラス の 変数 を 作っ て おい て そこ に 任意 の 食べ物 を 入れ て やる こと に し ます 。 食べる とき は 食べ物 が 何 で あっ て も Eat メソッド を 呼べ ば いい の です 。 // うどん を 食べる Food food = new Udon (); food . Eat (); 食べる とき は 別に うどん じゃなくて も いい わけ です ね 。 実際 に Eat に たどりつい た とき に は 、 うどん だっ たら きちんと すすっ て 食べ て くれる よう に なり ます 。 // 配列 を 使っ て 、 3 種類 食べる Food [] foods = { new Omurice (), new Udon (), new Sushi ()}; for ( int i = 0 ; i < 3 ; i ++){ foods [ i ]. Eat (); } 繰り返し の はず が 、 処理 は 食べ物 によって 分岐 する ので 処理 内容 が すべて 違う の が 確認 でき ます 。 
minecraft なら そう 書け ば いい のに 。 その minecraft は Java 8 に 対応 し て い ない ため 、 Java 8 を アンインストール し て Java 7 を インストール し ましょ う 。 
class Ren 01 _ Toi 04 { public static void main ( String [] args ){ Stream . of (" ３ 教科 の 平均 点 は 、 ", String . valueOf (( int ) IntStream . of ( 80 , 65 , 98 ). average (). getAsDouble ())," 点 です 。 "). forEach ( System . out :: print ); } ※ 課題 は 自分 で 解き ましょ う 。 
> ckg 16099 さん > Java の 問題 が 解り ませ ん 。 答え の ソース を 教え て 下さい 。 クラウドソーシング に 頼む と やっ て もらえる と 思い ます 。 
http:// techacademy .jp / magazine / 6168 http:// www .s ejuku .net / blog / 385 http:// qiita . com / HideakiSaito / items / 5 be 1 a 45870 a 4 c3 d1 a3 c 7 「 Cloud 9 」 と ググっ た だけ で 十分 詳しい サイト が 幾つ か 出 て き まし た よ 。 この 辺り 読ん で 理解 でき なきゃ 、 その 先 の 事 は いくら 本 読ん で も 理解 でき ない でしょ 。 
java で 積 を 表す 演算子 は 、 「*」 です 。 java の 定型 パターン で プログラム を 書き ましょ う 。 http:// javaroad .jp / java _ basi c1 . htm 
> jaefhuahe さん 2016 / 5 / 3114 : 30 : 29 > 少し 高級 な ラブホ に ある よう な 、 テレビ で 飲食 メニュー とか を 閲覧 注文 出来る システム って どういう 風 に 作っ てる ん でしょ う か ？ 独自 発注 だ と 思い ます 。 > 同軸ケーブル で 画面 を 転送 ？ ？ WIFI でも 可能 。 > 中央 で 一元 管理 し てる ？ ??? > リモコン 入力 内容 は どう やっ て 中央 に 伝え てる ん でしょ う ？ ？ タッチパネル で は なく リモコン ？ たま に 依頼 が 有り ます が 、 リモコン より タッチパネル の 方 が 多い 感じ です 。 リモコン は 、 キー の エミュレート な ので 特に 変わっ た 事 は 有り ませ ん 。 
1つ の 言語 を ちゃんと 習得 でき て いれ ば 、 他 の 言語 も 苦労 は 少ない です 。 例えば 、 C言語 が 必要 に なっ た として 、 ポインタ の よう に Java に は ない 概念 は 勉強 する 必要 が あり ます が 、 if 文 とか for 文 とか 基本 的 な 概念 は さほど 変わり ませ ん 。 一方 で 、 Java の 文法 は あらかた わかっ た けど 、 Java で ○ ○ を 作り なさい 、 という よう な 指示 が あっ て 、 それ を どう やっ て 作れ ば いい の か わから ない 、 という 状況 だ と 、 使う の が Java で あっ て も 他 の 言語 で も 苦労 し ます 。 「 ○ ○ 」 固有 の 知識 が 必要 ( 例えば 非常 に 高度 な 数学 知識 が いる とか ) で そこ が わから ない という の は 仕方 ない と 諦める として 、 分野 固有 の 知識 は が 必要 ない もの は ある程度 作れる と 楽 です 。 あなた が 作ってみた いも の を 考え て み て 、 実際 に 取り組ん で 見る の が 近道 か と 思い ます 。 実現 方法 が わから なく て も 、 安易 に 人 に 聞い たり せ ず に 本や Web から 見つかる まで 調べ て みる ( 必要 な 情報 を 見つける スキル が つき ます ) とか 、 時間 が かかっ て も 自分 で 考え て みる ( 思考 力 が つき ます ) とか 、 頑張っ て みる と よい です 。 最初 は わから なく て も 当然 で 、 時間 が かかっ て も 、 わかる まで 挑戦 し 続け て みる と いい です 。 と は いえ 、 あまりに も わから なく て 嫌 に なっ て き たら 、 テーマ が 無謀 すぎ た と 諦め て 別 の こと に 取り組ん で 見る の も あり です 。 
> ckg 16099 さん > Java の 問題 が 解り ませ ん 。 答え の ソース を 教え て 下さい 。 クラウドソーシング に 頼む と やっ て もらえる と 思い ます 。 
実装 例 です 。 import java . util .S canner ; public class Sample { public static void main ( String [] args ) { Scanner scanner = new Scanner ( System . in ); System . out . print (" n ="); int n = scanner . nextInt (); scanner . close (); while ( n > 9 ) { n = hoge ( n ); System . out . println ( n ); } } private static int hoge ( int n ) { return n < 10 ? n : n % 10 + hoge ( n / 10 ); } } // wethermd q 11159943841 
public class Ren 01 _ Toi 03 { public static void main ( String [] args ) { int price = 200 ; // 単価 int num = 6 ; // 個数 double rate = 0 . 08 ; // 消費税率 int payment ; // 支払 額 payment = ( int ) ( price * num *( 1 + rate )); // 支払 額 計算 System . out . println (" 支払 額 は " + payment + " 円 です ."); } } 
import java . util .S canner ; public class Sample { public static void main ( String [] args ) { Scanner scanner = new Scanner ( System . in ); System . out . print (" 正 の 整数 ="); int n = scanner . nextInt (); scanner . close (); if ( n >= 0 ) { for ( int i = 2 , max = n / 2 ; i <= max ; i ++) { if ( n % i == 0 ) { System . out . println (" 最大 の 約数 =" + ( n / i )); break ; } } } } } // jtdw 286423 q 11160496936 
Paiza の 問題 の 解答 を 書く の は ルール 違反 な ので 考え方 だけ 。 １ ． String [] b を String [][] b で 宣言 し て 、 new で カラム 数 と 配列 の 数 で 宣言 する ２ ． List < String []> を 用意 し て 、 for ループ 内 で add し て いく の ２ 種類 です ね 。 
たぶん c言語 の printf が もと に なっ て い ます 。 java で は 積極的 に は 使わ れ て い ない はず な ので 、 C言語 関連 で 調べる と 情報 が 多い でしょ う 。 % d → decimal で 、 10 進数 を 表す % s → string で 、 文字列 を 表す % c → character で 、 文字 を 表す みたい な 決まり が あり ます 。 これら が 第 二 引数 以降 の もの に 置換 さ れ て ゆき ます 。 第 一 引数 :”% 3d * 2 =% d ¥ n ” 第 二 引数 : i 第 三 引数 : 2 * i ” % 3d * 2 =% d ¥ n ” ↓ ( i ) + "* 2 =% d \ n " ↓ ( i ) + "* 2 =" + ( 2 * i ) + "\ n " 一つ 注意 が 必要 で 、 % 3d に は 3 が 間 に 入っ て い ます 。 これ は 最低 で も 3 文字 分 は 幅 を とる という こと です 。 実際 に 出力 する と __ 0 _ 10 100 1000 (_ は スペース ) の よう に なり ます 。 なので スペース を 含め た 正しい 出力 結果 は _ 10 * 2 = 20 こう なり ます ね 。 書き方 は print より も 複雑 です が 、 表示 方法 の 指定 など できる こと は 多い です 。 覚え て おい て 損 は ない でしょ う 。 
int [] i = new int [ 5 ]; for ( int n = 0 ; n < i . length ; n ++) i [ n ] = 0 ; これ が 配列 を 初期 化 する 基礎 的 な プログラム です 。 これ の 型 と 初期 値 を 置き換える イメージ を する と やり やすい かも しれ ませ ん 。 int → ArrayList < E > 初期 値 0 → new ArrayList < E >() ArrayLlist < Integer >[] list = new ArrayList < Integer >[ 5 ]; for ( int n = 0 ; n < list . length ; n ++) list [ n ] = new ArrayList < Integer >(); list の 操作 は 、 値 の 追加 list [ 0 ]. add ( 1 ); 値 の 取得 list [ 0 ]. get ( 0 ); 要素 数 の 取得 list [ 1 ]. size (); みたい な 感じ です 。 一応 逆転 し た バージョン も 書い て おき ます ArrayList < Integer []> list = new ArrayList < Integer []>(); list . add ( new Integer [ 5 ]); list . get ( 0 )[ 0 ] = 3 ;// 代入 
まずは 何 か 作り ましょ う ！ 最初 は 本 で 学習 し て も 躓き やすい ので Life is tech ! という 有料 の ところ で アプリ 開発 を 教わる の も いい でしょ う 。 Android は 環境 構築 が 最初 は 躓き やすい の です 。 まずは Android Studio を 入れる ところ から です 。 こちら に いい 記事 が あり まし た 。 https :// akira - watson . com / android / adt - windows . html 起動 が でき たら カウントアプリ を 作っ て み て ください 。 
Eclipse で Android アプリケーション を 開発 する ため の ADT プラグイン は 、 昨年 いっぱい で 開発 も サポート も 打ち切ら れ て いる ため 、 それ 以後 の Android SDK の 機能 の 変化 に は 追随 でき なく なっ て い ます 。 特に 質問 で 記さ れ て いる よう に Theme 周り の 定義 が 今 の SDK と は 全く 整合性 が 取れ なく なっ て いる ので 、 これ を 何とか コード 改変 だけ で 解決 する の は ほとんど 不可能 です 。 さらに 、 過去 の Android バージョン と の 互換性 を 持た せる ため の Android Support Library が 単独 で は 配布 さ れ なく なっ て い ます 。 SDK マネージャー で 廃止 パッケージ の 表示 を 有効 に すれ ば リスト に は 現れ ます が 、 これ も 今後 は 更新 さ れ ない でしょ う 。 Android Studio に 移行 する の が 最善 な の です が 、 それでも 参考書籍 など の 関係 で どうしても Eclipse で 開発 を し たけれ ば 、 添付 画像 の よう に し て プロジェクト を 作成 し て ください 。 まず 、 「 最小 必須 SDK 」 は API 14 以上 に し て ください 。 14 未満 に する と 、 前述 の Support Library の 参照 が 必須 に なっ て しまう ため 、 これ を 回避 する ため です 。 それから 、 「 次 で コンパイル 」 は API 22 に し ます 。 現行 バージョン で ある API 23 で は 、 他 の 設定 の 絡み で プロジェクト 作成 が でき ませ ん 。 API 22 を 選択 する ため に は 、 SDK マネージャー で API 22 の SDK Platform を 予め インストール し て おい て ください 。 そして 、 「 テーマ 」 を None に し ます 。 これ により 、 テーマ を 使わ ない プロジェクト に なり ます から 、 質問 で 問題 に なっ て いる Theme の 定義 に 関わる エラー は 回避 でき ます 。 これ で 、 一応 作成 さ れ た プロジェクト は エラー の ない 状態 に できる はず です 。 できる こと の 制約 は 大きい です が 、 ひとまず 古い 書籍 を 参考 に し た コーディング くらい は できる ん じゃ ない でしょ う か 。 繰り返し ます が 、 ベスト は Android Studio に 移行 する こと です 。 この 手段 は 緊急避難 的 と 考え て ください 。 
どういう コード を 書い た の か 次第 な ん です が 、 package 文 を 使っ て パッケージ 付き で 記述 し て い ませ ん か ？ 例えば pac kage pack ; と 付け て 作っ た の なら 、 コンパイル する と pack という フォルダー が 作ら れ 、 その 下 に Test . class が ある はず です 。 ここ で 、 Test . class が ある ところ に コマンド で 移動 し て java Test と 実行 し て も 、 質問 と 同じ エラー に なり ます 。 正しく 実行 する ため に は 、 pack フォルダー の ある 場所 で java pac k. Test の よう に パッケージ 名 を 頭 に 付け た 完全 修飾 クラス 名 で 指定 する 必要 が あり ます 。 
６ 行 目 ： for ( var i = k + 1 ; i < A . length - 1 ; k ++) → for ( var k = 0 ; k < A . length ; k ++) 18 行 目 : for ( var i = A . lengh - 1 ; i >= 0 ; i --) → for ( var i = A . length - 1 ; i >= 0 ; i --) 
Java 8 なら Arrays . stream ( f ). allMatch ( FClass :: alive ) で いける 。 ( FClass の ところ を f の クラス 名 に 変更 ) 無理 なら これ で 。 boolean r = true ; for ( int i = 0 ; i < f . length ; i ++) { __ if (! f [ i ]. alive ()) { ____ r = false ; ____ break ; __} } 一つ で も false が 見つかっ たら そこ で 打ち切れ ば いい です 。 
JScrollPane の ビューポート から ビュー で ある テキスト エリア を 取得 し ます 。 getComponent も JViewport :: getView も 戻り値 の 型 が Component な ので キャスト が 必要 に なり ます 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / javax / swing / JScrollPan ... サンプル コード を 用意 し まし た 。 button 1 押下 時 の 処理 は actionPerformed メソッド に 記述 さ れ て い ます が 、 そこで スクロール ペイン から テキスト エリア の 参照 を 得て テキスト を 取得 し て い ます 。 この よう な コンテナ から子 を たどっ て いっ て 目的 の コンポーネント の 参照 を 得る やり方 は あまり 行わ れ て い ませ ん 。 通常 は イベント 処理 など の 際 に 必要 と なる コンポーネント の 参照 は インスタンス 変数 として 保持 し て おき 、 それ を 使い ます 。 bu t to n2 押下 時 の 処理 は 無名 クラス を つかっ て アクション リスナー を 登録 し て い ます 。 こちら は インスタンス 変数 textArea を 使っ て い ます 。 //---------- TestFrame . java ---------- import java . awt . BorderLayout ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import javax .s wing . JButton ; import javax .s wing . JFrame ; import javax .s wing . JOptionPane ; import javax .s wing . JPanel ; import javax .s wing . JScrollPane ; import javax .s wing . JTextArea ; import javax .s wing . JViewport ; import javax .s wing .S wingUtilities ; public class TestFrame extends JFrame implements ActionListener { private final JPanel textAreaPanel = new JPanel (); private final JTextArea textArea = new JTextArea (" TextArea ", 3 , 10 ); public TestFrame () { super (" Test "); } public void configure (){ JScrollPane scrollPane = new JScrollPane ( textArea , JScrollPane . VERTICAL _ SCROLLBAR _ ALWAYS , JScrollPane . HORIZONTAL _ SCROLLBAR _ ALWAYS ); textAreaPanel . add ( scrollPane ); add ( textAreaPanel ); JButton button 1 = new JButton (" button 1 "); button 1 . addActionListener ( this ); JButton bu t to n2 = new JButton (" bu t to n2 "); bu t to n2 . addActionListener (( e ) -> { // アクション リスナー JOptionPane .s howMessageDialog ( this , " bu t to n2 :" + textArea . getText ()); }); JPanel buttonPanel = new JPanel (); buttonPanel . add ( button 1 ); buttonPanel . add ( bu t to n2 ); add ( buttonPanel , BorderLayout . SOUTH ); pack (); } @ Override public void actionPerformed ( ActionEvent e ) { JScrollPane sp = ( JScrollPane ) textAreaPanel . getComponent ( 0 ); JViewport viewport = sp . getViewport (); JTextArea ta = ( JTextArea ) viewport . getView (); JOptionPane .s howMessageDialog ( this , " button 1 :" + ta . getText ()); } public static void main ( String [] args ) { SwingUtilities . invokeLater (() -> { TestFrame frame = new TestFrame (); fra me. configure (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etVisible ( true ); }); } } 
Android Studio で Windows アプリケーション 開発 は でき ませ ん 。 
多態性 （ ポリモーフィズム ） は 、 各 クラス が 何 で ある という こと を 意識 せ ず 、 共通 する メソッド を 呼び出す こと で 機能 に 合っ た 振る舞い が できる こと です 。 例えば 、 ネコ 、 イヌ 、 サル の ３つ の クラス が ある と し ます 。 この ３つ は 「 動物 」 です 。 動物 の 持っ て いる 共通 する もの として 「 鳴く 、 吠える 」 という 動き が あり ます 。 そこで 、 Animal インターフェイス に voice メソッド を 抽象 的 に 記述 し ます 。 interface Animal { public abstract void voice (); } インターフェイス の メソッド の 中身 は 書き ませ ん 。 あくまでも Animal を 受け継ぐ もの voice メソッド を 書か なけれ ば なら ない 指名 を 負い ます 。 下 の ３つ の クラス は 、 インターフェイス Animal を 実装 さ せ ます 。 各 クラス は 、 必ず voice メソッド の 中身 を その クラス の 特徴 的 な もの として 書き ます 。 public class Cat implements Animal { public void voice (){ System . out . println ("[ ネコ ] ニャー ニャー "); } } public class Dog implements Animal { public void voice (){ System . out . println ("[ イヌ ] ワン ワン "); } } public class Monkey implements Animal { public void voice (){ System . out . println ("[ サル ] キー キー "); } } main メソッド を 持つ Main クラス で は 、 各 動物 の 鳴き声 を 表示 さ せる コード を 書き ます 。 イヌ 、 ネコ 、 サル の ３つ の クラス を Animal オブジェクト として 扱う こと で 、 簡単 に voice メソッド を 呼び出す こと が でき ます 。 public class Main { public static void main ( String [] args ) { Animal [] animal = { new Dog (), new Cat (), new Monkey ()}; for ( Animal a : animal ){ a . voice (); } } } 各 クラス に 共通 する 動き や 定数 を インターフェイス として 扱え ば 、 その インターフェイス を 実装 し た クラス は 、 まったく 性質 が 異なる クラス で あっ て も 、 共通 する 動作 を クラス を 意識 する こと なく 呼び出せる よう に なり ます 。 
＞ インポート で も できる よう です が 、 何 が どう 変わる の か わから なかっ た ので こういう 手順 で やっ て ます 。 それ を 理解 する の が 一番 早い の だ が 。 
やり たい こと が 良く わかり ませ ん 。 1 . サーバー サイド で 動的 に 作成 する javascript に Java クラス から 値 を 得たい 。 2 . クライアントサイド で 動作 する javascript に Java クラス を 与え たい 。 後者 です と 無理 です よ 。 Java の 動作 原理 と javascript が どこ で 動く の か を 考え て み て ください 。 Java が サーバ の JVM で 動く の に対し 、 javascript は 接続 元 の PC の ブラウザ の 中 で 動く もの です から 、 動作 環境 が 違う という こと です 。 データベース の 操作 を javascript から 行う に は 、 javascript から データベース 操作 を する サーブレット に 検索 条件 等 を リクエスト し 、 サーブレット が 代理 で データベース 操作 を 行い 、 結果 データ のみ を 返却 する よう に 行い ます 。 
> 位置情報 許可 の 確認 を アプリ 内 で 確認 する 必要 が ある ACCESS _ FINE _ LOCATION ACCESS _ COARSE _ LOCATION は 「 Demgerous Per mission 」 です から 、 Android 6 . 0 から Per mission check を し ない と いけ ませ ん https :// developer . android . com / training / permissions / requesting . html ?... https :// akira - watson . com / android / runtime - per mission . html 多分 赤い ところ から 修正 候補 を 出せ ます から その 候補 で エラー は 消える の で は あるいは 、 エラー に な て いる けど そのまま 動作 する か も しれ ませ ん 実際 に リリース する とき は もっと 細かく API 23 で 区切っ て 挙動 を 調整 し ない と アプリ が 落ち て しまい ます から 注意 です ね 
http:// aidiary . hatena blog . com / entry / 20040918 / 1251373370 ここ の 「 イメージ を 表示 する 」 「 ImageIcon を 使っ た イメージ の ロード 」 が 参考 に なる か と ...。 
Read this article . http:// qiita . com / kubotaku 1119 / items / 9 df 79 c5 68 e 100 c 0 c76 23 Add per mission on AndroidManifest . xml < uses - per mission android : name =" android . per mission . INTERNET "/> < uses - per mission android : name =" android . per mission . GET _ ACCOUNTS "/> 
初心者 に 優しく ない 感じ が し なく も ない です が 、 フレームワーク や MVC について は 理解 さ れ て いる 様 な ので 、 「 爆速 」 だ という 噂 の Phalcon は いかが ？ 
http:// www . oracle . com / tech network / jp / java / javase / download s / jre 7 - dow ... サポート 終了 し て い て 、 いかなる 問題 ( ウイルス に 感染 する 恐れ が ある とか ) が あっ て も 対処 さ れ ませ ん ので 、 危険 性 を 理解 の 上 で 使っ て 下さい 。 特別 な 理由 が なけれ ば Java SE 8 を 使用 する こと を おすすめ し ます 。 http:// www . oracle . com / tech network / java / javase / download s / jre 8 - downlo ... 
> bitprogramminghacker さん 2016 / 6 / 718 : 50 : 22 > Java の SDK の 種類 を 教え て ください 。 何 千 種類 も あり ます 。 たぶん 、 必要性 も なく 頭 に 浮かん だ から 聞い て みよ う 的 な 質問 です よ ね ？ 検索 すれ ば いくら で も 出 て き ます 。 それ 以前 に SDK 自体 が 何 か 理解 し て い ない ん じゃ ない か な 。 
class C extends C1 , C 2 {}// でき ない class C extends C1 implement I 1 , I 2 {}// できる 上 の 例 だ と 、 メソッド を 継承 し て 直接 利用 できる こと が 多い でしょ う 。 でも それ だ と 、 メソッド を 利用 しよ う と し た とき に 同名 の メソッド や メンバ 変数 、 内部 クラス が ある と 名前 が 衝突 し ます 。 メソッド 名 + クラス 名 など で 指定 し て も いい です が 、 その 場合 片方 の 親 クラス の メソッド を 変更 し た 場合 もう 片方 の 親 の メソッド 名 と 被っ て い ない か とか の チェック が あっ たり 、 サブクラス の メソッド の 利用 個所 を 変更 し たり と プログラム の 変更 時 に 大変 です 。 そういう デメリット が あり ます 。 下 の 例 だ と 、 メソッド を 継承 し て も オーバーライド を 強制 さ れる だけ です 。 利用 は でき ない ので 、 名前 の 衝突 が 起き て も 両方 を 同時に オーバーライド し て しまえ ば いい だけ です 。 私 は java の 開発者 で は ない ので 、 ざっくり と こんな イメージ だ と 思っ て ください 。 間違っ て たら すみません 。 
なんか 無茶苦茶 な 回答 が つい て い て びっくり だ 。 そもそも IBM は 現在 Eclipse の ライセンス を 保有 し て い ない 。 Eclipse に関する ライセンス を 保有 し て いる の は 、 今や 世界 有数 の オープンソース 非営利団体 、 Eclipse Foundation で ライセンス 条項 は EPL ( Eclipse Public Licence )。 EPL は IBM の CPL から 特許 条項 を 抜い た ライセンス で 別 の 回答者 が 書い て いる こと は 荒唐無稽 で 出鱈目 な 陰謀論 に 過ぎ ない 。 元々 IBM が Eclipse を オープン 化 し さらに それ を 非営利団体 に 寄付 し た の は Javaプラットフォーム に 力 を 入れ て い た から だ 。 当時 Java の 開発 環境 は ろくな もの が なく 、 それ が Java 普及 の 妨げ に なっ て い た 。 当時 の IBM は まだ Inter national Business Machine で ハードウェア メーカー だっ た ため Java が 高速 で 動く AIX を 売り たかっ た こと 、 複数 の OS サポート を 抱え て い た ため ソフトウェア サポート まで 手 が 回ら ず マルチプラットフォーム で 動作 する Java に 統一 さ せ て サポート コスト を 下げ たい という 思惑 も あっ て Java の 普及 を 望ん で い た 。 つまり IBM にとって Eclipse の メリット は Java の 普及 による 自社 ハード の 普及 と サポート コスト の ダウン だっ た 。 また 報酬 として Eclipse の よう な ツール を 非営利団体 に 無償提供 する こと で 「 IBM は オープンソース に 理解 が ある 」 という イメージ を もたらす こと も 忘れ て は いけ ない 。 この メリット は でかい 。 災害 時 に 「 １ ０ ０ 億 円 寄付 し ます 」 という の と 同じ で 優秀 な ツール を 無償提供 という 「 ボランティア 」 は 企業価値 を 高める こと に 繋がり 優秀 な エンジニア を 確保 する 手段 に も なる 。 以上 が IBM が 得 た メリット と 報酬 。 
// if ( x [ i ]> x [ i + 1 ]) swap (& x [ i ],& x [ i + 1 ]); f ( x [ i ]< x [ i + 1 ]) swap (& x [ i ],& x [ i + 1 ]);// 
import android . view . MotionEvent ; を 足し て みる と どうでしょう か 。 
keisan ( new Health ()); もしくは Health health = new Health (); keisan ( health ); の よう に 呼び出す 際 に 値 を 渡し て ください 。 生成 し た オブジェクト を その メソッド の 引数 として 渡す 、 という の が 正しい です か ね 。 これ で 渡し た オブジェクト の メンバ 変数 等 を メソッド 内 で 操作 する と 、 渡し た元 の オブジェクト も 同時に 操作 さ れ ます 。 ( 正確 に は 値 を 共有 し てる だけ ) オブジェクト を 生成 する 際 、 new と 書く こと が ほとんど です 。 new が ない こと から も わかる 通り メソッド を 作成 し た 時点 で は オブジェクト は 生成 さ れ て い ませ ん 。 
古い バージョン について は 以下 の ページ で 解説 し て い ます 。 https :// www . java . com / ja / download / faq / other _ jreversions . xml 
tomcat の サーバー が 立ち上がっ て い たら コンソール の 中 に 表示 さ れ て いる はず です 。 もしも コンソール が 表示 さ れ て い なけれ ば 、 メニュー から コンソール 表示 に し て ください 。 
どう 見 て も コナミコマンド （↑↑↓↓←→←→ BA ） です 。 
必要 な 情報 が 不足 し て い ます 。 ・ Minecraft の バージョン ・ 前提 Mod の 有無 以下 、 Minecraft Forge 前提 、 Minecraft 1 . 7 . 10 用 、 Block クラス を 継承 し た オリジナル ブロック クラス の メソッド @ Override public int quantityDropped ( Random random ){ return 2 ; } これ で 多分 大丈夫 です 。 参考 に し た サイト 1 . 7 の ブロック 追加 - Minecraft Modding Wiki http:// minecraft jp . info / modding / index . php / 1 . 7 % E3 % 81 % AE % E3 % 83 % 96 % E3 %... 
詳細 な 状況 の 把握 が 出来 ない ため 推測 です が 、 起動 用 の コマンドライン に 「 - jar 」 が 入っ て い ない 可能性 が あり ます 。 解決 策 として は 、 OptiFine と 同じ ディレクトリ に 拡張子 が . bat の ファイル を 作っ て それ を メモ帳 で 開き 、 ・ 64 bitOS を 使用 し て いる 場合 は こちら " C :\ Program Files ( x86 )\ Java \ jre 1 . 8 . 0 _ 91 \ bin \ javaw . exe " - jar OptiFine の ファイル 名 pause ・ 32 bitOS を 使用 し て いる 場合 は こちら " C :\ Program Files \ Java \ jre 1 . 8 . 0 _ 91 \ bin \ javaw . exe " - jar OptiFine の ファイル 名 pause と 打っ て 保存 し 、 これ を ダブルクリック し て 開い て ください 。 これ で 起動 できる の なら ば 良い の です が 、 でき ない 場合 は エラーメッセージ を 正確 に 返信 し て ください 。 
Java String 文字 カウント の 4 語 で ネット 検索 し て み まし た が 、 いっぱい 見つかり まし た よ 。 ( e . g .) http:// blanktar .jp / blog / 2015 / 11 / java - charactor - count . html 
> string で 受け取っ た 3 6 ( 間 に null ) を > この 場合 の 3 と 6 の 間 に ある の は 半角 スペース 。 null で は ない 。 （ 文字列 データ の 途中 に null が 入る こと は ない ） > 上手く int 型 で 受け取る 方法 は あり ます か ？ > 半角 スペース 区切り で 入力 さ れる 仕様 なら 、 半角 スペース で split () し て Integer . parseInt () で 変換 すれ ば いい 。 import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; public class Sample { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); String line = br . readLine (); br . close (); String [] strs = line .s plit (" "); int [] nums = new int [ str s.l ength ]; for ( int i = 0 ; i < str s.l ength ; i ++) { nums [ i ] = Integer . parseInt ( strs [ i ]); } for ( int n : nums ) { System . out . println ( n ); } } } // q 11160382236 
mesures は スペル ミス long の かわり に Long を 使っ て いる の は 何 か 意味 が ある の ？ 
Java 7 だ と こんな 感じ です か ね 。 初め に a を char の 配列 に し て 、 b に 含ま れ て いる ( indexOf ) なら String Builder に 追加 し て いく 。 String a =" abcde "; String b =" defgh "; String Builder sb = new String Builder (); for ( char c : a.t oCharArray ()){ if ( b . indexOf ( c )>= 0 ){ sb . append ( c ); } } System . out . println ( sb . to String ()); 
下品 な の は 貴方 の 心 です 、 残念！ 
パッケージ 名 登録 / 利用 サービス という 物 も ある http:// www . java - conf . gr .jp / wg _ bof / package / 
まず 、 バイナリ データ を そのまま 送る 、 これ は ハッキリ 言っ て 出来 無い から 。 通信 中っ て の は データ だけ 垂れ流 し て いる わけ じゃ ない 。 いろんな やり取り が 行わ れ てる 。 バイナリ データ を そのまま 流す と 、 それ が 通信 上 必要 な コマンド な の か データ な の か 区別 が つか ない 。 だから 通常 は バイナリ データ を そのまま 流す という アホ な こと は し ない 。 
http:// seesaa wiki .jp / pmmp / この サイト の 「 【 非公式 】 informal 」 という 中 に ある src を 使用 し て み て は どうでしょう か ？ いまいち エラー が 分かり ませ ん が 、 php 7 に 対応 し て いる が ph p5 の src を 使用 しよ う と し て いる とか … ？ 
AIDE という Android 端末 上 で Androidアプリ 開発 が できる アプリ は 存在 し ます 。 まあ 、 当然 PC で 開発 する の と 同等 の 機能 を 求める こと は でき ませ ん が 。 
Java を 勉強 し 始める の も もちろん いい です が 、 Androidアプリ を 作り ながら 、 並行 しながら の ほう が いい と 思い ます よ Java だけ だ と つまらない し 、 面白い もの を 作る に は 結構 大変 です 。 やっぱり 見える ほう が いい です 。 Java に関して は スッキリ わかる Java 入門 と 実践 の 両方 を 買う と ほぼ OK です ！ あと は Java の 逆引き を 買う と なお いい か と ！ Android は これ の 紙 の ほう が いい か な と 思い ます 。 慣れ て き たら 自分 で 読ん で み て 決める と いい と 思い ます 。 http:// www . amazon.co.jp / Android - Studio % E3 % 81 % A 7 % E3 % 81 % AF % E3 % 81 % 98 % E ... 
http:// aidiary . hatena blog . com / entry / 20040918 / 1251373370 ここ の 「 キー イベント の 使い方 」 が 役に立つ でしょ う 。 
そこ は 下手 に いじら ない ほう が いい ん だ けど ね 。 起動 すら し なく なる 恐れ も ある ので 、 変更 する 前 に 、 既存 の 文字列 を コピペ し て おく こと を お勧め する 。 結構 シビア で 、 ひとつ 打ち 間違え た だけ でも 起動 し ない ので 。 あと PC によって は 、 紹介 さ れ てる 文字コード で は 起動 出来 ない パターン も 報告 さ れ て いる 。 
// 書き込み core = pref. getInt (" count ", core ); これ 、 「 書き込み 」 と コメント を つけ て い ます が 、 これ は Preferences から の 「 読み込み 」 です から 、 コメント と 内容 に 齟齬 が あり ます よ ね 。 そこで 勘違い が あり ませ ん か ？ これ で は 、 読み込ん だ 値 を 即 そのまま 書き込ん で いる の です から 、 永久 に 値 は 変わら ない です よ ね 。 1 加算 し た 後 の 値 を 書き込み たい の なら 、 core += 1 ; 以降 に 保存 の 処理 を し なけれ ば なら ない の で は 。 
Tomcat の 起動 時 という か Web アプリケーション の ロード 時 です 。 通常 Tomcat の 起動 時 に Web アプリケーション が ロード さ れる わけ です が 、 Tomcat の 起動 後 でも Web アプリケーション を 更新 し た 場合 に は Web アプリケーション が リロード さ れ ます 。 リロード 時 に も web . xml は 読み込ま れ ます 。 web . xml の 内容 が 一度 メモリ 上 に 読み込ま れ て しまえ ば 、 JSP や サーブレット 両方 で やり取り する 時 に 一々 ファイル が 読み込ま れる よう な こと は あり ませ ん 。 
tesseract という の が ある ので 調べ て み て ください 。 
ActionListener event = new ActionListener (){ public void actionPerformed ( ActionEvent e ) { System . out . println (" ほげ ほげ "); } }; JButton [] button = new JButton [ 10 ]; for ( int i = 0 ; i < button . length ; i ++) { button [ i ] = new JButton (" ほげ "); button [ i ]. addActionListener ( event ); } みたい に 一つ の オブジェクト とか で 動か せ ませ ん か ？ 自分 が GUI プログラミング し た とき に 、 最後 の 要素 だけ レイアウト が 適応 さ れ ない バグ ？ とか あっ た ので 、 最後 の 要素 に 不調 が 出る 可能性 が 高かっ たり する ん でしょ う か 。 描画 の 仕方 を 変え たり 、 余分 な 要素 を 一つ 追加 し たり と 工夫 し て みる の も いい かも しれ ませ ん 。 
” java jre ” で 検索 無料 java ソフトウェア の ダウンロード で OK 。 
コンテキスト ルート の 指定 は XML の 中 に 書き ます 。 例 ） <? xml version =' 1 . 0 ' encoding =' utf-8 '?> < Server … > < Service … > < Engine … > < Host … > < Context path ="/＜ コンテキスト 名 ＞※" docBase ="＜ Web アプリケーション の 置き場 所 ＞" reloadable =" true " /> </ Host > </ Engine > </ Service > </ Server > 書き まし た ？ 
まず 、 基礎 から 一 歩 ずつ 固め て いき ましょ う 。 「 いきなり ゲーム を 作ろ う 」 など の 近道 を する と 挫折 し ます （ 私 は 挫折 の 経験 者 です ） 。 まず 、 if 文 や オブジェクト指向 など の 基礎 中 の 基礎 を 固め ます 。 これ を しっかり 固め ない と ゲーム を 作ろ う にも 構文 が 分から ず 挫折 し ます （ 私 の 一 度目 の 挫折 ） 。 基礎 が 固まっ たら 次 は ウィンドウ 表示 など の グラフィカル な 部分 を 勉強 し ます 。 私 が 参考 に し た の は 以下 の サイト です 。 まず 、 シューティングゲーム を 実装 し ましょ う 。 何しろ 実装 が 簡単 な ので 、 シューティングゲーム の 実装 が 完璧 で あれ ば 、 大体 の ゲーム は 処理 の 仕方 さえ 分かれ ば 自分 一 人 で ソース が 書ける よう に なる から です 。 シューティングゲーム を 実装 せ ず に いきなり 大きな プログラム を 組も う と する と やはり 挫折 し ます （ 私 の 二 度目 の 挫折 ） 。 http:// aidiary . hatena blog . com / entry / 20040918 / 1251373370 急がば回れ は プログラミング で も いえる 言葉 です 。 大きな 目標 を 持つ こと は 大切 です が 、 地道 に コツコツ と 頑張っ て いき ましょ う 。 
とりあえず コマンドプロンプト から Ruby を 立ち 上げる こと は 出来 て い ます か ? だっ たら 、 irb と 入力 すれ ば 「 対話 的 Ruby 」 が 立ち上がる と 思い ます が 。 # 私 は cygwin から Ruby を 入れ て い て 質問者 さん と は 状況 が 違う ので 「 とりあえず なんとか する 」 方法 だけ 
前回 は getter メソッド の 質問 でし た ね 。 その 時 に setter メソッド も 少し 書い た の です が 、 理解 でき なかっ た の か な ・ ・ 。 考え方 は getter メソッド と 同じ 考え方 です 。 アクセサ メソッド （ getter 、 setter メソッド の こと ） は 、 1つ の クラス を まとめ て （ カプセル化 ） 、 他 の クラス から の アクセス を 制御 し ます 。 例えば 下 の Human クラス は 、 name と age の 2つ の フィールド （ データ ） を 持ち ます 。 この フィールド に は private の アクセス 修飾 子 が 付い て いる ので 、 他 の クラス から 直接 この フィールド を 取得 し たり 、 値 を 変更 する こと は でき ませ ん 。 public class Human { private String name ; private int age ; public Human ( String name , int age ){ this . name = name ; this . age = age ; } public void setAge ( int age ){ this . age = age ; } public int getAge (){ return age ; } public String getName (){ return name ; } } Human クラス に は 1つ の コンストラクタ （ 初期化 ） と 3つ の メソッド を 持っ て い ます 。 age フィールド に 値 を セット する setAge という setter メソッド 、 そして age フィールド の 値 を 取得 する getAge 、 name フィールド の 値 を 取得 する getName という ２つ の getter メソッド です 。 次に main メソッド を 持つ Main クラス を 以下 の よう に 記述 し ます 。 public class Main { public static void main ( String [] args ) { Human human = new Human (" 鈴木 ", 42 ); System . out . println ( human . getName ()); human .s etAge ( 35 ); System . out . println ( human . getAge ()); } } Main クラス で は 、 Human クラス を インスタント 化 （ 実体 ） し て 、 同時に 「 鈴木 」 と 「 42 」 という 値 を セット し ます 。 な ので 、 System . out . println ( human . getName ()); で 、 「 鈴木 」 という 名前 を 表示 でき ます 。 次 の human .s etAge ( 35 ); で は 、 age フィールド の 値 を 「 35 」 に 変更 し て い ます 。 これ は Human クラス の setter メソッド を 呼び出し て 値 を 変更 でき ます 。 そして 、 System . out . println ( human . getAge ()); で 、 「 35 」 という 年齢 が 表示 さ れ ます 。 この 時 不可能 な の は 、 名前 （ name フィールド ） は 変更 でき ない こと です 。 なぜなら 、 Human クラス に name フィールド の 値 を 変更 できる setter メソッド を 記述 し て い ない から です 。 年齢 は 変更 可能 で あれ ば 、 年齢 の 値 を 変更 する setter メソッド を 作り 、 名前 を 変更 さ れ たく なけれ ば 、 その ため の setter メソッド は 作ら ない こと で フィールド の 制御 が 実現 でき ます 。 
説明 が 載っ て いる はず jQuery を 理解 し て い ない と 無理 かも 
eclipse から 起動 し た tomcat の 場合 、 起動 の 方法 によって 停止 方法 が 異なり ます 。 今 は サーバービュー を 使う の が 通常 です ので 、 サーバービュー の 右 上 の 赤い ボタン で 停止 する こと が でき ます 。 （ 右クリック から 起動 → tomcat とか し た 場合 の よう に ） サーバービュー が 見つから ない 、 あるいは 表示 さ せ て い ない ケース で は 、 「 デバッグ 」 パースペクティブ （ 通常 、 画面 右 上 の ほう に あり ます ） に し て 、 左上 の サーバー タブ を 選択 し 、 赤い ボタン を 押す こと で 停止 でき ます ( デバック 起動 で なく て も 表示 さ れ ます ） 。 また 、 実は サーバー タブ に し なく て も デバッグ タブ で Tomcat を 選択 し て 右クリック から 停止 を 選択 する こと で 停止 する こと が 可能 です ( デバック 起動 で なく て も 表示 さ れ ます ） 。 ただし こちら は 強制 停止 に なり ます 。 
str に + 1 すれ ば 0 が 出る こと は ない と 思い ます 。 とりあえず 、 0 に なら ない よう 足し算 し て みれ ば ？ それ か もしくは 0 が 出 たら while 文 とか で 0 以外 が 出る まで 生成 し て みれ ば いい の です が 。 
Java が インストール さ れ て い ない から でしょ う 。 Java を ダウンロード し て き て インストール し て ください 。 「 Minecraft が 動く から Java が インストール さ れ て いる 。 」 は 間違い です ので 注意 し て ください 。 もし 、 インストール さ れ て いる の に 出 ない よう なら 、 「 他 の プログラム から 開く 」 など で 「 C :\ Program Files \ Java \ jre 1 . 8 . 0 _ 91 \ bin \ javaw . exe 」 など を 選ん で ください 。 ※ 「 Program Files 」 が 「 Program Files ( x86 )」 の 可能性 も あり ます 。 ※ 「 jre 1 . 8 . 0 _ 91 」 の 最後 の 数字 は 違う 可能性 が あり ます 。 また 、 「 jre 7 」 の 場合 も あり ます 。 ※ 「 javaw . exe 」 が 「 javaw 」 の 可能性 も あり ます 。 
java . io .*; を import し て 、 PrintWriter とか 使っ て テキストファイル を 作れ ば いい の か な ？ File file = new File (" ファイル 名 . txt "); try ( PrintWriter out = new PrintWriter ( new BufferedWriter ( new FileWriter ( file )))){ file . createNewFile (); out . println (" 銀行 名 :" + myAccount . bankName ); out . println (" 支店 名 :" + myAccount . branchName ); // など } catch ( IOException e ){} 違っ たら ごめん 
windows を 使用 し て いる の で あれ ば 答え java から windows バッチ を 操作 する 。 java . io . File の API の 中 に File クラス が あり ます 。 変数 String Director y =” C :\*****”； で フォルダ を 指定 し ます 。 ※ 上記 変数 の ￥ は バックスラッシュ で java の 予約語 な ので \\ 2つ に し ない と ディレクトリ の 指定 が 出来 ない と 思い ます 。 変数 Director y を File クラス で 使用 し ます 。 ヒント に なり まし た でしょ う か 。 
ユーザー に アクセス 権 が 無い から 。 
＞ C :\ user \ ユーザー 名 \ Googleドライブ \ sa mpl e.t xt だ と 思い ます が 、 勘違い し て もらっ て は 困る 。 Windows の Googleドライブ を 操作 する ソフトウェア と Android の Googleドライブ アプリ で は 機能 が 違う 。 Windows の 場合 は 上記 の ディレクトリ に 置い て ある ファイル を クラウド 上 の ストレージ と 同期 を とる よう な ソフトウェア が 裏 で 動い て いる ( タスクバー に Googleドライブ の アイコン ある だろ ？) から アップ さ れる だけ 。 Android の Googleドライブ アプリ は 、 単に クラウド 上 の Googleドライブ を 直接 閲覧 し て いる だけ 。 なので 自分 で Androidアプリ を 作っ て やる 場合 は 「 端末 に ある ファイル を クラウド 上 の Googleドライブ へ ファイル を 転送 し て やる 機能 ( Windows で は 裏 で 動い て いる 部分 )」 を 実装 する 必要 が ある 。 なので 転送 し たい ファイル を 置く ディレクトリ など 自分 で 決めれ ば いい 。 
Calendar c = Calendar . getInstance (); です ね 。 
クラス 「 cls { int ...}」 上 に 宣言 さ れ て いる 変数 ( member ) が メンバー 変数 です 。 メソード 「 msd (){ int ...}」 内 に 宣言 さ れ て いる 変数 （ not _ member ） は メンバー 変数 で は 有り ませ ん 。 class cls { int member ; public void msd () { int not _ member ; } } 
ゲッターメソッド や セッター メソッド を 「 アクセサ メソッド 」 と 呼び ます 。 1つ の 例 で 紹介 し ます 。 下 の よう な Cat クラス が ある と し ます 。 その クラス に は 3つ の フィールド と １つ の コンストラクタ が 存在 し ます 。 public class Cat { // フィールド public String name ; public int age ; public String kind ; // コンストラクタ public Cat ( String name , int age , String kind ){ this . name = name ; this . age = age ; this . kind = kind ; } } これ を main メソッド を 持つ Main クラス で Cat クラス を インスタント 化 し て 、 フィールド の 値 を 取得 する ため に 以下 の よう に 記述 でき ます 。 public class Main 1 { public static void main ( String [] args ) { Cat cat = new Cat (" タマ ", 8 ," ミケ "); System . out . println ( cat . name ); System . out . println ( cat . age ); System . out . println ( cat . kind ); cat . name = " メロン "; //← 名前 を 書き換え System . out . println ( cat . name ); } } 上 の コード の よう に 、 Cat クラス を 具象 化 し た cat オブジェクト に Cat クラス の フィールド を 付ける よう に する と 取得 でき ます 。 最後 に 名前 を 簡単 に 書き換え て しまう こと が でき ます 。 そこで 、 Cat クラス の フィールド を 他 の クラス で 使え ない よう に する ため に フィールド の アクセス 修飾 子 を public から 「 private 」 に 入れ替え ます 。 public class Cat { // フィールド private String name ; private int age ; private String kind ; // コンストラクタ public Cat ( String name , int age , String kind ){ this . name = name ; this . age = age ; this . kind = kind ; } // ゲッターメソッド public String getName () { return name ; } public int getAge () { return age ; } public String getKind () { return kind ;} } 次に Main クラス を 以下 の よう に 修正 し ます 。 public class Main { public static void main ( String [] args ) { Cat cat = new Cat (" タマ ", 8 ," ミケ "); System . out . println ( cat . getName ()); System . out . println ( cat . getAge ()); System . out . println ( cat . getKind ()); cat . name = " メロン "; //← 名前 を 書き換え } } フィールド に private を 付ける こと で 、 フィールド 名 は 直接 に 他 の クラス から 読み込ま れ なく なり ます 。 他 の クラス から フィールド の 値 を 取得 する ため に ゲッターメソッド を Cat クラス に 記述 し て 、 その ゲッタメソッド を 利用 し て Main クラス で 呼び出す こと が できる よう に なり ます 。 という こと は 、 他 の クラス から フィールド の 値 を 取得 でき ない よう に する に は 、 ゲッターメソッド を 書か なけれ ば 良い こと に なり ます 。 Main クラス を 実行 し て も 初期 化 し た オブジェクト で は Cat クラス の フィールド の 値 を 取得 でき ます が 、 名前 を 書き換え た 「 Cat . name = " メロン "」 の 行 で エラー が 発生 し ます 。 何故 なら 、 Cat . name と 書く こと が でき ない から です 。 （ ※ private が 付い て いる から です ） な ので 、 他 の クラス で Cat クラス の フィールド の 値 を 変更 し たい 場合 は 、 セッター メソッド を 記述 する こと に なり ます 。 ゲッターメソッド と 同じ よう に 、 他 の クラス から フィールド の 値 を 変更 さ せ たく なけれ ば 、 セッター メソッド を 書か なけれ ば 良い です よ ね 。 基本 、 １つ の クラス は カプセル化 する こと が 推奨 さ れ て い ます 。 簡単 に 他 の クラス から フィールド を 取得 さ せ たり 、 フィールド の 値 を 変更 さ せ ない ため に 、 フィールド は その クラス 内 だけ 扱える よう に し ます 。 フィールド に private を 付ける こと で 、 他 の クラス で フィールド を 扱え なく でき ます が 、 他 の クラス から フィールド の 値 を 取得 し たい とき に ゲッターメソッド を 作る と 考え て ください 。 他 の クラス で 扱わ ない フィールド で あれ ば 、 ゲッターメソッド や セッター メソッド は 不要 という こと に なり ます 。 
ちょっと これ は 私 に は 難しい です 
> taobmcoe さん > 1 クロスプラットフォーム で 使える プログラミング言語 に は どの よう な もの が ある の か JAVA > 1 で 上げ て いただい た ものの 利点 ・ 欠点 利点 ： クロスプラットフォーム で 使える 欠点 ： 質問者 が 使える よう に なる 可能性 が 低い 
mAppContext へ の 代入 が 行わ れ て い ませ ん が 、 タイプミス です か ？ これ だ と 、 mAppContext . getSharedPreferences (" pref ", Context . MODE _ PRIVATE ); の 時点 で nullpointerexception に なっ ちゃう と 思い ます が ・ ・ ・ 。 --- もし これ が 原因 だっ た と し たら 、 エラーログ の 内容 を 聞か なかっ た 私 も 迂闊 だっ た な … 
インスタンス メソッド 内 で は その インスタンス 自身 を 参照 する 変数 this が 利用 でき ます 。 http:// www . javaroad .jp / java _ class 10 . htm 
Java ZipFile upper limit の 4 語 で ネット 検索 し たら 、 ひっか かっただけ です 。 その おつもり で 。 http:// stackoverflow . com / questions / 6738773 / zip - files - with - java - is - t ... 
パッケージ は 、 パッケージ で 指定 し た フォルダ の 階層 に java / class ファイル が ある か の よう に する 機能 です 。 なので aaa を カレントディレクトリ の 状態 で コンパイル や 実行 を する と エラー が 起きる こと が 多い です 。 パッケージ aaa を 指定 し て いる ので 、 コンパイル と 実行 時 も 書か なけれ ば いけ ませ ん 。 カレントディレクトリ は aaa の 一つ 上 の ディレクトリ --- コマンド --- javac aaa \ Test 1 . java java aaa . Test 1 --------------- この よう に し ましょ う 。 Test 1 が 参照 し て いる ので Test 2 は 自動的 に コンパイル さ れ ます 。 エラー が あれ ば 表示 も し て くれ ます 。 何度も 入力 する の が 面倒 だっ たら aaa と 同じ 階層 に --- 実行 . bat --- javac aaa \ Test 1 . java java aaa . Test 1 pause --------------- という ファイル を 作っ て ダブルクリック で 実行 、 もしくは aaa の 中 に --- 実行 . bat --- cd .. javac aaa \ Test 1 . java java aaa . Test 1 pause --------------- と し ましょ う 。 続け て コマンド を 入力 し たかっ たら 、 pause の 代わり に cmd / k rem と 入力 し ましょ う 。 あまり 関係 ない です が 、 Test 1 は 公開 する 用途 で は ない ので わざわざ public を 付ける 必要 は 感じ ませ ん 。 大変 でしょ う が 頑張っ て ください 。 
public class factorization { public static void main ( String [] args ){ int m = 1234567890 ; // 2 で 割れる だけ 割り算 する while ( m % 2 == 0 ){ System . out . print ( 2 ); System . out . print (" "); m /= 2 ; } // 奇数 で 割り算 し て いく for ( int i = 3 ; i * i <= m ; i += 2 ){ while ( m % i == 0 ){ System . out . print ( i + " "); m /= i ; } } if ( m > 1 ) System . out . println ( m ); } } http:// www . geocities .jp / m _ hiroi / java / abcjava 02 . html 
getSharedPreferences の ところ は pref = mAppContext . getSharedPreferences (" pref ", Context . MODE _ PRIVATE ); で いい と 思う の です が 、 まあ 内容 として は 同じ な ので 動作 が 変わる よう な もの で は ない でしょ う 。 コンストラクター で 受け取っ た Context 型 の 値 を 用いる の は 正しく 、 これ で 動い て 良 さ そう な もの な の です が 、 この Preferences の 記述 を 除け ば 正常 動作 する こと は 確認 し て いる の でしょ う か ？ 
ライブラリ の パス が うまく 通っ て おら ず 、 その ため に パッケージ インポート で エラー に なっ て い ます 。 具体 的 に は Tomcat ライブラリ へ の パス が 上手く 行っ て い ませ ん 。 恐らく プロジェクト の プロパティ から Java の ビルド パス → ライブラリ で パスミス による エラー が 出 て いる か 、 ウィンドウ → 設定 → Tomcat で tomcat が 指定 さ れ て い ない か の どちら か で は ない か と 思わ れ ます 。 Tomcat を 追加 し て い ない の で あれ ば 、 一番 簡単 な 追加 方法 は ・ ウィンドウ → ビュー の 表示 → その他 → サーバー / サーバー で サーバービュー を 追加 し 、 ビュー 上 で 右クリック → 新規 → サーバー で tomcat を バインド する こと です 。 
jar ファイル を 開く ソフト を ダウンロード し なけれ ば いけ ない と 思い ます 「 たぶん 」 あと 「 オプトファイン 」 じゃなくて 「 オプティファイン 」 ですよ ！ 
JD K. bat で @ echo で 表示 する よう に し てれ ば 出る の が 当たり前 。 
String str = " HOT \ nLEMON TEA \ nAND ". replaceAll ("[\ s \ r \ n ]+", " "); これ で 連続 する 改行 や 空白 を 一つ の 空白 に 置換 し て 、 str = " HOT LEMON TEA AND "; みたい に できる と 思い ます 。 正規表現 は こんな 感じ \ s - スペース \ r \ n - それぞれ 改行 に 使わ れる []- 中 の 文字 の うち どれ か と 一致 +- 手前 の 文字 が 1つ 以上 連続 する 
その 名 の 通り 、 自分 の PC で 8080 番 を 使用 し て いる サービス が 存在 し て い ます 。 その せい で 、 tomcat が 8080 番 ポート を 使用 し て 起動 でき ませ ん 。 試しに http:// localhost : 8080 / に 繋い で み て ください 。 何 の アプリ が 8080 番 ポート を 使用 し て いる か 判別 できる でしょ う 。 判別 でき たら その アプリ を 停止 し て ください 。 
http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1115905537 ... 過去 の 回答 私 が 回答 し た やつ な ので 質問 を いただけれ ば 答え ます 。 ↑ ちょっと 改良 し た もの です 。 ついで に メソッド に し まし た 。 実行 速度 が 少し 早く なっ てる はず です 。 --- サンプル コード --- // ヘッダ ( ファイル の 先頭 ) import java . util .*; // 素因数分解 public static ArrayList < String > factorization ( int num ){ ArrayList < String > list 01 = new ArrayList < String >(); int limit = number / 2 ; for ( int n = 2 ; n <= limit ; n ++){ int count = 0 ; while ( number % n == 0 ){ number /= n ; count ++; } if ( count != 0 ) list 01 . add ( n + "^" + count ); if ( Math .s qrt ( limit * 2 ) < n ){ break ; } } if ( number != 1 && num != number ) list 01 . add ( number + "^" + 1 ); return list 01 ; } // 利用 ( main メソッド 側 ) System . out . println ( factorization ( 100 )); ------------------------ 入力 値 を num と する と 、 オーダー は O (√ num ) くらい です 。 多分 。 素数 や 不正 な 値 が 入力 さ れる と 、 サイズ が 0 の 配列 が 返っ て き ます 。 素因数分解 に 成功 する と 、 3 ^ 4 みたい に 、 べき乗 を 含ん だ 文字列 型 で 返っ て き ます 。 int 型 で ほしけれ ば コード を うまい こと 書き換え て ください 。 
かなり 遅く て も いい なら 素数 の もともと の 性質 を 使っ て 簡単 に 求める こと が でき ます int n = 13 ; // n が 素数 だ と する int check = 0 ; // 割り切れ た 回数 を 数える 変数 for ( int i = 1 ; i <= n ; i ++){ // 1 から n まで 繰り返す if ( n % i == 0 ){ check ++; // 割り切れ た 時 は check を インクリメント } } if ( check == 2 ){ // ２ 回 しか 割り切れ ない とき 、 n は 素数 です System . out . println ( n + " は 素数 です "); } else { System . out . println ( n + " は 素数 で は ありません "); } これ でも 判定 が 得 られ ます が n が ものすごく 大きい 時 は 実行 速度 に 問題 が ある ので 繰り返し の 上限 回数 を √ n を 使う だけ でも 随分 違う と 思い ます √ n 〜 n の 間 の 整数 で 割り切れる こと は あり ませ ん ので アルゴリズム の 勉強 は 難しい と 思い ます が 頑張っ て ください ね 
一 例 です 。 import java . util .S canner ; public class Kuku { public static void main ( String [] args ) { Scanner in = new Scanner ( System . in ); int num ; System . out . print (" どの 段 の 掛け算 か を 入力 ："); num = in . nextInt (); System . out . println ("【" + num + " の 段 の 掛け算 】"); for ( int i = 1 ; i < 10 ; i ++){ System . out . println ( num + " × " + i + " = " + ( num * i )); } } } 課題 な の か 分かり ませ ん が 、 どの よう な 流れ で 処理 を する の か を 理解 できれ ば ステップアップ でき ます 。 
http:// qiita . com / junya / items / 535 d 98 f 779 a6 c1 658794 
jsp は 時代遅れ な 感じ が し ます が 、 リクエスト を 受け取る の は コントローラー と する サーブレット に し ます 。 私 なら 、 サーブレット は ただ 一つ だけ に し て 、 処理 の 振り分け に 徹する よう に し ます 。 全て の リクエスト を ただ 一つ の サーブレット に 集約 する の は 、 Web 、 および アプリケーション コンテナ の 仕事 です 。 MVC を 意識 し たけれ ば 、 コントローラー と なる サーブレット で 、 リクエスト パラメータ から モデル を 作成 し 、 個別 の 処理 を する サービス クラス 、 もしくは デリゲータ と なる クラス に 引数 として 渡し ます 。 処理 の 結果 の 戻り値 として 、 ビュー と なる jsp で 必要 な データ を 含ん だ データモデル を 返却 さ せ ます 。 私 は 横着 な ので 、 リクエスト と レスポンス ごと 丸投 げする こと も あり ます が 。 コントローラー は 、 サービス 処理 の 結果 として 受け取っ た データモデル を setAttribute し 、 対応 する jsp に dispatch し て 処理 終了 です 。 jsp は コントローラー が setAttribute し て くれ た 値 を 元 に 画面 を 生成 し て 処理 終了 です 。 
pcr 32 u 08 さん System . gc () を 無効 化 し て いる J2EE サーバ も ある 位 です から 、 強制 ガベッジコレクション の 優位 性 は 無くなっ て い ます 。 元々 、 System . gc () で 、 アプリケーション の 走行 時間 を 短縮 できる 条件 は かなり 限定 さ れ て い ます 。 その 中 でも 、 逆効果 と なる こと が 解り やすい 条件 は 、 添付 の グラフ の 左側 の ↑ 矢印 に 示す よう に 、 「 強制的 に system . gc () を 細かく 呼び出す と 、 自然 起動 する copy GC より 走行 時間 の 長い Full GC が 発動 さ れ て 、 ムシロ アプリケーション の 走行 時間 が 長く なる 」 という こと です 。 また 、 添付 の グラフ の 右側 の 矢印 に 示す よう に 、 「 ” 適切 な 間隔 ” で system . gc () を 細かく 実行 さ せ て 、 １ 回 当り の Full GC 走行 時間 を 短縮 する 」 という 効果 が 出る よう な 、 ” 適切 な 間隔 ” と なる よう な メモリ 使用 量 の 閾値 は 、 アプリケーション が 使用 する オブジェクト の 複雑 さ に 依存 し ます 。 その よう な 閾値 も 見つけ出し て 、 ” 適切 な 間隔 ” で system . gc () を 呼び出し て も 、 Full GC の 走行 時間 は Y 切片 が 大きい ため 、 一定 期間 に 発生 し うる Full GC の 合計 走行 時間 の 短縮 に は なら ない 場合 が 多い もの です 。 少なくとも 、 「 GC の ログ を 採取 し て 、 添付 の グラフ を 描い て 、 ” 適切 な 閾値 ” を 見つけ出す 」 、 あるいは 、 「 Copy GC の 発動 確率 を 高める 為 、 Java HEAP メモリ に 4０ Gバイト 、 その 半分 を Copy GC 用 の 領域 に する 為 の newRatio = 2 を 指定 」 等 の チューニング ・ 効果 検証 が でき ない まま で は 、 「 対策 結果 の 正当性 を 裏付ける こと 」 が でき ない でしょ う 。 
なぜ 、 誰 も 回答 し ない か わかり ます か 。 一つ だけ の os は あり 得る かも しれ ませ ん が 、 DB や フレームワーク や ツール は プロダクト ごと に 異なる の が 普通 な ので 、 答え よう が ない から です 。 私 の 場合 でも > os は ？ Windows 7 だっ たり 8 . 1 だっ たり 、 ubunto だっ たり centos だっ たり 、 プロダクト によって 異なり ます 。 > データベース は ？ postgresql だっ たり 、 oracle だっ たり 、 sql server だっ たり 、 プロダクト によって 異なり ます 。 > フレームワーク は ？ spring だっ たり 、 PLAY だっ たり 、 JSF だっ たり 、 独自 だっ たり 、 プロダクト によって 異なり ます 。 > ツール は ？ それ こそ プロダクト によって まちまち です 。 と 、 いろいろ すぎ て 参考 に なら ない でしょ う 。 
そんな 曖昧 な 質問 で は 答え よう が ない です し 、 丁寧 に 書い たら この 回答 文字数 じゃ 足り ませ ん 。 そもそも Java 初心者 が いきなり チケット 購入 システム を 作る という 時点 で 敷居 が 高 すぎ ます 。 購入 システム なら 当然 セキュリティ を がちがち に 固め ない と いけ ませ ん ので SSL の 知識 は 必要 です し 、 どこ の CA 局 で 認証 する の か と かも 考える 必要 が あり ます 。 また 、 販売 チケット リスト を どこ から 入手 する の か 、 どう いっ た 手順 で データ転送 する の か 、 普通に tcp/ip という こと は ない ので 、 vpn なら その 知識 が 必要 です し 、 全 銀 TCP や HULFT なら そっち の 知識 も 必要 です し 、 下手 し たら 独自 プロトコル って こと も 考え られ ます ので 、 そっち の ライブラリ を 考える 必要 が あり ます し 、 その 手 の ライブラリ は フレームワーク を 選ぶ ケース が ある ので 、 そうしたら フレームワーク の 選定 が 変わり ます 。 あるいは データ 規模 が 10 万 件 程度 な の か 、 1 億 件 な の か 、 トランザクション 量 は どの くらい な の か 、 最大 同時 接続 数 は どの くらい を 想定 し て いる の か といった 基本情報 が なけれ ば 、 DB として 何 を 選択 する かも 答え られ ませ ん 。 結局 、 この 質問 で は 有効 な 回答 は でき ない 、 という の が 回答 に なり ます 。 
これ は 僕 が 書い た プログラム です が ここ に 貼る と インデント が 汚く なる んで リンク 張り ます 。 Github の です 。 https :// github . com / Ooshita / Fishing / blob / master / Map / app / src / mai n/a ss ... https :// github . com / Ooshita / Fishing / blob / master / Map / app / src / mai n/a ss ... 二つ は 魚 の 位置 と 、 魚 の 生息 し て いる 川 の データ です 。 以下 フルーツ を 定義 する JSON です 。 ｛ " fruits ":[ {" name ": " リンゴ "}, {" name ": " ばなな "}, {" name ": " みかん "} ] ｝ {} は JSON 全体 を 覆っ て い ます " fruit ":[] 内 に かかれ て いる もの が フルーツ の 定義 です 。 書き方 は 上 の よう に 書く 感じ です 。 僕 の サンプル は いくら 見 て も タダ な ので そっち 見 て ください ！ 
Java は 言語 名 です ね 。 サーバー サイド Java と 対 で 考える なら クライアントサイド Java という こと に なり ます 。 サーバー サイド 、 クライアントサイド は 、 クライアント ・ サーバー システム という 複数 台 の コンピュータ を つない だ システム において 、 サービス を 提供 する 側 か ? それ と も 受ける 側 か ？ の 役割 の 違い に対する 呼び方 です 。 サービス を 提供 する 側 が サーバー です 。 サービス を 受ける 側 が クライアント です 。 これ を 踏まえる と 、 サーバー サイド Java は 、 Java 言語 で 実装 さ れ た サーバー アプリケーション の こと を 指し ます 。 
すいません 、 回答 で は ない の です が ･･･。 回答 が つか ない よう で あれ ば Teratail で 質問 さ れ て は いかが です か ? Teratail https :// teratail . com / プログラミング 系 の 質問 サイト です 海外 だ と StackOverflow 等 も あり ます が ･･･。 ( 日本語版 StackOverflow も あっ た っけ ･･･?) 
全角 が 混ざっ て ませ ん か ？ 本当に コピペ し まし た か ？ 全角 ｛ ｝ 半角 {} 
mTimer .s cheduleAtFixedRate ( new task (), 5 * 1000 , 5000 ); ↓ mTimer .s cheduleAtFixedRate ( new task (), 5 * 1000 , 50000 ); 5000 を 50000 へ 。 （ ５ 秒 → ５ ０ 秒 ） mTimer .s cheduleAtFixedRate ( new task (), 5 * 1000 , 5000 ); だ と １ 回 しか タスク 実行 し て ない と 思い ます 。 ５ 秒 間隔 で ５ 秒 経過 で 終了 mTimer .s cheduleAtFixedRate ( new task (), 5 * 1000 , 50000 ); に すれ ば １ ０ 回 くらい タスク 実行 する と 思い ます よ 。 ５ 秒 間隔 で ５ ０ 秒 経過 で 終了 
> こ で 販売 管理 、 あるいは 在庫管理 システム の 作成 が 乗っ て いる よう な 書籍 は ない でしょ う か ？ 有り ませ ん 。 
JRE は ランタイム で あっ て 、 別途 Java の 環境 を 必要 と する プログラム を 実行 する こと で 初めて 存在 が わかる 物 だ という 認識 は ある の か ？ 
driver . navigate (). back (); を 利用 し て バック キー を 操作 できる と 思い ます 。 これ まで 、 私 も Appium の テスト コード を 書い て 自動 テスト を やっ て い まし た が 、 大変 手間 が かかり 、 もっと 効率 的 な ツール が ないか を 探し た ところ 、 次 の サービス を みつけ まし た 。 一度 試し て みる 価値 が あり ます 。 MovaTesting https :// www . movatesting . com / 特に 、 Appium の テスト コード を 自分 で 作る 必要 が なく 、 実機 で アプリ を 操作 し ながら 、 自動的 に テスト 用 の スクリプト が 作成 さ れる の は 、 大変 素晴らしい と 思い ます 。 
コマンドプロンプト は 開け ます か ？ 「 スタートボタン 」 から 「 プログラム と ファイル の 検索 」 を 選ん で 、 cmd と 入力 し て 実行 し て ください 。 実行 環境 の インストール で は taskkill / F / IM jre * 開発 環境 の インストール で は taskkill / F / IM jdk * と 入力 し て エンター を 押す と 、 現在 実行 中 の インストール が 強制終了 し て インストール しな おせる か と 思い ます 。 コピペ する 際 は 、 文字 を コピー を し た 後 に Alt + Space → E → P で 貼り 付け が でき ます 。 
bat ファイル から 起動 を 試し て み て ください 適当 に 白い ところ を 右クリック し て 新規作成 から テキスト ドキュメント を 選択 名前 を 「 起動 . bat 」 など に 変更 それ を 右クリック し て 編集 を ポチ 記述 内容 - - - - - - - - - - - - - - - - - - - - - - ------------------------- @ ECHO OFF "% ProgramFiles %\ Java \ jre 7 \ bin \ java . exe " - Xms 1024 M - Xmx 1024 M - jar minecraft _ server . 1 . 9. 4 . jar pause - - - - - - - - - - - - - - - - - - - - - - ------------------------- 上 から @ ECHO OFF 細かい コマンド 表示 を オフ "% ProgramFiles %\ Java \ jre 7 \ bin \ java . exe " JAVA の 場所 を 指定 。 JAVA 8 の 最新 版 なら "% ProgramFiles %\ Java \ jre 1 . 8 . 0 _ 91 \ bin \ java . exe " 等 。 自分 の 環境 に 合わせ て 変え て ね - Xms 2048 M - Xmx 4096 M 鯖 に 割り当てる 最小 メモリ と 最大 メモリ 。 1024 MB = 1 GB 。 1 GB で 大体 3 人 ~ 4 人 で 遊ぶ サーバー 建て れる - jar minecraft _ server . 1 . 9. 4 . jar - jar で この ファイル 起動 し て ね っていう 指定 。 minecraft _ server . 1 . 9. 4 . jar を 起動 し て ね っていう 文 bat ファイル が 完成 し たら 、 それ を minecraft _ server 1 . 9. 4 . jar と 同じ フォルダ に 配置 し て から bat ファイル を ダブルクリック で サーバー 起動 し ます 
＞ カテゴリ を ユーザ が 増減 さ せる 部分 の 実装 方法 が 調べ て み たり し て も うまく 考え付き ませ ん ListView で 作っ た どうでしょう ListView を トップ に する こと に は なり ます が スクロール でき ます それぞれ の セル から GridView に 移行 です タブ の 場合 、 スクロール という 動作 に 違和感 が あり ます し あるいは 、 ギャラリーアプリ 系 だ と 、 カテゴリー 自体 を GidView に し て いる もの も おおい です ね 。 実際 に Google Play で 公開 さ れ て いる アプリ を 検証 し て み たら いかが でしょ う 
その とおり です 。 たとえば 、 Windows 用 の exe ファイル を 、 VC++ で 作ろ う と 、 VB で 作ろ う と 、 Delphi で 作ろ う と 全て 動作 し ます よ ね 。 これ は どれ も バイナリ 変換 さ れ た アセンブラ コード を OS が 読み取っ て 実行 し て いる から です 。 結局 JVM という の は アセンブラ 解釈 マシン な ので 、 それ が もともと どの 言語 だっ た か に 関係 なく 、 JVM が 解釈 できる バイナリ データ に なっ て いれ ば 、 その 通り に 実行 し ます 。 
配列 が 空 の 状態 は こう です ArrayList < Goods > buyGoodsList = null ; 配列 の 要素 が 空 の 状態 は こう です buyGoodsList . add ( null ); つまり 正確 に は 空 で は なく 、 サイズ が 0 の 配列 の オブジェクト が 変数 に は 入っ て い ます 。 配列 の サイズ が 0 だ と なぜ NullPointerException が 出 ない か > for ( int i = 0 ; i < buyGoodsList .s ize (); i ++){ > buyGoodsList . get ( i ). printGoods (); for 文 の i < buyGoodsList .s ize () に 注目 し て ください 。 置き換える と 、 0 < 0 → false と なり ます for 文 は 前 判定 な ので 、 {} 内の 処理 は 無視 さ れ ます 。 なので 例外 は 起こり ませ ん 。 --- サンプル コード --- // サイズ が 0 なら 無理やり 例外 を 発生 さ せる if ( buyGoodsList .s ize () == 0 ){ throw new NullPointerException (" ( ShoppingBag ) 商品 は 入っ て い ませ ん 。 "); } ---------------------- for 文 の 前 に これ を 挿入 する と 想定 し た 動き を し て くれる と 思い ます が 、 わざわざ エラー を 発生 さ せる 必要 は あり ませ ん か ね 。 サイズ が 0 で ある こと を 通知 する だけ で いい と 思い ます 。 
特に エラー に なる ところ は ない ので 、 全角 空白 が 入っ て いる 、 とか 、 ファイル 名 が Study . java . java に なっ て いる とか 、 そういった 方面 を 疑う と いい か と 思い ます 。 
public static void main ( String [] args ) これ と public static double a ( int i ) は 、 どちら も メソッド です 。 メソッド 内 に 直接 メソッド を 書く こと は でき ませ ん 。 {} 内 を 省略 し ます が class Zikan { public static void main ( String [] args ){/* 省略 */} public static double a ( int i ){/* 省略 */} } の よう に 、 全て の メソッド は クラス の 直下 に 来る よう に し て ください 。 呼び出す とき は 、 a ( i ) の よう に し ます 。 {} 内 の 変数 は 外部 と は 共有 さ れ ない ので 、 変数 を メンバ 変数 として class 直下 に 記述 し たり 、 引数 として 値 を 渡し たり し て ください 。 他 に も いろいろ と 。 --- 指摘 --- double dx = 2 ;// 明示 的 に double 型 を 代入 2.0 ( 単に わかり やすく する ため ) double sigma = 20 ;// 上 に 同じ 20 . 0 int J = 50 ; double [] x = new x [ J + 1 ];// new double [ J + 1 ] と 書く j [ 0 ] = 0 ; // j という 配列 は 宣言 し て い ない for ( int i = 1 ; i <= J ; i ++){// x . length と 書く と 配列 の サイズ を 取得 できる x [ i ] = i * dx ; } public static double a ( int i ){ return ( 0 . 5 * dt *( ( sigma )*( sigma )* x [ i ]/(( dx )*( dx )) - ( r * x [ i ])/( dx ) ) ); }// dt と r は 宣言 し て い ない 。 return の 直後 に スペース が ない ---------- --- 修正 後 --- ファイル の 先頭 に import java . util .*; を 書く public static void main ( String [] args ){ int r = ???; int dt = ???; double dx = 2.0 ; double sigma = 20 . 0 ; double [] x = new double [ 51 ]; x [ 0 ] = 0 ; double [] y = new double [ x . length ]; for ( int i = 1 ; i < x . length ; i ++){ x [ i ] = i * dx ; y [ i ] = 0 . 5 * dt * ( Math . pow ( sigma , 2 ) * x [ i ] / Math . pow ( dx , 2 ) - ( r * x [ i ]) / dx ); } } ------------- dt と r の 値 が わから ない です し 、 もとより どんな 処理 を する プログラム か わから ない ので ある程度 まで しか 修正 でき ませ ん ね 。 とりあえず a ( int ) の 計算 結果 を すべて y に 格納 し て い ます 。 また 、 メソッド は 複数 の 処理 を まとめる の に 適し て いる ので 今回 は 必要 ない と 判断 し て for 文 に 直接 計算 式 を 書き まし た 。 修飾 子 について です が メソッド public → どちら でも static → 必要 ( main メソッド が static の 為 ) クラス public → どちら で も 
クラス 名 と ファイル 名 を 合わせ ましょ う 。 Oracle クラス の ファイル 名 を oracle . java で は なく Oracle . java に し ましょ う 。 
> interface 内 で 定義 さ れ た メソッド は 自動的 に public 扱い に なる という こと でしょ う か 。 その 通り です 。 インタフェース の メソッド は 暗黙 的 に public abstract が 指定 さ れ た もの と みなさ れ ます 。 もちろん 明示 的 に 指定 し て も コンパイル は 通り ます 。 http:// www . ne.jp / asahi / hishidama / home / tech / java / interface . html 
右辺 の （ データ型 ） 式 の 括弧 を キャスト と 呼び ます 。 結果 として は 、 左辺 の recovPoint の 変数 に は int 型 として 代入 さ せる ため 、 右辺 の 結果 が double 型 など の 異なる 数値 の 場合 、 int 型 に 変換 する 必要 が ある 場合 に キャスト を 使い ます 。 例えば 、 下 の 例 の よう に 、 小数点 型 と 小数点 型 、 または 小数点 型 と 整数型 の 結果 は どちら も 小数点 型 と 認識 さ れ て 結果 が 返さ れ ます 。 しかし 、 その 結果 を z という 整数型 の ローカル 変数 に 代入 する 場合 は 、 x と y の 結果 を 整数型 に 変換 する 必要 が あり ます ので 、 右辺 の 式 の 前 に キャスト を 記述 する こと に なり ます 。 double x = 10 . 5 ; double y = 3 . 8 ; int z = ( int )( x ＊ y ); // ← キャスト System . out . println ( z ); 仮 に上 の キャスト を なし で 実行 する と 、 コンパイル エラー で 「 型 の 不一致 」 という メッセージ が 表示 さ れ ます 。 
File クラス の メソッド 一覧 くらい 見 たら ？ set ～ で 設定 できる ん だ から 、 その 逆 の 動作 を 行う メソッド が ある と は 思わ ん の か ？ 
SQL は リレーショナル データベース を 操作 する 機能 しか 持っ て い ませ ん 、 今回 の 質問 の よう な 、 それ 以外 の 処理 は プログラミング言語 で 行っ て 下さい 。 
App クラス の インスタンス を ２つ 作成 する と なる と 、 以下 の ２ 行 は おかしい です ね 。 > App obj 1 = " "; > App ob j2 = " "; ↓ 以下 の よう に 修正 し ます 。 App obj 1 = new App (); App ob j2 = new App (); > String edition ; これ は 、 App クラス の フィールド 変数 （ String 型 ） を 宣言 し て い ます 。 > public void disp (){ > System . out . print ( edition ); > } App クラス の disp メソッド で 、 戻り値 の ない メソッド です 。 処理 の 中身 は edition に 格納 さ れ て いる 文字列 を 出力 し ます 。 そして 、 main メソッド は 実行 さ れる コード です ね 。 まず 、 App クラス の インスタンス を ２つ （ obj 1 と ob j2 ） を 作成 し ます 。 > obj 1 . edition = " AA "; > ob j2 . edition = " BB "; まず 、 obj 1 （ App の インスタンス ） の edition フィールド に 「 AA 」 を 代入 。 次に 、 ob j2 （ App の インスタンス ） の edition フィールド に 「 BB 」 を 代入 。 > obj 1 . disp (); > ob j2 . disp (); そして 、 obj 1 の disp メソッド を 実行 し ます 。 disp メソッド は edition フィールド を 出力 さ せる 処理 な ので 、 obj 1 の edition フィールド に は さきほど 「 AA 」 が 格納 さ れ て いる ので 、 「 AA 」 と 出力 さ れ ます 。 次 の ob j2 の disp メソッド を 実行 し て いる ので 、 ob j2 の edition フィールド に 格納 さ れ て いる 「 BB ] が 出力 さ れ ます 。 出力 として は 「 AABB 」 と なり ます 。 Java の 基本 と なる 考え方 を 問わ れ て いる 問題 です ね 。 クラス 、 フィールド 変数 、 メソッド 、 インスタンス という 語句 を 理解 する こと が 大事 です 。 クラス と は １つ の ひな型 と 言わ れ ます 。 よく 例え られる の が ” たい焼き 作り ” です 。 たい焼き を 作る に は たい焼き の 型 と なる 鋳物 を 使い ます 。 この 鋳物 に 生地 を 流し込ん で 焼き ます よ ね 。 つまり 、 この 鉄板 みたい な 鋳物 が クラス と 思っ て ください 。 この 鋳物 が １つ あれ ば たくさん の たい焼き を 焼く こと が でき ます 。 クラス と は 複数 の もの を 作る ため の オブジェクト （ もの ） です 。 これ を 実体 化 し た もの （ 食べ られる たい焼き そのもの ） が インスタンス です 。 質問 で 言え ば 、 「 App obj 1 = new App ();」 が インスタンス し て いる ので 、 たい焼き の 鋳物 から １つ たい焼き を 作っ て い ます 。 また 、 たい焼き に は 中身 と なる " あん " を 入れ ます よ ね 。 でも 、 たい焼き に は アンコ 以外 に も カスタードクリーム や 白あん など で バラエティ な 品 揃え が あり ます 。 よって 、 たい焼き の 中身 を 定義 し て いる の が フィールド 変数 です ね 。 質問 で あれ ば edition 変数 です 。 質問 で は 「 obj 1 . edition = " AA ";」 の 部分 が インスタンス の 中身 を 入れ て いる ところ です 。 たい焼き で あれ ば 「 AA 」 が 「 あん 」 、 「 BB 」 が 「 カスタードクリーム 」 よう な イメージ に なり ます 。 そして メソッド です が 、 メソッド は フィールド 変数 に 格納 さ れ た データ を 利用 する ため の 処理 を 行い ます 。 単に データ を 入れ た だけ で は 意味 が なく 、 その データ を 利用 し なけれ ば クラス の 意味 が あり ませ ん 。 質問 で は 、 disp メソッド です ね 。 この メソッド で は フィールド 変数 の 中身 を 出力 さ せ て い ます 。 たい焼き で は 、 ２つ の インスタンス （ たい焼き ） の 中 に 入っ て いる あん の 種類 は 何 か を 出力 さ せ て いる ので 、 結果的 に は 「 あん カスタードクリーム 」 と 表示 さ れ ます ね 。 
構成 は calcapp \ main \ Calc . java calcapp \ logics \ CalcLogic . java と なる よう に し て ください 。 最 上位 の パッケージ の 一つ 上 の ディレクトリ を カレントディレクトリ に し て 、 javac calcapp \ main \ Calc . java java calcapp . main . Calc と コンパイル 、 実行 し ましょ う 。 java ファイル 内 の パス や パッケージ 指定 は コンパイル ・ 実行 時 の カレントディレクトリ 中心 だ と 考える と やり やすい です 。 desktop を カレントディレクトリ だ と する と 、 calcapp . logics . CalcLogic と 指定 し た 時 に desktop から calcapp \ logics \ CalcLogic . class を 探す よう な イメージ です 。 
Scanner # nextLine () で 入力 し て もらい 、 入力 し て もらっ た 文字 を String # sub String () メソッド で 次 の よう に し て 切り出す 。 // scan が 入力 し て もらっ た 文字 。 char charText = scan . charAt ( 0 ); String string = scan .s ubstring ( 1 ); そして 、 string を 数字 に 変換 する 。 int number = Integer . parseInt ( string ); そして 、 それ を 使う 。 これ で いい の では ？ 
変数 に は インスタンス 変数 と 静的 変数 が あり ます 。 修飾 子 に static が つい て いる かい ないか で 判断 さ れ ます 。 この コード の 場合 、 lang が 静的 変数 変数 、 operation が インスタンス 変数 です 。 インスタンス 変数 は 、 インスタンス 毎 に 値 を 保持 する ので 、 10 . まで の 段階 で 、 obj 1 . operation は b で 、 ob j2 . operation は c に なる の は お わかり に なる と 思い ます 。 一方 で 、 静的 変数 は クラス に対し ただ 1つ 領域 が 確保 さ れ 、 そこ に 値 が 保持 さ れ ます 。 な ので 、 インスタンス が いくつ つくら れ て も 、 どの インスタンス から 静的 変数 に アクセス し て も クラス に対し 作ら れ た 領域 に アクセス する ので 同じ 値 を 返し ます 。 また 、 どの インスタンス から 値 を 変更 し て も 、 クラス に対し 設定 さ れ た 静的 変数 の 値 を 参照 する ので 、 何 か 一つ の インスタンス から 静的 変数 の 値 を 変更 する と 、 どの インスタンス から 静的 変数 を 参照 し て も 同じ 値 を 返し ます 。 です ので 、 11 . ob j2 . lang で 値 し て いる ので 、 obj 1 . lang も ob j2 . lang も 同じ 静的 変数 の 領域 の 値 を 参照 する ので 、 両者 とも d と 出力 さ れ ます 。 この 解説 でいか が でしょ う ？ 
もし 、 表示 イメージ に 順番 が 関係 ない の で あれ ば これ でも 大丈夫 か と 6 人 の 場合 で 書き ます 。 参加者 の 入力 を 受け付ける の で あれ ば その 数 に 合わせ て 配列 を 宣言 すれ ば いい です ・ 名前 の 配列 ・ カード 番号 の 配列 を 二つ 宣言 し ます String [] name = new String [ 6 ]; int [] card = new int [ 6 ]; name [ 0 ] = " 一 人 目 " name [ 1 ]... // ここ に 全員 の 名前 card [ 0 ] = 11 card [ 1 ]... // ここ に カード 番号 int num = 0 ; for ( int i = 1 ; i <= 13 ; i ++){ // ここ で 番号 ごと に 比較 を 行っ て いき ます int check = 0 ; String st = ""; for ( int j = 0 ; j < name. length ; j ++){ // ここ で メンバー の 比較 を し ます if ( i == card [ j ]){ // 番号 が 同じ 場合 check ++; if ( check == 1 ){ st += name [ j ]; } else if ( check > 1 ){ st = st + "、" + name [ j ]; } } if ( check < 1 ){ // マッチ し て いる 場合 の 出力 num ++; st = num + ":" + st + " カード " + i + " で マッチ "; System . out . println ( st ); } } } こんな 感じ で どうでしょう 。 テスト し て ない ので この まま ペースト し て 動く か は 微妙 です fo reach など を 使え ば もっと スムーズ に いく と 思い ます 
encryptor が クラス 名 encrypt が メソッド 名 decoder が クラス 名 decode が メソッド 名 
「 単体 」 を どこ まで で 定義 する か の 違い だけ です 。 メイン 〜 各 成形 処理 の メソッド まで を 単体 と 定義 すれ ば 、 あなた の 手法 で 良い と 思い ます 。 しかし 、 個人的 に は クラス ごと で 単体テスト を し て 欲しい です 。 単体テスト は 、 他 の クラス の 出来 不出来 に かかわら ず テスト として 実行 可能 で あっ て ほしい から です 。 「 メソッド の スタブ を 作っ て テスト する 手法 も ある 、 と あり まし た が 、 データ形式 それぞれ の 処理 クラス の メソッド は 、 インプット → アウトプット の 工程 が 複雑 で 、 スタブ を 作る の は 困難 」 と あり ます が 、 この 視点 が 誤り で ある と 思い ます 。 main から 見れ ば 、 「 引数 に データ形式 を 指定 し て 実行 する と 、 データ形式 に 応じ た 処理 クラス を 用い て 、 最終 的 な 成型 文章 を 出力 」 する こと が 仕事 です から 、 ・ 引数 に データ形式 を 指定 する と ・ データ形式 に 応じ た 処理 クラス を 用いる こと が でき た という 2 点 が 確認 できれ ば いい わけ で 、 「 データ形式 に 応じ た 成形 文書 を 作る 」 の は それぞれ の データ形式 に 応じ た クラス が 負う べき 責任 です 。 （ したがって 、 メソッド の スタブ として 、 インプット に対する メソッド を 呼べ た こと を 返す スタブ を 考えれ ば 、 変換 工程 が 複雑 だ として も スタブ を 起こす こと が でき ます ） main の 責任 は ・ データ形式 に 応じ た 処理 クラス を 呼び出せる ・ 処理 クラス を通じて 返っ て き た 結果 を 書き出せる の 2 点 に なり ます から 、 この 責任 を 担保 できれ ば 、 単体テスト として 成立 する と 思い ます 。 （ 単一 責任 の 原則 から 考える と 、 main が 2つ の 動き に 責任 を 持つ こと に なっ て しまう ので 、 責任 単位 で もう少し 小さく 分割 する の が 良い と 思い ます が ） 
box って こと は 直方体 で 原点 起点 に 書く と する と 沢山 書い たら どういう 画 に なる の か ちょっと 心配 だ けど それ は ともかく 。 > 格納 する 値 が いくつ か 分から ない だ から ArrayList 使っ た ん じゃ ない ん です か ? それ と 、 データ の 性質 を 二 次元 配列 と 捉え た ところ は 間違い な ん じゃ ない かしら 。 読む と 「 二 次元 」 では なく て 、 直方体 データ の 配列 、 でしょ う ? それ と 、 i という 変数 や 、 いくつ か の 意味 ? の 違う get ( i ) という メソッド を 考え の 中 で 使い 回す こと で 混乱 し て いる よう に も 見え ます 。 > pv . get ( i ) が 四角形 の 数 で i は 直方体 の インデックス ナンバー 、 ですよ ね 。 pv . get ( i ) は 直方体 データ オブジェクト と する なら ば class BoxData {// 直方体 の 一 個 あたり データ float w , h , d ; float r , g , b ; BoxData ( float r , float g , float b , float w , float h , float d ) { this . r = r ; this . g = g ; this . b = b ; this . w = w ; this . h = h ; this . d = d ; } void draw () { fill ( r , g , b ); box ( w , h , d ); } } ArrayList < BoxData > pv = new ArrayList < BoxData >(); void setup () { size ( 300 , 300 , P 3D ); frameRate ( 3 ); } void draw () { background ( 0 ); BoxData bd = new BoxData ( random ( 0 , 255 ),// データ 作る の 面倒 な ので 全部 ランダム random ( 0 , 255 ), random ( 0 , 255 ), random ( 0 , 255 ), random ( 0 , 255 ), random ( 0 , 255 ) ); pv . add ( bd ); for ( int i = 0 ; i < pv .s ize (); i ++) { pv . get ( i ). draw (); } } みたい な 話 で は ない の か と 。 
なり ます よ 。 勿論 Java で プログラミング を する なら の 話 です が ね （ ほか の 言語 で やる と 、 その 言語 の 勉強 に なっ ちゃう ） 。 私 は 、 ゲーム が 作り たく て ゲーム 作り と 並行 し て Java を 勉強 し まし た し 。 
# コマンド だけ だ と 字数 が 足り ない そう です 。 who | wc - l > aa a1 
Enum は クラス メソッド values を 持っ て て 、 全 列挙 子 を 返し ます 。 それ 、 利用 すれ ば いい の では 。 class Foo { ___ enum Color { ___ ___ Blue (" 青 "), ___ ___ Yellow (" 黄 "), ___ ___ Red (" 赤 "), ___ ___ White (" 白 "); ___ ___ final String name ; ___ ___ private Color ( String name ) { ___ ___ ___ this . name = name ; ___ ___ } ___ } ___ public static void main ( String [] args ) { ___ ___ int i = 0 ; ___ ___ for ( Color c : Color . values ()) ___ ___ ___ System . out . println ( i ++ + ": " + c + ". name -> \"" + c . name + "\""); ___ } } 実行 結果 : $ javac Foo . java $ java Foo 0 : Blue . name -> " 青 " 1 : Yellow . name -> " 黄 " 2 : Red . name -> " 赤 " 3 : White . name -> " 白 " 
条件 分岐 さ せ ましょ う 。 if 文 で 可能 です 。 また 、 オブジェクト 変数 が 保持 する 値 を 比較 する 場合 は equals メソッド を 用い ます 。 System . out . println (" はい いいえ "); String ans = scan . next (); // 分岐 if ( ans . equals (" はい ")) System . out . print (" はい が 選択 さ れ まし た "); else if ( ans . equals (" いいえ ")) System . out . print (" いいえ が 選択 さ れ まし た "); // 1 ~ 複数 行 の 場合 は {} で くくる if ( ans . equals (" はい ")){ System . out . print (" はい が 選択 さ れ まし た "); } こんな 感じ です 。 
先 に List < UserInfo > res = new ArrayList (); など を 宣言 し て おき ます 。 rs を 取得 し たら while ( rs . next ()){ UserInfo info = new UserInfo (); // 以下 、 rs . get ( カラム名 ) か rs . get ( カラム の 番号 、 1 始まり ) で 得 た 値 を info に 積む 。 // 例 info . userid = rs . get (" userid "); info . userid = rs . get ( 1 ); // その後 リスト に 追加 rs . add ( info ) } これ は 全 件 の 場合 。 条件 バインド は そもそも sql が おかしい です 。 後 から 値 を 入れる 部分 は ? で 記述 し String sql = " SELECT * FROM userinfo WHERE ( userid , username , tel )=( userInfo )"; が 何 を し たい の か 不明 です が 、 userid を バインド し たい なら String sql = " SELECT * FROM userinfo WHERE userid =?"; として 、 stmt 生成 後 に stmt .s et String ( 1 , info . userid ); の よう に 値 を 入れ て から stmt . executeQuery (); を 実行 です 。 
> minim の ライブラリ など は どう 入れれ ば いい の でしょ う か ？ processing . js で minim は 使え ませ ん 。 ググっ て み た ところ 、 http:// interactivecomputing 2013 . globalblogs . org / 2013 / 10 / 16 / minim - js ... https :// github . com / nryota / p . minim . js など 代用 でき そう な もの が 見つかり まし た 。 （ 試し て い ませ ん ） また 、 ブラウザ で 再生 する こと が 前提 な の で あれ ば 、 Processing で は なく p5 . js を 使う 方 が 良い と 思い ます 。 http:// p5 js . org / reference /#/ libraries / p5 .s ound 
簡単 な 例 で ・ ・ Dog クラス を 以下 の よう に 作成 し ます 。 public class Dog { private String name ; private int age ; private boolean sex ; public Dog ( String name , int age , boolean sex ){ this . name = name ; this . age = age ; this .s ex = sex ; } public String getSex ( boolean sex ){ if ( sex == true ) return " オス "; else return " メス "; } public void show (){ System . out . println (" 名前 は " + name + "、 年齢 は " + age + "、 性別 は " + getSex ( sex )); } } 次に 、 main メソッド を 持つ Main クラス を 以下 の よう に 作成 し ます 。 public class Main { public static void main ( String [] args ) { Dog dog = new Dog (" ポチ ", 8 , true ); // ← インスタンス化 dog .s how (); } } Dog クラス は 設計図 と なる もの です 。 つまり 、 世界中 の 犬 の 原型 だ と 考え て ください 。 ただ 、 これ だけ で は 単に 犬 を 表現 し て いる だけ です 。 犬 は たくさん い ます よ ね 。 その ぞ れ の 犬 に は 名前 、 年齢 、 性別 など が あり ます 。 そこで 、 main メソッド で 犬 を 実体 化 し ます 。 その 実体 化 し た 犬 に 「 ポチ 、 8 才 、 オス 」 と 設定 さ れる こと で 、 1 匹 犬 が 作成 さ れ ます 。 これ が インスタンス です 。 オブジェクト と インスタンス の 違い が 難しい です が 、 最初 は 同じ 意味 だ と 考え て も 良い と 思い ます 。 クラス は 抽象 化 し た もの 、 インスタンス は 具象 化 し た もの 、 オブジェクト に は クラス オブジェクト 、 インスタンス オブジェクト という もの が あり ます が 、 あくまでも 設計 段階 で の 呼び名 です から 、 実装 する 段階 の インスタンス を オブジェクト と 呼ぶ こと も ある と 考え て ください 。 
アイテム コード と は 、 http:// wikiwiki .jp / mcjp /?% A5 % A 2 % A5 % A 4 % A5 % C 6 % A5 % E 0 ID の こと を 指し て いる の だろ う か ？ あと 、 配信 さ れ て いる MOD を 勝手 に 操作 し て 遊ぶ 分 に は 問題 は ありません が 、 それ を 新た な MOD として 提供 する 場合 、 開発元 へ の 許可 が 必要 です 。 MOD の コード は 、 出し て いる 人 も い ます し 、 共同 作業 だ から 出さ れ て い ない 方 も い ます 。 
Java 1 . 8 という こと は 最新 の バージョン です 。 古い バージョン が 欲しい の で あれ ば 、 バージョン を 言っ て ください 。 例えば Java 1 . 7 とか Java 1 . 6 とか です 。 
大丈夫 です 。 海外 サイト を 見 て いる と 、 たま に あり ます ね 。 他 にも 「 Firefox （ IE ） の バージョン が 上がり まし た 。 」 とか も 、 うそ ん こ です 。 ただし 、 インタネット 上 で 、 クレジットカード や 個人情報 を 書き込ん で いる と 、 流出 する 可能性 は ０ では ない ので 、 慎重 に し た ほう が よい です 。 海外 閲覧 用 と 、 ネット の 買い物 の ブラウザ を 分ける だけ でも 、 効果 は ある 。 
右クリック し て 管理者権限 で 実行 って ない です か ? 
map [ 1 ][ 2 ] の 型 が 不明 だ けど int [][] 型 だ と 仮定 する なら int [][] prePosision = map ; で いい の では 
Java の ゲーム が し たけれ ば Java JRE を インストール する 必要 が あり ます 。 それ が インストール さ れ て い ない と いくら 頑張っ て も Java の ゲーム は でき ませ ん 。 
＞ OpenGL : ~~ ERROR ~~ RuntimeException : No OpenGL context found in the current thread . グラフィック 関連 の エラー です 。 最新 に 更新 し て も 改善 し ない の なら 、 故障 か スペック 不足 だ と 思わ れ ます 。 
int [] order = { 0 , 1 , 2 }; こんな 配列 を Fisher - yates shuffle し て for ( int n : order ){ switch ( n ){ case 0 : test 1 (); break ; case 1 : tes t2 (); break ; case 2 : tes t3 (); break ; } } 
R . id .s eekBar を 定義 し て いる レイアウトファイル は あり ます か ？ ある の で あれ ば 、 setContentView ( R . layout . ファイル 名 ); と setContentView ( new Draw Canvas ( this )); の 代わり に 読み込ま せ て ください 。 
Java を 初めて 導入 する 時 は 環境変数 という もの を 一つ 追加 し ない と いけ ませ ん 。 ( 詳しい こと は ぐぐっ て ください ) それ か 、 何かしら の ウィルス ソフト で Java を 危険 と 検知 し 、 うまく 起動 し て い ない 可能性 が あり ます 。 その 場合 は ウィルス ソフト の ソフトウェア の 設定 で Java のみ を 無効 化 する 必要 が あり ます 。 実際 に 僕 も 同じ よう な こと が あり まし た が 、 この 二つ を しっかり Wiki など を 見 て やっ た ところ でき まし た 。 
下記 を どうぞ 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1216007179 ... 
この プログラム は 、 間違っ て い ます 。 動作 を 確かめ て から 、 コピー し て ください 。 
ちょい と 調べ た が 、 データベース （ RDBMS ） という 概念 を 考案 し た の は イングランド人 だ 。 最初 の RBDMS 実装 を し た の が 誰 か は 知ら ん が 、 Oracle を 作っ た の は アメリカ人 、 MySQL を 作っ た の は フィンランド人 。 Linus が アメリカ人 だ とかいう トンチキ な 発言 を し て いる よう だ が 、 Linus が 米国 国籍 を 取得 し た の は 2010年 。 Linux の 公開 は 1991年 な ので 、 公開 当時 、 彼 は アメリカ人 で は ない 。 1991年 当時 の 彼 は ヘルシンキ 大学 に 所属 し て おり 、 つまり 当時 アメリカ に 住ん で い た わけ で も 、 アメリカ で 学ん だ わけ で も 、 アメリカ で 働い て い た わけ で も ない 。 「 アメリカ人 が い なけれ ば 」 という 仮定 に は 、 複数 の 意味 で 意味 が ない な 。 まず 、 アメリカ人 が い なけれ ば 、 他 の 誰かが 開発 し て い た だけ だろ う 。 もし アメリカ独立戦争 が なく 、 アメリカ という 国家 が 成立 し て い なけれ ば 、 イギリス か フランス 辺り が 恐らく 開発 する 事 に なっ た だろ う 。 アメリカ が あっ て も 、 何らかの 理由 で インターネット を 開発 し なかっ た と し たら 、 その 時 は 他 の 国 が 開発 する 事 に なっ た はず だ 。 更に 、 アメリカ という 国 が 成立 する に は 、 イタリア の 船乗り で ある コロンブス が アメリカ大陸 を 「 発見 」 し 、 イギリス人 が 植民 する 必要 が ある 。 で あれ ば 、 アメリカ の 成立 自体 が この 2 国家 の おかげ 、 という 事 に なる 。 で あれ ば 、 インターネット も これら の 国家 の おかげ 、 という 見方 も できる 。 そもそも 冷戦 が なけれ ば アメリカ は インターネット を 真面目 に 開発 し て い なかっ た はず で 、 つまり ソヴィエト の おかげ 、 という 見方 だって できる 。 さらに 遡れ ば 、 そう なる に 至っ た 歴史的 理由 に は 、 さらに 多く の 歴史 の 流れ が あっ た はず だ 。 「 ローマ帝国 が なけれ ば インターネット は なかっ た 」 とか 、 いくら で も 、 どこ まで も 関係者 を 増やす 事 が できる 。 そして 、 先 ほど 述べ た よう に 、 「 そいつ ら が やら なく て も 他 の 誰か が 同じ 位置 を 占め た 」 という 理屈 も また 成立 する 。 歴史 の 因果関係 という の は 全て が 連綿 と 繋がっ て いる 。 特定 の タイミング で 切っ て 論じる 事 に は 意味 が ない 。 
あまり 詳しく は ない です が 、 下記 が 参考 に なる か と 。 http:// www . javadrive .jp / install / jdk / in de x4 . html 
まず もちろん です が 1 . 7 . 10 の mod と 同じ に 1 . 8 版 の mod が ない と いけ ませ ん 対応 し て いる なら アイテム ID に さえ 気 を つけれ ば 大丈夫 です よ 
UTF-8 という Unicode 関係 の 文字コード を 利用 し て いる ので 、 対応 する 文字コード の 絵文字 を つかい ましょ う 。 それ 以外 は 基本的 に 描画 でき ない と 思い ます よ 。 
プログラム を 作る に は 、 やり たい こと を 筋道 立てて 考える 能力 が 必要 。 で 、 そういう 事 が できる 人 は こんな 大雑把 な 質問 は し ない 。 ちゃんと し た 説明 が できる って こと 。 プログラム 開発 より まず は そういう 事 が できる よう に なる の が 先 だ な 
一 例 です 。 一般的 に 式 は 左側 から 評価 さ れ ます 。 if ( name != null && ! name. equals ("") && body != null && ! body . equals ("") ) 
public static int sum ( int n )｛ int s = 0 ; int i = 1 ; if ( n == 0 ) System . out . println ();// 引数 が 0 だっ たら 改行 else if ( n < i )｛// 引数 が i = 1 より 小さかっ たら i ++;｝// i = 2 に なる だけ System . out . println ( s += i );// s = 1 ~ 2 に なる だけ sum ( n - 1 );// 必ず 再帰 する return s ;// s = 1 ~ 2 が 返さ れる ｝ ｝ まず 、 無限ループ な ので 終了 条件 を 考え て ください 。 sum ( n - 1 ); この 再帰 文 自体 に 条件 分岐 ( if ) が かかっ て て 、 なおかつ 条件 に 使わ れる 変数 が 変化 する 必要 が あり ます 。 そう は なっ て い ない ので 、 無限ループ に なり ます 。 ↓ 正直 これ で 実装 でき ます 。 メモリ を 多く 消費 する し 、 可読性 が 低い ので 使い たく ない です 。 --- サンプル コード --- static int sum ( int n ){ if ( n > 0 ) return sum ( n - 1 ) + n ; return 0 ; } ---------------------- 解説 する と 、 n = 0 に なっ た 時点 で 0 が 返っ て 、 その 一 個 上 に 0 が 返さ れ て 、 1 が 足さ れ て 、 それ が 返さ れ て 、 2 が 足さ れ て ・ ・ ・ と なり ます 。 解説 も 難しい ... 繰り返し に なり ます が 、 再帰 は トレース が 難しい 上 に メモリ を 多く 消費 し ます 。 特に 質問者 さん が サンプル コード を 見 て も 理解 が 難しかっ たら 、 使用 を 避け た 方 が いい です 。 再帰 定理 という もの が あっ て 、 再帰 で 実現 できる もの は ループ で 実現 できる と 証明 さ れ て いる ので 正直 めった に 使い ませ ん 。 テスト に 出る とか だっ たら 仕方 ない です が 。 とりあえず 頑張っ て ください 。 
最後 に 答え も 掲示 し て い ます 変数 が めちゃくちゃ に なっ て い た ので そこ が 問題 です ！ この まま で は 絶対 動き ませ ん （ そして 、 エラー が 出て も 謎 の まま か と ） りな さん が 最初 に やら ない と いけ ない こと は 変数 の 名前 を 同じ に する こと 二 つめ の プログラミング の 内容 を メソッド に する こと の 二つ です 。 可変 引数 の 引数 の 書き方 は あっ て い た ので 大丈夫 です よ 以上 の 二つ が できれ ば 、 解決 する か と 思い ます ---------- 変更 前 ---------- int m ; m = min ( 1 ); m = min ( 1 , 2 , 3 , 4 , 5 , 8 ); m = min ( 3 , 5 , 3 , 2 ); 二つ目 の プログラミング int min ( int ・ ・ ・ number ){ // メソッド 化 が 必要 引数 名 は numbers へ int currentMin = numers [ 0 ]; // 変数 名 は numers -> numbers for ( int i = 1 ; I < number s.l ength ; i ++) { if ( number [ i ] < currentMin ) { // number -> numbers currentMin = numbers [ i ]; } } return currentMin ; } ------- 変更 後 ----------- public class Main { public static void main ( String [] args ){ int m ; m = min ( 1 ); System . out . println ( m ); m = min ( 1 , 2 , 3 , 4 , 5 , 8 ); System . out . println ( m ); m = min ( 3 , 5 , 3 , 2 ); System . out . println ( m ); } public static int min ( int ... numbers ){ int currentMin = numbers [ 0 ]; for ( int i = 1 ; i < number s.l ength ; i ++) { if ( numbers [ i ] < currentMin ) { currentMin = numbers [ i ]; } } return currentMin ; } } これ で 大丈夫 でしょ う か ？ 
GUI プログラミング は 、 内部 クラス に インターフェース を 実装 し て 、 全て の 抽象 メソッド を オーバーライド し て リスナー クラス として 動かし たり し ます 。 また 、 awt → swing → JavaFX と 技術 が 進化 し て い て 、 基礎 から しっかり と 学ぶ なら awt から 順番 に 勉強 す べき です 。 ( awt の 機能 を 、 新しい もの が 継承 し て いる ため ) これら は クラス へ の 理解 より も 相当 難しい です 。 私 は 、 java を 始め て から 半年 間 プログラム を 作り まくっ て から GUI に 着手 し まし た が 、 簡単 な プログラム 作成 まで 一 カ月 ほど 要し まし た 。 それ ぐらい の 難し さ です 。 基礎 から しっかり と やり ましょ う 。 以下 、 クラス の 説明 です 。 ちなみに 、 クラス は 値 の 複製 や メソッド に対する 値 の 保持 、 参照 渡し の 実現 など が 特徴 的 です 。 ・ 値 の 複製 と 関連 付け --- サンプル コード --- class A { int i = 1 ; String s = " s "; char c = ' c '; } A a = new A ();// 一気に 3つ の メンバ 変数 が 生成 さ れる 。 System . out . println ( a . i + ":" + a .s + ":" + a . c );//[ 1 : s : c ] A b = new A (); System . out . println ( b . i + ":" + b .s + ":" + b . c );//[ 1 : s : c ] ---------------------- 2回 の 変数 宣言 だけ で 変数 が 6つ も 生成 さ れ て いる の が わかり ます 。 また 、 i , s , c という 型 の 違う 変数 が それぞれ 結びつい て いる こと が 他 の プログラマ が 見 て も わかり ます 。 また 、 a . equals ( b ) の よう な 感じ で 書く と メンバ 変数 の 完全 一致 を 判定 でき ます 。 比較 も 簡単 です 。 ・ メソッド に対する 値 の 保持 --- サンプル コード --- class B { int n , m ; B ( int n , int m ){ this . n = n ; this . m = m ; } int add (){ return n + m ;} int sub (){ return n - m ;} int mul (){ return n * m ;} } B b = new B ( 2 , 3 );// メンバ 変数 を 設定 する System . out . println ( b . add () + ":" + b .s ub () + ":" + b . mul ());//[ 5 :- 1 : 6 ] ---------------------- c言語 の よう な 普通 の 関数 で は 毎回 値 を 与える 必要 が あり ます が 、 メンバ 変数 を 設定 し て しまえ ば 、 共通 する 引数 を 初期 設定 ( コンストラクタ ) で 全て 済ませ て しまう こと が でき ます 。 とっても 便利 。 ・ 参照 渡し 説明 面倒 な ので 省略 オブジェクト を 渡す と 、 オブジェクト の メンバ 変数 が 別々 の 変数 で 共有 さ れる とか そんな 感じ です 。 大変 でしょ う が 頑張っ て ください 。 
えーと 、 もしかして プリミティブ と ラッパー の こと を おっしゃっ て ます か 。 例 ： int と Integer それ 前提 で 書く と 、 数値 クラス は 必要 です 。 なぜなら 、 プリミティブ ( int とか double とか ) は オブジェクト で は ない から です 。 オブジェクト で ない と 、 オブジェクト を 引数 と し た メソッド に 格納 でき ませ ん 。 たとえば 、 不定 長 の リスト を 作ろ う と 思っ て も 、 List は オブジェクト の インスタンス しか 格納 でき ない ため 、 List < int > list という 宣言 は でき ませ ん 。 その ため 、 数値 は 不定 長 リスト に 格納 でき ない という こと に なり ます 。 ※ int [ 1 ] の 無駄 配列 を 宣言 し て 無理矢理 インスタンス化 する 方法 も あり ます が 。 これ じゃ 困る ので 、 数値 クラス （ ラッパー クラス ） が あり ます 。 ラッパー クラス は クラス で あり 、 インスタンス を 生成 でき ます ので 、 List < integer > list として 不定 長 リスト に 格納 する こと が でき ます 。 
どういう 状況 か 教え て ください 。 インストール でき ない の です か ？ それとも ダウンロード でき ない の です か ？ 
＞ 入力 し た 自然数 の 最小 公約数 ＞ （ 例 ： 自然数 １ ２ は ' ２ ' の 倍数 です 。 ） そもそも 最小 公約数 なんて 言葉 は ない 。 「 公 」 って 言葉 が つく なら 、 2つ 以上 の 数値 が 必要 。 問題 を 整理 し て 出直せ 。 追記 ： あと 、 パソコンカテ より プログラミングカテ の 方 に 質問 す べき 。 
JSP + Server side Java は 素直 じゃ ない です 。 php 対抗 なら JSP だけ で 書く ほう が いい でしょ う 。 そうすると 作り やすさ から 言っ たら php に なり ます 。 フレームワーク 使う なら 逆 に Java じゃ ない か なぁ 。 spring は ともかく play とか jsf とか は 、 割と モダン で 分かり やすい です から 。 
0 を 許さ ない なら 、 正しく は 「 半角 数字 で 0 より 大きい 4 桁 の 数字 」 です ね [ 1 - 9 ][ 0 - 9 ]{ 0 , 3 } 先頭 1 ~ 9 、 次に 0 ~ 9 が 3 連続 以下 --- false 0 01 a 12311 --- true 1 23 223 4433 こんな 感じ です か ？ 頑張っ て ください 。 
クラス 型 変数 を 説明 する 時 に 難しい 言葉 を 並べる と さらに 分かり にくく なっ て しまい ます な ので 、 具体 例 だけ を 出し て いき ます ね プログラム の 中 で 犬 を １ ０ 匹 作り たい と し ます 犬 を １ ０ 匹 。 。 。 それぞれ の 犬 は 「 名前 」 「 年齢 」 が 違う と し ます 例えば ポチ ３ 歳 ハナ ２ 歳 ・ ・ ・ といった 感じ です これ を 普通に プログラム 内 に 書こ う と し たら サイズ １ ０ の 配列 など を 用意 し ます それ で それぞれ に 名前 など を もたせ て ・ ・ ・ ・ と なっ て 面倒 です そこで 、 犬 の モデル を 作り ます これ が 「 犬 クラス 」 と なり ます class Dog { // } けれど 、 それぞれ の 犬 は 名前 と 年齢 は 違う ん です よ ね ？ Dog pochi ; Dog hachi ; の ２つ で 名前 と 年齢 を 別に 設定 し て あげ ない と いけ ない そこ で クラス 型 変数 を 使い ます これ は つまり 「 同じ 犬 モデル の 中 でも 犬 ごと に 変わる 部分 」 の こと です そこで 、 クラス 型 変数 を 用意 し ます class Dog { public String name ; // 修飾 子 は 説明 上 public に し て い ます public int age ; } これ で Dog pochi = new Dog (); pochi . name = " ポチ "; // pochi の 名前 は ポチ です pochi . age = 3 ; // ポチ は ３ 歳 です Dog hachi = new Dog (); hachi . name = " ハチ "; // hachi の 名前 は ハチ です hachi . age = 2 ; // ハチ は ２ 歳 です と する こと で もともと の ポチ ３ 歳 ハナ ２ 歳 の ２ 体 の 犬 を 宣言 でき ます もう １つ 先 の 説明 まで し て しまう と pochi など の 宣言 と 同時に 名前 と 年齢 は 入れ て しまい たい です ね そこで 使用 する の が コンストラクタ と 言い ます new Dog (); と 同時に 、 クラス 型 変数 へ の 代入 を 行い ます class Dog { private String name ; // 修飾 子 は private に し まし た private int age ; public Dog ( String st , int a ){ this . name = st ; // 名前 を 代入 this . age = a ; // 年齢 を 代入 } } 上 の コード は バリバリ 書い て いる 人 から 見る と 少し 変 な ところ が あり ます が 説明 上 省略 し ます まとめる と 同じ モデル の 中 で も 異なる 値 を もたせ たい 時 ( 名前 とか 年齢 とか ) クラス 型 変数 を 使用 し ます この 先 で は コンストラクタ とか 修飾 子 とか を 勉強 し て いく と 思い ます 頑張っ て ください ！ 
動的 追加 は でき ない 。 
2 ヶ月 後 の 1日 （ ついたち ） の 前日 な ので c . add ( Calendar . MONTH , 2 ); c .s et ( Calendar . DAY _ OF _ MONTH , 1 ); c . add ( Calendar . DAY _ OF _ MONTH , - 1 ); > そもそも なんで こんな 仕様 に なっ て いる ん でしょ う ？ ？ バグ に 見え て しまい ます 。 じゃあ どういう 仕様 なら いい と 思う ん です か ? 
ここ に 書い て ある 通り Eclipse 再起動 で 直る ケース が 多い です 。 http:// did 2m emo .net / 2012 / 09 / 14 / eclipse - workspace - path - cache - error / それで だめ なら 、 Java の ライブラリ パス で エラー と なっ てる ところ を 正しい パス に 修正 し て ください 。 
main 文 は 、 実行 し たい クラス に 書か ない と いけ ませ ん 。 今回 実行 し たい クラス は StaticBlock で RootFun で は あり ませ ん 。 その ため 、 StaticBlock を 実行 する よう に し て ください 。 具体 的 に は ファイル 名 を StaticBlock . java に すれ ば 、 それ が メイン クラス として 扱わ れ ます 。 
正直 に 伝え て しまっ た 方 が いい 気 が する ので お伝え し ます 質問者 さん も もしか する と その プログラム を 見 て 何 が おかしい か まだ わから ない 状況 だ と 思い ます jediAdd という メソッド で どういう 計算 が し たい の か が わかれ ば 、 答え を 出す こと も 可能 な の です が ・ ・ ・ まずは return a b 1 ; これ を 直し ましょ う return で 返せる 戻り値 は 一つ だけ です ( ひとつ の オブジェクト だけ です ) な ので 、 a も b も という の は 不可能 です もしか する と return ( a + b + 1 ); と 書こ う と し まし た か ？ これ なら 大丈夫 です まずは jediAdd の 内容 が わから ない こと に は 結果 が どう なる かも かけ ませ ん ・ ・ ・ コメント いただけれ ば お返し し ます ！ 
マイクラ の 現状 の 仕様です が マイクラ の ランチャー を 起動 ↓ プロファイル で 起動 する バージョン を 選ぶ ↓ . minecraft 内 の versions フォルダ 内 から 選ば れ た プロファイル の バージョン の フォルダ を 読み込む ( フォルダ 内 の バージョン . jar と バージョン . json を 読み込む ) ↓ マイクラ 起動 ( マイクラ 本体 の プログラム は バージョン . jar に 格納 さ れ てる ) ↓ . minecraft 内 の データ ( MOD や 設定 や ワールド データ や マルチ で 登録 さ れ た IP 情報 など ) の 読み込み ↓ マイクラゲームタイトル 画面 と なり ます 。 現在 は ランチャー を 通さ ず に マイクラ を 直接 起動 する 方法 は あり ませ ん 。 ( 割れ や 勝手 に 改造 し たり すれ ば 可 能っ ちゃ 可能 だ けど 。 規約違反 だし BAN 対象 だ し 著作権侵害 で 犯罪 な ので ムリ 。) 
課題 丸投げ に 答え 書い ちゃう と カンニング 助長 する こと に なる ので 、 直接 は 書き ませ ん 。 コンストラクタ Jedi ( String name ) { numberOfJedi ++; } が 宣言 さ れ てる ので 、 new Jedi する とき に は コンストラクタ の 引数 に 合わせ て new Jedi (" ヨーダ "); の よう に String を 渡し て あげ ない と 駄目 です 。 
こんな 感じ で どうでしょう 。 ・ ・ ・ ・ は 無視 し て 下さい 。 １ | | は スタート 、 ２ | | は 停止 。 停止 が Ｂ 接点 （ 通常 Ｂ ） です が Ａ 接点 でし たら ２ |／| に なり ます 。 １ | | ーーーー ２ | |－－－－－（ Ｍ ０ ） ・ ・ ・ ・ | Ｍ ０ | | ー Ｍ ０ | |－－ Ｔ ３ |／|－－－（ Ｔ ０ ６ ０ 秒 ） Ｔ ０ | |－－－－－－－－－（ Ｔ １ 0 . 5 秒 ） Ｔ １ | |－－－－－－－－－（ Ｔ ２ 2 秒 ） Ｔ ２ | |－－－－－－－－－（ Ｔ ３ 0 . 5 秒 ） Ｍ ０ | | ー － Ｔ ０ |／|－－－－（ 正 転 ） Ｔ １ | | ー － Ｔ ２ |／|－－－－（ 正 転 ） 
メソッド 呼び出し の 引数 → 実 引数 と 言い ます メソッド 宣言 ( 定義 ) の 引数 → 仮 引数 と 言い ます 両者 の 引数 の 個数 が 一致 し ない という エラー です 。 
main 関数 の for 分 で array の 要素 を 取り出し て 出力 し て いる 。 5 行 目 で 出力 する array に 値 を セット し て い ます 。 size は array の 要素 数 を 指定 し て い ます 。 
> 学校 の 選択 授業 で プログラミング とっ てる の です が 、 全然 わかり ませ ん 。 この 問題 教え て ください 。 依頼 なら プログラム 制作会社 に 頼む と 良い ですよ。 
こんにちは。 > UWSC の スクリプト言語 が 不明 の 為 、 > ＪＡＶＡ で 似 た よう な こと が でき ない か と 考え て い ます この 、 「 不明 」 という の が 、 なん の こと か 、 知らせ て ください 。 もし 、 主 様 は 、 JAVA を 良く 使え て いる が 、 UWSC は コード が 難しい ので 、 UWSC で できる こと が 、 JAVA でも できる の で は ない か 、 という 質問 な ん でしょ う か 。 UWSC は 、 基本的 に 、 windows の ユーザー 操作 を 自動 で でき ない か 、 という コンセプト に 開発 と 運用 を し て いる もの です 。 人間 の 手 に 相当 する 部分 として 、 キーボード と マウス インターフェース を API レベル で 取得 と 設定 を さ せる こと で 、 インターフェース の 一部 として 実装 し 、 人間 の 目 に 相当 する 部分 として 、 ウィンド 名 や 、 たくさん ある ウィンド の 監視 と 、 選択 を さ せる 機能 、 それら を 、 プログラム として スクリプト コード を 処理 する インタープリタ 処理 。 最近 は 、 COM 制御 を サポート し て 、 IE や EXCEL を 制御 する など 、 VBS で でき そう な こと は 、 UWSC に 含ま れ て い ます 。 スレッド の 制御 も できる 分野 も あっ て 、 必要 に 応じ て 使っ たら いい 機能 も 最近 は 増え て い ます 。 真新しい の は 「 マルチ スクリーン 」 の 対応 と 64 ビット の 対応 など です 。 主 様 が JAVA を 理解 し て いる の でし たら 、 UWSC の コード 体系 など 、 全然 難しい もの で は ない はず です 。 UWSC と JAVA の コード 別 比較 表 は 、 見 た こと は ありません が 、 主 様 だっ たら 、 比較 表 を 作成 し 、 その 上 で 、 検討 し て み て は いかが か と 。 JAVA は 、 デバイス の 垣根 を 越える の が 目的 の もの で 、 UWSC は windows の インターフェース に 特 化 し た アプリ 。 当然 、 JAVA が 上回る はず が ない ん です けど ね 。 
java . awt . Point の ソース を 読め ば よい 。 
こんにちは。 hidden で 、 innertext は 、 見え ない でしょ 。 もし 、 取り出せ たら 、 hidden で ない 属性 の とき です 。 どっち か 。 . value で 取り出せる か 、 やっ て み て ください 
「 Tomcat 」 で 検索 し て ください 。 
匿名 クラス または 無名 内部 クラス と 言い ます 。 http:// www . atmarkit . co.jp / ait / articles / 1007 / 27 / news 103 _ 3 . html 
階乗 を 計算 する プログラム です 。 関数 factorial ( int i ) に引 数 n ＞ 1 を 与え て 呼び出す と 、 関数 内 で は i = n から 処理 が 始まり ます 。 関数 内 の 処理 の 結果 、 n *( n - 1 ) が 戻り値 に なっ て 戻り ます が 、 その 形 から 再度 あたらしい 引数 （ n *( n - 1 )） を 引数 として 関数 factorial () が 呼び出さ れ 、 逐次 実行 の 結果 、 引数 の 値 が 1 に なる と 終了 し ます 。 この とき の 戻り値 は 、 n *( n - 1 )*( n - 2 )*( n - 3 )*....... 1 、 つまり n の 階乗 に なっ て い ます 。 
戻り値 の 型 次第 です 。 String to String () を Override し て い 、 中身 を 出力 できる よう に なっ て いる なら 、 System . out . println ( bbsdata . getContent ( i ). to String ()); です ね 。 そう し て い ない なら 、 System . out . println ( bbsdata . getContent ( i ). 中身 取得 メソッド ()); など です が 、 中身 が 複数 ある なら 、 一度 String Builder など に 詰め込ん で 、 hoge = bbsdata . getContent ( i ); String Builder stb = new String Builder (); stb . append (" key 1 ="). append ( hoge . get X X X1 ()); stb . append ("& key 2 ="). append ( hoge . getXXX 2 ()); : System . out . println ( stb . to String ()); とかさ れ たら どう です か ？ 
Status # getUser (). getScreeName () で いけ ます 。 API 読む 癖 つけ た ほう が いい ですよ。 IDE 使っ て たら API ポップアップ で 表示 さ れる はず です 。 eclipse とか で 適当 に 補完 さ れる もの 見 て たらこ の 辺 の は すぐ 分かる と 思う 。 Maven とか 使え ば ソース も 一 発 で 引っ張っ て これ るし ね 。 http:// twitter 4 j . org / javadoc / twitter 4 j / User . html # getScreenName -- 
文字化け し てる って こと は 、 その フォルダ 名 が 半角 で は ない の で は ？ だから 正常 に jar を 読み込め ない から 、 エラー が 出 てる ん だ と 思い ます 。 
??? Java で プログラミング し たい の でしょ う か ？ それ なら ば 、 こちら の サイト を 参考 に し て み て ください 。 http:// nobuo - create .net / java - begin ne r-1 / 
言語 は 、 無関係 です 。 「 ナイト 巡回 問題 」 は 、 2 種類 あり ます 。 盤 の 目 を すべて 通っ て 出発 点 に 戻る もの と 戻ら なく て よい もの 。 戻ら なく て よい もの なら 、 あなた の 考え方 で 行ける でしょ う 。 その 場合 可能性 の 判定 法 と は 何 か を 、 具体 的 に 考える 必要 が 有り ます 。 
まあ 結論 は 出 て いる よう です が 、 SIer が おしまい と 言わ れ て いる の は 、 拡大 する すべ が なくなっ て 、 現状維持 に なっ て いる から です 。 実際 、 今 まで は SIer 案件 だっ た もの も Web 案件 に 代わっ て い ます し 、 新規 案件 も 少なく なっ て き て い ます 。 大企業 や 官公庁 で も SIer 案件 から Web 案件 に 切り替わっ た もの も 出 て き て い ます し 、 特に 発注 先 が 変わっ た 、 という 印象 が 強い です 。 たとえば 今 まで は 「 なん ちゃ ら 部 から システム 部 に 依頼 → SIer 」 という 発注 経路 だっ た の が 、 「 なん ちゃ ら 部 から 直接 システム 会社 に 依頼 」 という 発注 経路 が 増え て き て い ます 。 その ほう が コストダウン できる ので 、 上層部 も それ を 推奨 し て い たり 。 それでも 抱え込ん で いる システム は リプレース し にくい ので 、 終わり は し ない だろ う けど 、 未来 も ない です ね 。 
spring フレームワーク です から 、 サーバー を 立ち 上げ ない と 実行 し て も 意味 が ない の で は ない でしょ う か 。 質問者 さん が 、 おっしゃっ て いる 実行 ボタン を 押し て 動かす アプリケーション の 場合 、 main () が 無い と 実行 する に も 出来 ませ ん 。 通常 public static void main ( String [] args ){....} が あっ て 、 その class の 実行 ボタン が 出 て くる ので 、 そこで 初めて 「 1 クラス 名 」 と 言う メニュー が 表示 さ れ ます 。 
一つ の キー に対して 複数 の 文字列 を 格納 し たい なら 、 HashMap < Integer , ArrayList < String >> の 方 が 、 中 身空 の オブジェクト を map に 先 に 格納 後 でも メソッド の 連鎖 記述 で ArrayList の 要素 追加 可能 。 generics の おかげ で キャスト も 不要 だ し 。 HashMap < Integer , ArrayList < String >> map = new HashMap < Integer , ArrayList < String >>(); Integer i = new Integer ( 1 ); map . put ( i , new ArrayList < String >()); map . get ( i ). add (" S "); /* ArrayList < String > v = map . get ( i ); v . add (" S "); // と 同等 */ map . get ( i ). add (" T "); 配列 の 場合 は 、 先 に String [] vv = {" a "," bcd "," efg "}; の よう に 配列 に データ 格納 し て おい て put ( i , vv ) する の が 一般的 だろ う 。 取り出し は 、 String [] v = map . get ( i ); で String [] 型 変数 に 取り出し て から 、 v の 各 要素 を 取り出す と 言う 手順 が 必須 。( map . get ( i ))[ 0 ] の よう な 記載 法 は java に は ない 。 
何 を もっ て ブラック と 判断 する の か 、 その 基準 が わから ない と 答え よう が ない 。 それ こそ 月 に １ ０ 時間 残業 で も 定時 じゃ 帰れ ない から ブラック って 人 も いる し 、 単に 給料 が 安い から って ブラック と 言う 人 も いる 。 気 に なる なら 評判 検索 し て み て 、 それで 自分 にとって ブラック か 判断 し て みれ ば いい の では 。 https :// en - hyouban . com / company / 10003796638 / kuchikomi / 
MainActivity 内 に 内部 クラス を 複数 作成 し て 、 それら に LocationListener や SensorEventListener を implement すれ ば いいんじゃない です か ？ 例 です が 、 全然 動作 確認 し て い ない 机上 コード な ので 、 不具合 が あれ ば ごめんなさい 。 public class MainActivity extends AppCompatActivity { private LocationListener location Listener ; private LocationManager location Manager ; private SensorEventListener sensorEventListener ; private SensorManager sensorManager ; @ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity _ main ); location Listener = new LocationListenerImpl (); sensorEventListener = new SensorEventListenerImpl (); } class LocationListenerImpl implements LocationListener { private double lat , lng ; public LocationListenerImpl () { location Manager = ( LocationManager ) getSystemService ( LOCATION _ SERVICE ); } @ Override public void onLocationChanged ( Location location ) { lat = location . getLatitude (); lng = location . getLongitude (); // 表示 処理 } @ Override public void onStatusChanged ( String provider , int status , Bundle extras ) { } @ Override public void onProviderEnabled ( String provider ) { } @ Override public void onProviderDisabled ( String provider ) { } } class SensorEventListenerImpl implements SensorEventListener { private float [] a _ value ; public SensorEventListenerImpl () { sensorManager = ( SensorManager ) getSystemService ( SENSOR _ SERVICE ); List < Sensor > a _ sensors = sensorManager . getSensorList ( Sensor . TYPE _ ACCELEROMETER ); sensorManager . registerListener ( this , a _ sensors . get ( 0 ), SensorManager .S ENSOR _ DELAY _ FASTEST ); } @ Override public void onSensorChanged ( SensorEvent event ) { a _ value = event . values . clone (); } @ Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } public float getX () { return a _ value [ 0 ]; } public float getY () { return a _ value [ 1 ]; } public float getZ () { return a _ value [ 2 ]; } } @ Override protected void onPause () { super . onPause (); location Manager . removeUpdates ( location Listener ); } } 内部 クラス で は なく 、 それぞれ 別 ファイル の クラス として 作っ て も いいんじゃない でしょ う か 。 その 場合 は 、 コンストラクター で Context 型 を 受け取る よう に し て 、 MainActivity で は location Listener = new LocationListenerImpl ( this ); の よう に インスタンス を 作成 すれ ば いい と 思い ます 。 
クラス を 分けて 作る の か 不明 な ので 、 main メソッド の ある Sample クラス で の 処理 と し て い ます 。 public class Sample { static int square IT ( int i ){ return i * i ; } static double square IT ( double d ){ return d * d ; } public static void main ( String [] args ) { int x = 10 ; double y = 3.14 1 ; System . out . println (" x → " + square IT ( x )); System . out . println (" y → " + square IT ( y )); } } オーバーロード と は 、 同じ メソッド 名 で 引数 の 型 や 引数 の 数 が 違う 場合 に 利用 さ れ ます 。 質問 から する と 、 最初 の square IT ( int i ) は 、 引数 で 整数型 の データ を 指定 し た 場合 の メソッド 、 次 の square IT ( double d ) は 、 引数 で 小数点 型 の データ を 指定 し た 場合 の メソッド で 処理 さ れ ます 。 main メソッド で は 、 x は 整数型 の 「 10 」 、 y は 小数点 型 の 「 3.14 1 」 です 。 よって 、 square IT ( x ) は square IT ( int i ) の メソッド が 利用 さ れ 、 square IT ( y ) は square IT ( double d ) の メソッド が 利用 さ れ ます 。 どちら の メソッド も 結局 は 引数 の 値 を 2 乗 する こと です 。 結果 は コード を 実行 する と 表示 さ れる ので 確認 し て ください 。 x → 10 * 10 y → 3.14 1 * 3.14 1 
var scripts = document . querySelectorAll (" script "); // または document . getElementsByTagName (" script "); for ( var i = 0 ; i < script s.l ength ; i ++) { scripts [ i ]... } 
id が verchar なら 、 select 文 で は '' で 括る 必要 が あり ます 。 String sql = " SELECT * FROM CHATDB WHERE ID ='" + argument + "'"; ただ 、 せっかく PreparedStatement を 使用 し て いる の です から 、 こういう 手間 を 考え ない 方法 で bind し ましょ う 。 String sql =" SELECT * FROM CHATDB WHERE ID = ?"; PreparedStatement pStmt = conn . prepareStatement ( sql ); pStmt .s et String ( 1 , String . valueOf ( i )); ResultSet result = pStmt . executeQuery (); ちなみに この コード は リソース 開放 漏れ を 起こす 、 やばい コード です が 、 とりあえず 置い て おき ます 。 
java の 実行 時 に java という コマンド を 打ち ます が 、 java . exe で も 動き ます 。 つまり java . exe の 引数 に class ファイル を 渡し てる イメージ です 。 全て の 処理 を java . exe が やっ て いる と 考えれ ば 簡単 です 。 それぞれ の OS に 適応 する java . exe を 、 java を 開発 し て いる 会社 が 作っ て しまえ ば いい ん です 。 ・ C言語 ( BCC ) [ コード . c ] ↓ コンパイル ( bc c.e xe ) ↓ [ 実行ファイル . exe ] ↓ 実行 ( windows ) ・ OS ごと に コンパイル する 必要 が ある ・ コンパイラ が 違う と 、 一部 構文 も 変わる 可能性 が 大きい ・ 構文 が 同じ で も 実行ファイル で は 他 の OS で は 動作 し ない ので 、 相手 に コード を 公開 し て コンパイル し て もらう しか ない 。 コード を 非公開 に でき ない ・ コード の 公開 や 実行 環境 の 依存 を 避け たけれ ば 、 自分 で 複数 の OS に 対応 する よう に コンパイル する しか ない 。 手間 が かかる ・ java ( JDK ) [ コード . java ] ↓ コンパイル ( java c.e xe ) ↓ [ 中間 ファイル . class ] ↓ 実行 ( java . exe ) ↓ [ 実行 形式 ] ↓ 実行 ( windows ) ・ 同じ 方式 で コンパイル し て しまっ て 、 中間 ファイル を 渡せ ば java . exe が OS に 合わせ て 解釈 し て くれる ・ コンパイラ が 一定 な ので 、 構文 を 変え ず に すむ 。 ・ 中間 コード なら 読め ない ので 、 直接 配布 し て それぞれ の OS で 動かし て もらえる ( コード を 隠し て 配布 ) ・ 中間 ファイル 一つ を 公開 し て しまえ ば 、 java が 対応 し て いる OS なら どこ でも 動く ・ 欠点 は 、 毎回 java . exe を 経由 する ので 実行 し 始める まで に ちょっと 時間 が かかっ たり 、 普通 に ちょっと 遅かっ たり し ます 。 
while 文 の 中 で 使う という こと は 繰り返し 処理 の 中 で 特定 の 時 に 使う ん だ と 思い ます やり方 として は 何 通り か ある ん です けど 普段使い やすく て 使う の は [ 1 ] もし 、 その 変数 を インクリメント さ せる なら ( この 場合 は 、 while の 中 で 宣言 する の は 滅多 に ない ん です が ) if ( インクリメント さ せる 変数 == 3 ){ // ここ に 出力 } という よう に 書く タイプ [ 2 ] boolean 型 の 変数 を 用意 し て おい て 特定 の 時 だけ true に し その 時 だけ 出力 する タイプ boolean 型 の 変数 を check と する と if ( check ){ // 出力 処理 check = false ; } という 感じ です か ね 。 一部 でも ソースコード が あれ ば もっと 合っ た 回答 が できる か と 思い ます ！ 
＞ ブロック の 外 で 変数 を 宣言 し て という 選択肢 は なし に し て ください はっきり 言っ て それ は 無理 です 。 スコープ という の を ご存知 でしょ う か ？ メソッド 内 に 宣言 し た ローカル 変数 は 独立 し て おり 、 ほか の 変数 と は 無関係 で その メソッド 内 で しか 使う こと が でき ない という もの です 。 この スコープ が なぜ ある の か ？ と 思う でしょ う 。 これ は 不便 で は なく 便利 な 考え方 な の です 。 例えば Java で Windows10 の よう な OS を 作る と し ましょ う 。 そこ に は フィールド が たくさん 必要 です 。 その フィールド は ある メソッド 内 で 使う だけ の もの も あれ ば 、 パッケージ を 超え て 使う もの も 存在 し ます 。 メンバ の 定義 に は 名前 が 重複 し て は いけ ませ ん 。 メソッド 内 で 使う ため だけ に わざわざ 名前 を つけ て 使える 名前 を 減らし て いく の は 馬鹿 々 々 しい です し 、 そのうち 数 十 文字 で は 終わら ない 名前 も 出 て くる でしょ う 。 でも 、 スコープ が あれ ば 、 そんな こと は し なく て いい の です 。 メソッド 内 で 使う 変数 を ローカル 変数 として 宣言 する こと により 、 名前 を 無駄 に 減らす こと が 避け られる の です 。 よって 、 短い 名前 だけ で 宣言 を する こと が できる の です 。 
java の for 文 を 使う 際 範囲 に 気 を つけ ない と いけ ませ ん この 範囲 を 間違う と 、 今回 みたい に わけ わかん ない という 感覚 に なっ て しまい ます monkmonkp さん の 質問 の 場合 for ( i = 1 ; i < 10 ; i ++){ for ( j = 1 ; j < 10 ; j ++){ System . out . println ( i + " × " + j + " = " + ( i * j )); } // ここ で j が + 1 さ れ 、 繰り返す } // ここ で i が + 1 さ れ 、 繰り返す こう なっ て い ます 。 つまり 、 i が + 1 さ れる 前 に j が + 1 さ れ て 繰り返さ れ て いる の です monkmonkp さん は 多分 i も j も 同時に 1 , 2 , 3 ・ ・ ・ という の を 期待 し て いる と 思い ます です が 、 この コード で は i が 1 の 時 に j が 1 , 2 , 3 , 4 ・ ・ ・ と 繰り返し て い ます j が 9 まで 行っ た 時 に 初めて i が + 1 さ れ ます 
やりかた は 何 通り も ある 。 String message = " お つり は \"" + change + "\" 円 です 。 "; String message = String . format (" お つり は \"% d \" 円 です 。 ", change ); 
array の dimendion は int [] な ので 、 int * です 。 ptr =& array ; という の は int * ptr に int ** を 代入 し て い ます 。 ptr = array ; と す べき でしょ う 。 
cont = cont . replaceAll ("\ n ","< br >"); では どうでしょう 
その メッセージ を み て 適切 な 対応 を する だけ だ が ？ その ぐらい の 英語 を 理解 でき ない なら プログラム なんて 組め ん よ 。 プログラムビルド や 実行 時 の エラーメッセージ なんて ほぼ 英語 だ から な 。 
Java ランタイム です が 、 現在 の OS の 場合 、 入れる 必要性 は 低い と 思い ます 。 ３ ２ ビット か 、 ６ ４ ビット か です が 、 利用 し て いる Windows10 が 何 ビット 版 か に より ます 。 当然 ながら 、 ３ ２ ビット 版 の 環境 に 、 ６ ４ ビット 版 を 入れる こと は 出来 ませ ん 。 Java ランタイム を 必要 と し て いる ソフトウェア が ある 場合 のみ 、 インストール し た ほう が 望ましい です 。 Java ランタイム は あくまでも 、 Java を 動かす ため の ソフトウェア な ので 、 ゲームソフト を 快適 に 動かし たい の で あれ ば 、 メモリー の 増設 や 、 グラフィックカード の アップグレード 、 パソコン 自体 の 買い替え が 必要 です 。 
見え ない の です が 、 JAVA は 最新 です か ？ JAVA は インストール さ れ て い ます か ？ 
Web 系 は Webサーバー （ クライアント は Web ブラウザ ） を 使っ て 動く ソフト の 開発 を する 物 を 言い ます 、 したがって Web 系 で ない 物 は Webサーバー （ Web ブラウザ ） を 使わ ない ソフト です 。 Java も どちら の 開発 も 出来 ます 。 C# は Microsoft が 開発 し た プログラミング言語 で 、 Java は SunMicrosystems が 開発 し た プログラミング言語 で 現在 は Oracle に 吸収 さ れ て い ます 、 違い は 別 メーカー が 作っ た 物 です ので 文法 が 異なり ます が 、 出来る 事 は ほぼ 同じ です 。 .net は network を 意味 し て おり 、 .NET Framework は Windows 上 で C# を 動かす 為 の ソフト です 。 
パッケージ と は 、 別 ファイル の プログラム を 同じ 階層 の プログラム の よう に 扱う 機能 です 。 ファイル 構成 を しっかり と し ましょ う 。 カレントディレクトリ \ パッケージ 名 \ java ファイル みたい に し ます 。 ・ ファイル 構成 E :\ プログラミング 実習 \ calcapp \ main \ Calc . java E :\ プログラミング 実習 \ calcapp \ logics \ Logic . java ・ 実行 コマンド java calcapp \ main \ Calc . java javac calcapp . main . Calc 自分 は - d とか つけ ない ので わかり ませ ん が 、 必要 なら 付け て ください 。 
質問 が わかり づらい の です が 、 文章 の まま です と 、 java で クリック イベント を する に は java アプレット を 使用 し て いる こと に なり ます 。 超 簡単 な アルゴリズム です ので ・ ・ ・ ① MouseListener クラス の mouseClicked を 使用 し ます 。 ② マウス が クリック さ れ たら 下記 を 実行 し ます 。 for ( int i = 0 ; i < 1 ; i ++){ System . out . println ("○"); } 以上 質問者 さん の 質問 の 通り です と for 文 を 使用 し て 、 ” ○ ” を 出し た い事 は これ で 可能 です 。 もしか する と 、 こう 質問 し たかっ た の かも しれ ませ ん → 「 java で 何 か 何 か キー を 叩く と ○ が 表示 さ れる 」 と 。 これ で あれ ば java アプレット を 使わ ず 、 素 の java で かけ ます 。 どうでしょう か ？ 
>（ １ ） まず キャスト が 有効 か どう か を 考える 。 合っ てる と 思い ます ( たぶん )。 >（ ２ ） 次に 代入 互換性 の 検証 を する ここ は 、 間違っ た 迷路 (?) に ハマっ てる 、 と 思い まし た 。 > obj 1 = new A (); で あり ... など と 、 ・ 参照 変数 が 指し て いる オブジェクト 実体 が 出 て くる ので 。 参照 型 変数 の 型 は 、 変数 宣言 時 に 決まっ て ます 。 A obj 1 で あれ ば A型 。 それ が ポイント し て いる 実際 の オブジェクト の 型 は 関係 あり ませ ん 。 A obj = new ???(); オブジェクト の 実際 の 型 は ??? の クラス 名 で 決まる けど 、 変数 obj は 常に A型 です 。 設問 部分 に関して 、 コンパイラ が コンパイル 時 に 行う チェック は 、 この 参照 型 変数 の ・ ソースコード 上 の 静的 な 型 に 基づい て 行わ れる もの で 、 ・ その 変数 が 指し て いる 実際 の オブジェクト の 型 は 、 無関係 です 。 まず 、 ここ の 勘違い を 抜け出せ ない と 、 先 に は 行け ない 気 が し ます 。 なんか 勘違い し て たら 、 ごめん 。 
h が 十分 小さい とき 台形公式 の 誤差 は ≒ | f '( b )- f '( a )| h ^ 2 / 12 f '( x ) は ( 1 /√( 2 π )) exp (- x ^ 2 / 2 ) x 誤差 が 10 ^- 8 に なる よう に 解く と h = √( 12 * 10 ^- 8 )( 2 e π )^( 1 / 4 ) = 1 / 1420 . 01 だ から およそ 1421 分割 必要 例えば int n = 10 ; for ( int i = 0 ; i < n ; i ++) { System . out . println ( (( i * i )/( n * n ))/ 2 ); } こんな の を 実行 する と 0 が 10回 出る 。 なぜ なら Java で は （ C言語 に 似 た 言語 は ） 整数 同士 の 割り算 の 結果 は 小数点 が 切り捨て られる 。 正しく 小数 で 計算 する に は 左端 の オペランド を double キャスト 。 1 . 0 を 掛け算 し て も 同様 の 効果 。 System . out . println ( 1 . 0 * i * i /( n * n )/ 2.0 ); 数式 が 間違っ て いる 。 写真 の 数式 で は 負号 が 書い てる 計算 する 位置 が 違う 。 f ( i - 1 ) と f ( i ) では なく f ( i ) と f ( i + 1 ) L = 1 / Math .s qrt ( 2 * Math . PI )* Math . exp (- 1 . 0 * i * i /( n * n * 2 )); R = 1 / Math .s qrt ( 2 * Math . PI )* Math . exp (- 1 . 0 *( i + 1 )*( i + 1 )/( n * n * 2 )); こう する と 正しく なる と 思う 高速化 の 余地 は ある 。 L と 前 の ループ の R は 同じ https :// paiza . io / projects / d - 7 h 5 c5 bb 9 bqhwXwT 4k Xhg 
何 を 使う の か わから ない ので 、 とりあえず cells は 取れ て いる と 仮定 し て 。 ようは cells [] という 一 次元 配列 を 二 次元 配列 に 変換 すれ ば いい の です が 、 これは普通 の 方法 だ と 、 かなり 面倒 です 。 その ため 、 一度 セル の 中身 を String 結合 し て から split する 方法 で 分割 する と いい かも しれ ませ ん 。 たとえば タブ など 、 絶対 に 入ら ない こと が わかっ て いる 文字 が あれ ば それ を 利用 する の が 手 です 。 具体 的 な サンプル を 示し ます 。 public static void main ( String [] args ) throws Exception { String [] cells ={" this "," is "," a "," pen ","."," this "," is "," a "," pencil "}; String [][] ret = make Double Strings ( cells ); // 表示 確認 for ( String [] test : ret ){ System . out . println ( Arrays . to String ( test )); } } static String [][] make Double Strings ( String [] targets ){ String Builder sb = new String Builder (); for ( String target : targets ){ sb . append ( target ). append ("\ t ");// 一度 タブ セパレート で 結合 する 。 } String [] firstDim = sb . to String (). split ("\\.\ t ");// 一 度 . で 分割 し て 一 次元 配列 を 作る 。 // 2次元 配列 化 String [][] ret = new String [ firstDim . length ][]; for ( int i = 0 ; i < firstDim . length ;++ i ){ ret [ i ]= firstDim [ i ]. split ("\ t ");// ピリオド で 分割 さ れ た 文字 単位 で タブ で 分割 する 。 } return ret ; } 
プロジェクト の ワークスペース 間 コピー は [ ファイル ]-[ インポート ]-[ 一般 / 既存 プロジェクト を ワークスペース へ ] で でき ます 。 
eclipse の 整形 機能 は ctrl + i です 。 選択 し た 範囲 を 整形 し ます ので 、 ctrl + a → ctrl + i で 全文 整形 さ れ ます 。 カスタマイズ は Java → コード ・ スタイル → フォーマッター から でき ます 。 ただ 、 式 の 空白 設定 は でき た と 思い ます が 、 末尾 ; の 前 の 空白 は 設定 でき なかっ た よう な …。 
janken . close (); を し た から です 。 これ によって Scanner が close さ れる タイミング で 、 クローズ し て は いけ ない 標準入力 ( System . in ) が close さ れ て しまい 、 二度と 標準入力 が 使用 でき ない 状態 に なっ て しまい ます 。 System . in は ファイル など と 異なり 、 決して close し て は いけ ませ ん 。 この コード 上 の すべて の xxx . close (); と 書い て ある ところ を 消し て ください 。 
System . out . println (" 正 の 整数 を 入力 し て ください "); try ( Scanner scan = new Scanner ( System . in )){ Map < Boolean , Long > map = IntStream . rangeClosed ( 1 , scan . nextInt ()). parallel (). boxed (). collect ( Collectors . partitioningBy ( i -> i % 2 == 0 , Collectors . counting ())); System . out . println (" 偶数 は "+ map . get ( true )+" です "); System . out . println (" 奇数 は "+ map . get ( false )+" です "); } 
あ ～、 それ は し ない ほう が 良い です 。 ソースコード を 読み やすく する ため です 。 あと で 長い ソース を 作っ た とき に 、 読み にくい と 、 バグ 修正 に 時間 が かかっ たり 、 バグ 発生 ポイント に 気づか なかっ たり ・ ・ ・ 後々 の ため に 、 改行 ・ スペース は 癖 に し て おい た ほう が 良い です 。 スペース を もし 4回 ぐらい 押し て いる なら 、 TAB の ほう が 楽 です 。 スペース を 押し たく なけれ ば 、 Microsoft 社 の Visual Studio が 楽 です 。 自動 で スペース を 押し て くれ ます 。 その他 の 機能 も すごく 良い ですよ。 C言語 です が ・ ・ ・ int main (){ → string a = b ; → if ( a == ' b '){ → → printf (" abcdefg ..."); → ｝ return 0 ; } ↑ の ソース を 見 て ください 。 （ → マーク は 気 に し ない で ください ） ｛ ｝ の なか だけ → に 空白 が 開い て い ます よ ね ？ さらに 、 ｛ ｝ の なか に ｛ ｝ が ある と 、 その 中だけ 2 倍 の 空白 が 開い て い ます よ ね ？ もし これ が 、 int main (){ string a = b ; if ( a ==' b '){ printf (" abcdefdg ..."); } return ; } だ と 、 どこ が ブロック に なっ て いる か わかり にくい です よ ね ？ まあ 、 人 の 自由 です けど 、 そのまま スペース とか 押す ほう が 良い と 思い ます 。 
class Yahoo (){ の () って 変 じゃ ない です か ？ クラス 宣言 です よ ね 。 コンストラクタ じゃ ない です よ ね 。 この 3 行 目 、 メンバ 変数 の 宣言 で も なく 、 メソッド の 外 に 書い て ある けど 、 お かく し ない です か ？ 適当 に 省略 し ない で 、 もっと ちゃんと 書い て ください 。 あと 「 ある クラス Object 」 と 書い て あり ます が 、 Java で は Object は すべて の 基底 に なる 特殊 な クラス な ので 、 どう でも いい クラス の こと なら 適当 な 名前 を 付け て ください 。 ArrayList は 、 厳密 に は 配列 で は あり ませ ん 。 クラス です 。 [] で アクセス する の で は なく 、 add や set , get メソッド を 使い ます 。 すでに add さ れ て いる こと 前提 で o 1 . hoge 1 . get ( 0 ). x の よう に 、 なる の で は ない でしょ う か 。 
ClassNotFoundException です から java クラス が 見え て ない という こと です ね 。 原因 を 探る に は 、 上 から 順に おかしい 所 を 見つける こと に なり ます 。 ビルド が きちんと さ れ て いる か 確認 し た ほう が いい です ね 。 もしくは コンソール にて エラー 箇所 を 特定 し た 方 が 早い と 思い ます 。 
実行 を ボタン から やっ て いる の で あれ ば 、 実行 の 横 の ▼ から 、 対象 の クラス を 選択 し て ください 。 パッケージ ・ エクスプローラー から 実行 する なら 、 実行 し たい main クラス の 存在 する クラス 名 、 または main （ 提示 の 場合 は Case . java もしくは その 下 の main ） を 右クリック し て 実行 を 選択 し て ください 。 
float は プリミティブ 型 な ので エラー が で ます 。 オブジェクト型 を 指定 し て ください 。 こんな 感じ ArrayList < ArrayList < Float >> pv = new ArrayList < ArrayList < Float >>(); これ は 他 の ジェネリック 型 で も 言える こと です し 、 int や double で も よく 間違える ので 気 を 付け て ください 。 
こんにちは。 ぱっと 見 で 答え て いる ので 間違っ て いる 可能性 が あり ます が 細かい 点 は ご 容赦 願い ます 。 恐らく です が 、 ログ 出力 ： patternA と pattern B が 交互 に 反応 と あり ます ので 、 処理 の 流れ は １ ． 差し込み し ます 。 ２ ． ACTION _ MOVE イベント が 発生 ３ ． 差し込み で は 無い 位置 へ ずらし ます 。 ４ ． ずらし た こと で ACTION _ MOVE イベント が 発生 ５ ． 差し込み で は 無い ので 元 の 位置 へ 移動 し て しまう （ 本来 は ここ は 移動 さ せ たく ない ） ６ ． 元 の 位置 へ 戻る とき に ACTION _ MOVE イベント が 発生 （ 差し込み 位置 へ 行く ） ７ ． ３ 番 と 同じ 処理 に なり 、 以降 ３ ～ ６ を ループ し て しまう 。 という 設計 上 の 問題 に なり ます 。 ５ ． の 本来 は 移動 さ せ たく ない 。 という 事 で 。 元 の 位置 という 情報 が 現在 の 位置 で あれ ば 移動 せ ず 、 問題 は 無い はず です 。 つまり 、 差し込ん だ 場合 、 元 の 位置 は 変わる という 事 で は ない でしょ う か ？ で あれ ば 、 ３ 番 の 差し込み で は 無い 位置 へ ずらし た 際 に元 の 位置 を 書き換える 処理 。 という の が 必要 に なる の で は ない でしょ う か 。 
エラー 行 が 出力 さ れ て いる はず な ので 、 そこ が どこ か 教え て いただける と わかり やすい です 。 また 、 nullpointexception は どこ か の オブジェクト 変数 が null に なっ て いる はず な ので 、 オブジェクト 変数 を すべて 出力 する と 解決 する こと が 多い です 。 エラー 行 に 関わる オブジェクト 変数 を とりあえず 調べ ましょ う 。 
環境変数 の パス 設定 の こと でしょ う か ？ デフォルト で は 設定 さ れ ませ ん 。 java の 保存 場所 を 変更 し たり 、 パス 設定 を 間違え たら 、 パス 設定 を 削除 し て から 再度 入力 する 必要 が 有り ます 。 
数 点 。 ハズレ なら 無視 し て ください 。 1 . 入力 を トークン 分割 ( あなた の 場合 は それ が 「 単語 」 な わけ だ が ) する の は 、 標準 ライブラリ の Scanner を 利用 すれ ば いい の では ？ https :// docs . oracle . com / javase / jp / 8 / docs / api / java / util / Scanner . html Scanner # next () は 、 デフォルト で 空白 族 文字 を 区切り として 次々 トークン 分割 結果 を 返し ます ( 空白 族 文字 に は 改行 も 含ま れる )。 「 行 」 を 意識 する 必要 も まったく ない 。 2 . 単語 分割 の 記号 空白 族 文字 以外 でも 、 単語 の 区切り と し たい 文字 が ある なら 、 Scanner # useDelimiter で 設定 でき ます 。 3 . 「 ファイル 」 について 私 なら 、 自力 で 「 英文 が 書い て ある text ファイル 」 を open / close する コード など 、 書き ませ ん 。 標準入力 System . in から 読み ます 。 「 ファイル 」 を 標準入力 に 結びつける 行為 ( リダイレクション ) は 、 実行 環境 の シェル ( Windows なら コマンドプロンプト ) が やっ て くれ ます 。 空白 族 文字 区切り で いい なら 、 以下 。 import java . util .S canner ; class Foo { ___ public static void main ( String [] args ) { ___ ___ final Scanner sc = new Scanner ( System . in ); ___ ___ while ( sc . hasNext ()) { ___ ___ ___ System . out . println ("\"" + sc . next () + "\""); ___ ___ } ___ } } 実行 例 : $ javac Foo . java $ java Foo < Foo . java # この ソース ファイル を 標準入力 として 与え て みる " import " " java . util .S canner ;" " class " " Foo " "{" " public " " static " " void " " main ( String []" " args )" "{" " final " " Scanner " " sc " "=" " new " " Scanner ( System . in );" " while " "( sc . hasNext ())" "{" " System . out . println ("\""" "+" " sc . next ()" "+" ""\"");" "}" "}" "}" 区切り 文字 を 変え たい なら 、 useDelimter を 加えれ ば いい 。 final Scanner sc = new Scanner ( System . in ); ↓ final Scanner sc = new Scanner ( System . in ). useDelimiter ("\\ W +"); この 1 行 変更 だけ 。 \ W は 、 Java の 正規表現 が 用意 し て くれ てる 定義 済み の 文字 クラス 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / java / util / regex / Patter ... この 1 行 変更 を 加え て 、 同じく Foo . java 与え て 実行 する と 、 こう なる 。 $ java < Foo . java " import " " java " " util " " Scanner " " class " " Foo " " public " " static " " void " " main " " String " " args " " final " " Scanner " " sc " " new " " Scanner " " System " " in " " useDelimiter " " W " " while " " sc " " hasNext " " System " " out " " println " " sc " " next " 
「 ネットワーク ・ アプリケーション を 実装 する ため の クラス を 提供 し ます 。 」 と API に は 書か れ て い ます 。 書い て ある 通り で 、 例えば 「 インターネット を 使っ て リアルタイム で ゲーム の 対戦 さ せ たい 」 とか 「 ホームページ の HTML を 取得 し たい （ ダウンロード し たい ） 」 とか に 使い ます 。 自分 は 使わ ない パッケージ の 一つ な ので 、 クラス の 中身 は 知り ませ ん 。 
> ... 変更 さ れ た こと に なっ て いる の でしょ う か ？ という の は 、 何 の こと やら わかり ませ ん が 。 (^_^;) # 何 が 起こっ て ほしい と 思っ て ます ？ - version という コマンド オプション は 、 ・ おまえ ( java コマンド ) の バージョン を 表示 しろ と いう だけ の もの 。 java version " 1 . 8 . 0 _ 92 " Java ( TM ) SE Runtime Environment ( build 1 . 8 . 0 _ 92 - b 14 ) Java HotSpot ( TM ) 64 - Bit Server VM ( build 25 . 92 - b 14 , mixed mode ) など と 表示 さ れる はず 。 ＃ インストール に 不備 が なく 、 シェル ( Windows なら コマンドプロンプト ) ＃ が java という 名 の コマンド を ちゃんと 見つけ られる なら 。 java - version は 、 それ 以外 の 効果 (?) は 持ち ませ ん 。 この 画面 表示 以外 の 副作用 (?) は 、 何 も 残さ ない です よ 。 P.S. かんちがい かも しれ ない が 。 もし ・ Java の プログラム 書い た ・ それ を コンパイル しよ う と し てる なら 、 使う べき コマンド は java で は ない ですよ。 javac です 。 
> study _ infotech さん > ざっくり と タイム リーフ を 使う と こんな こと が いい よ という の を 初心者 レベル 向け で 教え て 下さい ませ ん か 。 読ん で も 利点 を 感じ ない の なら 質問者 にとって 利点 は 有り ませ ん ＆ 利点 の 分から ない 物 を 使う 必要 も ぱりません 。 
ちょっと 言っ てる こと が わから ない けど 、 たとえば interface X {}; public static void main ( String [] args ) throws IOException { System . out . println ( new X (){}. to String ()); } と し た 場合 、 出力 さ れる の は パッケージ 名 . クラス 名 $1 @ アドレス と なる はず です 。 to String () は override し ない 場合 、 Object . to String () が 使用 さ れ ます が 、 これ が 「 パッケージ 名 . クラス の 属性 @ アドレス 」 を 表示 する よう に なっ て いる ため です 。 ここ で クラス 名 と 書か ず に 「 クラス の 属性 」 という 書き方 を し た の は 、 クラス 内 クラス の 場合 、 親 クラス から 順に $ で 繋ぐ の が ルール に なっ て いる ため です 。 もう少し 複雑 な 例 を 示し ましょ う 。 interface X {}; static class Y { X x = new X (){}; }; public static void main ( String [] args ) throws IOException { System . out . println ( new Y (). x . to String ()); } この コード で 表示 さ れる の は パッケージ 名 . クラス 名 $ Y $1 @ アドレス です 。 無名 クラス の 場合 、 その 名 の 通り クラス 名 が 存在 し ませ ん ので 、 代わり に 連 番 が 使用 さ れ ます 。 今回 の 場合 は 「 1 」 という の が クラス 名 に 当たり ます 。 
あんまり ない の です が 、 デバッグ 実行 中 など で ソース ファイル に ロック が かかっ て いる 状態 で 上書き し た の で は ？ 実行 し て いる Java を 終了 さ せ て 上書き すれ ば エラー が 出 なく なる と 思わ れ ます 。 
プログラム が 間違っ て いる から 、 じゃ ない です か ? 少なくとも 、 デフォルト で は 全 画面 に なら ない と 思い ます ので 、 その 辺 は プログラム が 動い て いる ん じゃ ない か と 思い ます 。 プログラミング の 質問 で 書い た プログラム が 提示 さ れ て い ない と 、 ほとんど 意味 の ある 回答 は 出来 ない こと も しばしば です 。 
わかり ませ ん が 、 IOS の 開発 に も 使える 為 、 結構 収入 得 られる の かも 。 因みに 、 Android は Java で 開発 し て いる の です よ 。 Java の 方 が 使っ て いる 人が 多い です 。 
Map < String , Integer > m = new HashMap <>(); m . put (" 三菱 ", 20 ); こんな の が 格納 済み で ある こと を 前提 に 1 を たす コード ↓ Java 8 m . compute (" 三菱 ", ( k , v )-> v + 1 ); ↓ Java 7 m . put (" 三菱 ", m . get (" 三菱 ")+ 1 ); まだ 格納 さ れ て い ない 時 は 1 を 格納 する コード ↓ Java 8 m . merge (" 三菱 ", 1 , ( v , n )-> v + n ); もしくは m . merge (" 三菱 ", 1 , Integer :: sum ); もしくは m . compute (" 三菱 ", ( k , v )-> v == null ? 1 : v + 1 ); ↓ Java 7 Integer v = m . get (" 三菱 "); m . put (" 三菱 ", v == null ? 1 : v + 1 ); 書き換え が 頻繁 なら 、 Integer , Long , Double など immutable object を 使わ ず 代わり に 長さ 1 の int 配列 を 格納 し て 中身 を 書き換える ほう が 手軽 で 高速 動作 Map < String , int []> m = new HashMap <>(); m . put (" 三菱 ", new int []{ 20 }); m . get (" 三菱 ")[ 0 ] += 1 ; System . out . println ( m . get (" 三菱 ")[ 0 ]); 
Surface 3 で は 出来 ない ん です って 。 http:// answers . microsoft . com / ja - jp / surface / forum / surfwinrt - surfusin ... 
マイクラ で 一 番 し て は いけ ない の が 復元 や 回復 。 データ 破損 が 著しく 、 その 状況 なら 、 物理 メモリ が 誤認 し て 、 常に 稼動 し 続ける バグ が 起こり やすい 。 
まず 、 Java を ダウンロード 、 インストール し て ください 。 「 Minecraft が 遊べる から Java が インストール さ れ て いる 。 」 は 正確 に は 正しく あり ませ ん 。 普通 の Java で は なく 、 Minecraft 専用 の Java が 入っ て いる と 考え て ください 。 Minecraft Forge や OptiFine など の インストーラ を 起動 する ため に は 、 普通 の Java が 必要 です 。 Java を ダウンロード 、 インストール さえ すれ ば 、 「 プログラム から 開く 」 の 一覧 に 「 Java ( TM ) Platform SE binary 」 が 出る はず です 。 
バイナリ で 頑張れ は でき ない こと は ない です が 、 その 質問 の レベル で あれ ば 、 一度 ファイル の 中身 を メモリ に 読み込ん で 書き直し た ほう が いい と 思い ます 。 例 です 。 List < String > list = null ; // ファイル 読み込み try ( BufferedReader br = Files .new BufferedReader ( Paths . get (" ファイル 名 "), Charset . forName (" MS 932 "))){ // ファイル の 中身 の テキスト を 配列 として 保持 する list = br . lines (). collect ( Collectors . toList ()); } // ２ 行 目 ( 0 始まり の ため index は 2 - 1 ) の データ を 変える 。 list .s et ( 1 ," qux "); // ファイル 書き出し try ( BufferedWriter bw = Files .new BufferedWriter ( Paths . get (" ファイル 名 "), Charset . forName (" MS 932 "))){ list . stream (). forEach ( line ->{ try { bw . write ( line ); bw .new Line (); } catch ( Exception e ) { e . printStackTrace (); } }); } 
違い ます 。 Java の . 文法 は 、 基本的 に クラス 名 . スタティック メソッド または インスタンス . メソッド です 。 list 1 .s tream () の 戻り値 は Stream の インスタンス です 。 ※ 恐らく list 1 は List < Integer > 型 な ので 、 この 場合 は IntStream の インスタンス に なり ます 。 forEach は Stream クラス の メソッド です 。 それ が コール さ れ て い ます 。 ようするに IntStream intStream = list . stream ();// インスタンス . メソッド intStream . forEach ( i -> i * 2 );// インスタンス . メソッド という 二 行 を まとめ て 書い て いる の です 。 この よう な 形 を メソッド チェーン と 呼ん だり し ます 。 stream api で は メソッド チェーン が 多用 さ れ ます 。 たとえば IntStream . range ( 0 , 10 ). map ( i -> i * 2 ). forEach ( System . out :: println ); という の は IntStream intStream 1 = IntStream . range ( 0 , 10 );// クラス 名 . スタティック メソッド IntStream intStream 2 = intStream 1 . map ( i -> i * 2 );// インスタンス . メソッド intStream 2 . forEach ( System . out :: println );// インスタンス . メソッド という ３ 行 が 一つ に 記述 さ れ て いる の です 。 
おおよそ 合っ て い ます 。 データベース 用 の サーバー が ＰＣ と 同じ という パターン も あり ます が 、 （ 特殊 な 例 を 除い て ） 結局 は ネット ( TCP/IP ) 経由 で プログラム と サーバー を 繋ぎ 、 SQL を 流し込ん で 結果 を 貰う という 形 に なり ます 。 Java で の データベース の API という か クラス は java .s ql パッケージ に まとめ られ て い ます 。 良く 使う の は DriverManager // Connect ion を 得る の に 使う Connect ion // Statement / PreparedStatement を 得る の に 使う Statement // SQL を 投げる の に 使う PreparedStatement // SQL を 投げる の に 使う ResultSet // SQL の 結果 を 得る の に 使う の 各 クラス です 。 
i = 1 で いい と 思い ます が ・ ・ ・ どう なっ て ます か ？ 
Java 8 以降 でし たら 、 long に対する 算術 演算 を Math クラス の Exact が メソッド 名 の 後半 に 付く タイプ の 対応 メソッド で 置き換えれ ば オーバーフロー で ArithmeticException が 送出 さ れる よう です 。 （ 例 : addExact , subtractExact , toIntExact ....) https :// docs . oracle . com / javase / jp / 8 / docs / api / index . html ? java / lang / M ... 
naka _ fuji _ 0910 さん 画像 を 貼る よう で は 、 無理 。 
非常 に 難しい 。 ＞ できれ ば gps を 使わ ず に 普通 の 建物 じゃ 衛星 電波 を 捕らえ られ ない ので 、 初め から 無理 。 方位 （ 磁気 ） センサ → 他 の 磁気 の 影響 を 受け やすい 。 加速度 ・ 角加速度 センサ → 姿勢 が 限定 さ れ て いる なら ともかく 使い物 に なら ない 。 モーションキャプチャー の よう に 、 まわり から 見 て 位置 を 計算 する なら できる 。 
> この 条件 で 素数 か否 か 表示 する こと は 出来 ます か ？ > でき ない 。 「 " n を 1 で 割っ た 結果 が 1 " かつ " n を 1 で 割っ た 時 の 余り が 0 "」 という 条件 だ から 、 全く 違う 。 public class Sample { public static void main ( String [] args ) { for ( int n = 1 ; n <= 100 ; n ++) { System . out . println ( n + " は " + ( isPrime ( n ) ? " 素数 " : " 素数 じゃ ない ")); } } private static boolean isPrime ( int n ) { if ( n < 2 || n % 2 == 0 ) { return false ; } for ( int i = 3 ; i * i <= n ; i += 2 ) { if ( n % i == 0 ) { return false ; } } return true ; } } // koki 5330 . q10 158425025 
A と kotae の 型 が int や long なら A / 50 の 後 に 小数点 以下 切り捨て に なり ます 。 A が 60 の 時 は 、 A / 50 は 1 . 2 です が 、 小数点 以下 切り捨て に なる ので 1 に なり kotae は 100 に なり ます 。 A が 180 の 時 は 、 A / 50 は 3 . 6 です が 、 小数点 以下 切り捨て に なる ので 3 に なり kotae は 200 に なり ます 。 
new JLabel ( " 五月 " ); の new が ある せい で は ない でしょ う か 。 GUI 詳しく 無い ので 恐縮 です が 、 毎回 インスタンス化 し て いる よう な 気 が し ます 。 
boolean 型 は 「 真か 偽 か 」 、 「 Yes か No か 」 、 「 正 か 負 か 」 など の 二者択一 の 値 が 代入 できる の です 。 たとえば 「 あなた の 年齢 が 20歳 以上 」 という 条件 が 正しい 場合 は true を 、 間違っ て いる 場合 は false を 代入 する 。 とい た 使い方 です 。 
public な class が 2つ あり ます 。 Java で は public な class を 2つ 以上 定義 する こと が でき ませ ん 。 余談 です が もう 一つ 。 ファイル 名 は Main . java だ と 思い ます が 、 public な class は 、 ソース ファイル 名 から Java を 取っ た もの と 同じ に し ない と いけ ませ ん 。 つまり 、 Main class 以外 を public に する と エラー に なり ます 。 
■ ■ ■ 皆さん が 私 と 同じ 状況 で あれ ば C# を 始め ます か ？ 始める と 思い ます 。 ■ ■ ■ また 、 よろしけれ ば その 理由 も 聞か せ て ください 。 Java で 学ん だ こと （ より 具体 的 に 言え ば 、 クラスベース の オブジェクト指向 に のっとっ て 、 GUI ライブラリ を 用い て GUI アプリケーション を 書く 作法 ） は 、 C# で も 活 かせる だけ で なく 、 C# で 書く 方 が 楽 に 書ける から です 。 C# は Java より 後発 の 言語 な ので 、 いわば 「 Java の 改良 言語 」 と も 言え ます 。 やっ て み て 損 は 無い でしょ う 。 なお 、 C# は Windows で 「 強い 」 です が 、 Qt など の フレームワーク を 使え ば 、 他 プラットフォーム 開発 も 可能 です し 、 近年 は Visual Studio で も iOS や Android 開発 が 出来る よう に なっ て い ます 。 （ https :// codeiq .jp / magazine / 2015 / 06 / 24809 / を 参照 ） ■ ■ ■ C# も こんな 感じ の 制限 が ある の でしょ う か ？ 無償 版 の Visual Studio に は Express と Community という ２つ の エディション が あり 、 どちら も C# が 使え ます 。 Visual Studio Express は 誰 でも （ 個人 ・ 法人 を 問わ ず ） 無償 で 使え て 、 作成 し た プログラム を 商用 利用 可能 です し 、 その 許諾 を 求める 必要 も 無く 、 売り上げ を 部分的 に 納める 義務 も あり ませ ん 。 （ https :// www . visualstudio . com / ja - jp / products / visual - studio - express - v ... の 「 Express 製品 の 商業 目的 の 使用 」 章 を 参照 ） Visual Studio Community は 個人 なら 無償 で 使え て 、 作成 し た プログラム を 商用 利用 可能 です し 、 その 許諾 を 求める 必要 も 無く 、 売り上げ を 部分的 に 納める 義務 も ありません （ 法人 で の 利用 に は 制限 が あり ます ） 。 （ http:// bacchus . ivory . ne.jp / gin / pos t-4 79 / など を 参照 ） つまり 個人 で C# を 使う 以上 、 何 を やっ て も 良い ライセンス に なっ て い ます 。 （ ただし 、 所得税 を 申告 する 、 著作権 法 や わいせつ 図画 関連 刑法 に 抵触 し ない よう に する など 、 法律上 の 制約 は もちろん あり ます ） 
Java 5 で 導入 さ れ た 総称 ( ジェネリクス ) です 。 オートボクシング / アン ボクシング 機能 と 併せ て 理解 し て ください 。 http:// docs . oracle . com / javase / jp / 6 / techno tes / guides / language / enhanc ... 
画像 の 四つ角 の 座標 を 指定 し て イメージ を 表示 または 変換 する メソッド は 標準 の API に は ない と 思い ます 。 です が 左右 反転 と 回転 でし たら アフィン 変換 で 可能 です 。 左右 反転 と 回転 を 行う AffineTransform オブジェクト を 生成 し て drawImage で 描画 し ます 。 アフィン 変換 の 回転 、 平行移動 、 スケーリング 、 シャーリング ( スキュー ・ 傾斜 ) の 組み合わせ で あれ ば 一つ の AffineTransform オブジェクト で 表現 でき ます 。 以下 サンプル コード です 。 イメージ は ImageIO など で 画像 ファイル を 読み込ん で 生成 し た Image オブジェクト を 使っ て も 動作 は 変わり ませ ん 。 ////////// AffineTransformTest . java ////////// import java . awt . Color ; import java . awt . Dimension ; import java . awt . Font ; import java . awt . Graphics ; import java . awt . Graphics 2D ; import java . awt . Image ; import java . awt . geom . AffineTransform ; import java . awt . image . BufferedImage ; import javax .s wing . JFrame ; import javax .s wing . JPanel ; import javax .s wing .S wingUtilities ; public class AffineTransformTest extends JFrame { Image image ; int imageWidth = 220 ; int imageHeight = 100 ; AffineTransform affineTransform ; public AffineTransformTest () { createImage (); createAffineTransform (); JPanel panel = new ImagePanel (); Dimension d = new Dimension ( 400 , 400 ); panel .s etPreferredSize ( d ); panel .s etMinimumSize ( d ); add ( panel ); pack (); } private void createImage () { image = new BufferedImage ( imageWidth , imageHeight , BufferedImage . TYPE _ INT _ RGB ); Graphics g = image . getGraphics (); g .s etFont ( new Font ( " Lucida Sans Typewriter ", Font . PLAIN , 80 )); g .s etColor ( Color . GREEN ); g . draw String (" TEST ", 10 , 80 ); g . dispose (); } // 左右 反転 さ せ て 45度 回転 後 に x , y ともに //( imageWidth / 2 ) だけ 移動 さ せる AffineTransform private void createAffineTransform () { affineTransform = new AffineTransform (); // 以下 設定 の 逆順 が 変換 結果 と なる （ たぶん ） // すべて を 表示 できる 位置 へ 移動 affineTransform . translate ( imageWidth / 2 , imageWidth / 2 ); // イメージ の 中心 を 原点 として 回転 affineTransform . rotate ( Math . PI / 4 , imageWidth / 2 , imageHeight / 2 ); // 左右 反転 で ずれ た 座標 修正 affineTransform . translate ( imageWidth , 0 ); // 左右 反転 ( x * - 1 ) affineTransform . scale (- 1 , 1 ); } class ImagePanel extends JPanel { @ Override public void paintComponent ( Graphics g ) { Graphics 2D g2 = ( Graphics 2D ) g ; g2 . drawImage ( image , affineTransform , this ); } } public static void main ( String [] args ) { SwingUtilities . invokeLater (() -> { JFrame frame = new AffineTransformTest (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etVisible ( true ); }); } } 
樹形図 を 書く ため 16 進 方 です 。 8 4 c 26 ae 13579 bdf 質問者 さん の データ構造 は こう です か ？ この 形式 だ と 、 配列 の 割り当て が 難しく ない です か ？ どう いっ た データ を 入れ た 樹形図 を 想定 し て いる か わかり ませ ん が 、 次 の よう な 構造 は どうでしょう 。 数字 は 配列 の 要素 数 だ と でも 思っ て ください 。 ・ 先頭 1 の 場合 1 23 4567 89 abcdef 左 の 子 = 親 × 2 右 の 子 = 親 × 2+1 ・ 先頭 0 の 場合 0 12 3456 789 abcde 左 の 子 = 親 × 2+1 右 の 子 = 親 × 2+2 こう する と 、 単純 な 加算 → 幅優先探索 、 × 2 など を 利用 → 深さ優先探索 ( 行きがけ ) といった 実装 が でき ます 。 質問 の 意図 と 違っ たら すみません 。 
造詣 が 深い わけ じゃ ない し 、 具体 例 も 書き ませ ん が 。 内部 クラス は 、 「 あれ ば 便利 」 程度 な コンビニ 存在 だ と 思っ て ます 。 これ が ない と XXX が 作れ ない といった 必然性 は 、 ない 。 内部 クラス で できる こと は 、 それ を トップレベル クラス ( あなた の いう 外部 クラス ?) に し て も 、 でき ます 。 じゃあ 、 何 が 便利 な の ？ と いう と ・ トップレベル クラス に { する まで も ない | し たく ない } という とき で は ない か と 。 とある トップレベル クラス が あっ て 、 ・ その 実装 内 で しか 必要 ない 下請け 的 ちん け な クラス が 必要 に なっ た とき 、 私 なら それ を トップレベル クラス に は し たく あり ませ ん 。 特定 クラス で しか 要 が ない もの を 、 主要 な 主役 クラス 群 と 同列 に *. java , *. class として 並べ たく ない 。 必要 な 特定 クラス の *. java 内 に 、 ひっそり 閉じ込め て おき たい 。 内部 クラス の が 、 外側 の クラス ( の エン クロージング インスタンス の ) フィールド や メソッド へ の アクセス が 暗黙 に 可 に さ れ てる の も 、 上記 の よう な 用途 に 使う こと を 明らか に 想定 し てる から でしょ う 。 具体 例 は 書き ませ ん が 、 こう いっ た 用途 は けっ こ 多数 で は ？ ・ スレッド 関係 の API が Runnable 型 を 要求 する ・ イベント フレームワーク は XXXListener 型 を 要求 する など など 。 自ク ラス の インスタンス メソッド の 「 1 行 呼び出し 」 に つなげれ ば 済む だけ の 話 の よう な とき 、 こう いっ た もの を いちいち *. java として 独立 に 用意 し たく ない ( すれ ば 見通し が 悪い )。 内部 クラス に 限ら ない です ね 。 ・ 無名 クラス ・ 局所 クラス など も 、 私 は 「 用途 的 に は みな 同類 」 と 、 思っ て ます 。 
> 近日 提出 な ので 身勝手 です が プログラム を 貰える と 有難い です 。 春 は 課題 まる投げ の 季節 。 塗りつぶし 色 の 変更 は fill () を 適切 な 位置 に 使い ましょ う 。 https :// processing . org / reference / fill _. html 
はい 。 電子書籍 を 読む こと は できる と 思い ます 。 
amount = amount - value ; if ( amount < 0 ) amount = 0 ; return amount ; とか ？ 
ソースコード 上 で " sample " の よう に 文字列 リテラル が 直接 指定 さ れ た 場合 に 限り 、 プール から 検索 さ れ ます 。 プログラム 処理 の 過程 で " sample " という 値 を 保持 する String インスタンス が 生成 さ れ て も 、 それ は プール 内 の もの と は 別 インスタンス です 。 よく ある 例 として 、 String a = " sample "; String b = new String (" sample "); この 場合 も 、 a != b です 。 他 に は 明示 的 に String # intern () が 呼び出さ れ た 場合 も プール から 検索 さ れ ます が 、 こちら は マイナー かも しれ ませ ん 。 
コンパイル 環境 の 文字コード セット が 違う ため と 思わ れ ます 。 たとえば コンパイル 時 に UTF-8 文字コード を 設定 し て いる のに 、 part 01 . java ファイル は Shift-JIS で 書い た 、 という 状況 で コンパイル する と 、 この よう な 現象 に なり ます 。 part 01 . java ファイル を テキストエディタ など で 開い て み て 、 文字コード を 変更 し て 保存 し て み て ください 。 
・ 基本的 に dex 2 jar で 完全 な ソース を 作る 事 は 不可能 ・ 署名 は 作成者 を 証明 する ため の 物 な ので そう 簡単 に 同じ 再 署名 など でき ない 。 なので リリース さ れ た apk を java の ソース レベル で 改変 し て 作り直す こと 自体 が ほぼ 不可能 。 デコンパイル レベル ( アセンブラ みたい な ソース ) で あれ ば 改変 は 可能 だ が 。 どのみち 署名 部分 は 複製 で きんの で 無理 が ある が 。 
Java 自体 の リファレンス を 読む の で は ダメ です か ？ http:// docs . oracle . com / javase / 8 / プログラミング 経験 が あれ ば 、 下手 に 参考書 を 探す より 早い ですよ。 
右 の 上 の ほう に 「 パースペクティブ 」 という の が あり 、 こちら が C/C++ ( 青地 に 黒 で 書か れ て いる ところ ） に なっ て いる ため です 。 パースペクティブ の 横 の エクセル みたい な ボタン を 押し て 、 「 Java 」 を 追加 すれ ば 、 Java の セット に なり ます 。 C/C++ に 戻す 場合 は 、 パースペクティブ で C/C++ を 選択 し 直せ ば （ C/C++ の 青地 に 黒 の ボタン を クリック すれ ば ） OK です 。 
インポート って 別 パッケージ の クラス を import 文 で する 方法 でしょ う か ？ それとも jar ファイル の ライブラリ を インポート する 方法 でしょ う か ？ 前者 は import 文 で クラス の FQCN を 書け ば OK です 。 後者 は 私 は NetBeans で 開発 し て いる ので 分かり ませ ん 。 
int n = 2 ; と 初期 化 し て い て その あと 一切 n に 代入 し て い ない ので 、 switch文 に 到達 し た 時点 で n = 2 である と 分かり ます 。 ( 人間 が じゃなくて コンピュータ が 、 です ) switch ( 2 ){ case 1 : System . out . println (" One !"); break ; case 2 : ( 以下略 ) と 同じ と 見なさ れる ので 、 case 1 : が 絶対 に 実行 さ れる こと が ない 、 と 判断 し て いる の で は ない でしょ う か 。 javac だ と 特に 警告 が 出 ませ ん が 、 もう ちょっと 賢い ソース 解析 を する IDE など で は 警告 さ れる と 思い ます 。 実際 IntelliJ で は 警告 さ れ まし た 。 public static void main ( String [] args ){ int n = 2 ; System . out . println (" Two !"); : : という コード と 等価 な のに switch文 を 書く の が 悪い の です 。 と は いえ 、 これ は 単に 学習 用 の コード だ と 思う ので 、 public static int someInt () { return 2 ; } public static void main ( String [] args ) { int n = someInt (); switch ( n ) { case 1 : System . out . println (" One !"); break ; case 2 : ( 以下略 ) みたい な 感じ に すれ ば いい と 思い ます 。 メソッド の こと を 学習 済 な の で あれ ば 、 です が 。 
教授 が 入力 する 値 の 個数 と データ型 ( 整数 か 実数 か ) 等 を 知り たい です ね 。 個数 も ランダム だ と 、 １ 、 多角形 を 生成 ２ 、 値 の 比率 を 計算 ３ 、 レーダーチャート を 生成 みたい な こと を し ない と いけ ませ ん 。 個数 が 固定 だ と １ の 作業 が なくなり ます 。 
覚える こと が あり すぎ て 、 という の は 行け ない 状態 です ね 。 アプリ 開発 は テスト勉強 で ない ので 全部 覚え て も 仕方 ない です 。 まずは 自分 の 中 の 小さな 問題 を 見つける 。 おじいちゃん が 薬 飲む の を 忘れる という 問題 が あれ ば Alert 機能 , 薬 を 登録 する データベース の 実装 。 Activity の intent 処理 という よう に 逆算 でき ます 。 そういう 小さな 問題 を 解決 する アプリ を 作っ て み て は いかが でしょ う か ？ 
regex は 名前空間 だ から 。 import java . util . regex .*; に し て み 。 
分解 し て 考え て み ましょ う 。 public static int add ( int x , inty ){ int ans = x + y ; return ans ; } 上 の コード は 、 ２つ の 引数 （ x , y ） の 値 を 加算 し て 戻り値 を 返す add メソッド です よ ね 。 main メソッド の 出力 する データ は 「 add ( add ( 10 , 20 ), add ( 30 , 40 )) 」 です 。 add ( 10 , 20 ) → 10 + 20 ＝ 30 add ( 30 , 40 ) → 30 ＋ 40 ＝ 70 これ は 、 質問者 が 書か れ て いる 内容 と 一致 し て い ます よ ね 。 でも 、 この ２つ の 戻り値 を さらに add メソッド の 引数 に し て いる ので add ( 30 , 70 ) → 30 ＋ 70 ＝ 100 最終 的 に 、 この 戻り値 100 を 出力 し て いる こと に なり ます 。 add メソッド の 引数 の 中 に add メソッド の 戻り値 が ２つ 書か れ て いる こと に 注目 し て ください 。 
戻り値 と は 、 呼び出し 元 に 値 を 返し ます 。 add ( add ( 10 , 20 ), add ( 30 , 40 )) この 時点 で 、 中 の 2つ の メソッド が 数字 に 化ける の は わかる よう です な （ 以下 参照 ） 。 add ( 30 , 70 ) ← add ( add ( 10 , 20 ), add ( 30 , 40 )) が こう なる この 状態 で 終わり に は なり ませ ん 。 だって 、 まだ add メソッド が 残っ て いる から です 。 よって 、 最後 の 処理 として 出て きた 30 と 70 を 足し て 100 に なる の です 。 100 ← add ( 30 , 70 ) が 100 に 化ける 。 ここ まで 来 て 初めて 計算 終了 です 。 説明 が 下手 です が 分かり まし た でしょ う か ？ 
まず 無料 な ので 、 InteliJ の よう な 有償 の IDE を 使う 予算 が ない とき に 。 無料 IDE の Eclipse と の 比較 です と GUI ビルダー が 強力 な ので swing 使う よう な アプレット の 作成 に 。 Java 8 対応 が Eclipse より 上 な ので Java 8 使う 場合 に 。 軽い ので チープ な ＰＣ に 。 といった シーン で 使え ます 。 
一度 回答 し た の です が 、 不備 が あっ た ので 一旦 取り消し て い ます 。 取り消し 前 の 回答 を 見 て い たら ごめんなさい 。 解決 法 1 Java の API で Path を 指定 し て 書き込む Java の 一般 的 な ファイル 読み書き API を 使っ て 、 / data / data の 下 で は ない 、 汎用 的 に 読み書き できる 場所 に 出力 し ます 。 サンプル は こんな 感じ です か 。 （ 書き込み たい データ が str という String 型 の 変数 に 入っ て いる もの として ） String path = Environment . ge tExternalStorageDirectory (). getPath () + "/ file . txt "; try { FileOutputStream fos = new FileOutputStream ( path ); Out pu t StreamWriter osw = new Out pu t StreamWriter ( fos ); BufferedWriter bw = new BufferedWriter ( osw ); bw . write ( str ); bw . flush (); bw . close (); } catch ( FileNotFoundException e ) { Log . d (" MainActivity ", e.t oString ()); } catch ( IOException e ) { Log . d (" MainActivity ", e.t oString ()); } Environment . ge tExternalStorageDirectory (). getPath () は 、 その 端末 で 汎用 ストレージ として 読み書き できる 場所 が 返り ます 。 実際 に 何 が 返る か は 端末 次第 な の です が 、 Nexus 7 だ と "/ storage / scdard /" でしょ う か ね ？ なお 、 Android Manifest . xml に < uses - per mission android : name =" android . per mission . READ _ EXTERNAL _ STORAGE " /> < uses - per mission android : name =" android . per mission . WRITE _ EXTERNAL _ STORAGE " /> の 記述 が 必要 （ READ の 方 は 読み込み も する の なら ） です 。 ただし 、 Android 6.0 で は アクセス権限 の 処理 が 改め られ た ため 、 上記 の uses - per mission は 通用 し ませ ん 。 Nexus 7 を Android 6.0 に アップグレード し て いる の なら 、 MainActivity に 下記 の よう な 処理 を 追加 し ます 。 private static final int REQUEST _ EXTERNAL _ STORAGE = 1 ; private static String [] PERMISSIONS _ STORAGE = { Manifest . per mission . READ _ EXTERNAL _ STORAGE , Manifest . per mission . WRITE _ EXTERNAL _ STORAGE }; public static void verifyStoragePermissions ( Activity activity ) { // Check if we have read or write per mission int writePermission = ActivityCompat . checkSelfPermission ( activity , Manifest . per mission . WRITE _ EXTERNAL _ STORAGE ); int readPermission = ActivityCompat . checkSelfPermission ( activity , Manifest . per mission . READ _ EXTERNAL _ STORAGE ); if ( writePermission != PackageManager . PER MISSION _ GRANTED || readPermission != PackageManager . PER MISSION _ GRANTED ) { ActivityCompat . requestPermissions ( activity , PERMISSIONS _ STORAGE , REQUEST _ EXTERNAL _ STORAGE ); } } そして 、 onCreate など で verifyStoragePermissions ( this ); の よう に 呼び出し ます 。 これ を 実行 する と 、 画面 に この アプリ に 権限 を 与える こと を 許可 する か 問う ダイアログ が 出る ので 、 許可 すれ ば 書き込み が でき ます 。 （ 最初 の 1回 だけ ） この 方法 なら 、 Android 用 の 一般 的 な ファイルマネージャー で 開ける 場所 な ので 、 PC に 転送 する こと も 簡単 でしょ う 。 ただし 、 / storage / scdard / の よう な 場所 で ファイル を 読み書き する と 、 アプリ を アンインストール し て も それら の ファイル は 消え ない ので 、 ストレージ を 汚染 する 邪法 で ある と 極度 に 嫌う 人 も い ます 。 Play ストア など で 広く 公開 する アプリ に 利用 する に は 注意 が 必要 でしょ う 。 自分 だけ で 使う アプリ なら 構わ ない と 思い ます が 。 ------------------ 解決 法 2 adb コマンド を 使う 実は こっち の 方 が 簡単 な の です が 。 adb コマンド を 使う こと が できる の なら ば 、 まず adb shell コマンド で 端末 と 接続 し 、 shell @ xxxxx :/ $ run - as < パッケージ 名 > の よう に コマンド を 入力 し ます 。 する と 、 / data / data の 下 に ある フォルダー に 移動 する こと が でき ます 。 この 中 を 見る と 、 files という フォルダー も 見え ます ので 、 その 中 に 入れ ば openFileOutput で 書き込ん だ ファイル が 見える はず です 。 この まま で は PC に 転送 でき ない ので 、 shell @ xxx : / data / data /< パッケージ 名 >/ files $ cp file . ext / storage / scdard / など の よう に し て 、 解決 法 1 で 示し た 汎用 的 に 見 られる フォルダー に ファイル を コピー し ます 。 そして 、 それ を やはり ファイルマネージャー など を 使っ て PC に 転送 する という 流れ です 。 ただし 、 この 方法 は 出力 する 度 に adb で 繋い で ファイル を コピー し て ・ ・ ・ と し なけれ ば なら ない ので 、 手間 が かかる の が 欠点 に なり ます ね 。 ときどき ファイル の 中身 を 確かめ たい 程度 なら いい の です が 、 毎度 確かめる 必要 が ある の なら 辛い でしょ う か 。 ------------------ こんな ところ でしょ う か 。 
どの よう な 仕様 に し たい の か 不明 です が 、 Lv 2 や Lv 20 は 戻り値 なし な ので 、 それぞれ の ポイント を セット し て いる だけ な ので 、 クラス の フィールド 変数 と する 必要 が ある の で は 。 public class Monster { int hp ; int attach ; void Lv 2 (){ this . hp = 50 ; this . attach = 10 ; } void Lv 20 (){ this . hp = 500 ; this . attach = 100 ; } public static void main ( String [] args ) { Monster m1 = new Monster (); m1 . Lv 2 (); System . out . println ( m1 . hp ); m1 . Lv 20 (); System . out . println ( m1 . hp ); } } 質問 の 意図 と 違っ たら スルー で 。 
戻り値 と は 、 呼び出し 元 に 値 を 返し ます 。 add ( add ( 10 , 20 ), add ( 30 , 40 )) この 時点 で 、 中 の 2つ の メソッド が 数字 に 化ける の は わかる よう です な （ 以下 参照 ） 。 add ( 30 , 70 ) ← add ( add ( 10 , 20 ), add ( 30 , 40 )) が こう なる この 状態 で 終わり に は なり ませ ん 。 だって 、 まだ add メソッド が 残っ て いる から です 。 よって 、 最後 の 処理 として 出て きた 30 と 70 を 足し て 100 に なる の です 。 100 ← add ( 30 , 70 ) が 100 に 化ける 。 ここ まで 来 て 初めて 計算 終了 です 。 説明 が 下手 です が 分かり まし た でしょ う か ？ 
文字列 は "" で 括ら ない と いけ ませ ん 。 また 、 & amp ; quot ; といった 、 html 用 の エスケープ は 使用 でき ませ ん 。 普通に o [ 0 ] = "&' りんご &'"; で 大丈夫 です 。 
new Long [ 1280000 ] で １ ２ ８ ０ ０ ０ ０ 個 の 要素 の ある 配列 を 作っ て ます 。 １ ２ ８ ０ ０ ０ ０ 個 の log 型 の 整数 を 配列 に いれ られ ます 。 要素 の 番号 は ０ から （ 1280000 - 1 ) まで です ね 。 要素 の 番号 は 出席 番号 の よう に 連続 し た 番号 です 。 要素 の 番号 は ０ から はじまり ます 。 
Dao . Login . authUser () の 151 行 目 で NULL が 格納 さ れ た 変数 に対して メソッド 呼び出し や 変数 の 参照 、 to String () 呼び出し など を 行っ て いる ため 、 NullPointerException が 発生 し て いる と 考え られ ます 。 Dao . Login . authUser () に 引数 が ある 場合 、 Dao . Login . doPost () から の Dao . Login . authUser () 呼び出し 時 に 渡し て いる 変数 が Null に なっ て いる か 、 Dao . Login . doPost () から の Dao . Login . authUser () 呼び出し 時 に 引数 に Null を 設定 し て いる の で は ない でしょ う か 。 事実 と 異なれ ば 申し訳 あり ませ ん 。 解決 し ない 場合 は 返信 を ください 。 
せめて OS くらい は 書い て 欲しかっ た けど ， bashrc に 言及 し てる ので UNIX 系 として 話 を 進め ます ． たぶん / usr / local / bin に パス が 通っ て ない ので ， その 場 しのぎ なら ex port PATH =/ usr / local / bin :$ PATH を 実行 し たら いい ． ずっと その 設定 を 有効 に し たい なら ， echo export PATH =/ usr / local / bin :$ PATH >> $ HOME /. profile を 実行 し たら いい （. profile じゃなくて . bashenv かも ） ないと は 思う けど 万が一 Windows を 使っ て しまっ て い たら ， どこ に ある ん だ か イマイチ わから ない 環境 設定 を 開い て ， これ また どこ に ある ん だ か わかり にくい 環境変数 の 設定 を 開い て ， デフォルト で 空白 が 含ま れる という 素晴らしい 設計 方針 を 持っ て いる 適切 な フォルダ へ の パス を 探し出し て 環境変数 を 設定 する という ， 途方 も なく 無意味 で 非 効率的 で 「 こんな OS 誰 が 使う ねん … 」 と 文句 を 言い たく なる 作業 を する しか ない ． 
Android の 組み込み は 経験 が ありません が 、 別 の 組み込み 系 の 経験 から 言え ば 、 Android の 使用 は 妥当 な 選択 です 。 理由 は 、 民生 品 （ 購入 客 が 一般人 の 製品 ） かつ ハード 面 で 小型 で あり 、 高額 に なる 商品 （ スマフォ や 小型 の 人 型 ロボット ） の 場合 、 コスト 低減 による 商品価格 の 低価格 化 によって 、 どこ まで 低価格 で 販売 できる か が 勝負 どころ です 。 低価格 化 する ため の 方法 で 簡単 な の は 、 ハード を 如何 に 安く 製造 できる か です が 、 その 際 の ポイント は 実装 する メモリ を 減らす 事 です 。 ロボット 等 の 場合 、 駆動 系 や センサー 系 を 低価格 に 抑える と 、 性能 に 影響 し ます し 、 CPU の 質 を 落とす の も 同じ です 。 メモリ を 減らす と 言う 事 は 、 OS も 容量 を 減らす 必要 が あり ます 。 結果 、 サイズ の 小さい OS として 、 Android の 選択 が さ れる わけ です 。 ちなみに 、 経験 上 、 更に メモリ を 減らし て 、 製造 コスト を 落とす 場合 、 OS 自体 に 手 を 入れ て 容量 を 減らし たり 、 最悪 の パターン は OS 自体 を 実装 し ない で 単に マイコン 制御 に なり ます 。 
いろいろ 違い ます 。 主 に 、 Java OS 非 依存 移植性 が 高い ハード の 近く を い じれ ない 動き が 遅い 細かい こと は Java が 行う ため 開発者 の 負担 が 少ない オブジェクト指向 を 持つ C OS 依存 （ OS どころか ハード に まで 依存 する よう です ） 移植性 が 低い ハード の 近く を い じれる 動き が 速い 細かい こと は 開発者 が 行う ため 開発者 の 負担 が 大きい オブジェクト指向 を 持た ない 思いつく の は これ ぐらい です 。 
たぶん ・ a や b が 「 配列 そのもの 」 と 思っ てる から では ？ Java の 配列 は 、 オブジェクト です 。 な ので 、 a や b は 参照 型 変数 。 どっか に ある ・ 配列 実体 の オブジェクト を ・ a や b という 名前 で 指し示す だけ に すぎ ない 。 int [] a ={ 1 , 2 , 3 , 4 , 5 } は ・ a という 配列 実体 に 値 を 代入 し て いる の で は なく 、 ・ 5 要素 を 持つ 配列 実体 オブジェクト を ・ a という 参照 型 変数 と 結びつけ てる だけ です 。 だから b = a ; すれ ば b は a と 全く 同じ 配列 実体 オブジェクト を 指す よう に なる 。 a , b どっち の 名前 で 参照 しよ う が 、 実体 は 同じ ・ ひとつ 。 
総称 型 ( ジェネリクス ) について の 基本 的 な 知識 は あり ます か ？ 全く 知ら ない なら 解け ない 問題 な ので 、 まずは 総称 型 について 勉強 し て ください 。 以下 は 総称 型 について の 基本 的 な 知識 が ある もの として 説明 し ます 。 WeightedQueue < E > クラス の poll () メソッド の 戻り値 は QueueElement クラス の element フィールド を 返し ます 。 この element フィールド は String 型 の 要素 を 保持 する ため の 変数 です 。 この こと から 、 仮 型 引数 T に は String を 指定 す べき こと が 分かり ます 。 
for ( int i = 0 ; i < counter ; i ++){ Numbers [ i ]= smallerNumbers [ i ]; } for ( int i = counter ; i < howMany ; i ++){ Numbers [ i ]= largerNumbers [ i - counter ]; }// ここ で 、 また ひとつ に まとめる この 部分 の 位置 が おかしい です 。 意味 を 考え て 下さい 。 再帰 を し て smallerNumbers , largetNumbers を 整列 し て から の 処理 だ と 思い ます 
Java 言語 の コンパイラ の アプリ です 。 要は プログラム を 組む 為 の プログラミング言語 の アプリケーション です 。 ちなみに J は Java 、 V は バーチャル 、 M は マシーン の それぞれ 略 です 。 JAVA は C言語 が 基本 と なっ て い て 、 C は コンパイラ の こと です が 、 この プログラム 言語 は 作っ た プログラム を そのまま 実行 する の で は なく 、 コンパイラ で コンパイル し て 、 人間 が 理解 する 命令 から 、 機械 だけ に 分かる 機械語 を 生成 し て 実行 可能 な プログラム を 作り上げる ソフトウェア な の です 。 以下 の ページ を 参照 する と 分かり ます が 、 『 JVM プログラミング言語 - 学び ＆ プログラム コンパイラ 』 https :// itunes . apple . com / jp / app / jvm - program ming - language - learn / id 48 ... 全部 英語 な ので 、 Google翻訳 し て 、 私 が 分かる 範囲 で 意訳 し て おき まし た ので ご 参照 ください 。 //////////////////////// 説明 iPad 、 iPhone や iPod touch の ため の 古典 的 な JVM プログラミング言語 です 。 プログラミング言語 は 、 複雑 な 数学 的 計算 、 エンターテイメント 、 その他 の 多く の 有用 な タスク を 研究 する ため の 最適 な ツール です 。 アプリケーション は 、 JVM プログラミング言語 を 学習 する ため に 特に 有用 です 。 - あなた は 、 アプリケーション 内 で コンパイル を 購入 する 必要 が あり ます 。 - インターネット接続 が 必要 です 。 * FEEDBACK * - AppStore 上 で 偉大 な プログラミング ・ ツール です 。 - iOS の ため の あなた の プログラミング言語 は 素晴らしい です ！ * 特長 * - あなた の プログラム を コンパイル し 、 実行 し ます 。 - テキスト 出力 の 前 に テキスト 入力 プログラム を 実行 し ます 。 - 構文 強調 表示 、 行番号 、 カラー テーマ と 追加 の キーボード で 強化 さ れ た ソースコードエディタ です 。 - インポート と エクスポート プログラム を iTunes 、 または メール によって 行い ます 。 - オンライン 言語 リファレンス と いくつ か の プログラム の サンプル が あり ます 。 * 制限 * - インターネット接続 は 、 プログラム を コンパイル し て 実行 する ため に 必要 です 。 - グラフィックス 、 ネットワーク 、 ファイルシステム と リアルタイム 入力 が サポート さ れ て い ませ ん 。 - プログラム の 最大 実行 時間 は 15 秒 です 。 - 代わり に ファイル を 分離 し まし た 。 一つ の ソース ファイル に いくつ か の クラス を 使用 し て アプリケーション を 使用 する ため です 。 ありがとう ！ = = = = = = = = = = = ========================= JVM は 、 もともと （ 以降 、 オラクル 社 に 統合 さ れ て いる ） と Sun Microsystems の JVM プラットフォーム の コア コンポーネント として 1995年 に リリース さ れ た Sun Microsystems 社 の James Gosling 氏 が 開発 し た プログラミング言語 です 。 言語 は 、 C および C から その 構文 の 大半 を 導出 ++ より 簡単 な オブジェクト モデル と 少ない 低 レベル の 施設 を 併設 し て い ます 。 JVM の アプリケーション は 、 一般的 に かかわら ず 、 コンピュータアーキテクチャ の 任意 の 仮想マシン 上 で 実行 する こと が でき 、 バイトコード （ クラス ファイル ） に コンパイル さ れ ます 。 JVM は 、 具体 的 に は 、 可能 な 限り 少数 の 実装依存 性 を 有する よう に 設計 さ れ た 汎用 の 、 同時 、 クラスベース 、 オブジェクト指向言語 です 。 アプリケーション 開発者 は 単一 の プラットフォーム 上 で 実行 さ れる コード は 、 他 の 上 で 実行 する ため に 再 コンパイル する 必要 が ない こと を 意味 し 、 「 一度 書け ば どこ でも 動く 」 を さ せる こと を 意図 し て い ます 。 JVM が 報告 千 万 の ユーザー と 、 特に クライアント - サーバ Web アプリケーション の 為 に 、 現在 使用 中 の 最も 一般 的 な プログラミング言語 の 一つ です 。 オリジナル と リファレンス 実装 の JVM の コンパイラ 、 仮想マシン 、 および クラス ライブラリ の よう に 1995年 から 日 によって 開発 さ れ た 2007年 5月 の 、 JVM コミュニティ プロセス の 仕様 に 準拠 し て 、 日 は 、 GNU General Public License の 下 で その JVM 技術 の ほとんど を 再 ライセンス し まし た 。 その他 に も 、 JVM や GNU クラスパス の ため の GNU コンパイラ など 、 これら の 日 の 技術 の 別 の 実装 を 開発 し まし た 。 ジェームズ・ゴスリン 、 マイク ・ シェリダン 、 そして パトリック ・ ノートン は 、 1991年 6月 に JVM 言語 の プロジェクト を 開始 し 、 JVM が 元々 双方向テレビ 用 に 設計 さ れ まし た が 、 それ は あまりに も 一 度 に デジタル ケーブルテレビ 業界 の ため に 進め られ まし た 。 言語 は 当初 、 ゴス リング の オフィス の 外 に 立っ て い た 樫 の 木の 後 に オーク と 呼ば れ て い まし た 。 それ は 後で 名前 グリーン によって 行き 、 それ 以降 の JVM の コーヒー から 、 JVM と 改名 さ れ た 、 言語 の 作成者 が 大量 に 消費 さ れる と 述べ まし た 。 ゴス リング は 、 仮想マシン と 表記 の おなじみ の C / C ++ スタイル を 持っ て い た 言語 を 実装 する こと を 目的 と し まし た 。 Sun Microsystems が 提供 し ない 、 それ は 「 一度 書け ば どこ でも 動く 」 と 約束 し 、 1995年 に JVM 1 . 0 （ WORA ） として 最初 の パブリック 実装 を リリース コスト は 、 実行 時間 を 一般 的 な プラットフォーム 上 で 。 かなり の 安全 と 設定 可能 な セキュリティ を 備え た 、 それ が ネットワーク と 、 ファイル アクセス 制限 を 可能 に し まし た 。 主要 な Web ブラウザ は 、 すぐ に Webページ 内 の JVM アプレット を 実行 する 機能 が 組み込ま れ 、 JVM は すぐ に 人気 と なり まし た 。 2006年 に は 、 マーケティング 目的 の ため に 、 Sun は それぞれ JVM EE 、 JVM ME 、 および JVM SE 、 など の 新しい J2 バージョン の 名前 を 変更 し まし た 。 
まあ こんな 感じ か 。 要件 定義 … 0 . 5 か月 、 アウトプット ： 要求仕様 書 外部 設計 … 1 か月 、 アウトプット ： 外部 仕様書 内部 設計 … 1 . 5 か月 、 アウトプット ： 内部 仕様書 コーディング … 3 か月 、 アウトプット ： プログラム テスト … 2 か月 、 アウトプット ： テスト 仕様書 、 テスト 成績 書 リリース … 0 . 5 か月 、 アウトプット ： リリース 媒体 、 リリー スノート 
テキストエディタ で 、 作成 さ れ た の です ね ？ ホームページ に コピー は でき ませ ん 。 しかし 、 コード を 埋め込む こと が でき ます 。 < script src ="*. class "/> として やる と 、 （ たぶん ） ホームページ で も 、 うごき ます が 、 この 頃 、 java アプレット で は 、 ローカル でも 、 サーバ で も 、 権限 が 制限 さ れ て 、 実行 不可能 な 場合 が あり ます 。 少々 、 手 を 加え て やる 必要 も ある ので 、 気 を つけ て ください ね 。 では 。 
拡張 for 分 です ね 。 for ( int value : score ) を 使え ば 配列 の すべて の 要素 が 取り出せ ます 。 今回 の 例 で は System . out . println ( value ); なんで 、 score の 要素 が 1 , 2 , 3 , 4 , 5 だ と する と 1 2 3 4 5 と 出力 さ れ ます 。 普通 の for 文 を 使っ て も いい の です が 、 こちら の ほう が 簡潔 に 記述 出来る ため こちら の ほう が 良い と 思い ます 。 
用語 から する と 質問者 さん は 、 「 ドメイン駆動設計 」 を 読ま れ た うえ で 「 やってみよう 」 と 思わ れ た の でしょ う か ? ドメイン駆動設計 は リファクタリング しながら クラス を 洗練 し て いく 開発 手法 です が 、 スタート と なる クラス の インターフェース ( 初期 の ドメイン ) を 定義 する 具体 的 な 手段 が ない ので 、 最初 の 設計 を 作り上げる の が 難しい と 思い ます 。 いろいろ な 開発 手法 が あり ます が 具体 的 な モデル を 設計 する やり方 として 、 こちら を 読ま れ て は どうでしょう か ? 「 ユースケース 駆動 開発 実践 ガイド 」 https :// www . amazon.co.jp / gp / offer - listing / 4798114456 > ただ 上記 以外 に も 、 例えば 単一 エンティティ や 複数 エンティティ の 入力 チェック 、 金額 の 計算 処理 など は 上記 の クラス に 該当 し ない よう な 気 が し ます 。 入力 チェック は Validator と 言う 名前 の クラス を 定義 し て ユーザ の 入力 なら プレゼンテーション レイヤ に 、 金額 の 計算 処理 は ドメイン レイヤ に 配置 する の が 自然 だ と 思い ます 。 これ も 開発 を 進める 中 で 、 当初 と は 異なっ た レイヤ に 再 配置 する こと も しばしば です けど 。 
時間 単位 は 、 分 に 換算 し て ある として 。 4時間 0 分 ⇒ 240 分 ーーーーーーーーーー + 100円 境界線 4時間 1 分 ⇒ 241 分 5時間 0 分 ⇒ 300 分 ーーーーーーーーーー + 100円 境界線 5時間 1 分 ⇒ 301 分 たぶん 、 分 も 値段 も 整数型 ( int 等 ) で やっ て ます よ ね ？ 240 分 ( 4時間 ) 超 過分 は 、 minutes - 240 で 求まり 、 それ を ( minutes - 240 ) / 60 すれ ば 分 ⇒ 時間 の 単位 換算 な ん だ けど 、 整数型 だ と 余り は 無視 ・ 切り捨て な ので 、 うまく いか ない 。 こういう 時 は 、 ・ 換算 単位 量 - 1 を 加算 し て から ・ 換算 単位 量 で 割る と すれ ば いい です 。 この 場合 は 60 - 1 、 つまり 59 を 足し た 結果 を 60 で 割る 。 全部 まとめる と price = 200 + (( minutes - 240 + 59 ) / 60 ) * 100 ; という かん じ 。 一見 する と ??? かも しれ ませ ん が 、 最初 に 書い た 境界 値 ケース ( 241 , 300 , 301 等 ) を あてはめ て 計算 し て みれ ば 、 理解 できる と 思い ます 。 
eclipse は オワコン な ので Android Studio を 使っ て ください 。 現在 eclipse を 使っ て 開発 し て いる 人 など 一 人 も い ませ ん 。 
1 . 自分 で 書か れ てる とおり ・ 1 行 ずつ 読み取っ て 入れる だけ です 。 明記 さ れ て ませ ん が 、 テキストファイル の サンプル 記述 を 見れ ば ・ 3 行 一 組 ・ 3 行 中 の 相対 位置 で 意味 が 決まる ( e . g . 1 / 3 は 名前 ) ん でしょ ？ だっ たら 、 ・ 一 人 あたり 3回 読む ・ 1番 目 なら 名前 ... という ふう に 入れ 分ける だけ でしょ う に 。 2 . ArrayList < String > name ; ArrayList < String > job ; ArrayList < String > sex ; が 、 質問 の 前提 イメージ に 見え ます 。 けど 、 これ は 好き に なれ ませ ん 。 ひと まとまり の 情報 単位 で ある はず の 「 人 」 の 属性 3つ が 、 バラ け て しまっ て 、 ソースコード を 一見 し た 人 に は ひと まとまり の 情報 に 見え ない 。 lonelywolf _ 67 さん 回答 に ある よう に 、 class Person の よう な もの を 作り 、 そこ に 3 属性 集約 し た ほう が はるか に 読み やすい し 、 Java らしい です 。 以下 は 、 ご 参考 まで の コード 。 この まま あなた の 実用 に なる と は 思い ませ ん が 、 考え方 を 読み取っ て いただく ため に 。 import java . io . File ; import java . util . ArrayList ; import java . util . Iterator ; import java . util .S canner ; class Foo { ___ static class Person { ___ ___ final String name ; ___ ___ final String job ; ___ ___ final String sex ; ___ ___ Person ( Iterator < String > in ) { ___ ___ ___ name = in . next (); ___ ___ ___ job = in . next (); ___ ___ ___ sex = in . next (); ___ ___ } ___ ___ @ Override public String to String () { ___ ___ ___ return String . format (" Person { name =\"% s \", job =\"% s \", sex =\"% s \"}", name , job , sex ); ___ ___ } ___ } ___ public static void main ( String [] args ) throws Exception { ___ ___ // Load ___ ___ final ArrayList < Person > result = new ArrayList < Person >() {{ ___ ___ ___ try ( Scanner sc = new Scanner ( new File (" sample . txt "), " UTF-8 ")) { ___ ___ ___ ___ while ( sc . hasNext ()) ___ ___ ___ ___ ___ add ( new Person ( sc )); ___ ___ ___ } ___ ___ }}; ___ ___ // debug print ___ ___ for ( Person p : result ) ___ ___ ___ System . out . println ( p ); ___ } } 実行 結果 : [ on Windows ] C :\ tmp > java Foo Person { name =" 田中 ", job =" 医者 ", sex =" 男性 "} Person { name =" 大林 ", job =" SE ", sex =" 女性 "} 
一度 合格 し て いれ ば OK です 。 Oracle 社 の 資格 に 何 年 で 失効 とか 聞い た こと あり ませ ん 。 
> k 4331191 pr さん > どちら も 実装 する こと は 可能 な の か 、 ご存じ の 方 は 教え て いただけ ない でしょ う か 。 どちら も 可能 です が 、 質問者 の タイプ として プログラム と 設計 は 出来る よう に なら ない と 思う ので 、 発注 先 に 予算 に 合わせ て 、 どちら に する か 選ん で 貰え ば 良い と 思い ます 。 
参考 に なる か は わかり ませ ん が 、 前 に 64 bit 版 java で プレイ する と 描画 距離 を デフォルト で 広く 設定 し て いる よう な こと が あっ た よう な 気 が し ます 。 その 関連 で は ない でしょ う か ？ また 描画 範囲 を 広く し ゲーム を プレイ する 場合 は グラフィック は 内蔵 グラフィクス で は 少し 弱い かも 知れ ませ ん 。 その 場合 は 自作pc 以外 で は 対処 でき ない と 思う ので 、 32 bit で プレイ する の が 適切 かも 知れ ませ ん 。 
勝率 の 表示 のみ 、 int kachi → double kachi "%" → kachi /( kachi + aiko ) 更に 、 表示 桁 数 の 設定 の ため に 、 勝率 の 表示 の とき System . out . printf メソッド を 使い ましょ う 。 http:// www . geocities . co.jp / bleis _ tift / java / printf . html クラス 分け について は 、 実行 し て み て から 、 引っ掛かっ た 結果 を 示し て 質問 す べき でしょ う 。 
その 二つ の ソース を 適切 に 組み合わせる だけ じゃん か 。 
cmd . exe | java . exe ( Class Name. class ) cmd . exe が java . exe を 呼び出し て い ます 。 cmd の キーボード イベント を 子 プロセス で ある java . exe から 呼び出す こと は 難しい です 。 cmd から 送る こと は 簡単 な ので 、 文字 入力 + Enter で イベント を 起こす こと は 簡単 です 。 メイン スレッド → 入力 待機 サブ スレッド → 無限ループ 処理 みたい に する と いい と 思い ます 。 --- サンプル コード --- class So { static boolean flag = true ; public static void main ( String [] args ) throws IOException { String str ; new Mythre (). start (); while (( str = System . console (). readLine ()) != null ){ if ( str . equals (" k ")) flag = false ; } } static class Mythre extends Thread { int count = 0 ; public void run (){ while ( flag ){ System . out . print ("\ r " + count ); count ++; try { Thread . sleep ( 1000 );} catch ( Exception e ){} } } } } ----------------------- 実用 性 は ない 。 メイン スレッド ： 入力 を ループ で 待機 、 " k " が 入力 さ れ たら Mythre の カウント を ストップ Mythre ： 1 秒 ずつ カウント 
Donut scale ( double ratio ){ // ２つ の 円 の 半径 を ratio 倍 し た 円 を 要素 に もつ ドーナツ 型 を 返す メソッド __ Donut donut = new Donut ( this . inner , this . outer ); __ donut . inner . scale ( ratio ); __ donut . outer .s cale ( ratio ); __ return donut ; } この 部分 です が ， inner と outer に対して Circle .s cale を 呼ん で い ます が ， Circle . scale は ともに scale さ れ た 新た な Circle インスタンス を 返す だけ で ， inner と outer の r に は 変更 を 加え ない よう な 実装 に なっ て い ます ． （ つまり ， Circle . scale も Donut . scale も インスタンス に対して 変更 は 加え ず ， スケール が 変更 さ れ た 新た な インスタンス を 返す よう に なっ て いる ） したがっ て ， Donut . scale で は inner と outer が 変化 し ない ので ， 結果的 に 面積 も 変わら ない の です ． 直す と し たら ， main の 中 で Donut d2 = d1 .s cale ( 2 ); と す べき です ． 
INSERT する の が ( 1 ,' 名前 ', 18 , 10000 ) で 固定 なら 方法 1 で 構い ませ ん 。 でも 、 名前 、 住所 、 貯金 を 画面 から 入力 する と し たら どうでしょう か 。 sql = " INSERT INTO info VALUES ('"+ name +"'," + address + "," + amount + ");" とか 書き たく なら ない でしょ う か 、 これ を やる と name , address , amount の 内容 を うまく 捜査 し て 別 の クエリ を 成立 さ せる 攻撃 （ SQLインジェクション ） の いい 餌食 に なっ て しまい ます 。 方法 2 は インジェクション を 受け ない 安全 な 方法 です 。 今夜 分かる SQLインジェクション 対策 http:// www . atmarkit . co.jp / ait / articles / 0611 / 02 / news 127 . html 
> java の 戻り値 について 下 の コード を 例 に 考え て み て ください 。 Modorichi クラス に は ３つ の メソッド が あり ます 。 main メソッド は 実行 を 開始 する メソッド です ね 。 Word 1 メソッド は 戻り値 を 返す メソッド です 。 メソッド 名 の ところ を 見る と 、 String Word 1 ( String str ) と なっ て い ます 。 引数 str を 受け取っ て 、 String 型 で 結果 を 返す メソッド だ という 意味 です 。 中の 処理 を 見る と 、 引数 str に 「 Java World 」 という 文字列 を くっつけ て 結果 を 返す という １ 行 です 。 return は 右 に ある データ （ 処理 の 結果 ） を 返す という 意味 です 。 Word 2 メソッド は 戻り値 を 返さ ない メソッド です 。 メソッド 名 に void Word 2 () と なっ て い ます 。 void は 戻り値 が ない という 意味 と 捉え て ください 。 中の 処理 を 見る と 、 「 Hello Java World 」 の 文字列 を 出力 する １ 行 です 。 そこで 、 main メソッド を 見 て ください 。 中の 処理 を 見る と 、 最初 は Word 1 の 引数 に 「 Hello 」 を セット し て 、 その 結果 を 出力 さ せる １ 行 です 。 Word 1 (" Hello ") のところ で 、 Word 1 メソッド が 動作 し て 、 その Word 1 メソッド の 結果 を 受け取っ て 、 結果的 に 「 Hello Java World 」 と 表示 さ れ ます 。 次 の 行 は Word 2 () な ので 、 Word 2 メソッド を 実行 し なさい と いう こと です 。 Word 2 メソッド は 「 Hello Java World 」 を 出力 さ れる もの でし た ね 。 結果的 に は 、 「 Hello Java World 」 が ２ 回 出力 する こと に なり ます 。 public class Modorichi { public static void main ( String [] args ) { System . out . println ( Word 1 (" Hello ")); Word 2 (); } static String Word 1 ( String str ){ return str + " Java World "; } static void Word 2 (){ System . out . println (" Hello Java World "); } } この 例 で は 、 戻り値 を 返す 方法 と 戻り値 を 返さ ない 方法 の ２つ を 示し まし た が 、 結果 は どちら も 同じ でし た ね 。 つまり 、 どちら を 使う か は プログラマ が 決める こと です 。 ただ 、 戻り値 を 返す メソッド の ほう が 、 「 Hello 」 という 文字列 を 変更 し やすい です よ ね 。 「 Bye 」 とか 「 Yes ！ 」 とか に し たい 場合 、 main メソッド の 引数 だけ 変えれ ば 済み ます 。 引数 で 文字列 を 変更 できる という こと は ユーザ に 決め させる こと が でき ます 。 つまり 、 柔軟 な 処理 に 対応 できる の が 戻り値 を 戻す メソッド だ という こと です 。 戻り値 を 他 の 例 で いう と 、 Excel など の 関数 と 考え て み て ください 。 = SUM ( 100 , 200 , 300 ) 上 は 、 SUM 関数 で 引数 が 100 と 200 と 300 です 。 この ３つ の 合計 は 600 です よ ね 。 この 時 の 戻り値 が 600 と なり ます 。 Java に 置き換える と SUM メソッド の 引数 に 100 と 200 と 300 を セット し た 場合 、 戻り値 は 600 と なる と 言え ます 。 
System . out し た もの は 上書き でき ない から 、 ・ 一度 地図 データ を 作成 し て 、 それに P を 加え て から まとめ て 表示 する ・ プレイヤー の 座標 の 時 は マップ に 表示 せ ず に 代わり に P を 表示 する の どちら か でしょ う ね 。 たぶん プログラム の 修正 が 少ない の は 後者 。 for ( int i = 0 ; i < 5 ; i ++){ for ( int j = 0 ; j < 7 ; j ++){ if ( i == 0 && j == 0 ){ のところ を for ( int i = 0 ; i < 5 ; i ++){ for ( int j = 0 ; j < 7 ; j ++){ if ( i == プレイヤー の y 座標 && j == プレイヤー の x 座標 ){ System . out . print (" P "); continue ; } if ( i == 0 && j == 0 ){ と する とか for ( int i = 0 ; i < 5 ; i ++){ for ( int j = 0 ; j < 7 ; j ++){ if (" P ". equals ( m [ i ][ j ])){ System . out . print (" P "); continue ; } if ( i == 0 && j == 0 ){ と する とか 
たぶん 勘違い です 。 編集 し た ファイル と コンパイル し た ファイル が 異なっ て いる の でしょ う 。 
レイアウト の 書き方 が 間違っ て ん だろ 。 
> ... エラー が 出 ます 。 だけ で は 、 具体 的 に 何 を やっ たら どう いう * エラー * に なっ た の か 、 他人 に は ちっとも わかり ませ ん が 。 。 。 (^_^;) ( 1 ) 質問 文 に ある コード を そのまま Piechart . java として ファイル 保存 。 ( 2 ) その Piechart . java に 、 以下 だけ 追記 。 /* < applet code =" Piechart . class " width =" 600 " height =" 400 "> < param name =" data " value =" 10 20 30 40 50 60 70 80 90 "> </ applet > */ ( 3 ) javac Piechart . java ( 4 ) appletviewer Piechart . java で 、 円グラフ は 表示 さ れ まし た よ 、 私 の 環境 で は 。 ( Windows10 , ubuntu Linux 。 どっち も JDK 8 ) 失礼 かも しれ ませ ん が 。 applet は 、 WWW ブラウザ 、 もしくは ( JDK に 含ま れ てる 開発者 ツール の ) appletviewer 上 で 動作 する もの 、 という こと 、 わかっ て ます か ？ http:// www . javadrive .jp / applet / そんな こと は 知っ てる 、 そういう レベル の エラー じゃ ない ... という 話 なら 、 具体 的 に 補足 し て ください 。 
unity って ゲームエンジン の です か ？ それ で あれ ば Java は 使え ない はず です 。 対応 が C# とか JavaScript とか です し 。 
ArrayList < Integer > body = new ArrayList <>(); for ( int i = 0 ; i <= 100 ; ++ i ) body . add ( i ); System . out . println (" Created an integer array body "); ArrayList < Integer > tail = new ArrayList <>(); for ( int i = 999 ; i >= 900 ; -- i ) tail . add ( i ); System . out . println (" Created an integer array tail "); body . addAll ( tail ); System . out . println (" Append tail to body , length = " + body . length ()); int count _ odd = body . stream (). filter ( i -> Integer . lowestOneBit ( i ) == 1 ). count (); System . out . println (" Count odd numbers : " + count _ odd ); 
・ if () 文 の 後 の 動作 記述 は 、 １ 行 で 終わる とき 、 {} を 省略 でき ます 。 ・ this . count this . item は 、 クラス 変数 です 。 プログラム 内 の どの ブロック や メソッド でも 有効 な 変数 です 。 クラス を 使わ ない 言語 の グローバル変数 に 相当 し ます 。 this . count = 0 ; count を 0 に 設定 し て い ます 。 return this . item item を 関数 の 戻り値 に 設定 し て い ます 。 http:// java . it - manual . com / method / class . html 
大量 の 投稿 、 全て 自作自演 の ＩＤ です ね 。 誤魔化し た つもり で なく て も 、 文章 で わかり ます 。 楽しい の か 知り ませ ん が 、 何 の 目的 でしょ う か 。 
Linux とか もしか し たら Mac で も a . out とか でき て ませ ん か ？ 「 ファイル 名 が ない 」 とか そういう エラー なら a . out で は 実行 でき ない と 思い ます 。 ./ a . out と 書け ば 実行 さ れ ませ ん か ？ ( 実行ファイル 名 は コンパイル し た ファイル 名 に 置き換え て ください ) これ は 、 セキュリティ 上 の 問題 で 、 カレントディレクトリ の ファイル を そのまま 実行 でき ない よう に し て ある から です 。 windows で は ファイル 名 のみ で 実行 でき て しまう ので 問題 に なっ たり し ます 。 実行 し て も 何 も 起き ない とか 、 実行 さ れ た うえ で エラー が 出る と か は 、 おそらく 書い た プログラム に 不具合 が ある ので 、 ソースコード を 修正 し て ください 。 
for ( int i = 0 ; i <= mo ji. length ; i ++) { ↓ for ( int i = 0 ; i < mo ji. length ; i ++) { mo ji. length は 3 な ん でしょ ？ で あれ ば 、 配列 インデックス は 0 ～ 2 . moji [ 3 ] は 範囲 外 です 。 例外 に さ れる の は 当然 。 
if ( this . driver . name != null ) じゃなくて if ( this . driver != null ) じゃ ない か な 。 driver 自体 が null な の だ から 、 その プロパティ name を 参照 しよ う と し た 場合 当然 エラー に なり ます 
main メソッド は 実行 開始 の メソッド で 、 Java の 場合 は 必ず この メソッド から 処理 が 始まり ます 。 factorial メソッド は 、 いわば 関数 みたい な もの で 、 １つ の 処理 を 行い ます 。 前半 と 後半 という こと で は なく 、 実行 する もの と その 実行 する 中身 を 分け て いる と 考え て ください 。 分割 する こと で 、 処理 を 切り分け られ て 、 メンテナンス （ 修正 ） が 容易 に なり ます 。 factorial メソッド は 、 int factorial ( int n ) と なっ て い ます よ ね 。 この メソッド は int 型 の 戻り値 を 返し なさい という 意味 です 。 main メソッド は 、 void main と なっ て い ます 。 void と は 値 を 返さ ない 意味 です 。 つまり 、 その メソッド の 中 で 処理 さ れ ます 。 return f は f に 格納 さ れ て いる 値 を 返し なさい という 意味 です 。 f = factorial ( 7 ) は 、 int factorial ( int n ) に 当てはめ ます 。 int factorial ( 7 ) と 考え て ください 。 （） の 中 は int 型 な ので 必ず 整数 に なり ます 。 そして 、 int factorial ( 7 ) と なっ て いる ので 、 結果 は int 型 で 返す こと に なり ます 。 （） の 中 は 引数 です 。 つまり 引数 として ７ という 整数 を 設定 し て いる こと に なり ます 。 要は 、 main メソッド の 中 は 、 factorial メソッド の 引数 に 7 を 設定 し た 結果 を ローカル 変数 ｆ に 代入 し て 、 その ローカル 変数 に 格納 さ れ た 結果 を 出力 し なさい と いう こと です 。 factorial メソッド は 、 引数 と なる 整数 の n の 値 を 元 に 、 その n の 値 に なる まで 、 1 ずつ 乗算 し た 結果 を 求め て 、 その 結果 を 返し なさい と なり ます 。 もう少し シンプル に 書く と 以下 の よう に なり ます 。 public class Factorial { public static void main ( String [] args ) { System . out . println ( factorial ( 7 )); } public static int factorial ( int n ){ int f = 1 ; for ( int i = 1 ; i <= n ; i ++){ f *= i ; } return f ; } } 繰り返す 回数 が 決まっ て いる の で あれ ば 、 for 文 を 使っ た 方 が 分かり やすい かも です 。 
こんばんは 。 簡単 に 拝見 し まし た 。 hide によって display : none が 設定 さ れ て いる img の 領域 の マウスオーバー が 発生 し て いる よう に 見え ます 。 何らかの 方法 で 、 elevateZoom プラグイン を 制御 し ない と なり ませ ん 。 zoomEnabled という 項目 で 制御 でき ない か 試す と 良い と 思い ます が 、 どうも うまく 行か ない ので 、 もしか する と 非表示 に 対応 し て い ない の かも 知れ ませ ん 。 ３ 日程 あまり 時間 が 取れ ない ため zoomEnabled を こっち で 上手く 設定 でき て い ない だけ な の か 判断 が ちょっと つか ない 状態 です 。 
- 3 % 2 は - 3 =( 2 *- 1 )- 1 な ので - 1 と なり ます 。 - 3 / 2 も - 3 =( 2 *- 1 )- 1 な ので - 1 です 。 蛇足 です が 3 /- 2 は - 3 =(- 2 *- 1 )+ 1 な ので - 1 と なり ます が 、 3 % - 2 は 3 =(- 2 *- 1 )+ 1 な ので 1 と なり ます 。 
Main クラス が 書い て ない から 、 こっち で 試せ ない 。 エスパー 回答 で いい なら 、 Donut クラス の コンストラクタ の 引数 「 Circle innner 」 が おかしい 。 「 Circle inner 」 に する 。 
単一 の 言語 で は 難しい です ね （ でき なく は ない ） 一番 あり き た りな 例 だ と サーバ は 、 HTML を 提供 し ます クライアントサイド は 、 HTML は データ を 描画 し 、 インタラクティブ な 動作 を 加味 し ます サーバ 側 が 送信 する HTML は 、 どの 言語 で 生成 さ れ て も かまい ませ ん 。 HTML に 内包 し た データ を ブラウザ で 描画 する 方法 として は Java script が 良い でしょ う 。 データ を 描画 する Java script ライブラリ は 、 多数 あり ます 。 つまり 、 動的 に 生成 さ れる ビュー を 動的 に 表現 する に は サーバー サイド の 言語 と 、 クライアントサイド の 知識 が 必用 です 。 手始め に 、 まず 、 データ の 羅列 が 表示 できる よう に し ましょ う 。 フォーマット は json が 良い でしょ う 。 これ が でき たら 、 サーバー サイド は ほぼ 完成 です 。 言語 は 問い ませ ん 。 その 次に 、 その データ を どの よう に 表示 する か を 考え 、 Java script で 実装 し ます 。 使える ライブラリ が ある と 楽 です 。 
. jar ファイル は アーカイブ ファイル で あっ て " 起動 " する もの で は ない 。 mod の 入れ 方 ぐらい 自分 で 調べろ 
動か ない 、 じゃ わからん よ 。 その 時 の Logcat の エラーメッセージ ぐらい 載せ て くれ 。 
Java3D という パッケージ を 別途 インストール する 必要 が あり そう です 。 http:// www . oracle . com / tech network / articles / javase / index - jsp - 138252 .... から ＤＬ し て インストール し て ください 。 インストール 場所 は どこ で も 良い の です が ここ で は C :\ Program files \ Java3D \ 1 . 5 . 1 に インストール する もの と し ます 。 コンパイル し たり 実行 する 際 に は C :\ Program files \ Java3D \ 1 . 5 . 1 \ lib に ある 新規 に インストール さ れ た 3つ の jar ファイル を クラスパス に 追加 し て やる 必要 が あり ます 。 コンパイル javac - classpath .;※※※※※※ UtilTimer . java 実行 java - classpath .;※※※※※※ UtilTimer といった 具合 に なり ます 。 ※※※※※※ に は 次 の 文字列 が 入り ます " C :\ Program files \ Java3D \ 1 . 5 . 1 \ j3 dcore . jar "; " C :\ Program files \ Java3D \ 1 . 5 . 1 \ j3 dutils . jar "; " C :\ Program files \ Java3D \ 1 . 5 . 1 \ vecmath . jar " 改行 し て ます が 、 一行 に まとめ て ください 。 (; セミコロン に は 注意 し て ください ) 
ネスト し た クラス に は 種類 が あっ て 、 その 一つ が インナー クラス です 。 詳しく は この 記事 を 読ん で ください 。 http:// www . atmarkit . co.jp / ait / articles / 1007 / 27 / news 103 . html 
これ は コンパイル に 使っ た Java の バージョン が その クラス を 動かそ う と し て いる Java の バージョン より も 新しい 場合 に 出る エラー です 。 たとえば JDK 8 で コンパイル し た クラス を JD K6 で 動かそ う と する と 出 ます 。 古い Java で は それ より も 新しい Java で コンパイル し た クラス を 動かす こと は 出来 ませ ん 。 Eclipse 上 で の プロジェクト で 利用 し て いる JDK の バージョン が 、 Tomcat を 動かし て いる JDK の バージョン より も 上 に なっ て いる ため と 思わ れ ます 。 プロジェクト の プロパティ の Java の 準拠 レベル の バージョン を 下げ 、 ビルド パス の ところ に ある JDK の バージョン も さげる 、 または Tomcat を 起動 し て いる JDK の バージョン を 上げる で 解決 する と 思い ます 。 という か 、 Tomcat が 古 すぎ で は ない でしょ う か 。 Tomcat 8 なら ば 問題 なかっ た と 思い ます 。 
ngongoo 99 さん 台形 2048 等分 シンプソン 32 等分 で 同じ 精度 に なる よう です 。 台形 2 0 . 336260914590340 4 0 . 340081844523358 8 0 . 341029515718445 16 0 . 341265969275456 32 0 . 341325053777239 64 0 . 341339823099202 128 0 . 341343515317005 256 0 . 341344438364414 512 0 . 341344669125826 1024 0 . 341344726816152 2048 0 . 341344741238732 ( 2048 ) 4096 0 . 341344744844375 8192 0 . 341344745745789 シンプソン 2 0 . 341529051973998 4 0 . 341355487834363 8 0 . 341345406116808 16 0 . 341344787127793 32 0 . 341344748611166 ( 32 ) 64 0 . 341344746206523 128 0 . 341344746056274 256 0 . 341344746046884 ??? 
GSON とか Jackson とか JSONIC とか 、 いろいろ な ライブラリ は あり ます が 、 そもそも JSON から 何 に 変換 し たい の ？ クラス に 変換 する の で あれ ば GSON .fr omJson あたり が 理解 し やすい と は 思う けど 。 
とりあえず 構文 エラー だけ 言う と 、 閉じ カッコ } が １つ 多い です 。 あと 、 構文 エラー で は ありません が 、 ループ が 回る 範囲 が １つ 多い と 思い ます 。 ちなみに main メソッド の 中 で その コード を 修正 し た もの を 動かし て 見 まし た が 、 表示 が 潰れ た ので スペース を 挟む 必要 が ある と 思い ます 。 
配列 へ 格納 する 値 に 規則 性 が ある か 、 が ポイント に なり ます 。 int [] array = { 1 , 2 , 3 , ( 略 ), 1000 }; なら ば 、 int [] array = new int [ 1000 ]; for ( int i = 0 ; i < 1000 ; i ++) array [ i ] = i + 1 ; の よう に for 文 を 使っ て かけ ます 。 
a = { 1 , 2 , 3 } という の は ， 実際 に a に { 1 , 2 , 3 } を 入れ て いる わけ で は なく て ， 下記 の よう に 1 , 2 , 3 を 順番 に メモリ 上 に 並べ て ， 先頭 の 番地 を a が 差し なさい という 意味 です ． メモリ 番地 ： 値 0 x 00 ： 1 ← a 0 x 01 ： 2 0 x 02 ： 3 同様 に b = a と し た とき に は ， b に 新た に { 1 , 2 , 3 } が 入っ た 別 の メモリ 番地 （ 例えば 0 x 03 , 0 x 04 , 0 x 05 ） を 渡す の で は なく て ， b に a と 同じ 場所 ， すなわち 0 x 00 を 差し なさい という 命令 です ． つまり ， 以下 の よう な 状態 に なり ます メモリ 番地 ： 値 0 x 00 ： 1 ← a , b も ここ を 指す 0 x 01 ： 2 0 x 02 ： 3 で ， b [ 0 ] = 100 ; という 命令 は b の 差し て いる 場所 から 0 番目 の アドレス （ 0 x 00 番地 ） に 100 を 代入 し なさい という 意味 です ． ここ で ， a と b は 同じ 場所 を 指し て いる ので ， b [ 0 ] である 0 x 00 番地 を 書き換えれ ば ， そこ は a [ 0 ] で も ある ので ， a [ 0 ] も 100 に 変わり ます ． 
フリップフロップ 。 ちなみに 日本 で 言う ビーチサンダル が 英語 だ と これ じゃ なかっ た っけ 。 それ は ともかく 。 「 仕組み 」 を 知り たい の ? それとも 出力 を 知り たい の ? D - FF 回路 で 検索 すれ ば 仕組み と いう か 回路 は わかる だろ う し D - FF 真理値表 で 検索 すれ ば 入力 に対する 出力 パターン は わかる 。 どの 辺 が わから ない の でしょ う ? 
http:// jp . iobit . com / free / io u. html これ は どうでしょう か ？ 強制 アンインストール を 行う ソフト です 。 でも 、 インストール 時 に 余計 な ソフト が インストール さ れ て しまう 上 、 あまり 評価 も 良く ない ソフト な ので 、 奥の手 として 使っ た ほう が 良い です 。 
System . currentTimeMillis () は 現在 時刻 を 取得 する メソッド な ので 、 パソコン の 時刻 情報 に 依存 し ます 。 経過 時間 を 測定 し たい 場合 は System . nanoTime () を 使用 し て ください 。 
Chrome の 中 に … と 、 言う か 、 PC の 中 に に インストール さ れ てる か 、 、 では ？ 確か 、 adobe の 公式サイト を 開い たら 、 ( インストール さ れ てる と 仮定 し て )。 最新 の ソフト か 確認 する 欄 が あっ た と 記憶 し て ます 。 
無駄 に メモリ 領域 を 確保 すれ ば 処理 時間 が 増加 し ます が 、 メモリ 使用 量 を 抑える 代わり に ディスク アクセス が 頻発 する よう で は 逆効果 です 。 が ばーっと メモリ 領域 を 確保 し た 方 が 速い 場合 も ある という こと 。 
最初 の new Hero () の 中 で new mon () が 呼ば れ て 、 その new mon () の 中 で new Hero () が 呼ば れ て 、 その new Hero () の 中 で new mon () が 呼ば れ て 、 … と 無限ループ が 発生 し て い ます 。 Hero クラス で new mon () し たり 、 mon クラス で new Hero () し て は いけ ませ ん 。 クラス の 関係 を 見直し ましょ う 。 
そんな もん です 。 上流 は マネジメント 能力 さえ あれ ば 、 実務 を あまり やら なく て 良い の で 楽 です ね 。 IT 業界 は 仕事 の 難易度 と 年収 が 反比例 し ます 。 （ マネジメント 能力 の ある 人 にとって は ） 
1 行 目 を 2 で 割れ ば 1 2 1 4 に なっ て 左 の 3 列 が 2 行 目 と 同じ に なり ます 。 つまり 正則 な 方程式 で は ありません から ピボット が どうのこうの という よう な 話 で は あり ませ ん 。 
リファクタリング でき て ない の で は ？ 問題 の クラス の 外部 に 古い 名前 で クラス を 参照 し て いる プログラム が ある ん じゃ ない でしょ う か 
画像 を 止め て 、 テキスト で 記し て 下さい 。 
C言語 、 気に入り まし た か ？ （ １ ） ＹＥＳ の 場合 C++ に 進ん で ください 。 きっと うまく 行き ます よ 。 （ ２ ） ＮＯ の 場合 Java （ か 、 C# ） に 進ん で ください 。 ものすごく ラク に なり ます よ 。 もう 、 C言語 に 戻る 必要 ありません から ね 。 《 備考 》 C++ に 進む と 失敗 する 確率 が 高い です 。 ９ 割 か なぁ 。 １ ０ 割 ？ まぁ 、 わかり ませ ん けれども 、 ともかく 挫折 する 人が 多い の です よ 。 結局 、 Java なり C# なり に 逃げる 形 に なっ たり し て 。 C++ やっ て も 無駄 じゃ ない でしょ う けれども 、 初め から Java 、 C# を やっ てれ ば その 分 もっと 勉強 が 進ん で い た だろ う に … 。 世の中 は 不思議 な もの で 、 それでも 敢えて C++ を やり たい っていう 人が 居 ます 。 なら 、 C++ を やれ ば 良い の です よ 。 ただし 、 注意 点 が あり ます 。 C 言語 で 普通 の 書き方 が C++ で は 悪い 書き方 です 。 C言語 みたい に C++ で 書い て たら 酷い わ 。 それ じゃ まず いって 。 しかしながら 始め て しばらく は C言語 みたい な C++ に なっ て しまう 。 これ は 避け られ ない と 思い ます 。 ただ 、 それ が 悪い 書き方 な ん だって いう こと を 念頭 に 置い て です ね 、 徐々に 良い 形 に 変え て いっ て ください 。 で 、 これ 以上 C言語 を やる と 悪い 癖 が 付い て しまう 恐れ が あり ます ので 、 なるべく 早め に 卒業 する の が 望ましい ですよ。 やり 過ぎ ない よう に ね 。 Java や C# に 移る 場合 も 同じく 。 C言語 の クセ っていう の は 酷い 。 非常 に まずい もの と なり ます 。 ただ 、 Java とか C# とか って 言語 が 優しい ので そういった 不適切 な やり方 を さ せ ない よう エラー を 出す なり し て 諭し て くれる の です よ 。 C++ は 、 そういう こと しません 。 悪い 書き方 を し て も そのまま。 まるっきり C言語 の 世界 に なっ て しまい ます 。 だから 余計 に 困る ん です よ ね 。 そこ の ところ 、 ご 注意 を 。 
パス に 2 バイト 文字 が 入っ て いる から で は あり ませ ん か ？ 
java で 記述 する 方法 が 考え られ ます 。 例 ） Image Processing demo http:// rsb . info . ni h. gov / ij / plugins / download / IP _ Demo . java 自分 で 書け ない ん だっ たら 、 委託 する ん です か ね 。 http:// www . lancers .jp 
サーブレット や jsp の 動作 の 仕組み を 知っ て いれ ば 、 その 応用 です 。 一般 的 な 書籍 で も 、 環境 構築 について 書か れ て い ます ので 、 そこ から 読み解い て 応用 できる スキル が 必要 です 。 技術 と は 応用 でき て こそ の もの です から 、 そのもの ズバリ を 探さ ず に 、 「 という こと は 、 こういう こと でしょ 」 と 推測 し て 試し て 身 に つけ て 欲しい もの です 。 基本 は java と tomcat の セットアップ と アプリケーション の デプロイ に なり ます 。 
NoSuchElementException が 発生 する コード です ね 。 原因 は scanner . hasNext () の チェック の 後 、 scanner . nextInt () を ２ 回 呼ん で いる から です 。 入力 さ れ た 整数 は i に 格納 し て いる の です から 、 se is u. add ( i ); sum += scanner . nextInt (); cun ++; は 、 se is u. add ( i ); sum += i ; cun ++; と すれ ば いい の で は ない か と 思い ます 。 また 、 最後 の System . out . println (" 合計 は "+ sum / cun ); は 、 この まま です と 整数 解 に なり ます ので 、 cun の 宣言 を double cun = 0 ; と する か 、 キャスト 演算子 を 使用 し て System . out . println (" 合計 は "+ sum /( double ) cun ); れ ば 、 少数 も 表示 さ れる よう に なり ます 。 なお 、 cun は 宣言 し なく て も 入力 さ れ た 整数 は ArrayList < Integer > seisu が 保持 し て い ます ので 、 seisu .s ize () で 代用 でき ます 。 上記 修正 だけ で 動作 し ます が 、 私 の 方 で 少し だけ リライト し て み まし た 。 参考 に どうぞ 。 while ( scanner . hasNext ()) { // 入力 さ れ た 数値 を 記憶 する se is u. add ( scanner . nextInt ()); } int sum = 0 ;// 合計 値 System . out . println (" 入力 さ れ た 数字 は 、 "); for ( int i : seisu ) { // 入力 さ れ た 数値 を 表示 する System . out . println ( i ); sum += i ;// 入力 さ れ た 数値 を 合算 する } System . out . println (" 合計 は "+ sum ); System . out . println (" 合計 は "+ sum /( double ) seisu .s ize ()); 
あなた の いう > ¥（ 半角 円 マーク ） という の は 、 実際 に は どっち な ん だろ ？ (^_^; 円 記号 文字 は やっかい な ヤツ で 、 見た目 は 見分け つ か ない けど 、 「 二 種類 」 存在 する 。 Yen Sign 問題 https :// ja . wikipedia . org / wiki /% E 5 % 86 % 86 % E 8 % A8 % 98 % E 5 % 8 F % B7 # Unicode . E ... Java ( だけ じゃ ない けど ...) で の > スケープ シーケンス ？ や ユニコード ？ に 影響 する 特別 な 文字 は 、 「 0 x5 C （ バックスラッシュ ） 」 の 方 。 ＃ 日本 の PC だ と 、 これ も \ と 表示 さ れる こと が 大半 な ので 、 ＃ プログラマ で も 「 えん 」 と のみ 意識 し てる 人が 多い みたい だ けど 。 。 。 先行 回答 は 、 すべて あなた の 円 を バックスラッシュ という 前提 で 解釈 し てる と 思う が 、 実際 に そう な の か 、 疑問 に 思い まし た 。 もし そう なら String str = "¥ 8000 "; は コンパイル エラー に なっ てる はず です 。 \ 8 など という エスケープ シーケンス は ありません から 。 けれど 、 あなた の 質問 文 コード の String str = "¥ 8000 "; を 、 そのまま コピペ し て も 、 私 は コンパイル エラー に なり ませ ん でし た 。 バックスラッシュ じゃ ない 円 に 見え ます 。 
Java じゃなくて Java script じゃ ね ？ JavaScript の 10 行 目 ratio : 1 , を ratio : 2 , に 変更 する 。 
理解 する に は Eclipse など を 使っ て 、 step 実行 という の を する と いい です 。 あと は 、 println など で 、 途中 の i や sum の 変化 を 出力 し て 「 処理 を 追う 」 の も 有効 です 。 まず 、 sum += i は 、 古い sum に i を 足し た 結果 を 新しく sum に 代入 する という 意味 です 。 次に 、 for 文 の 周り の 文 は 、 この 数字 の よう な 順番 で 実行 さ れ ます 。 1 ; for ( 2 ; 3 ; 5 ){ 4 ; } 6 と なっ てる と 、 1-2-3 -( 4 - 5 - 3 )- 以下 453 を 繰り返し て -( 4 - 5 - 3 )- 6 の よう に 実行 さ れ ます 。 「 =>」 は 式 で は なく て 「 左側 の 結果 」 という 意味 で 書い てる だけ です 。 sum = 0 ; i = 1 i <= 10 ? i は 1 => Yes sum += i : i は 1 , sum は 0 な ので 1 + 0 => 新しい sum の 値 は 1 i ++: i は 1 な ので 1 + 1 => i = 2 i <= 10 ? i は 2 => Yes sum += i : i は 2 , sum は 1 な ので 2+1 => sum = 3 i ++: i は 2 な ので 2+1 => i = 3 i <= 10 ? i は 3 => Yes ( で i が 9 に なる まで 省略 )... ここ まで 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 => sum = 45 ( これ が 分から ない なら 、 全部 書き出し て みる ) i ++: i は 9 な ので 9 + 1 => i = 10 i <= 10 ? i は 10 => Yes sum += i : i は 10 , sum は 45 な ので 10 + 45 => sum = 55 i ++: i は 10 な ので 10+1 > i = 11 i <= 10 ? i は 11 => No : ※ ここ で for 文 を 終了 する sum が 最後 に 代入 さ れ た の は 55 だっ た ので 、 この とき は 55 。 纏める と i , sum 1 , 1 2 , 3 3 , 6 4 , 10 5 , 15 6 , 21 7 , 28 8 , 36 9 , 45 10 , 55 11 , 55 ( for を 抜け た ので 11 は 足さ れ ない 。 終わり ) 
OS から 見 た CPU使用率 や ディスク IO は 、 sar や vmstat の 結果 を ログ に 取って 解析 する の が 良い か と 思い ます 。 これ は linux の トピック と し た 方 が より 的確 な 回答 が 得 られる かも しれ ませ ん 。 メモリ 使用 率 に関して です が 、 性能 測定 項目 に ヒープ 使用 量 だけ で なく GC による 平均 停止 時間 も 考慮 さ れる と 良い と 思い ます 。 こちら の 方 は 、 Webサーバ の GC ログ を 負荷 テスト 後 に GCViewer で 解析 する か 、 負荷 テスト 実行 時 に Jconsole や visualvm で 監視 ・ 解析 方法 が あり ます 。 解析 ツール で グラフ まで 描画 さ れ ます し 、 データ を 保存 し Excel で 加工 する こと も でき ます 。 解析 ツール の 使い方 は 、 以下 の URL を 参考 に し て み て ください 。 < http:// x1 . inkenkun . com / archives / 780 > 
変数 の スコープ です ね 。 変数 の 有効 範囲 は 、 宣言 し て から ブロック が 終わる まで です 。 class sample 1 { public static void main ( String [] args ) { input in pu t_t est = new input (); try { String str = in pu t_t est . get _ string (); // ここ で str は 消滅 する } catch ( IOException e ){ System . out . println (" input error "); } System . out . println ( str );// 消滅 し た ため エラー } } だから 事前 に input in pu t_t est = new input (); String str = null ; try { str = in pu t_t est . get _ string (); // 消滅 し ない } の よう に すれ ば 大丈夫 。 
AppCleaner の よう な ソフト を 利用 し て 、 JaxoDraw を 完全 に 削除 し 、 再度 、 JaxoDraw を インストール し て み たら 如何 でしょ う か 。 
テスト と は 何 の テスト でしょ う か ？ さすが に これ だけ の 情報 で は 何 も 答え られ ませ ん よ 。 
System . out . println ( m ); で 、 配列 を 無理やり 出力 しよ う と し て いる から でしょ う 
JDK 8 を 使用 し て ください 。 公式 の Android Developers の サイト で も システム 要件 として JDK 8 を 明確 に 掲げ て い ます 。 JDK 7 は 開発 が かなり 前 に 終了 し て おり 、 利用 は 好ましく あり ませ ん 。 Androidアプリ を コンパイル する の に 必要 な Java の バージョン は API レベル によって 異なり 、 API 18 （ Android 4.3 ） 以前 は Java 6 準拠 、 API 19 （ Android 4.4 ） から API 23 （ Android 6.0 ） まで は Java 7 準拠 で の コンパイル が 必要 です が 、 Java の コンパイラー に は 過去 の バージョン に 準拠 し た コンパイル を する ため の オプション が あり 、 Android Studio が それ を 自動的 に 付与 し て くれる ので 、 ユーザー は 特に 考慮 する 必要 は あり ませ ん 。 もちろん 、 Java 7 準拠 で コンパイル する という こと は 、 Java 8 固有 の 機能 は 利用 でき ませ ん 。 それから 、 Android Studio 2.0 リリース 後 に 一時的 に システム 要件 の 表示 が JDK 7 に なっ て い た の は 、 Android Developers ページ の 多言語 対応 の 不備 による もの で 、 表示 言語 に 日本語 を 選択 し て いる と ページ が 丸々 古い 内容 に なっ て い た ため です 。 英語 と スペイン語 のみ 正しく 表示 さ れ て おり 、 これら で は この間 も ずっと JDK 8 が 要件 に なっ て い まし た 。 4月 に 東京 で 開催 さ れ た Google Developer Summit で も この 件 は 指摘 さ れ 、 Google 日本 の 担当者 も 修正 を 約束 し て い た よう です が 、 どうも 日本語化 は すぐ に は でき ない よう で 、 現状 は 日本語 を 選択 し て も （ 元々 正しく 表示 さ れ て い た ） 英語版 の 内容 を 丸々 表示 する こと で 「 逃げ て いる 」 よう です ね 。 
xml っていう の は activity _ main . xml とか の こと です か 。 それ は レイアウトファイル と 言っ て Android アプリ の デザイン の 設定ファイル です 。 プログラム は Java です が 、 すべて を Java で 記述 する の は 可能 です が 、 見やすく ない ので xml を 使う の です 。 でも 実際 に は Android Studio で は design と text という タブ が ある の です が 、 Design の 方 の タブ を 教 て オブジェクト を ドラッグ する だけ で 配置 でき ます 。 ちょっと 疑問 の ところ を 私 が qiita に 記事 で 書い て み まし た 。 感想 など ここ も 教え て くれ など あっ たら 書い て ください ！ http:// qiita . com / NoriakiOshita / items / 0 bc 54430438 cf 56 a9 e3 9 
http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1415918543 ... に 書い た コード を メソッド に し て 、 while ( line = br . readLine ()){ メソッド ( line .s plit (",")); } で １ 行 ごと に 繰り返す だけ で でき ます 。 最初 から 、 そういう 想定 で 回答 し て ます ので 。 
http:// www . javadrive .jp / start / array / こういう 所 を よく 読ん で 自分 で やっ て みろ よ 。 習うより慣れろ 。 
配列 の 意味 は 、 ある もの を 箱 に 入れ て 番号 付け て 管理 する と 、 何かと 便利 だ よ ね 。 という もの です 。 例えば マンション 。 あなた が いま 、 意味 が わから ない 、 と 言っ てる の は 平屋 建て の マンション 。 1号 室 に 住ん でる 人 A さん 2号 室 に 住ん でる 人 B さん 3号 室 に 住ん でる 人 C さん これ が 配列 。 A さん に 会いたかった ら 、 1号 室 に 尋ね なきゃ ダメ だ し 、 C さん に 荷物 を 届け たかっ たら 、 3号 室 に 荷物 を 届け ない と ね 。 1号 室 を 算数 の 部屋 、 2号 室 を 国語 の 部屋 、 3号 室 を 理科 の 部屋 、 と 決めれ ば 、 ar ray ［ 1 ］ ＝ 20 array ［ 2 ］ ＝ 30 array ［ 3 ］ ＝ 40 として 計算 し て も いい し 、 言語 によって は 、 部屋 に 名前 を つけ られ たり する ので array ［' sansu '］＝ 20 なんて 風 に 書く こと も できる よ 。 
1 . 0 ～ 100 と 書く と 、 double 型 1 . 0 と int 型 100 が 同居 し て いる 可能 用 に なっ て いる ので １ を 全角 で 書く など 対処 す べき でしょ う 。 また 、 0 ～ 100 という の が いくつ ずつ 増加 する の が 明記 さ れ て い ない ので 、 0 ～ 100 の すべて の 整数 など と 書く と よい でしょ う 。 １ ・ ２ ・ ArrayList の 宣言 ArrayList < Integer > body = new ArrayList < Integer >(); ・ 要素 の 追加 for ( int n = 0 ; n <= 100 ; n ++) body . add ( n ); ３ ・ 要素 の 移動 追加 body . addAll ( tail ); ４ ・ 奇数 を 求める if ( body . get ( n ) % 2 != 0 ) ５ ・ 要素 数 を 求める body .s ize (); ・ 初期 化 する body . clear (); > 以下 の プログラム を 出力 せよ っていう 文 だ と 、 これ で 作っ た プログラム を String 型 に 格納 し たり し て print で 出力 する ん です か ？ 
class View 1 { .... } class Tab ( n - 1 ) extends SuperTab { .... } class Tab ( n ) extends SuperTab { .... } どういう 機能 を 実現 し たい の か わかり ませ ん が 、 これ で いい と 思い ます 。 Tab 1 ~ n が 完全 に 同値 なら 、 オブジェクト の 複製 で 何とか なる と は 思い ます が 。 //--- Tab 宣言 側 class Tab { int id ; // 識別番号 public Tab ( int id ){ this . id = id } } //--- Tab 利用 側 ( import java . util .*;// 必須 ) ArrayList < Tab > tabList = new ArrayList < Tab >(); for ( int n = 0 ; n < 5 , n ++) tabList . add ( new Tab ( n )); System . out . println ( tabList . get ( 3 ). id );//[ 3 ] これ で 、 Tab の id だけ を 変え た 4つ の タブ を 作る こと が でき ます 。 
C の プログラム に は main 関数 が 必要 です 。 
最新 の 技術 は 、 ネットワーク 等 で いう なら ば 、 ベンダー の 動き が 関係 し て いる こと は 多い と 思い ます 。 その よう な 製品 が でる から 、 それ を 利用 する 企業 が あり 、 それ を 販売 する こと によって 、 一般に その 技術 が ひろまる 。 この 工程 は 、 実は 10年 くらい かかっ て い たり も する と 思い ます 。 ベンダー の 製品 が でる それ を 採用 する 企業 が でる その サービス を 開始 する ため に 、 10年前 から プロジェクト を 組ん で いる と かも あり ます 。 な ので 、 仕事 で も 、 10年前 に すでに 着手 し た こと が ある 内容 が 今 に なっ て さわが れ て い たり し て 、 求人 で も 、 それ に関する プロジェクト が あちこち で はじまっ て いる せい で 、 その 技術 に関する 求人 が 増え たり 、 それら に関する 構築 業務 が 増え たり また 、 それ が おちつく と 、 今度 は 、 ユーザー レベル で 話題 に なり はじめ （ 結局 、 構築 し 終わっ た ので 、 ユーザー が 実際 に 使い だし た という こと です が ） あれ ？ 今 やっと ユーザー レベル に き た の か ？ と びっくり する こと も あり ます 。 ただ 、 ネットワーク の 技術 改革 は 、 現在 の ところ だ と 、 アナログ回線 から 光回線 へ の 変更 という 大きな 変換 時期 を 迎え た ばかり な ので 、 今後 は 、 その 変化 という の は 、 ゆるやか に なるか と は 思い ます 。 その 反面 、 うわ ずみ （ システム や プログラム ） の 構成 の 斬新 な もの が 、 今後 は 注目 さ れる の で は ない でしょ う か ？ 物理 上 の 変化 は おちつい て しまっ た ので 、 今度 は 、 それ を 利用 し た 論理 上 の 変化 ＝ プログラム 方面 が また 活発 化 し そう に も 思い ます 。 
「 マインクラフト forge 1 . 7 . 10 」 を やり たい と あり ます が 、 forge だけ を 入れ て 遊び たい わけ で は 無い と 思っ て い ます が ちがい ます か ？ MOD を 入れ て 遊び たい の で は ない でしょ う か ？ クラッシュ の 原因 が MOD の 競合 で あっ たり 、 MOD に は それぞれ forge の バージョン が 合っ て なけれ ば クラッシュ し たり する 場合 が あり ます 。 詳しく PC の スペック や 、 何 を し た の か 詳しく 書く と 回答 も スムーズ に できる と 思い ます 。 
基本 構造 で ある 構造化プログラミング は ほぼ すべて の プログラム 言語 に 共通 さ れ ます 。 順次 、 分岐 、 反復 の 三つ を 使っ て プログラム を 記述 し ます 。 有名 な c言語 です と 、 それぞれ 順次 [ 上 から 下 へ ]、 分岐 [ if 分 や 三 項 演算 ]、 反復 [ while や for ] という 感じ で 表現 さ れ て い ます 。 多く の プログラム 言語 に 共通 し ます 。 また 、 基本 的 な アルゴリズム は 覚え て おき たい です ね 。 最大 値 や 最小 値 を 求める 、 ソート する 、 順位 づけ など いろいろ あり ます が 、 とっさ に 作れる 程度 に 覚え て おい て 損 は ない です 。 あと 、 共通 する もの で は ありません が 、 開発 環境 の 作り方 も 覚え て おく と いい でしょ う 。 インストール 後 に 環境変数 に コンパイラ の パス を 通し たり する の は 特に 一般的 だ と 思い ます 。 また 、 言語 ごと の 予約語 を 捉え て 色 を 変え て 表示 し て くれる テキストエディタ など も あり 、 TeraPad ( シンプル ) や サクラエディタ ( 複雑 だ けど 高 機能 ) など が おすすめ です 。 メモ帳 に 比べ て スペル ミス に 気づき やすい です し 、 コード の 見直し も し やすい です 。 
new File ( String pathname ) で フォルダ を 取得 する の は 初回 だけ に し て 、 子 フォルダ は File [] File # listFiles () で 取得 、 親 フォルダ は File File # getParentFile () で 取得 し た 方 が よかろ う と 思い ます 。 
JAVA を DL し て から インスト し た ？ DL し た ファイル を W クリ し て インスト 実行 し なけれ ば 、 認証 さ れ ない よ 。 
「 java で forge を 開く 」 の 意味 が 分からん の だ が 。 MOD を 導入 し たい ん だっ たら そもそも 開く 必要 全く ない が 。 ちがう の ？ 
tcp - ip が 無効 とか って オチ は あり ませ ん か ？ 
その 前 に 、 JAVA の インスト し た の かい ？ 質問 が 昨日 から 重複 し てる が 、 解決 し たい なら 、 同じ 質問 を せ ず に 、 解決 策 を 質疑 すれ ば いいもの を 。 SS の よう な インスト 画面 から JAVA 入れ た かい ？ 勘違い し て いる 人 多い けど 、 JAVA を DL する だけ で は 機能 し て ない ん だ よ 。 
サンプル で は 、 HTML ソース を ダウンロード し て 、 それ を 解析 し て 画像 URL を 抽出 し て い ます 。 それ に対し 、 IE を 使う 場合 は 、 目的 の タグ を 取得 し て 値 を 得る という 方法 が 多い です 。 その 為 、 つまみ食い で 変更 し て も 、 上手く 動く と は 限り ませ ん 。 それでも 変更 する と すれ ば 、 以下 の よう に なる と 思い ます ( 変数 名 は 私 が よく 使う もの な ので 、 適宜 、 変更 し て ください )。 Http . Open " GET ", url . Value , False Http .S end buf = Http . Response Text ↓ ie . Navigate " URL " Do DoEvents Loop Until ( ie . Busy = False ) And ( ie . Ready State = 4 ) buf = ie . document . getElementsByTagName (" html ")( 0 ). outerHTML 
> 1日 ずつ ... なら 、 set じゃなくて add が 向い てる ん じゃ ない か な 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / java / util / GregorianCal ... cal . add ( Calendar . DATE , 1 ); とか cal . add ( Calendar . DATE , - 1 ); み たく 。 http:// www . techscore . com / tech / Java / JavaSE / Utility / 8 / 
全 スレッド の 処理 が 終了 し た タイミング で JVM が 終了 し ます 。 デーモン スレッド は 全 ユーザー スレッド が 終了 する と 自動的 に 終了 し ます 。 デーモン スレッド 単独 で は 生存 意義 が ない 為 です 。 
あなた の > 偶数 は 10 8 6 4 2 と 表示 さ れ て しまい ます と なる 、 ソースコード を 貼っ て ください 。 
setBackground の ドキュメント に よる と http:// docs . oracle . com / javase / jp / 8 / docs / api / javax / swing / JComponent .... > この プロパティ が 受け付け られる か どう か は Look & Feel しだい で あり 、 無視 さ れる こと も あり ます 。 と の こと です ので 、 現在 の 環境 で は setBackground が 無視 さ れる Look & Feel に なっ て いる の でしょ う 。 もしかして Mac で は 、 setBackground が 無視 さ れる Look & Feel が 標準 に なっ て いる の でしょ う か ？ 現在 の Look & Feel の 確認 と 変更 の ため に 、 以下 の コード を 実行 し て み まし た 。 質問 内 の コード に 何 行 か 追加 し まし た 。 結果 は ウチ の 環境 で は 、 添付 画像 の よう に なり まし た 。 ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ コード ここ から ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ import java . awt . BorderLayout ; import java . awt . Color ; import java . awt . Container ; import java . awt . Dimension ; import javax .s wing . JButton ; import javax .s wing . JFrame ; import javax .s wing . JLabel ; import javax .s wing . JPanel ; import javax .s wing .S wingUtilities ; import javax .s wing . UIManager ; import javax .s wing . U n sup port edLookAndFeelException ; import javax .s wing . plaf . metal . MetalLookAndFeel ; public class yoyo extends JFrame { static yoyo frame ; JButton bottun = new JButton (" yoyo "); JPanel p = new JPanel (); public static void main ( String [] args ) { frame = new yoyo (" タイトル "); frame .s etVisible ( true ); } yoyo ( String title ) { setTitle ( title ); setBounds ( 100 , 100 , 300 , 250 ); setDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); bottun .s etPreferredSize ( new Dimension ( 100 , 50 )); bottun .s etOpaque ( true ); bottun .s etForeground ( Color . blue ); bottun .s etBackground ( Color . RED ); p . add ( bottun ); Container content Pane = getContentPane (); contentPane . add ( p , BorderLayout . CENTER ); // ここ から 追加 // 現在 の Look & Feel の 名前 を 表示 する JLabel l 1 = new JLabel ( UIManager . getLookAndFeel (). getName ()); p . add ( l 1 ); // Look & Feel を Metal に 変更 する try { UIManager .s etLookAndFeel ( new MetalLookAndFeel ()); } catch ( U n sup port edLookAndFeelException e ) { e . printStackTrace (); } SwingUtilities . updateComponentTreeUI ( bottun ); // 変更 後 の Look & Feel の 名前 を 表示 する JLabel l 2 = new JLabel ( UIManager . getLookAndFeel (). getName ()); p . add ( l 2 ); } } ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ コード ここ まで ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ ＝ Look & Feel について は 、 この あたり を 参照 し て み て ください 。 Java プログラミング ／ Java プログラミング 関連 情報 ルックアンドフィール で 遊ぼ う ！ http:// allabout . co.jp / gm / gc / 80696 / 
アプリ を 開発 しよ う と する もの が 、 自分 で 調べよ う と は し ない で ここ で 聞い て いる よう で は 不安 です 。 アプリ の 開発 は ありとあらゆる こと を 自分 で 調べ て 行く 能力 が 無い と 難しい です 。 まずは 姿勢 の 問題 。 独学 で Java を 勉強 し て い たら 多分 、 一 日 で 開発 を 諦める と 思い ます 。 まずは Android studio を インストール し 、 Android 端末 の エミュレータ を 定義 し て 立ち 上げ て 遊ん で みる こと から 始める と いい でしょ う 。 次に メッセージ を 表示 する だけ の アプリ の 雛形 を 手 に 入れ 、 Android studio に 登録 し エミュレータ に 入れ て 動かし て み ましょ う 。 それから 実機 に も インストール し て 動かし て 、 まずは 全体 の 流れ を 把握 する ところ から 始め たら いい と 思い ます 。 その後 は その アプリ に 少し の 機能 追加 を し て み たり し 、 Java を 部分的 に 勉強 し ます 。 体系 的 な 勉強 は それ 以降 が いい と 思い ます よ 。 私 も PC の 無い 時代 でし た が 、 高校生 の 時 に プログラミング を 始め て 、 在学 中 に 一番 簡単 な もの です が 、 国家試験 に 合格 する まで に 至り まし た 。 今 で は プログラミング 出来る 言語 も 10 は 下り ませ ん 。 その 頃 の 経験 から 言う と 、 始め に 言葉 あり き です ね 。 IT用語 辞典 を 読み 尽くす と いい でしょ う 。 初め は なるべく 単語 の 少ない もの が いい です 。 それだけ 重要 語 が 選択 さ れ て いる という こと です から 。 
スケジューリング で 貪欲法 が 使わ れる の は 、 割当 数 を 最大 に し たい 場合 です 。 利用 時間 を 最大 に [＝ 空き 時間 を 最小 に ] し たい 場合 に は 、 全て の 組み合わせ [ 2 の 計画 数   乗 ] を 総 当たり で 試す しか   無い か と 。 // code pa d.o rg / baxzznGw # # define   N   6 int   [ N ][ 2 ]={    { 1 ,   3 },//_ aaa _______    { 2 ,   5 },//__ bbbb _____    { 4 ,   7 },//____ cccc ___    { 6 ,   9 },//______ dddd _    { 8 , 10 },//________ eee    { 0 , 10 }   // fffffffffff //{ 0 ,   1 }   // ff _________ };         // 0123456789 A 上記 の 設定 の 場合 、 割当 数 は ３ が 最大 [ ace ] です が 利用 時間 は   f   一択 が 最大 。 ２ の ６ 乗 ＝ 64 通り を 全て チェック [ 途中 で の 枝 狩り は 可能 ] し ない と 最小 空き 時間 は 出 ない か と 。 f が { 0 , 1 } の 場合 は 空き 時間 ０ は 不可能 だ し 。 解法 は ２ 進数 ループ で 各 ビット を 見 て も 良 い し 、 再帰 で 各々 の 利用 計画 採用 可否 を 逐 一 確認 し て いっ て も 良い か と 。 [ べき 集合   の 求め 方 さえ 分かっ て いれ ば ] 
tes t2 上 の name が 一体 何者 な の か 、 tes t2 自身 はしる よし も 無い の で は tes t2 から test 1 の public または protected な フィールド に アクセス する ため に は 1 . name が test 1 の オブジェクト 無し で も 存在 し て いる か 、 2 . tes t2 が test 1 を 持っ て いる ( has - a 関係 に ある ) か で なけれ ば なら ない はず です クラス という の は ただ の テンプレート に 過ぎ ませ ん クラス の フィールド に アクセス する ため に は 実体 が なけれ ば なり ませ ん から 、 実体 を 作る 方法 が 上 の 2 通り という わけ です 1 は test 1 の name を static に 宣言 する 、 という 方法 で 実現 でき ます 
「 ％ 」 は 余剰 の 答え を 導く 演算子 。 （ 104 ÷ 1 ） ÷ 10 ＝ 10 ・ ・ ・ 余り 4 な ので 、 答え は 「 4 」 （） の 中 の 演算 が 優先 さ れ ます が 、 どの 計算 も 1 で 割っ て いる ので 、 数値 は 変化 なし で 10 で 割っ て い ます 。 10 で 割っ た とき の 余り を 各 ローカル 変数 kotae に 代入 し て いる と 考え ましょ う 。 
プログラミング によって 何 を し たい の か 、 そして あなた の 使用 する OS によって 学ぶ 言語 は 決める べき でしょ う 。 少なくとも Java と PHP と Ruby の 得意 分野 は どれ も 全く 違い ます から 、 同時に 学ぶ に は 向い て い ない と 考え ます 。 業務 アプリケーション を 作り たい という こと で あれ ば 、 この 中 で は Java を 選択 する べき でしょ う 。 ただし Java に 拘る 理由 が なく 、 Windows を 使用 する の で あれ ば 、 Java より 後発 で 罠 の 少ない C# を お勧め し て おき ます 。 ウェブアプリケーション が 目的 で あれ ば 、 迷わ ず PHP を 選択 する べき です 。 Ruby は 二つ目 以降 の 言語 に し た ほう が 良い か と 思い ます 。 Ruby （ や Python 、 Perl など ） は UNIX ライク な OS における ツール として 大変 便利 です が 、 あなた の 求め て いる もの で は ない です よ ね ？ もちろん 、 どの 言語 で も やろ う と 思え ば 何 でも でき ます 。 です が 、 専門 外 の 事 を する に は 言語 に関する 知識 だけ で は なく 周辺 知識 も 要求 さ れ ます 。 プログラミング言語 なんて どれ も 似 た よう な もの です から 、 二つ目 の 言語 に 取り掛かる の は 一つ 目 の 言語 ・ 分野 の 学習 が 一段落 つい て から で も 良い の で は ない でしょ う か 。 （ 一 Ruby 好き として は 、 最終 的 に Ruby を 好き に なっ て もらえれ ば 嬉しい です :)） 
良く 分からん が 、 たぶん 、 get Application BufferSize は 、 TLSPlaintext の 最大 サイズ で 、 getPacketBufferSize は 、 TLSCiphertext の 最大 サイズ でしょ ？ TLSCiphertext と TLSCompressed は 大体 一緒 だ けど 、 TLSCompressed と TLSPlaintext は 圧縮 ( SSLCompression ) の 設定 の 有無 で 大きく 異なる 場合 が ある 。 まぁ 、 大抵 は 無効 な ので 大体 同じ サイズ だ と 思い ます 。 
http:// aidiary . hatena blog . com / entry / 20040918 / 1251373370 この サイト が GUI 系 で 頼り に なる と 思い ます 。 
JSP ない で あまり ロジック は 組ま ない ほう が いい と 思い ます が 展開 し ます 。 <% String [] g _ in = new String []{ "< input type =\" checkbox \" name =\" onigiri \" > 鮭 " ,"< input type =\" checkbox \" name =\" onigiri \" > たらこ " } %> <% for ( int i = 0 ; i <= 1 ; i ++){ %> <%= g _ in [ i ]%> <% } %> がんばっ て ください 。 【 宣伝 】 私 が 提供 する webサービス 「 無料 動画共有サイト 」 http:// kut 2 . dip .jp / KUT _ VIDEO / 
minecraft を インストール し なおし て み て は ？ 
レイアウト > フッター 部分 > ガジェット を 追加 から 「 ページ ガジェット 」 で 固定 記事 （ ページ のみ 、 投稿 は 出来 ない ） を 設定 でき ます 。 
> の どれ か が できる 人 通常 企業 が できる 人として 求人 を だす の は 実務 レベル で できる 人 を 指す 。 > 通信教育 で 調べる と 、 ３ ヶ月 コース やら 、 入門 コース など ある の です が 、 こういう の を 受けて 自称 できる 人 は 普通 企業 から 見 たら でき ない 人 に なる 。 後 、 質問者 の よう な 年齢 が 30 代 に 近い 人 は もう 最初 から 実務 レベル で 使い物 に なる 人 以外 は 求め られ ませ ん 。 
東芝 の HP で 問い合わせ でき ない か な 
実装 例 です 。 import java . util .S canner ; public class Sample { public static void main ( String [] args ) { Scanner scanner = new Scanner ( System . in ); System . out . print (" 1つ 目 ="); int a = scanner . nextInt (); System . out . print (" 2つ 目 ="); int b = scanner . nextInt (); scanner . close (); if ( a % 2 == 0 ) { if ( b % 2 == 0 ) { System . out . print (" 1つ 目 も 2つ 目 も 偶数 です 。 "); } else { System . out . print (" 1つ 目 は 偶数 です 。 "); } } else { if ( b % 2 == 0 ) { System . out . print (" 2つ 目 は 偶数 です 。 "); } else { System . out . print (" 1つ 目 も 2つ 目 も 奇数 です 。 "); } } } } // q10 159082620 
合っ て ませ ん 。 (^_^;) 引数 なし でも 戻り値 を 返す メソッド も ある し 、 引数 あっ て も 戻り値 なし ( void ) な メソッド も ある 。 引数 の 有無 と 戻り値 の 有無 は 、 無関係 です 。 
その java の bin ファイル まで の パス を 指定 する と 良い でしょ う 。 - 参考 に なる か は わかり ませ ん が 、 - ただ 、 usbメモリ に 自分 は インストール し た こと が ない ので わかり ませ ん が 、 抜き差し が あっ た 場合 何らかの 不具合 が 起きる かも 知れ ませ ん 。 bat ファイル を 作っ て 1 行 目 SET PATH =% PATH %;[ java インストール 先 ファイル の bin まで の パス ]; 改行 し 2 行 目 PAUSE 改行 し 3 行 目 EXIT と 入力 し 保存 する 。 で 使う 時 に 起動 さ せ 、 終了 時 に キー 入力 で 終了 さ せる 。 これ で 、 使う 時 のみ 環境変数 が 登録 さ れ 少し でも 問題 を 減ら せる かも 知れ ませ ん 。 使う 時 は 自己責任 で お願い し ます ね 。 また 起動 後 に しか 環境変数 は 登録 さ れ ない ので 注意 が 必要 です 。 
Java は 無駄 に タイプ 数 が 多い ので 得意 で は ない です が … class MyPoint { __ public MyPoint ( int x , int y ) __{ ____ this . x = x ; ____ this . y = y ; __} __ public int getX () { return x ; } __ public int getY () { return y ; } __ public void setX ( int x ) { this . x = x ; } __ public void setY ( int y ) { this . y = y ; } __ public String to String () __{ ____ return "( " + x + ", " + y + " )"; __} __ private int x ; __ private int y ; } class MyPintTest { __ public static void main ( String [] args ) __{ ____ MyPointTest test = new MyPointTest (); ____ try ( InputStreamReader is = new InputStreamReader ( System . in ); _______ BufferedReader br = new BufferedReader ( is )) { __________ do { ____________ int x , y ; ____________// x , y の 入力 部分 は 頑張っ て ください （ 単に 面倒 な だけ … ） ____________// br から 読み込ん で ， Integer . parseInt だっ た か を 使え ば いい か と ____________ test . addPoint ( new MyPoint ( x , y )); __________} while ( /* 適当 な 終了 条件 を */ ); __________ int index ; __________ System . out . println (" 出力 し たい … "); __________// br から index を 読み込む __________ MyPoint p = getAt ( index ); __________ System . out . print ("" + index + " 番 目 の 座標 は "); __________ if ( p == null ) { ____________ System . out . println (" ありません "); __________} else { ____________ System . out . println ( p . to String ()); __________} ____} catch ( Exception e ) { ______// エラー 処理 ____} __} __ public MyPointTest () __{ ____ pointList = new ArrayList < MyPoint >(); __} __ public void addPoint ( Point p ) { pointList . add ( p ); } __ public Point getAt ( int index ) __{ ____ return ( index >= 0 && index < pointList . length ()) ? pointList . get ( index ) : null ; __} __ private ArrayList < MyPoint > pointList ; } かなり テキ トー に 作っ た ので 間違い 等 ある かも しれ ませ ん "_" は インデント です 
模範 解答 は こんな 感じ か な 。 あえて コメント は 追記 し て い ませ ん ので 、 暇 な 時 に 解析 し て み て ください 。 ---- public class Test { ＿ ＿ public static void main ( String [] args ) { ＿ ＿ ＿ ＿ java . util . ArrayList < Integer > body = new java . util . ArrayList < Integer >(); ＿ ＿ ＿ ＿ java . util . ArrayList < Integer > tail = new java . util . ArrayList < Integer >(); ＿ ＿ ＿ ＿ ＿ ＿ ＿ ＿ for ( int count = 0 ; count < 100 ; count ++) { ＿＿＿＿＿＿ body . add ( count ); ＿＿＿＿＿＿ tail . add ( 999 - count ); ＿＿＿＿} ＿ ＿ ＿ ＿ ＿ ＿ ＿ ＿ System . out . println (( body . get ( 0 )). to String () + "～" + ( body . get ( body .s ize () - 1 )). to String () + " が 入っ た 整数 配列 body を 作成 し まし た 。 "); ＿ ＿ ＿ ＿ System . out . println (( tail . get ( 0 )). to String () + "～" + ( tail . get ( tail .s ize () - 1 )). to String () + " が 入っ た 整数 配列 tail を 作成 し まし た 。 "); ＿ ＿ ＿ ＿ ＿ ＿ ＿ ＿ body . addAll ( tail ); ＿ ＿ ＿ ＿ ＿ ＿ ＿ ＿ for ( int bodyValue : body ) { ＿＿＿＿＿＿ if (( bodyValue % 2 ) == 1 ) { ＿＿＿＿＿＿＿＿ System . out . println ( bodyValue ); ＿＿＿＿＿＿} ＿＿＿＿} ＿ ＿ ＿ ＿ ＿ ＿ ＿ ＿ tail . clear (); ＿ ＿ ＿ ＿ ＿ ＿ ＿ ＿ System . out . println (" tail を 初期 化 し まし た "); ＿ ＿ ＿ ＿ if ( tail . isEmpty ()) { ＿＿＿＿＿＿ System . out . println (" tail は 空 です "); ＿＿＿＿＿＿ return ; ＿＿＿＿} ＿＿} } ---- ちなみに 、 この まま 提出 し ない よう に ！ 確実 に 先生 に 呼び出し くらい ます 。 過去 の 私 は 、 それで 超 怒ら れ まし た 。 その 時 は 、 学生 だっ た ので 何で バレ た の か わから なかっ た けど 、 今 なら 理解 でき ます 。 経験 が 違い すぎ ます ので 、 プロ が 見る と すぐ に 分かる ん です 。 それ は 今後 あなた が 経験 し て いく こと で わかっ て いく こと で も あり ます 。 課題 か テスト か わかり ませ ん が 、 わから ない から と 言っ て 、 答え を 聞く の で は なく あきらめ ず 自分 の 力 で プログラム を 完成 さ せ て ください 。 プログラム は その プログラマ の プログラミング センス に よる ので 、 ちゃんと し た 正解 が あり ませ ん 。 つまり 答え は 1つ で は ない という こと です 。 要は 、 動け ば 正解 という こと です ね 。 私 が 学生 だっ た 頃 は 、 java の 本 は 10 冊 ぐらい しか 出 て い ませ ん でし た 。 インターネット も 普及 し て おら ず ISDN 時代 でし た から 調べる の も 苦労 し まし た が 今や API や ブログ など が 豊富 に あり ます から 、 フローチャート や シーケンス 図 など を 書い て 1 行 ずつ 理解 する の が 良い でしょ う 。 それ が 、 プログラム を 動かす （ 理解 する ） 近道 です 。 ＃ ちなみに フローチャート と シーケンス 図 は 、 未だに 現場 でも 使っ て い ます ので 覚え て おき ましょ う 。 
> windows の 、 jdk の インストール 方法 考え られる やつ 基本的 に は 、 JDK の インストーラ を 使う しか ない でしょ う 。 ソース が ある なら ば それ を コンパイル する こと も 可能 な の でしょ う が 。 trz ？？( tar . gz ( tgz ) or tar . Z あたり ？) が 圧縮 ファイル で 中身 が インストーラ とか そういう こと は あり ませ ん か 。 > jre だけ で でき ない こと を 教え て ください 開発 が でき ない 。 まず コンパイル が でき ない 。 JAR ファイル が 作れ ない 。 など 。 
たしか 、 「 メソッド 本体 が ない か 、 abstract として 宣言 さ れ て い ます 」 は 、 public void main (); の よう に 抽象 メソッド で ない のに ブロック が 無く 、 セミコロン で 閉じ られ て いる メソッド の コンパイル エラー 。 「 シンボル を 見つけ られ ませ ん 」 は 探し て いる もの （ メンバ 、 クラス 、 インスタンス など ） が 存在 し ない 場合 の コンパイル エラー 。 
普通に String 型 に キャスト し たら ダメ な の ？ 
まず 三項演算子 の 注意 点 です が 、 三項演算子 なんて 実務 で は なかなか 使わ ない です 。 理由 は 、 if 文 で も 表現 可能 で ある こと と 、 if 文 で も 表現 可能 な のに 複数 の 表現 を 使う と 、 障害 の リスク を 内包 さ せる から です 。 よって 、 プロ （ に なる 可能性 が ある ） なら ば 、 まずは if 文 で 設計 し ましょ う 。 する と 、 単に 、 if ( in > 128 ){ out = 128 ;} else { if ( in < 0 ){ out = 0 ;} else { out = in ;} } と 書い て から 、 三項演算子 だろ う と 、 何 だろ う と 、 書き直せ ば 良い の です 。 ちなみに 、 in と out は 、 プロ なら ば 同じ n とか に せ ず に 分け ます 。 理由 は 意味 が 違う こと と 、 こんなに 短い プログラム で ない なら ば 、 途中 で in と out で 処理 が 変わる ため 、 混同 し て 障害 を 内包 さ せ ない ため です 。 同じ n で 書ける から 、 など という こと より も 、 より 一般 的 な 書き方 を 、 自然 と できる よう に し ましょ う 。 
こんにちは。 動作 に 問題 は あり ませ ん 。 英語 で 分かり にくかっ たり する 部分 が ある だけ です 。 http:// www . javadrive .jp / ec lips e3 / install / in de x4 . html 
会社 に も よる と 思い ます が 、 応募 し て き た すべて の 学生 の 過去 の 経歴 を 調べる の は 無理 が あり ます 。 な ので 、 ある程度 ふるい に かけ た うえ で それら を 調査 する 可能性 が 高い と 思い ます 。 中学校 や 高校 で の 素行 を 電話 し たり 、 ネット で フェイスブック や ツイッター など で 調べ られる 限り で 悪い 素行 を し て ない か など 調べ たり 。 履歴書 の 内容 に 嘘 が ない か 確認 を とる こと も ある でしょ う 。 現在 調査 中 の 可能性 も あり ます ので 、 決めつける 必要 は ない と 思い ます 。 私 として は 悲観 的 に も 楽観 的 に も なら ない 方 が 精神衛生上 いい と 思い ます 。 
http:// aim eg u. webcrow .jp / java / ProgramSource . html これ 、 私 の ＨＰ の Java の ソース 公開 し てる ページ な ん です が 、 こんな 感じ に し たい という こと で いい の でしょ う か ？ ちなみに 私 の は 画像 を 使わ ず 、 < pre > タグ を 使用 し て い ます 。 こう し たい の で あれ ば 、 ボディ の 部分 は ある程度 は 私 の ページ の ソース と ホームページ を 見比べ て みれ ば どう 書け ば いい か って の が 分かる と 思い ます 。 ヘッダー は < meta > タグ さえ コピペ し なけれ ば 全部 コピペ し て も いい です 。 ただ 、 < script > タグ と < link > タグ の "../ syntaxhighlighter /" の 部分 は 、 ～ ハイ ライター を ダウンロード し ない 場合 ～ ex ) 私 の ホームページ の ハイ ライター を 使用 する 場合 " http:// aim eg u. webcrow .jp / syntaxhighlighter /" ～ ハイ ライター を ダウンロード し て サーバー に 送っ て 使う 場合 ～ ○ 書く html を 同じ ディレクトリ に 置く 場合 "./ syntaxhighlighter /" ○ 書く html の 前 の ディレクトリ に 置く 場合 書き換え の 必要 は ない あと 、 < link rel =" stylesheet " href ="../ css / style. css "> は 消し て ください 。 どうしても 私 の ページ と 同じ 見た目 に し たい の でし たら < link rel =" stylesheet " href =" http:// aim eg u. webcrow .jp / css / style. css "> に し て ください 。 
int [] sosu = { 2 , 3 , 5 , 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 , 37 }; int t = 0 ; outer : for ( int n = 2 ; n <= 1000 ; n ++){// 2 ～ 1000 まで 外 ループ for ( int m = 0 ; (( int ) Math .s qrt ( n )) >= sosu [ m ]; m+ +){// 素数 を 求める 内 ループ if ( n % sosu [ m ] == 0 ) continue outer ; } t += n ; } System . out . println (" 1 から 1000 まで の 素数 の 和 は " + t + " です 。 "); あまり 見 ない ので 説明 し ます と 、 outer : for () は 、 for に outer という 名前 を 付け て い ます 。 continue outer ; と 指定 する こと で 、 外 ループ を 一度 抜ける こと が でき ます 。 n = 素数 で ある とき 、 n /(√ n 以下 の すべて の 素数 ) が すべて 割り切れ ない です 。 その ため 、 1000 まで の 素数 を 求める とき は 、 √ 1000 = 31 . 1 を 切り上げ で 37 まで の 素数 表 を 作っ て やる と 実行 速度 が 非常 に 速く なり ます 。 目標 の 数値 が わから ず 乱数表 を 作れ ない とき は すべて の 数字 で 総 当たり する しか ない です ね 。 ( もしくは 、 小さい 乱数 票 を 作り 終え たら 高速 な 方 に 切り替える など ... できるかな ) 
正規表現 が 使える ので こう いう ので どうでしょう か 。 String [] str = s .s plit ( " (( ? < = ( [ \ \ ] \ \ [ \ " ] ))_|_(?=([\\]\\[\"])))"); 解説 する と 、 (?<=([\]\["])_ もしくは _(?=([\]\["])) と 一致 し ます 。 (?<=([\]\["])_ これ は 、 記号 []" の 後 に ある _ _(?=([\]\["])) これ は 、 記号 []" の 前 に ある _ が 選択 & 置換 さ れ ます 。 一応 質問者 さん の 書い た 条件 に は 適応 でき ます 。 A _ B _" C _ C " とか 、 囲ま れ て い ない もの が 二 連続 以上 する 場合 に は でき ませ ん 。 もう 一つ の 案 です が 、 囲わ れ て いる 要素 を 退避 最初 に さ せ て から 、 分割 する 方法 です 。 A _[ B _ B ]_" D _ D "_ F ↓ A _ TEMP _ TEMP _ F ↓ A TEMP TEMP F ↓ A B _ B D _ D F String # Macth , String # split は 正規表現 を 使える ので 、 挟ま れ た 要素 の 取得 など も できる と 思い ます 。 正規表現 で なく プログラム で も 実装 できる と 思い ます 。 
ディレクトリ 1 が パッケージ トップ の よう です ので 、 1 / 2 / 3 / 4 / Car . java を 作成 し package 2 . 3 . 4 ; と 宣言 する 。 1 / 2 / 3 / 5 / Car . java を 作成 し package 2 . 3 . 5 ; を 宣言 する 。 これ で コンパイル し 1 / 2 / 3 / 4 / Car . class 1 / 2 / 3 / 5 / Car . class が 作成 さ れ ます 。 test . java で 使い たい Car . class が どちら か わかり ませ ん が 、 使い たい Car . class を import し ます 。 import 2 . 3 . 4 . Car ; もしくは import 2 . 3 . 5 . Car ; import は パッケージ 名 を 省略 する 仕掛け な ので 、 両方 を 記述 する と クラス 名 が 被っ て いる ため Car と 指定 し た 時 に 、 どちら の Car か 判断 でき ない ため エラー に なり ます 。 両方 使い たい 場合 は 、 import を どちら か 一方 に する か 、 Car の import を やめ て 使う 箇所 で 2 . 3 . 4 . Car ca r1 = new 2 . 3 . 4 . Car (); 2 . 3 . 5 . Car ca r2 = new 2 . 3 . 5 . Car (); の よう に 表現 し ます 。 コンパイル 時 に パッケージ 宣言 から 、 配置 ディレクトリ は 解決 し て くれる ので 、 ＞ ディレクトリ 1 -> 2 -> 3 -> 4 と 5 を つくり 、 ディレクトリ １ に Car . java を つくり 、 Car . class を ディレクトリ ４ に 置き ます 。 ＞ 内容 の 違う Car . java を ディレクトリ １ に つくり 、 この Car . class は ディレクトリ ５ に 置き ます 。 こう いっ た 方法 は とり ませ ん 。 
惜しい ！ JLavel じゃなくて JLabel です 。 そこ を 直せ ば 、 とりあえず 動作 し ます 。 
回答 で は あり ませ ん 。 故意 に 題意 は ハズ し て ます ので 、 コピペ カンニング すれ ば アウト です 。 平均 だけ なら 、 「 入力 値 全部 を いったん 覚え て おく 」 を し なく て も 、 求める こと は できる 。 import java . util .S canner ; class Foo { ___ public static void main ( String [] args ) { ___ ___ final Scanner sc = new Scanner ( System . in ); ___ ___ System . out . print (" テスト の 平均 点 を 調べ ます 。 " + ___ ___ ___ ___ ___ ___ System . getProperty (" line .s eparator ") + ___ ___ ___ ___ ___ ___ " 受験 者 数 を 入力 し て ください : "); ___ ___ final int persons = sc . nextInt (); ___ ___ int average = 0 ; ___ ___ for ( int n = 1 ; n <= persons ; ++ n ) { ___ ___ ___ System . out . print ( n + " 人目 の テスト の 点数 を 入力 し て ください : "); ___ ___ ___ final int score = sc . nextInt (); ___ ___ ___ final int delta = score - average ; ___ ___ ___ average += delta / n ; ___ ___ } ___ ___ System . out . println (" 集計 が 終了 し まし た 。 テスト の 平均 点 は 、 " + average + " 点 です 。 "); ___ } } 実行 結果 : $ java Foo テスト の 平均 点 を 調べ ます 。 受験 者 数 を 入力 し て ください : 3 1 人 目 の テスト の 点数 を 入力 し て ください : 49 2 人 目 の テスト の 点数 を 入力 し て ください : 34 3 人 目 の テスト の 点数 を 入力 し て ください : 98 集計 が 終了 し まし た 。 テスト の 平均 点 は 、 60 点 です 。 
char 型 に - 1 は なく 、 0 ≦ c ≦ 65535 だ から です 。 範囲 外 で ある - 1 を char 型 に キャスト し た 時点 で 情報 は 失わ れ ます 。 具体 的 に は 65535 に なり ます が 、 本来 の i = 65535 と 区別 でき なく なり ます ので 、 予め - 1 か どう か int の まま 比較 し て ください 。 int i = - 1 ; System . out . println (" i = " + i ); char c = ( char ) i ; System . out . println (" c = " + ( int ) c ); 
ndk 部分 の ビルド で エラー に なっ て いる よう な ので 、 その 部分 を 単独 で ビルド できる か 確認 し て み て ください 
- - - - - - - - - - - - - - - - - ------------------------- Java reflect package class enumerate - - - - - - - - - - - - - - - - - ------------------------- といった 単語 で ネット 検索 する と 、 いくつ か 見つかり まし た 。 ( e . g .) http:// etc 9. hatena blog . com / entry / 2015 / 03 / 31 / 001620 http:// stackoverflow . com / questions / 520328 / can - you - find - all - classes -... ・ 試し てはい ませ ん 、 未確認 です 。 ・ 非 標準 な クラス ライブラリ を 頼っ て も いい なら 、 その ほう が 楽 そう です 。 
配列 を 使う の で あれ ば 、 あらかじめ 要素 数 を 多く 持つ か 、 点 を 追加 する ごと に expand () する 必要 が あり ます 。 https :// processing . org / reference / expand _. html goooeend 様 の 指摘 どおり 、 ArrayList など を 使う の が 楽 か と 思い ます 。 以下 参考 http:// pastebin . com / pcJfBaNW http:// pastebin . com / LJ 50 sJuG 
# C [ ig 8 icd 64 . dll + 0 x1 75 e 7 ] Intel HD Graphics で エラー が 起こっ て いる と 考え られ ます 。 スペック 不足 の 可能性 が ある ので ワールド に 入る 前 に 設定 の ビデオ 設定 で 絵画 距離 を 短く する 、 もしくは VBOs を オン に し て み て 下さい 。 参考 http:// wkt k. 2ch.net/ test / read . cgi / minecraft / 1456841448 / 990 http:// forum . minecraft user .jp / viewtopic . php ? p = 253676 
BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ); int value = Integer . parseInt ( br . readLine () );// 入力 し た 数値 int n ; for ( n = 2 ; n <= ( value / 2 ) ; n ++ ){// 倍数 なら 、 value / 2 で 以下 で 割切れ て いる if ( ( value % n ) == 0 )// 割り切れ たら 非 素数 （ 倍数 ） break ;// ループ から 抜ける } if ( n > ( value / 2 ) ) System . out . println ( value + " は 素数 です " ); else System . out . println ( value + " は 素数 で は ありません " ); 
ちょっと あやふや だ けど 、 minim の loop メソッド って 「 loop 再生 を 開始 する 」 ん じゃ なかっ た っけ 。 つまり 、 loop () を draw () の 中 で 繰り返す と 、 再生 開始 し た とたん に また 頭から 再生 しよ う として 先 に 進ま ない 、 という こと に なり そう な 。 
うつ病 で 知恵袋 で フザケタ 書き込み し て て 障害年金 貰っ てる 人 は 詐欺 です か ? 悩ん で て 苦しん で て 悩み 苦しみ の 書き込み する なら 分かる けど ふざけ た 書き込み できる くらい なら 仕事 しろ と 思い ませ ん か ? 人 って 情け 無い です ね 情け 無い ＋ 笑える 。 なに 独り で 悩ん で 病気 に なっ て ん だ よ ？ みたい な ( 笑 ) 誰 に でも 相談 すれ ば いい の に 強がっ て かっこ つける から そう なる 。 うつ病 って 新手 の 仮病 です ね 。 貴方 は うつ病 に関して どう 思わ れ ます か ？ 人 の 質問 を 釣り と しか 解釈 でき ない 方 は 何 な ん です か ？ こちら は 真面目 な 質問 を し てる ん です 
プログラム 以前 の 問題 な ので 、 アルゴリズム を 考え ましょ う 。 １ 、 分解 し たい 値 を 入力 する ( br . readLine ()) ２ 、 小さい 数字 から 順番 に ( for ) 割っ て いく ３ 、 割り切れ たら 、 何 回 割れる か 求める ( while ) ４ 、 出力 する これら を もと に 考え た もの が こちら 。 BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); ArrayList < String > list 01 = new ArrayList < String >(); System . out . println (" 数値 を 入力 し て ください 。 "); int number = Integer . parseInt ( br . readLine ()); int limit = number / 2 ; for ( int n = 2 ; n <= limit ; n ++){ int count = 0 ; while ( number % n == 0 ){ number /= n ; count ++; } if ( count != 0 ) list 01 . add ( n + "^" + count ); if ( list 01 .s ize () == 0 && Math .s qrt ( limit * 2 ) < n ) break ;// 素数 と 判明 し たら 切る } System . out . println ( list 01 ); 解説 は 上 の アルゴリズム の 通り です 。 素数 か どう か は 途中 で わかる ので 、 判明 し たら はじい て い ます 。 もっと 高速 に できる と は 思い ます が 、 大変 な ので これ くらい で 。 
コンパイル し た ところ 以下 の よう な エラーメッセージ が 出力 さ れ まし た 。 Test 13 . java : 3 : エラー : static で ない 変数 num を static コンテキスト から 参照 する こと は でき ませ ん この エラー は num の アクセス 修飾 子 が protected で ある 事 と は 関係 あり ませ ん 。 例えば 以下 の Sample を コンパイル し て も 、 同じ コンパイル エラー と なり ます 。 public class Sample { protected int num = 10 ; public int getNum () { return num ; } public static void main ( String [] args ) { System . out . println ( num ); } } 少し 話 が それ ます が 、 インスタンス 変数 や インスタンス メソッド に は 変数 の 所有 者 で ある オブジェクト や メソッド が 呼び出さ れ た オブジェクト が 必ず 存在 し ます 。 例えば String s = foo . to String (); int length = new String (" abc "). length (); の foo の よう に ドット の 前 に オブジェクト の 参照 を 持つ 変数 や 、 オブジェクト の 参照 を 返す 式 を 記述 し て その 所有 者 ( 実行 者 ) である オブジェクト を 指定 し ます 。 それでは getNum メソッド の num は どう な の か 、 です が public int getNum () { return this . num ; } この よう に this が 省略 さ れ て いる と 解釈 する と 理解 し 易い です 。 つまり インスタンス 変数 や インスタンス メソッド に 単純 名 ( ドット を 使っ て 限定 し て い ない 名前 ) で アクセス し て いる 場合 の 所有 者 は this が 表す オブジェクト という こと です 。 では this が 表す オブジェクト って 何 ？ です が 以下 の よう な main メソッド が 実行 さ れ た 場合 を 考え ます 。 public static void main ( String [] args ) { Sample sample = new Sample (); System . out . println ( sample . getNum ()); } Sample の インスタンス を 生成 し て その 参照 を ローカル 変数 sample が 保持 し て い ます 。 そして sample . getNum () の 部分 で Sample オブジェクト の getNum メソッド を 呼び出し て い ます 。 getNum メソッド は 引数 が ありません が 、 プログラム 実行 時 の JVM で は 引数 と は 別に 変数 sample が 保持 し て いる Sample オブジェクト の 参照 が 渡さ れ て い ます 。 そして 省略 さ れ て いる this . num ; の this が メソッド に 渡さ れ た Sample オブジェクト の 参照 に 置き換え られ ます 。 つまり this と は 実行 時 に インスタンス メソッド ( コンストラクタ 、 インスタンス 初期化 子 ) が 呼び出さ れ た オブジェクト の 参照 を ソースコード 上 で 表す 為 の キーワード です 。 ( コンストラクタ 内 で の this () や super () は また 別 の 意味 で 使わ れ て い ます ) また オブジェクト の 参照 の 先 に は 何 が ある か ？ です が 、 参照 先 に は それぞれ の オブジェクト の インスタンス 変数 の 値 が 格納 さ れ て い ます 。 ( Object クラス まで 辿っ た すべて の 親 クラス の インスタンス 変数 で 、 private な もの も 含ん で い ます 。 この 為 、 this も super も 参照 先 は 同じ です 。 super の 場合 は コンパイル 時 に super クラス の 変数 や メソッド に アクセス する バイトコード が 出力 さ れ て い ます 。 ) そして インスタンス メソッド 実行 時 に 引数 と は 別 に 渡さ れ た オブジェクト の 参照 が 、 メソッド 内 の 単純 名 や this を 使っ て アクセス し て いる インスタンス 変数 や インスタンス メソッド の 所有 者 ( 実行 者 ) として 扱わ れ ます 。 この よう に 引数 と は 別 に 渡さ れ た オブジェクト の 変数 の 値 を 使っ て いる ので 一つ の メソッド 定義 で も 個々 の オブジェクト で 結果 が 違っ て くる という わけ です 。 そして ようやく 最初 の コンパイル エラー の 原因 と なり ます が static メソッド や static ブロック ( 静的 初期化 子 ) では this や super を 使う こと が 仕様 で 禁止 さ れ て い ます 。 また 実行 時 に 引数 の 他 に オブジェクト の 参照 が 渡さ れる 事 も あり ませ ん 。 よって 単純 名 で インスタンス 変数 ( メソッド ) に アクセス し て いる コード は 実行 時 に どの オブジェクト の 変数 を 使え ば いい の か 分かり ませ ん 。 その 為 、 コンパイル エラー と なり ます 。 以上 です が 、 分かり づらかっ た かも しれ ませ ん ので 最後 に 要点 のみ を 申し上げ ます 。 static メソッド や static ブロック 内 で は this や super を 使う と コンパイル エラー と なり ます 。 また インスタンス 変数 や インスタンス メソッド に 単純 名 で アクセス し た 場合 も コンパイル エラー と なり ます 。 オブジェクト 参照 . インスタンス 変数 オブジェクト 参照 . インスタンス メソッド の 形 で アクセス する コード を 記述 し なけれ ば なり ませ ん 。 
実行 例 1 が でき てる なら 、 最初 に 1 個 目 の 整数 と 2 個 目 の 整数 の 大小 比べ て 都合 の 良い よう に 変数 入れ なおせ ば 良い ん じゃ ない ？ 
私 は Google アカウント を 持っ て い ませ ん し 、 今後 も 取る つもり は あり ませ ん ので 、 今回 の 件 について は 、 詳しく は 分かり ませ ん 。 チェック の 部分 について は 、 下記 の よう な 仕様 の タグ で 、 私 も 詳しく は 分かり ませ ん 。 http:// blog . e - river style. com / 2012 / 12 / roleariawaiariahtml 5 - advent - ca ... ただ 、 role で checkbox と 定義 し 、 ari a-c hecked という 属性 が ある こと から 、 ari a-c hecked を 変更 すれ ば 、 変わる かも しれ ませ ん 。 tmp .s etAttribute " ari a-c hecked "," false " 日 付 について は 実際 に 見 て み ない と 、 何 が 起こっ て いる の か が 想像 でき ませ ん ので 、 ご 期待 に は 沿え ない と 思い ます 。 完全 一致 の 件 について は 、 outer HTML で 見 て いる 限り は 不可能 です 。 リンク 文字 が 判定 対象 なら ば 、 InnerText で 取り出し 、 objA ( n ). InnerText =" sports . yahoo . co.jp " といった 完全 一致 条件 に し て ください 。 
> ドメイン 駆動 型 モデル を 簡単 に 説明 し て ください と 言わ れ た 場合 、 どの よう に 説明 す べき でしょ う か ？ 調べ て まで 必要 生 の 無 い事 や 判ら ない 事 は 、 素直 に 判り ませ ん と 言う べき 。 
こんな イメージ で も 処理 でき ます ね 。 public class Ticket { private static int count ; private int number ; Ticket (){ count ++; number = count ; } int get Number (){ return number ; } public String to String () { return " Ticket (" + get Number () + ")"; } } 
[ Java と C# の 違い の 件 ] C# は 、 Java の 影響 を 受け て 作ら れ た プログラミング言語 です 。 ただし 、 Java 以外 の プログラミング言語 の 影響 も 受け て いる ので 、 Java と 異なる 面 も 備え 持っ て い ます 。 C# は 、 Java 、 C++ 、 VB 、 Delphi 、 Python の 影響 を 受け て 作ら れ た プログラミング言語 です 。 ＜ C言語 や C++ から 受け た 影響 による 、 C# の 性質 ＞ C# は 、 C言語 や C++ の 影響 を 受け て い て 、 C言語 や C++ の よう に システム 系 の プログラミング が 得意 です 。 ここ で 言う システム 系 と は 、 サーバー システム や ミドルウェア の 作成 の こと です 。 技術 的 に は 、 マルチスレッドプログラミング が 得意 。 マルチ プロセス も 得意 。 通信 機能 が 豊富 。 WCF と 言う 分散システム が 使える （ 分散システム と は 、 簡単 に 言え ば 、 サーバー システム を 作る 本格 的 な 技術 ） 。 C# で は 、 普段 は ポインタ は 使わ ない が 、 一応 ポインタ も 使える ので 、 C言語 や C++ と の 連携 が し やすい 。 ＜ VB.NET や Delphi から 受け た 影響 による 、 C# の 性質 ＞ C# は 、 VB.NET の よう に 、 簡単 に ユーザー インターフェイス が 作れ ます （ ユーザー インターフェイス は 、 ユーザー が 直接 操作 する プログラム 部分 ） 。 すなわち 、 デザイン 用 画面 で 、 ボタン や テキストボックス 等 （ コントロール ） を 貼り 付け て 行き 、 簡単 に 作れ ます 。 ＜ Java から 受け た 影響 による 、 C# の 性質 ＞ Java は 、 インターネット 系 の システム 作成 が 得意 です 。 C# も 、 Java の インターネット 用 構造 を 引き継い で い て 、 インターネット 系 の システム が 得意 です 。 特に 、 サービス指向アーキテクチャ 関連 は 、 C# と Java で 作ら れ た 技術 です 。 サービス指向アーキテクチャ と は 、 プログラム を 機能 ごと に 部品 化 し て 、 その 各種 部品 を インターネット 上 に 配置 する 技術 です 。 ＜ Python から 受け た 影響 による 、 C# の 性質 ＞ Python は 、 動的言語 です 。 すなわち 、 プログラム の 構成 を コンパイル 時 だけ で 決定 する の で は なく 、 実行 時 に 、 その 状況 に 応じ て 構成 が 決め られ ます 。 ＜ Java と C# の 違い の 補足 ＞ 上記 が 、 Java と C# の 違い です 。 ただし 、 Java も C++ の 影響 を 受け て い ます 。 よって 、 Java も C++ の よう に システム 系 の プログラミング が 得意 です 。 ただし 、 Java は 、 ポインタ が 使え ず 、 C# で は 使え ます 。 よって 、 C# は 、 C言語 や C++ と 連携 し やすい です 。 あと 、 Python の 影響 は 、 大きい です 。 実行 時 の ユーザー 操作 の 内容 に 応じ て 、 柔軟 に プログラム 構成 を 変え て 行く こと が 可能 です 。 C# は 、 Java より 後 に 作ら れ た プログラミング言語 で 、 様々 な プログラミング言語 の よい 所 を 取り入れ て い ます 。 よって 、 上記 の よう に 特徴 を 記せ ば 、 C# の ほう が 、 よい プログラミング言語 と なっ て し まし ます 。 しかし 、 Java は 、 インターネット の 歴史 と共に 歩ん で き た プログラミング言語 と 言っ て も 言い過ぎ で は ない です 。 すなわち 、 Java が 、 インター ネット関係 、 及び 、 IT 全般 に 施し て き た 影響 は 、 大きい です 。 よって 、 就職 で は 、 Java を 使える ほう が 、 C# より 有利 です 。 なお 、 C# は 、 もと は Microsoft が 作りました が 、 標準化団体 に 認可 さ れ て い ます ので 、 Microsoft 系 以外 でも 通用 し ます 。 ただし 、 実質 上 、 Microsoft 系 で 活 かせる プログラミング言語 です 。 よって 、 就職 目的 で プログラミング言語 を 学ば れる 方 に は 、 Java の ほう が 安全 です 。 サービス指向アーキテクチャ が 中心 の 世の中 に なっ て 来れ ば 、 もう少し C# が 有利 に なっ て 行き ます 。 C# が おすすめ の 場合 は 、 Microsoft 系 （ Windows 系 ） で 、 マルチメディア 的 な プログラミング を し たい 場合 です 。 C# は 、 前述 の 通り 、 いろいろ な プログラミング言語 の よい 所 取り を し て いる ので 、 ベンチャー企業 を 作っ て 、 ビジネスチャンス を ねらっ て いる の なら ば 、 C# の ほう が 面白い と 思い ます 。 [ OS に 依存 し ない 件 ] ＜ Java ＞ Java で は 、 （ もともと ） 様々 な OS に 依存 し ない アプリケーションソフト が 作れる 。 そして 、 今 と これから 先 で は 、 パソコン 、 携帯電話 、 ゲーム機 で の 違い に 依存 し ない アプリケーションソフト が 作れる よう に なる 方向性 で ある 。 （ 取りあえず 今 は 、 パソコン と スマートフォン で 対応 ） ＜ C# ＞ C# で は 、 （ もともと ） パソコン 、 携帯電話 、 ゲーム機 で の 違い に 依存 し ない アプリケーションソフト が 作れる 。 そして 、 今 と これから 先 で は 、 世の中 の オープン 化 の 要求 により 、 様々 な OS に 依存 し ない アプリケーションソフト が 作れる 可能性 も ある 。 （ 取りあえず 今 は 、 クラウドコンピューティング 関連 で 、 UNIX 等 の 他 OS 技術 の 受け入れ を 行なっ て いる 。 また 、 Microsoft は 、 ライバル で ある はず の Adobe と 協力 し て Flash 技術 も 取り込ん で いる ） 詳しく は 、 以前 に 回答 し た もの を 参照 し て 下さい 。 「 minecraft は java で 作ら れ て いる そう です が 、 」 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1215838689 ... 
> ・ 入力 桁 数 が 9 桁 まで しか 入ら ない 。 >（ 制限 なし に し たい ） > ・ 少数 を 含ん だ 数値 を 代入 でき ない 。 「 制限 なし 」 つまり たとえ 100 万 桁 で あっ て も 処理 する という こと です よ ね ？ 制限 が かかっ て いる の は isNum の ロジック が Integer . parseInt を 使用 し て いる ため です 。 Integer は 32 bit 整数 な ので 、 2147483648 以上 の 数字 は 認識 さ れ ませ ん 。 new BigDecimal ( number ) で チェック する よう に 変えれ ば 制限 は 解除 できる でしょ う 。 なお 、 BigDecimal は 割り算 の 桁 計算 の 部分 で ちょっと 端数処理 が 必要 に なり ます が 、 小数点 桁 何 桁 まで 計算 する の か など 、 必要 な 情報 が 描か れ て い ない ため 割愛 し ます 。 エラー が 出 たら 「 BigDecimal 割り算 エラー 」 など で 検索 し て み て ください 。 
コード の 打ち 間違え です 。 main メソッド の 引数 の データ型 は String [] です 。 {} では ない 。 また 、 pritln で は なく println です 。 Eclipse など の 開発 環境 を 提供 し て くれる ソフト を 使え ば 、 打ち 間違え など を 指摘 し て くれる から 便利 です 。 初心者 で あれ ば 、 その よう は 補助 し て くれる ソフト の ほう が エラー を 見つけ やすい です 。 class Hello { public static void main ( String [] args ){ System . out . println (" こんにちは "); } } 
TCP/IP で は 相手 の IPアドレス と ポート 番号 が 分かれ ば 通信 可能 です 。 自宅 の Windows パソコン で Tomcat を 起動 し た 場合 、 以下 の 2つ の 設定 を 行え ば 、 外部 ネットワーク から 接続 可能 です 。 ・ 自宅 の ルータ で 静的 IPマスカレード 設定 を 行う 。 グローバルIPアドレス と ポート 番号 を 、 パソコン の プライベート IPアドレス と ポート 番号 に 変換 する 。 ・ Windows パソコン で ファイアウォール 設定 を 変更 する 。 Tomcat に対し 、 外部 から の 接続 を 許可 する 。 
読み込む csv ファイル は １ 行 です ね ？ で あれ ば 、 一度 それ を String [] input の 配列 に 直し て 処理 する こと に なり ます 。 write は データ を 書き だす 処理 を 意味 し ます 。 final int USERNO = 0 ; final int NUMA = 1 ; int index = 2 ;// 数値 B 1 から スタート while ( input . length < index ){// この エンド 処理 は 調整 が 必要 かも write ( input [ USERNO ]);// ユーザ No. write (","); write ( input [ NUMA ]);// 数値 A write (","); write ( input [ index ++]);// 数値 Bx write (","); write ( String . valueOf ( Integer . parseInt ( input [ index ++])+ Integer . parseInt ( input [ index ++]));// 数値 Cx + 数値 Dx write (","); write ( String . valueOf ( Integer . parseInt ( input [ index ++])- Integer . parseInt ( input [ index ++]));// 数値 Ex - 数値 Fx } という よう な ロジック で 処理 できる でしょ う 。 
拡張子 は アイコン の ダブルクリック 時 に windows が 実行 する プログラム を 選択 する ため に ある ので 、 java が 読み取る 際 は 拡張子 は 関係 あり ませ ん 。 拡張子 が ある ファイル と 同様 に ファイル 名 を 指定 し て 読み込み ましょ う 。 
コマンドプロンプト を 開い て java - jar hogehoge . jar の よう に 実行 すれ ば 何 か エラー が 表示 さ れる でしょ う 。 
ブラウザ が インターネットエクスプローラー の 場合 、 メニュー バー （ が 表示 さ れ て い ない なら alt キー を 押す と 表示 さ れ ます ） から 、 「 ツール 」 → 「 インター ネットオプション 」 → 「 プログラム 」 タブ → 「 アドオン の 管理 」 → 「 ツールバー と 拡張機能 」 で Java が 「 有効 」 に なっ て いる か 確認 し て ください 。 また 、 試験 サイト 上 で 、 メニュー バー （ が 表示 さ れ て い ない なら alt キー を 押す と 表示 さ れ ます ） から 、 「 ツール 」 → 「 インター ネットオプション 」 → 「 セキュリティ 」 タブ → 「 スクリプト 」 の 「 Java アプレット の スクリプト 」 が 有効 に なっ て いる か 確認 し て ください 。 
＞ バックトラック 法 冪集合 の 列挙 処理 において 、 カット す べき 枝 なんて 存在 せ ず 全て 表示 する だけ な ので 不要 か と 。 [ 只 の 深さ優先探索 型 総 当り 再帰 処理 、 の 意味 で 言っ て いる なら 多分 言葉 を 間違え て いる か と ] // ide on e.c om / hfZJfe import   java . util .*; class   Test {    public   static   void   main ( String   args []){      Scanner   scan   =   new   Scanner ( System . in );      int   n   =   scan . nextInt ();      for ( int   i = 0 ; i < 1 << n ;++ i ){        System . out . print ("{");        for ( int   j = 0 ; j < n ;++ j )          if ( 0 <( 1 << j & i ))            System . out . print ("   "+ j );        System . out . println ("   }");      }    } } 
SpringFrameWork を 利用 し て 、 webサービス を 提供 し て いる もの です 。 引数 が 特定 し ない 場合 は 、 List < String > 型 の よう な コレクション フレーム を 利用 する と よい かも しれ ませ ん 。 または 、 Map < String , String > を 利用 する と 、 何 に 何 を 入れ た か を 明確化 でき ます 。 がんばっ て ください 。 【 宣伝 】 私 が 提供 する サービス 「 無料 動画共有サイト 」 http:// kut 2 . dip .jp / KUT _ VIDEO / 
Notepad ++ で 日本語 の 文字化け を 直す 方法 ； http:// mt4 ordersenderror . blog . fc2 . com / blog - entry - 8 . html 
データ シート は 秋月 に 転がっ て いる これ か な 。 http:// akizukidenshi . com / download / ds / panasonic / CNZ 1023 % 28 ON 1023 % 29 .... で 。 なんと いう か これ だけ の 質問 で 知り たい ツボ を どうして これ だけ 外せる の か ... > analogRead で よん だ とき は 、 数値 が 変化 し まし た 。 抵抗 等 は 同じ です ね ? 値 は どの くらい でし た か ? > digital Read で は ちゃんと 0 か 1 に なり ませ ん でし た 。 では 何 に なっ た の です か ? 0 と 1 以外 の 値 が digital Read から 返る はず は ない の です が 。 > digital Read で しか 読め ない ので 、 Arduino の digiralRead で ダメ だっ た の です が 、 RaspberryPi で うまく 行く という なにか 勝算 が あっ た の でしょ う か ? > トランジスタ 側 の 抵抗 を 外す と 1 が 出 まし た 回路 接続 状態 で は 何 が 出 ます か ? > センサー の 値 は 読ん で い ない よう に 見え まし た 全体 に 言える こと です が 、 あなたに どう 見え た か 、 印象 ・ 解釈 で は なく 、 具体 的 に 起こっ た 現象 を 知り たい です 。 だって 、 あなた の 解釈 で は 現状 正しく 動作 し て い ない の だ から 。 さて 。 データ シート を 見る と 。 ピン 配置 が 1 . Anode 2 . Cathode 3 . Collector 4 . Emitter と なっ て い ます 。 LED の 極性 が 図 と 逆 です が 大丈夫 です か ? Arduino で それなり の 変化 が あっ た の なら 大丈夫 な の かも 知れ ませ ん が 、 LED が 点灯 し て い なく て 外 光 の 変化 が AD で 見え た だけ かも 知れ ませ ん 。 それ を 判断 する に は 、 先 の analogRead で の 値 が 重要 な 情報 に なり ます 。 また 、 受光 側 の エミッタ 抵抗 です が 、 3K Ω の 根拠 は なにか あり ます か 。 データ シート から 、 IF 20m A の 時 の Ic は 最小 0.5m A と なっ て い ます 。 3K Ω に 0.5m A 流す と 電圧 は 1 . 5 V です から 、 CMOS レベル の 判別 だ と 確実 に High と 判断 さ せる こと は 出来 ない かも 知れ ませ ん 。 ここ を 10K Ω ぐらい に する と どうでしょう 。 
javac Main . java java Main です よ 。 onyx とかいう アプリ は 関係 ない と 思い ます 。 
最大 値 が 明記 さ れ て い ない という こと は 、 明確 な 最大 値 は ない という こと です 。 他 の こと に メモリ を たくさん 使う と String の 最大 文字数 も 変わっ て き ます し 、 BigDecimal も そう でしょ う 。 PC の メモリ が 小さい と さらに 小さく なっ て くる と 思い ます 。 仮に JVM の 設定 や PC の メモリ を 限界 まで 余裕 を 持た せ た として 、 String は 1 文字 を 取り出す メソッド ( String # chatAt ( int )) の 引数 が int 型 な ので 、 Integer . MAX _ VALUE ( 2 ^ 31 - 1 ) の 個数 まで しか 入ら ない と 予想 でき ます 。 BigDecimal は よく わかり ませ ん 。 が 、 最終 的 に to String () で 値 を 表示 さ せる という こと は 、 少なくとも 最大 桁 数 は String 最大 長 より も 短い でしょ う 。 
java で 0 と は 、 文字 の 0 と 数値 の 0 が あり ます 。 文字 は ' 0 '( 数値 で は 48 ) か ' ０ '( 全角 で 65296 ) 数値 は 0 と 表記 し 、 それぞれ デフォルト で は char , int 型 に 設定 さ れ ます 。 オーバーロード し た メソッド など に 読み取っ て もらう ため に は 次 の よう に 指定 し ます 。 int 型 0 long 型 0 L float 型 0 . 0 f double 型 0 . 0 char 型 ' 0 ' もしくは ' ０ ' byte 型 ( byte ) 0 また 、 オブジェクト を 生成 し た 時 に メンバ 変数 に 初期 値 を 設定 し ない と 、 プリミティブ 型 に は 0 が 設定 さ れ ます 。 この 値 で 計算 する こと が でき ます 。 java で null と は オブジェクト型 ( 参照 型 ) の 変数 に 格納 さ れる 値 です 。 どこ も 参照 し ない という 意味 です 。 0 と 違っ て 直接 役に立ち ませ ん が 、 if ( object != null )//[ オブジェクト が 何 か を 参照 し て いる か どう か 判定 ] といった 比較 が できる ので エラー 回避 等 に 利用 さ れ ます 。 オブジェクト を 生成 し た 時 に メンバ 変数 に 初期 値 を 設定 し ない と 、 オブジェクト型 に は null が 設定 さ れ ます 。 この 値 を 活用 する こと は でき ない ので 、 初期 値 を 設定 する 必要 が あり ます 。 
http:// www . techscore . com / tech / Java / Apache Jakarta / Velocity / 4 / これ ？ この 場合 、 Human クラス は getName () を 持っ て いる こと が 前提 です 。 daichi _ 0185 さん の ソース で は String な ので name プロパティ が あり ませ ん 。 # foreach ($ userName in $ group ) $ userName # end みたい に すれ ば 普通に 出力 さ れ ない でしょ う か 。 
ピタゴラスの定理 を 使い ます 。 二つ の 座標 を 通る x 軸 と y 軸 に 平行 な 補助 線 を 書く と 、 直角三角形 が でき ます よ ね 。 x と y の 辺 の 長さ は 二つ の 座標 の 差分 で 求め られる ので 、 それから 求め ます 。 この メソッド を 使う と 楽 です 。 Math . pow ( double , double );// 第 一 引数 の 値 を 第 二 引数 を 指数 に し て べき乗 した値 を 返す Math .s qrt ( double );// 平方根 を 返す 
list .s ort ( new Comparator < Map >() { @ Override public int compare ( Map o 1 , Map o2 ) { int n 1 = Integer . valueOf (( String ) o 1 . get (" salary ")); int n2 = Integer . valueOf (( String ) o2 . get (" salary ")); return n 1 - n2 ; // 昇順 return n2 - n 1 ; // 降順 } }); Map は 必ず salary キー の アイテム を 含み 、 salary キー の アイテム は 必ず Integer . valueOf で 整数 に 変換 できる こと 。 
実際 に 行う 操作 と その 頻度 を 明確 化 し た 方 が いい です 。 List < Map > 型 で ある こと が 確定 し て い て 、 まれ に ・ salary の 値 が 最も 大きい Map を 取り出す 操作 ・ salary の 値 が 最も 小さい Map を 取り出す 操作 を 行う なら 、 そういう コード を べた 書き すれ ば 済む でしょ う 。 ソート する まで も あり ませ ん 。 ところが 、 頻繁 に ・ salary の 値 が 最も 大きい Map を 取り出す 操作 ・ salary の 値 が 最も 小さい Map を 取り出す 操作 を 行う なら 、 List < Map > 型 で なく SortedSet < Map > 型 に する の も 手 です 。 常に salary の 値 で ソート さ れ た セット を 保持 する こと が 可能 です 。 さらに ・ 指定 し た salary の 値 の Map を 取り出す 操作 を 頻繁 に 行う よう なら 、 Map < String , Map > 型 か SortedMap < String , Map > 型 を 使っ た 方 が よい でしょ う 。 
Arrays . copyOf は シャローコピー です が 。 どんな コード を 書い て どんな 問題 が 発生 し た の か 説明 し て ほしい です 。 
jre 1 . 8 . 0 ＿ 71 が 、 インストール さ れ て いる こと を 確認 し ましょ う 。 指定 し なけれ ば 、 c :\ Progra Files ( 86 )\ java に 有る 筈 です 。 パス を 設定 し て 、 コンパイル し た Java の プログラム を 走ら せ て み ましょ う 。 
Java で は 不可能 です 。 JavaScript なら 可能 かも しれ ませ ん 。 Java と JavaScript は 全く の 別物 です 。 
> カンマ 付き の 数値 を 文字列 に 変換 カンマ 付き の 文字列 を 数値 に 変換 の 間違い で は ？ int n = new Scanner (" 12 , 345 "). nextInt (); みたい に 書け ます 。 
Properties ファイル を テキストエディタ で 作成 し た 時 ( SJIS など ) と Java で 読み込む 時 （ UT F8 など ） で キャラ セット が 異なる から だろ う 。 Properties ファイル の 文字コード を 変え て 保存 し 直す か （ Windows メモ帳 の 保存 画面 でも できる 。 ） 、 下記 の よう に キャラ セット 指定 し て 読み込む 。 Reader の close を 呼び出す ため に try with resouces 文 を 使う と いい try ( Reader fr = new InputStreamReader ( new FileInputStream (" C :\\～\\ aaa . Properties "), " MS 932 ")) { // もしくは try ( Reader fr = Files .new BufferedReader ( Paths . get (" C :\\～\\ aaa . Properties "), Charset . forName (" MS 932 "));) { Properties p = new Properties (); p . load ( fr ); String name = p . getProperty (" Name "); System . out . println ( name ); } 
> 戻り値 の 形 が Tour で ある意味 は なん でしょ う か ？ ツアー を 表現 し て いる の が Tour オブジェクト です から 特定 の ツアー に関して 情報 を 得たい 場合 に Tour オブジェクト を 取得 する の は 自然 な 設計 だ と 思い ます 。 findTour メソッド が ツアー ごと に ユニーク な 値 と なっ て いる ツアー コード から ツアー を 検索 し て Tour オブジェクト として 返す の も 自然 だ と 思い ます 。 TourManager クラス が データベース を 使う よう に 変更 さ れ も findTour メソッド の ユーザ は 何 も コード を 修正 する 必要 が あり ませ ん 。 > 特に findTour () メソッド で の 検索 が どう すれ ば よい か わかり ませ ん 。 findTour の 引数 の ツアー コード ( String オブジェクト ) と 一致 する ツアー を 検索 する の です から Tour :: getCode の 戻り値 と 引数 を 比較 し ます 。 文字列 の 一致 は equals メソッド で 行い ます 。 TourManager :: findTour と StartUp :: main を 以下 の よう に すれ ば 想定 し て いる 動作 に なる と 思い ます 。 public Tour findTour ( String tourCode ) throws TourException { if ( tourCode == null || tourCode . isEmpty ()) { throw new IllegalArgumentException (" ツアー コード を 指定 し て ください 。 "); } for ( Tour tour : tourList ) { if ( tourCode . equals ( tour . getCode ())) { // System . out . println ( tour ); return tour ; } } throw new TourException (" ツアー コード が 無効 です : " + tourCode ); } / / - - - - - - - - - - - - - ------------------------- class StartUp { public static void main ( String [] args ) { if ( arg s.l ength == 0 ) { System . out . println (" コマンドライン 引数 に ツアー コード を 入力 し て ください 。 "); System . exit ( 0 ); } TourManager tourManager = new TourManager (); try { Tour tour = tourManager . findTour ( args [ 0 ]); tour . print (); } catch ( TourException e ) { System . out . println ( e . get Message ()); } } } / / - - - - - - - - - - - - - ------------------------- / / - - - - - - - - - - - - - ------------------------- ご 質問 の 内容 から は 離れ ます が StartUp 以外 の クラス は 他 の パッケージ から も 扱える よう に public に する べき か と 思い ます 。 また public メソッド や protected メソッド は 通常 引数 の チェック を 行い 、 不正 な 場合 は 実行 時 例外 を スロー する よう に 設計 し ます 。 TourManager クラス は 現在 配列 で ツアー を 管理 し て い ます が 、 この 練習問題 ( 課題 ？) の 性質 上 、 重要 で は ない ので そう なっ て いる の かも しれ ませ ん が 、 もし ツアー の 登録 や 削除 を 行える よう に する 場合 に java . util . List を 使っ て 実装 する 場合 は 以下 の よう に なる と 思い ます 。 ////////// TourManager . java ////////// import java . util . ArrayList ; import java . util . List ; import java . util . Objects ; public class TourManager { private static final Tour [] defaultTours = { new BusTour (" A 001 ", " 鎌倉 巡り ツアー ", 5500 , 8 ), new BusTour (" A 002 ", " ゆったり 下田温泉 ツアー ", 8500 , 9 ), new BusTour (" B 001 ", " 房総半島 食べ 尽くし ツアー ", 9000 , 10 ), new TravelTour (" X 001 ", " 春 の 金沢 見どころ 満載 ", 18000 , " 二 泊 三 日 "), new TravelTour (" X 002 ", " 大阪 食い倒れ プラン ", 12000 , " 一 泊 二 日 ") }; private List < Tour > tourList = new ArrayList <>(); public TourManager () { for ( Tour tour : defaultTours ) { tourList . add ( tour ); } } public boolean removeTour ( Tour tour ) { return tourList . remove ( Objects . requireNonNull ( tour )); } public boolean addTour ( Tour tour ) { return tourList . add ( Objects . requireNonNull ( tour )); } public Tour findTour ( String tourCode ) throws TourException { if ( tourCode == null || tourCode . isEmpty ()) { throw new IllegalArgumentException (" ツアー コード を 指定 し て ください 。 "); } for ( Tour tour : tourList ) { if ( tourCode . equals ( tour . getCode ())) { // System . out . println ( tour ); return tour ; } } throw new TourException (" ツアー コード が 無効 です : " + tourCode ); } public void showTourList () { for ( Tour tour : tourList ) { tour . print (); System . out . println (""); } } } 
最低限 知っ て いる べき （ 勉強 す べき ） こと - for , while など の 繰り返し 処理 - if , switch など の 条件 分岐 処理 - 配列 , リスト など の 単純 データ構造 四則演算 ， 変数 代入 ， いくつ か の 文字列 処理 ， 繰り返し ， 条件 分岐 を 知っ て いれ ば ， まぁ 大抵 の もの は 作れる ． ここ まで は 全部 メイン 関数 に ベタ 書き で も いい ． 次に 勉強 す べき な の が ， 処理 を 切り出し て 関数 化 （ メソッド 化 ） する 方法 ． これ が わかれ ば ， 他 の クラス の 関数 （ 例えば Math .s in とか ） を 呼び出し たり ， 同じ 処理 を 関数 に 分け て 呼び出し たり し て プログラム を 発展 さ せ て いく 感じ が つかめる と 思う ． 「 あれ ？ コレ と コレ 似 た よう な 処理 じゃん … 何度も 書く の 面倒 だ から 関数 に しよ う 」 と 思える よう に なれ ば 完璧 ． ここ まで は ， Java に 限ら ず プログラミング を する 上 で 大事 な 要素 ここ まで き て ようやく 「 オブジェクト指向 」 を 勉強 できる と 思う （ これ 以前 の ステップ を 飛ばす と 無理 と は 言わ ない けど 難しい と 思う ） ． static とか public とか の 意味 は この 辺 まで 記述 する 必要 の ある 「 おまじない 」 として 意味 は 無視 し て い て も いい ． オブジェクト指向 を 勉強 し て たら 勝手 に わかる こと だ から ． 
二 重 ループ に し ます 。 for ( int i = 4 ; i > 0 ; i --) { for ( int j = 0 ; j < i ; j ++) System . out . print ("□"); for ( int j = 0 ; j < i ; j ++) System . out . print ("■"); } 
JPanel jp = new JPanel (); ↑ この まま だ と putMonster で null pointer Exception が で ます 。 jp = new JPanel (); に 直し ます 。 materia l . png の 画像 サイズ が 小さい と ご 質問 の エラー が 出る よう です 。 materia l . png の 画像 サイズ を 大きく し たら 取り敢えず エラー は 出 なく なり まし た 。 
① 可能 です 。 ただし 、 使用 し たい メソッド が クラス メソッド ( static 修飾 子 付き ) なら ば 、 A . method () で OK です 。 ② これ は どう いっ た 状況 でしょ う か 。 クラス A が 、 最初 に クラス B に データ を 一 度 だけ 渡す の で あれ ば 、 コンストラクタ の 引数 に 渡す こと で 可能 です 。 また 、 何 か あっ た 際 に その 都度 データ を 渡す の で あれ ば 、 ・ A 側 で B の setter メソッド に データ を セット する ・ A 側 で text ファイル に 落とし込ん で から 、 B で 読み込む ・ モデル クラス を 使う など など の 方法 が ある の で は ない か と 思い ます 。 
こんばんは 。 cnt .s hadowColor ="# FFFFFF "; で 影の 設定 http:// www . htmq . com / canvas / shadow Color .s html cnt .s trokeStyle ="# FFFFFF "; で 、 線 の 色 http:// www . htmq . com / canvas / strokeStyle .s html ではでは 。 
サーティファイ 社 の 資格 は 主 に 学生 向け な の で は ？ プロ プログラマ は オラクル 社 の 資格 を 取り ます から 。 http:// www . oracle . com / jp / education / certification / jse 8 - 2489021 - ja . ht ... いずれ に せよ 本 を 読む だけ で なく プログラム を たくさん 書く こと が 重要 だ と 思い ます 。 
カク カク と Attempting to download は 関係 あり ませ ん 。 ラグ い の は スペック 不足 だ から です 。 画面 の 描画 を 軽く する 設定 に 変更 し たり 、 サイズ を 小さく し たり Optifine など の 軽量 化 Mod の 導入 を 検討 し て ください 。 Mod 導入 で 躓く ひと が 多数 です 。 ご 自分 でも できる か 熟考 の うえ 導入 要 否 を 決定 ください 。 また 質問 の 仕方 も 、 解決 し て もらう ため に 必要 と なる 情報 が 何 か を ( マイクラ フォーラム など で ) 確認 し て 提示 し ましょ う 。 質問者 の マナー です 。 画像 の 文字 読め ます か ? 正しく 読める ん です か ? 読め ない 画像 って ... 意味 ある ん です か ? 
postgresql - jdbc の Jdbc 4 Connect ion . isValid は 9. 1 - 903 で 実装 さ れ た そう です 。 コミットログ に よれ ば 2012年 1月 ・ 9. 1 へ は 9月 です 。 ドライバ が 古 すぎる ん でしょ う 。 アップデート する 必要 が ある ん だ と 思い ます 。 せめて 質問 する とき は Tomcat , JRE ( JDK ), pgjdbc の バージョン 情報 位 は 書い た 方 が いい と 思い ます 。 
とりあえず minim は 使える よう に なっ た の か な 。 「 効果音 を 付属 」 とか 「 効果音 を 自分 の 持っ て き たい ポイント まで 持っ て くる 座標 」 という の が 意味 が わかり ませ ん ... 検索 力 より も 「 自分 の やり たい こと 」 を 他人 に 伝わる よう に 記述 する 、 端的 に いう と 正しい 名前 を 付ける こと の 方 が 先 で は ... 名前 が 正しく ない と 検索 も 出来 ませ ん し ね 。 
メイン クラス の 変数 と は メンバ 変数 という こと で よろしい です か ？ 継承 や 内部 クラス といった 方法 を 使う か 、 オブジェクト を 使用 すれ ば でき ます 。 // オブジェクト の 生成 class A { int i = 0 ; } class B { void set (){ A a = new A ();// オブジェクト の 生成 a . i = 1 ;// メンバ 変数 に アクセス } } // static を 使用 し た 場合 class A { static int i = 0 ; } class B { void set (){ A . i = 1 ;// クラス 変数 に アクセス } } // 継承 class A { int i = 0 ; } class B extends A { void set (){ i = 1 ;// 直接 書き換え } } // 内部 クラス class A { int i = 0 ; class B { void set ()[ i = 1 ;// 直接 書き換え } } } main メソッド は static な ので 、 main 内 で 自ク ラス の オブジェクト を 生成 し て から アクセス し たり 、 呼び出す メンバ 変数 や メソッド を static に する 必要 が 出 て くる と 思い ます 。 
＞ TimeChartView (); これ に 時間 が かかっ て いる の で は ない でしょ う か １ 行 づつ デバッグ し て み ましょ う 
質問 を 誤解 し て い たら すみません 。 例えば コマンドプロンプト で 以下 の よう に 起動 し た と し ます 。 > java Sample C :\ Users \ test . txt この 時 、 Sample . java の 変数 args [ 0 ] に は 「 C :\ Users \ test . txt 」 が 代入 さ れ ます 。 (「…」 は Java における 文字列 の 内部 表現 だ と 思っ て ください 。 ) この 値 から File インスタンス を 作成 する に は new File ( args [ 0 ]); と すれ ば よい です 。 これ は 下記 と 同じ 意味 です 。 new File (" C :\\ Users \\ test . txt "); わざわざ 「\」 を 追加 する 処理 は 必要 あり ませ ん 。 
今更 覚え なく て いいんじゃない か な ？ それ より も 若く て 、 いき の いい 奴 を 入れ て 、 そいつ を コントロール し た 方 が 良い か と 。 SA Struts 、 私 も 大好き な フレームワーク でし た が 、 もう 今年 で EOL で 、 もう メンテナンス さ れる こと は あり ませ ん 。 せっかく 作っ た もの です が 、 もう 、 リプレース を 考え ない と いけ ない です よ 。 java に し て も 、 SA Struts に し て も 概念 や ポリシー が とても 重要 な もの です 。 素早く 作れる の は 、 設定 や 仕掛け を 設計 し て 仕込む の で は なく 、 概念 や ポリシー に そっ て ルール ベース で 組み立てる から です 。 つまり 概念 や ポリシー から 導か れる ルール を 知っ て いれ ば 、 悩む こと なく 、 何処 に 何 を 仕込め ば 期待 し た 動き を する か 自ずと 決まる そういう もの な の です 。 今 から そういった こと を 覚える より も 、 さらに その 先 を 考え て 、 若い エンジニア に バトンタッチ する こと を 考え ましょ う 。 
http:// help . eclipse . org / luna / index . jsp ? topic =/ org . eclipse . platform .... 
配列 内 に は "" が ある わけ で は なく 、 データ として は "/ bin / sh " は [/ bin / sh ] が 格納 さ れ て い ます 。 その ため 、 勝手 に 余計 な "" を 付け たり はしません 。 また 、 Runtime クラス は 実際 の 処理 を wrap し て おり 、 "" を 意識 せ ず に Runtime . getRuntime (). exec ( 配列 ); と すれ ば 、 自動的 に 引数 配列 変換 し て 実行 し て くれ ます 。 です から シェル 名 と ファイル パス を １つ の 配列 要素 に せ ず に 分け て ｛"/ bin / sh ","- c "," シェル 名 "," ファイル パス "} でも 構い ませ ん 。 なお 、 現在 は Runtime クラス で は なく ProcessBuilder クラス を 使う の が 普通 です 。 Runtime クラス は JDK 1 . 4 互換 の ため に 残さ れ て いる だけ で 、 使用 す べき で は あり ませ ん 。 ProcessBuilder を 使用 し て いる 場合 . command () メソッド で 、 現在 設定 さ れ て いる コマンド を List 形式 で 取得 する こと が でき ます 。 
ただ の Chromebook 好き です から 、 詳しく は 分かり ませ ん が 、 出来る よう です 。 「 Chromebook に 開発 環境 を 実装 する 方法 ― Ruby on Rails , PHP , Python , Java , Node.js ほか ― 」 http:// chromesoku . com / development - on - chromebook / 「 Chromebook は ただ の ネットブック じゃ ない っぽい 」 http:// unsolublesugar . com / 20150905 / 235101 / 動画 を 綺麗 に 見 たい と かじゃ なきゃ 、 三 万 円 以下 で 入手 できる Chromebook で 充分 でしょ う 。 
内容 は 同じ です 。 ブロンズ の Java 7 と Java 8 の 試験 は 共通 です から 。 Java 7 の 時代 ( 2 ～ 5年前 ) に 出版 さ れ た 本 に は 7 と 書か れ て い て 、 Java 8 の 時代 ( ごく 最近 ) に 出版 さ れ た 本 に は 7 / 8 と 書か れ て いる はず 。 
そこ に ちゃんと 動く よう に コード 書け 、 という こと 。 
JDK の 中 に は JDK 本体 と JRE が 入っ て い ます 。 たぶん その JRE だ と 思い ます が 。 javac が 実行 する に は 環境変数 path を 変更 する 必要 が あり ます 。 
Eclipse による Android 開発 の ため の プラグイン は 、 去年 開発 が 終了 し 、 去年 末 で サポート も 打ち切ら れ まし た 。 その ため 、 開発 終了 以降 の Android SDK の 変化 に は 対応 でき ず 、 いろいろ 問題 が 生じ ます 。 この 問題 は styles . xml の 記述 を 改める こと で 対応 可能 かも しれ ませ ん が 、 いずれ また 別 の 問題 に ぶつかる でしょ う 。 です から 、 新しい 公式 開発 環境 で ある Android Studio に 移行 する べき です 。 去年 まで Eclipse 環境 が 現役 だっ た ため に 、 ネット や 書籍 で も まだ Eclipse を 使っ た 資料 が 山 ほど ある の は 確か です 。 それら が 全て ダメ に なる わけ で は なく 、 コーディング に関して は 十分 資料 に は なる はず です 。 
Apache の HttpClient を お勧め よう か と 思っ た の です が Jersey を 検索 し て みる と クライアント 機能 も 実装 さ れ て いる よう です 。 HTTP クライアント として 使う jersey - client http:// www . akira koyasu .net / 2012 / 02 / 05 / jerey - client - useful - http - clie ... レスポンス が JSON や XML と なる REST API サービス を 提供 し て いる サーバー に リクエスト を 送る の で あれ ば 、 HttpClient より も 簡単 に レスポンス を 得 られる よう です 。 【 Java 】 【 REST 】 Java で RESTRest クライアント を 実装 する ～ ライブラリ jersey - client を 使用 し た 場合 ～ http:// blogs . yahoo . co.jp / dk 521123 / 32824085 . html " jersey クライアント post " で 検索 する と 、 Post する 場合 の サンプル も たくさん 見つかり ます 。 
アップデート を 待つ 、 もしくは JRE の ダウングレード を する 。 
下記 リンク 先 の オプション は 試し た の か な ？ Enabling JSP hot deploy on Wildfly 8 . x http:// vmutter . blogspot .jp / 2015 / 08 / enabling - jsp - hot - deploy - on - wildf ... 
Visual Studio を ちゃんと インストール でき た なら 、 メニュー に ・ 開発者 コマンドプロンプト が ある はず 。 それ 使う の が いちばん 早道 。 https :// www . google . co.jp / search ? hl = ja & q = Visual + Studio +% E 9 % 96 % 8 B % E 7 % ... 
・ java . io . FileNotFoundException 存在 し ない ファイル 名 に対して 入出力 の オブジェクト を 生成 しよ う と する と 発生 し ます 。 例 : FileInputStream fis = new FileInputStream (" a "); 注意 点 : ファイル の パス が java コマンド 実行 時 の カレントディレクトリ に 対応 し て いる か どう か 、 package 利用 時 に は 特に 注意 する 。 ・ java .net . ConnectException ソケット 通信 において 、 接続 可能 な サーバー が 見つから なかっ た とき に 発生 する エラー 例 : Socket socket = new Socket ( ip , port ); 注意 点 : 問題 が ある 例外 で は ない ので 、 try で 強制終了 を 避けれ ば よい 。 ・ java .net .S ocketTimeoutException ソケット 通信 において 、 ソケット に タイムアウト を 設定 し た 際 に タイムアウト が 発生 し た 時 に 出る エラー 例 : socket .s etSoTimeout ( 10000 ); 注意 点 : 上 に 同じ ・ java .net . BindException サーバー ソケット を バインド ( 開始 ) する 際 に 、 すでに ポート が 別 の サービス に 使用 さ れ て いる と 発生 する 。 ( たぶん 原因 は それ に 限ら ない けど ) 注意 点 : エラー が 発生 し たら 実行 中 に 再び バインド する わけ に も いか ない ので 、 正常 に プログラム を 停止 さ せる 。 自分 は これら に 加え て 、 A rr a y IndexOutOfBoundsException が たま に 出る くらい です ね 。 String str = ""; str .s ubstring ( 1 , 2 ); この よう に 想定外 な 文字列 の 切り取り を しよ う と する と 発生 し ます 。 
Chrome 、 Edge 、 Firefox ( 64 bit 版 ) など 先進 的 な ブラウザ で は NPAPI は サポート さ れ て い ませ ん 。 NPAPI の 方 が 消え て いく 運命 に ある と 思い ます 。 と は いえ 、 Chrome が どう なる か は 知り ませ ん 。 
java script で も オブジェクト 志向 の プログラミング は でき ます 。 勿論 継承 も でき ます 。 public や private といった アクセス 修飾 子 は 確か に 、 オブジェクト 志向 の ため の 機能 です が 、 オブジェクト 志向 の 中 で も 「 カプセル化 」 という 概念 を 実現 し やすく する ため の 機能 で あっ て 、 「 継承 」 と は 特に 関係 ない です 。 
おはよう ござい ます 。 リクエスト どうも です 。 # include < stdio . h > # ifndef oneokrock 0126 # define MYNAME " 自分 の 名字 は " # else # define MYNAME " 自分 の 名前 は " # endif char input ( char * mess ) { char in ; printf ("% s ？", mess ); scanf ("% c ",& in ); return in ; } void disp ( char name , char * mess ) { printf ("% s % c です ", mess , name ); } int main () { char a ; a = input ( MYNAME ); disp ( a , MYNAME ); return 0 ; } 
java 開く 、 と は どういう こと でしょ う java の プログラム を 実行 する という こと なら コンソール を 起動 し て 、 コンソール から java コマンド で プログラム を 実行 し て みれ ば 良い か と エラー が 起き て いれ ば メッセージ が 出力 さ れる と 思い ます 
Windows の ユーザー アカウント 名 に 日本語 を 使っ て ませ ん か ？ 
> どう し たら ヤフー に 戻り ます か ？ ブラウザー の 設定 に インター ネットオプション の よう な 物 が ある ので 、 そこ の URL に yahoo の URL を いれれ ば OK です 。 
でき ませ ん 。 java に そのよう な 仕様 は あり ませ 。 な ので 、 Shell で ラッパー スクリプト を 作る か 、 C で ラッパー プログラム を 書く の が 一般的 です 。 > java .s h test . jar java .s h の 実装 java - Xms 512m - X m x10 24m $1 $1 に は test . jar が 格納 さ れ て いる ので 。 
たぶん anni そのもの が 閉じ て いる の だ と 思い ます 。 今 、 わたし も その 状態 です 。 。 。 。 。 。 
プロジェクト の プロパティ から Java の ビルド ・ パス を 選び 、 当該 プロジェクト を プロジェクト に 入れる か 、 当該 プロジェクト の クラス を 外部 クラス ・ フォルダ として ライブラリ に 追加 すれ ば いい の で は ない か と 思い ます 。 
> ... コンパイル する と 、 下記 の よう に 表示 さ れ 、 エラー に なっ て しまい ... ・ これ は 、 コンパイル エラー じゃなくて 、 実行 時 エラー 。 ・ 各 例外 の 説明 は 、 API リファレンス に ある 。 https :// docs . oracle . com / javase / jp / 7 / api / java / lang / ArrayIndexOutOfBo ... ・ 冷害 発生 時 の stackTrace に は 、 呼び出し 側 の 根元 から の ソース 位置情報 が 示さ れ て いる 。 あなた の 場合 は CommandArgs クラス の main メソッド 、 Command Args . java の 10 行 目 が 直接 の エラー 発生 箇所 。 まずは 「 そこ を 見る 」 の が 基本 。 ソースコード が 不明 な ので 、 以下 は 完全 なる 推測 ( 妄想 )。 たぶん ・ コマンドライン 引数 ( main メソッド の String [] args 引数 ) を やっ て み ましょ う みたい な 課題 を やっ て て 、 問答無用 に args [ 0 ], args [ 1 ] の よう に args 配列 の 要素 を 参照 する コード が 書か れ て て 、 かつ 、 ・ コマンドライン 引数 は まったく 与え て い ない の で は ない です か ？ コマンドライン 引数 は 、 名前 の 通り コマンドライン から 与える もの 。 ターミナル コンソール から なら 、 java CommandArgs hello world の よう に 引数 ( この 場合 は hello と world ) を 与えれ ば いい わけ だ が 、 eclipse の よう な IDE を 使っ て いる と 、 こう は いか ない 。 事前 に プロジェクト で の 設定 み たく 、 コマンドライン 引数 を 設定 し て おか ない と なら ない 。 それ を やら ず に 実行 し 、 かつ コード の 方 は 無条件 に args 配列 要素 を 参照 する ので 、 配列 範囲 外 アクセス に なっ て いる の で は ない か ？ が 、 私 の 妄想 。 Yes なら 、 Java args eclipse 等 の 単語 で 、 ネット 検索 し て みる と いい 。 ( e . g .) http:// fernweh .jp / b / main - argument / ハズレ なら 、 ごめん 。 でも 、 なん に しろ 「 Command Args . java 10 行 目 」 に なんらかの 配列 要素 参照 が あり 、 その インデックス 値 が 「 配列 の 範囲 外 」 に なっ てる ので 、 Java 様 に 強制終了 さ せ られ て いる 、 まで は 確か だ と 思う 。 
スペース や 空 行 や コメント は 、 無関係 です 。 
message . get Message (); を System . out . println ( message . get Message ()); に すれ ば いい の で は ない でしょ う か ？ 一応 簡単 に 解説 する と 、 Message message = new Message (); で Message クラス の インスタンス が 作成 さ れ 、 message に 代入 さ れ ます 。 そして 、 System . out . println ( message . get Message ()); を 実行 する と 、 先 ほど 作っ た message （ Message クラス の インスタンス が 入っ て いる ） の get Message () メソッド を 呼び出し ます 。 get Message () メソッド は インスタンス の フィールド message （" Hello " で 初期 化 さ れ て いる ） を 返し ます 。 そして 、 System . out . println ( message . get Message ()); で 返さ れ た String 型 の インスタンス （ この 場合 は " Hello "） が 表示 さ れる 。 という こと です 。 
その 方法 で アクセス する に は 、 apache に 指定 さ れ た URL は tomcat に proxy する 設定 を いれ なけれ ば 404 エラー ( ページ が 存在 し ませ ん 。 ) が 表示 さ れ ます 。 それ も 表示 さ れ て い なけれ ば 、 apache が 起動 し て い ませ ん 。 設定 に ミス が ある と apache は 起動 し ませ ん 。 apache を 経由 せ ず に ダイレクト に tomcat に アクセス する 場合 は 、 tomcat の default の http listener が 有効 で あれ ば 8080 ポート に なり ます ので 、 URL の IP の 指定 の 後 に 続い て : 8080 の ポート 指定 を 付け ます 。 ただし 、 OS の ファイアウォール の 設定 で 外部 から の 8080 ポート へ の アクセス を 許可 し なけれ ば なり ませ ん 。 
mod アリ の 環境 です が 自分 も それ くらい 使用 さ れ て ます 。 バニラ なら ちょっと 食い 過ぎ な 気 が し ます 。 
C → C++ ほぼ そのまま 動く （ C++ は C と の 互換性 を 考慮 し て いる ） ． OOP で 書き換え て も いい けど ， 楽 する なら そのままで ． ただ ， struct Data data ; は Data data ; で いい ので ， 書き換える ． malloc , free は new , delete に 書き換える ． （ malloc とか も 使える けど ， 後々 OOP を 取り入れ た 時 に 大変 な こと に なる ） Java → C++ クラス 構造 とか は 変える 必要 ない （ 一応 C++ 的 な OOP の 作法 も ある けど ， 気 に し て たら 進ま ない ） ． 文法 とか 基本 的 な 型 とか は 調べ ながら 書き換える ． （ ほぼ 同じ だ から 簡単 ） Java と 違っ て ， クラス で も そのまま 関数 なんか に 渡す と コピー さ れ て しまう ので ， ポインタ で 渡す か 参照 渡し に する ． main 関数 は C言語 と 同様 に 外 に 出す ． new し た 変数 は どこ か で delete する （ あるいは スマートポインタ を 使う ） ． この くらい か な ． 詳細 は キーワード で ググる ． 
まっとう な 手段 で は 無理 です 。 html ソース を 見れ ば わかり ます が 、 投稿 し た 質問 情報 は 一意 の id だけ で 管理 さ れ て い ます 。 たとえば 、 この 質問 の 場合 、 14158134004 が 一意 id と なっ て おり 、 この id を キー として データベース 内 の データ を 引っ張っ て html を 作成 し て いる と 考え られ ます 。 html 化 し た 時点 で データベース と は 切り離さ れ て い ます ので 、 一意 id を 元 に データベース を 検索 し ない と 取れ ない 投稿者 情報 は 取得 でき ませ ん 。 やれる 方法 が ある と すれ ば 逮捕 覚悟 で サーバー クラッキング し て 知恵袋 の データベース サーバー に アクセス する こと くらい です が 、 javascript の 専門家 や プログラミング の 専門家 の 領域 で は なく 、 セキュリティ 技術者 あるいは クラッカー の 領域 です 。 
自分 も 詳しく ない ので 質問 に対する 答え に なっ て ない です が 。 。 まずは eclipse ( pleiades で ダウンロード し た もの ？) を spring 用 の eclipse ( STS ) に し た 方 が いい か と 思い ます 。 https :// spring . io / tools / sts / all 後 は この サイト を 参考 に 。 すごく 分かり 易かっ た です 。 http:// libro . tuyano . com / index 2 ? id = 11136003 spring は maven も 学ば ない と いけ ない か と 思い ます が 、 頑張っ て ください 。 
TN ( I , J ) = TO ( I , J )+ W *( TA ( I , J )- TO ( I , J )) ない も 定義 さ れ て ない TA ( I , J ) が 入っ て いる の は おかしい 。 ここ は 常識的 に は TN ( I , J ) = TO ( I , J )+ W *( TN ( I , J )- TO ( I , J )) です 。 緩和 係 数 w は どの よう に 選択 し て い ます か 。 
[ ゲーム を Java で ゼロ から 作成 する 件 ] 私 は Minecraft の 開発者 で は ない ので 、 断言 する の は 無理 です が 、 この 手 の プログラム は 、 ゼロ から 全て Java で 作れ ます 。 むしろ 、 Java で 全て 作ら ない と 、 Java を 使う メリット は ない と 思い ます 。 （ 「 メリット は ない 」 は 、 言い過ぎ でし た が 、 少なくとも 大半 の 部分 を Java で 作ら なけれ ば 、 Java の 長所 を 活かせ ませ ん ） Java は 、 よく 知ら れ て いる よう に 、 個々 の OS 仕様 に 依存 し ない で 、 プログラム が 作れ ます 。 よって 、 Java で 作っ た プログラム は 、 様々 な 環境 で 動作 が 可能 です 。 「 様々 な 環境 」 と は 、 パソコン で の 様々 な OS や 、 スマートフォン で 動作 が 可能 と 言う 意味 です 。 ところで 、 昔 から の 携帯電話 （ ガラケー ） で の プログラミング で は 、 Java は 人気 が あり ませ ん でし た 。 携帯電話 （ ガラケー ） の 個々 の ハード 仕様 に 依存 し て い た ので 、 Java の 長所 が 活かせ ませ ん でし た 。 携帯電話 （ ガラケー ） は 、 小さな 機器 な ので 、 どうしても 、 ハード 仕様 に 依存 し て しまう の です 。 しかし 、 世の中 は 技術 発展 し て スマートフォン が 登場 し まし た 。 スマートフォン は 、 パソコン に 近い 携帯電話 な ので 、 Java が 快適 に 使え ます 。 そこで 、 ゲーム 関係 の プログラミング で 、 Java で の 開発 が 増え だし まし た 。 [ C# で の ゲーム 作成 ] Java と 似 て いる 立場 の プログラミング言語 に は 、 C# が あり ます 。 C# は 、 Microsoft が 作成 し まし た が 、 標準化団体 に 提出 さ れ た プログラミング言語 です 。 標準 仕様 な ので 、 一応 Java の よう に 様々 な OS 上 で 動作 可能 です が 、 実質 上 は 、 Microsoft 系 （ Windows 系 ） が 中心 に なっ て い ます 。 C# の 場合 は 、 様々 な OS に 依存 さ せ ない と 言う より も 、 パソコン 、 ゲーム 専用機 、 携帯電話 の 個別 仕様 の 違い に 依存 さ せ ない こと が 目的 です 。 よって 、 C# で は 、 Windows パソコン 、 ゲーム機 Xbox 、 Windows Phone 系 スマートフォン で 動作 する プログラム を 作れ ます 。 なお 、 上記 で 「 Java は 、 様々 な 環境 で 動作 が 可能 」 と 前述 し まし た が 、 主 に 2D の 範囲 です 。 Minecraft は 、 3D です が 、 直方体 （ 四 角柱 ） の 3D オブジェクト を 組み合わせる 形 で 、 なるべく 負荷 が かから ない よう に し て い ます 。 これ に対して 、 C# は 、 2D から 3D まで 、 快適 に 使える こと が 目的 です 。 しかし 、 Windows Phone 系 スマートフォン は 、 営業 的 戦略 に 失敗 し て 、 今 の ところ 、 人気 が あり ませ ん 。 そこで 、 Microsoft は 、 2014年 4月25日 に 、 Nokia Corporation （ ノキア ） の 携帯電話 事業 を 買収 し 、 かつ 、 2014年 09 月 16日 に 、 ゲーム の マインクラフト （ Minecraft ） の 会社 で ある モヤン （ Mojang ） の 買収 が 発表 さ れ まし た 。 よって 、 Microsoft は 、 今後 の どこ か の タイミング で 、 買収 の 成果 を 出す こと に なり ます 。 それ が 、 3D を 快適 に 使える 環境 でし たら 、 Microsoft 系 スマートフォン は 、 少なくとも 今 より は 、 人気 が 上がる と 思い ます 。 [ 今後 の スマートフォン ] スマートフォン は 、 パソコン に 近い 携帯電話 です 。 しかし 、 スマートフォン は 、 まだ スタート し た ばかり で 、 どちら か と 言え ば 、 パソコン より も 、 ガラケー 側 に 近い です 。 よって 、 今後 スマートフォン が 技術 発展 し て 行け ば 、 C# 系 ハード で Java が 使え たり 、 Java 系 ハード で C# が 使える 可能性 も あり ます 。 すなわち 、 「 Microsoft 系 技術 を 取り入れ て 来 た スマートフォン は 、 C# を 使う ほう が 快適 だ が 、 Java で も プログラミング が 可能 」 みたい な 感じ に なる 可能 が あり ます 。 また 、 VR 等 の 3D が 快適 に 動作 する 端末 機 に なっ て 行く 見込み です 。 そう なっ て 行く と 、 だいぶ パソコン に 近い 携帯電話 と 言う 存在 に なり ます 。 [ 買収 成果 後 の Minecraft は 、 どう なる の か ] 買収 成果 を 出す 時 の Minecraft は 、 どう なる の か 、 と 言う 疑問 が 出 ます 。 おそらく 、 現行 の Minecraft は 、 わざわざ C# で 作り直す よう な 無駄 な こと は 、 し ない と 思い ます 。 Microsoft 系 スマートフォン 上 で 動作 する Minecraft だけ 、 C# で 作り直す 可能性 が あり ます 。 ただし 、 Microsoft が 、 Java 系 プログラム を C# に 移植 し やすい 技術 を 作っ たら 、 事情 が 異なり ます 。 Java 系 プログラム を C# に 移植 する 代表 例 として 、 Minecraft を 活用 する と 思い ます 。 その 手 の 技術開発 が 間に合わ なかっ たら 、 取りあえず 現行 の まま で 、 後 の バージョンアップ で 対応 し て 行く と 思い ます 。 しかし 、 その 手 の こと を やら なけれ ば 、 今 の Microsoft は 、 かなり 厳しい と 思い ます 。 
if 文 が 正しく 理解 でき て ないん じゃ ない です か ？ if ( isMultipleOf 3 (a) ){ // isMultipleOf 3 (a) が true の 場合 に 実行 さ れる ！ System . out . println ( a + " は 3 で 割り切れ ます "); } else { // isMultipleOf 3 (a) が false の 場合 に 実行 さ れる ！ System . out . println ( a + " は 3 で 割り切れ ませ ん "); } 
> jabajba 789 さん 2016 / 4 / 2013 : 33 : 00 > 1password 自動 ログイン でき ない TODO ? 
＞ どうして struts は 思っ た より 広まら なかっ た の です か ？ 前提 条件 が 間違っ て いる 。 struts は 少なくとも 2005年 に は Java を 用い た フレームワーク の デファクトスタンダード で 、 Java の Web 系 は ９ 割 以上 の システム が struts で 作ら れ て い た と 言っ て も 過言 で は ない 。 struts を 拡張 し た フレームワーク も 多数 あり 、 たとえば NTTデータ の 標準 フレームワーク terasoluna は struts で 動作 し て い た 。 struts が 廃れ た の は 単に 賞味期限 が 切れ た から に 過ぎ ない 。 なにせ 2000年 に は すでに 存在 し て い た フレームワーク な の だ から 。 今 から 15年前 の フレームワーク が 未だに 現役 ばりばり な ほど IT 技術 の 進化 は 遅く ない 。 
List < オブジェクト型 > list = new ArrayList < オブジェクト型 >(); これ に 格納 できる もの は 、 Integer , String , Double の よう な 一般 的 な もの に 限り ませ ん 。 T の 場合 は 、 自ら T クラス を 宣言 し て おり 、 その オブジェクト を 生成 し た もの を 格納 する ため に ArrayList を 宣言 し て い ます 。 list . add ( new T ()); の よう に オブジェクト を 簡単 に 増やす こと が でき ます 。 格納 できる オブジェクト は 、 T か 、 T の サブクラス で ある 必要 が あり ます 。 
ジェネリクス で は ない でしょ う か ？ U とか T とか に 意味 は ない です 。 public class Main < E > { public E date ; public E get () { return date ; } } ジェネリクス は そのままで は 未 完成 です 。 E が どう なる か 、 まだ 決まっ て い ない から です 。 よって 、 使用 する とき に E を 決め ます 。 例えば 、 Main < String > a ; という 変数 を 作る と 、 Java は 裏 で public class Main < String > { public String date ; public String get () { return date ; } } という 、 クラス を 定義 する の です 。 これ が ジェネリクス です 。 
String に 文字列 を 格納 し て 、 String クラス の charAt () メソッド で 一文字 取り出し て 調べれ ば よい の で は 。 Processing で は 、 その へん は Java で の やり方 を 調べれ ば ほぼ そのまま 持っ て こ れる こと が 多い です 。 それ より も 、 「 改行 みたい な 」 って 具体 的 に 何 を 意図 し て いる の でしょ う 。 改行 を 書き 加え た / 書き換え た ファイル を 作成 する の なら まぁ そんなに 難しく ない です けれど 、 processing は いわゆる コンソール 画面 を 普通 は 持た ない ので 、 文字列 を だらだら と 表示 する の は 標準 で は ひどく 面倒 な こと に なり ます 。 GUI 用 の ライブラリ など を 導入 すれ ば まぁな ん とか なり ます けれど 。 
; C :\ Program Files \ Java \ jdk 1 . 6 . 0 _ 35 \ bin ; 変更 後 の 環境変数 に なっ て い ます か ？ Ｃ の 前 に コロン が 付い て いる 必要 が 有り ます 。 また 、 「. jdk 」 と 「. jre 」 を 混同 し て い ませ ん か 。 「 java . exe 」 は 、 「 jre 」 ですよ。 「 jdk 」 は 、 「 jaba c.e xe 」 です 。 
なおす という 視点 で は ない です けれど 、 HSP スクリプトエディタ を 先 に 開い て メニュー の [ ファイル ][ 開く ] で 開く の は どうでしょう 。 なおす の は " Windows 拡張子 関連 付け " で ググっ て み て その 内容 を 試し て み たら どう なる かしら 。 
■ 例 １ ： Scanner # nextInt () を 使う LinkedList < Integer > list = new LinkedList < Integer >(); Scanner scanner = new Scanner ( System . in ); while ( scanner . hasNextInt ()) { list . add ( scanner . nextInt ()); } System . out . println ( list ); EOF に 到達 する か 、 整数 値 以外 が 入力 さ れる まで 。 一行 に 書い て も 複数 行 に 分かれ て も 同じ 。 12 34 56 78 98 76 54 32 → [ 12 , 34 , 56 , 78 , 98 , 76 , 54 , 32 ] ■ 例 2 ： String # split () を 使う LinkedList < Integer > list = new LinkedList < Integer >(); try { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); String line = reader . readLine (); String [] tokens = line .s plit (" "); for ( String token : tokens ) { list . add ( Integer . parseInt ( token )); } } catch ( IOException e ) { e . printStackTrace (); } 
手っ取り早い 解決 は 、 tomcat の lib フォルダ に 該当 の jar を 置く こと です 。 
public static Map < Character , Boolean > parseOption ( String option , String validChars ) { if (! option .s tartsWith ("-")) { throw new IllegalArgumentException ("- で 始まっ て い ませ ん 。 "); } Map < Character , Boolean > result = new HashMap < Character , Boolean >(); for ( int i = 0 ; i < validChars . length (); i ++) { char ch = validChars . charAt ( i ); result . put ( ch , false ); } for ( int i = 1 ; i < option . length (); i ++) { char ch = option . charAt ( i ); if (! result . containsKey ( ch )) { // validChars に 含ま れ ない throw new IllegalArgumentException (" オプション \"" + ch + "\" は 無効 です 。 "); } if ( result . get ( ch )) { // 既に 指定 さ れ て いる throw new IllegalArgumentException (" オプション \"" + ch + "\" が 複数回 指定 さ れ て い ます 。 "); } result . put ( ch , true ); } return result ; } こんな 感じ でしょ う か 。 使用 例 ： try { // 第 一 引数 ： ユーザ の 入力 し た オプション // 第 二 引数 ： オプション で 使用 可能 な 文字 ( stm なら ば s , t , m の 3 種 が 使用 可 ) Map < Character , Boolean > option = parseOption ("- st ", " stm "); if ( option . get (' s ')) { System . out . println (" s : true "); } } catch ( IllegalArgumentException e ) { System . out . println ( e . get Message ()); } 
b == false じゃなくて b = false な ん でしょ ？ 前者 は 比較 演算子 、 後者 は 代入 演算子 。 そして 、 Java は ( C言語 族 と 同じ で ) 代入 は 文 じゃなくて 式 。 b = false という 式 は 、 false という 最終 値 に 評価 さ れる こと に なる 。 P.S. いじわる ひっかけ 目的 の 重箱 問題 かしら 。 
import java . io .*; import java . util .*; を ファイル の 先頭 に 書い て 、 --- サンプル コード --- BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ));// 入力 準備 ArrayList < Integer > list = new ArrayList < Integer >(); while ( true ){ String in = br . readLine ();// 値 の 入力 list . add ( Integer . parseInt ( in ));// 数値 に 変換 し て list に 格納 if ( in . length () == 3 ) break ;// 3 桁 で ループ 終了 } for ( int n = 0 ; n < list .s ize (); n ++)// 表示 用 ループ System . out . println (( n + 1 ) + " 回 目 に " + list . get ( n ) + " と 入力 さ れ まし た 。 "); ------------------------- こんな 感じ でしょ う か 。 while の 外側 で 表示 を し て い ます 。 ArrayList は 、 java . util . ArrayList を import し て 使える サイズ が 固定 で ない 配列 です 。 基礎 的 な ArrayList の メソッド size () 配列 の 現在 の 大き さ get ( int ) 配列 の 要素 の 取得 set ( int , ?) 値 の 格納 ( 要素 番号 を 指定 ) add (?) 値 の 格納 ( 要素 の 最後 に 追加 ) System . out . println ( list ); の よう に ArrayList オブジェクト を 直接 print に 書く と 、 いい 感じ に 表示 し て くれ ます 。 入力 する 回数 が 固定 で なく 限界 が ない 場合 は こちら を 利用 する こと を お勧め し ます 。 
そんな ひねくれ た 条件 を 充たす サイト は 有り ませ ん よ 。 
JDK の 環境変数 は 設定 し まし た か ？ 見直し て み て ください 。 
Java 8 GOLD 対策 本 は 現時点 で は 存在 し ませ ん 。 Java 7 GOLD 対策 本 は 存在 する ので 、 それで Java 7 まで 完璧 に し て 、 その 上 で 下記 の 本 で Java 8 と の 差分 を 補完 し たら よい か と 思い ます 。 Java プログラマー なら 習得 し て おき たい Java SE 8 実践 プログラミング http:// www . amazon.co.jp / dp / 4844336673 / 
共通 の データ って の が なんだか わから ない です が ， 普通 に 考えれ ば … 1 は class Data ： データ 取得 から 内部 データ型 に し て データ へ の アクセサ を 提供 2 は class DataViewer ： Data クラス の インスタンス を 受け取っ て 描画 する ロジック で ， 1 も 2 も 継承 関係 は ない ． （ 独立 し た ロジック だ もの ） 3 は 1 4 は クラス に する 必要 は ない 気 が する （ ここ で ， メソッド 間 で 共有 する データ （ Data クラス と は 別 の ） もの が ある なら ， クラス 化 し て も いい ） で ， 「 共通 の データ 」 って の も ， どこ か に 責任 の 所在 が ある はず で ， そこ に 含め て しまう の が 一般的 か と 
タートル グラフィック って の は LOGO が 始まり で 、 恐らく 誰 か が Java に 移植 し た もの だ と 思い ます 。 内容 は 、 プログラム で 亀 形 の アイコン を 動かし て 絵 を 描か せる という もの です 。 たとえば 亀 を 円形 に 移動 さ せれ ば 円 が 描ける わけ です 。 その 原理 から 、 複数 の 亀 を 操作 する こと は でき ませ ん 。 亀 は マウスポインタ のようなもの な ので 、 常に 一 匹 です 。 
Scanner scanner = new Scanner ( System . in ); int n = scanner . nextInt (); for ( int i = 1 ; i < n ; i += 2 ) System . out . print (( i == 1 ? "" : ",") + i ); System . out . println (); 
Calendar を 使っ て 変換 する の が わかり やすい でしょ う 。 Date today = new Date ( System . currentTimeMillis ()); int day = 10 ; Calendar cal = Calendar . getInstance (); cal .s etTime ( today );// Date を Calendar に 変換 cal . add ( Calendar . MONTH , 1 );// 月 を + 1 cal .s et ( Calendar . DATE , day );// 日 を day に セット Date ret = cal . getTime ());// Calendar を Date に 変換 
ここ から 「 AC _ RunActiveContent . js 」 を クリック し て ください 。 ダウンロード が 始まり ます 。 http:// osdn .jp / projects / sfnet _ ragnaice / download s / Scripts / AC _ RunActi ... 
view に対して model が あり 、 model の 中 に view を 構成 する dto が 存在 し 、 controller を 介し て model の やり取り を 行い 、 controller の 中 で model と dto を 相互 変換 し 、 dto を 引数 、 戻り値 として logic を 呼び出し 、 logic の 中 で dao により DB 操作 って イメージ 
atomic や synchronize なんか の 訳語 な ん で は 無い でしょ う か 。 確か に 分かり にくい です ね 。 
JavaFX アプリケーション の 終了 は Platform # exit で 行い ます 。 start メソッド の 引数 で 受け取る stage に対して 、 stage .s etOnCloseRequest ( req -> Platform . exit ()); と ハンドラー を 登録 する こと で 、 画面 を 閉じ た 時 に 安全 に 終了 さ せる こと が でき ます 。 http:// docs . oracle . com / javase / jp / 8 / javafx / api / javafx / application / Pl ... 
おはよう ござい ます 。 java は ある程度 の リファクタリング が 可能 な 為 困難 です よ ね 。 その 為 、 通常 クライアント に は ユーザー 情報 だけ を 持た せ 、 サーバー サイド の ログイン 時 に セッション 等 を 使っ た 通信 で 渡す 方法 を 取り ます 。 ではでは 。 
環境変数 PATH の 中身 を 書き換え 間違え た の で は ない でしょ う か ？ コマンドプロンプト を 開い て PATH の 内容 を 確認 し て み て ください 。 
javap に は 完全 な ソースコード を 生成 する 機能 は あり ませ ん 。 下記 ページ で javap の 実行 例 を ご覧 ください 。 メソッド の 中身 は デコンパイル さ れ ませ ん 。 http:// docs . oracle . com / javase / jp / 7 / techno tes / tools / windows / javap . ht ... 
Test te = new Test (); を Test 1 内 の メンバ 変数 と メソッド 内 の 変数 の とこ で 二 回 通り 宣言 し て い ます 。 途中 で エラー が 起きる という こと は きっと イベント を 受け取っ た とき に 起き て い ます 。 そこ から 推測 し て イベント を 受け取る メソッド 内 で 全て の 変数 を 標準出力 する こと を おすすめ し ます 。 ちなみに 、 原因 は メソッド 内 変数 Test te に 値 は 設定 さ れ て い ます が 、 メンバ 変数 Test te に は オブジェクト は 入っ て い ます が その 内部 の lb に 値 が 設定 さ れ て い ない の が 原因 です 。 // Test 1 . java public class Test 1 implements ActionListener { Component i ; Component f ; Test te = new Test ();// 宣言 public void test 1 (){ JButton button = new JButton (" a "); button . addActionListener ( this ); button .s etBounds ( 110 , 10 , 100 , 50 ); i = button ; Test te = new Test ();// 宣言 の 上書き t e.t est ();// 上書き し た オブジェクト に 値 を 設定 f = te . lb ; } @ Override public void actionPerformed ( ActionEvent e ) { // TODO 自動 生成 さ れ た メソッド ・ スタブ te . lb .s etText (" c "); } } i と f など 結局 利用 し て い ませ ん し 、 te も 上書き で 使用 し て い ます 。 te を 上書き し ない か 、 f を 利用 する こと で 解決 する と 思い ます 。 
とりあえず http:// 3846 masa . blog .jp / archives / 1038375725 . html に ある コード で 2 画面 で 動い た けど 。 2 枚 め 画面 の 動作 は class SecondApplet の setup () とか draw () に 書く みたい 。 
「 どの データ に は どの アルゴリズム が 適し て いる か ？ 」 という 問い に 正しく 答える こと は 誰 に も でき ない と 思い ます 。 もちろん 問題 に 応じ て 使う べき アルゴリズム という の は 本来 は ある の でしょ う けど 、 それ を 知る 術 は 今 の ところ ない ので 、 とにかく 試し て みる しか ない です 。 所得 が 年間 ○ ○ 万 円 以上 の 人 と ○ ○ 万 円 未満 の 人 を 分類 し たい として 、 あなた が 解析 しよ う と し て いる データ は どんな もの です か ？ 例えば たくさん の 人 の （ 性別 、 年齢 、 業種 、 職種 、 勤続 年数 、 学歴 ） という データ が あっ て 、 これら の データ から その 人 の 所得 が 800 万 円 以上 で ある か そう で ない か を 分類 し たい という 形 だ と 思わ れ ます 。 決定木 は おかしい な と 私 は 思い ます 。 もちろん やっ て み なけれ ば 分かり ませ ん が 。 kNN なら ば ザックリ 分ける こと は でき そう です 。 kNN は 基本的 に は 単なる 多数決 で あっ て 、 多数決 に いくつ の 点 を 参加 さ せる か で 結果 は かわり ます 。 もしも データ が 分類 さ れる とき に 距離 的 に 近い 位置 に ある だろ う と 考える の なら ば 、 これ を 使っ て み て も いい かも しれ ませ ん 。 けど 、 距離 って 一体 何 でしょ う か ？ 業種 の 近 さ と は 何 でしょ う か ？ 商社 と 製造業 と 金融 なら ば どういう 位置 関係 でしょ う か ？ 学歴 の 近 さ と は ？ 職種 の 近 さ と は ？ kNN で は そもそも ラベル付 を どう する か が 問題 に なっ て き ます 。 （ もともと あなた の 使っ て いる データ が 、 定量的 に 評価 さ れ た 指標 を 使っ て いる なら ば いい ですよ。 例えば 、 エンゲル係数 、 家賃 、 年齢 など を データ として 扱っ て いる なら ば ） ナイーブベイズ 分類 器 は 、 あなた が 挙げ た 中 で は 一番 有用 か な と 思い ます 。 ある データ で ある とき に 、 その データ が 年収 ○ ○ 万 円 以上 の 人 の データ で ある か を 判別 し たい わけ です から 、 事後確率 が 大きい 方 を 選ぶ この 手法 は 最も 直感 的 に は 適し た 手法 に 感じ ます 。 近年 の 機械学習 の 発展 は 確率 的 な 考え方 や 統計学 の 手法 を 基礎 に し て い ます 。 精度 の 良し 悪し は 試し て み なけれ ば わから ない として も 、 ナイーブベイズ 分類 器 を とりあえず 勉強 し て みる の は いい こと だ と 思い ます よ 。 あと は 流行り もの で あれ ば 、 積層 自己 符号化 器 や ディープビリーフネットワーク が 有効 だ と 思い ます 。 これら は 精度 を 出す に は 訓練 データ が たくさん 必要 です し 、 それ に 伴っ て マシン パワー も 必要 に なり ます が 、 環境 が 整っ て いれ ば 試し て み て ください 。 こいつ ら は モデル 化 という 観点 で は 役に立た ない かも しれ ませ ん 。 驚く ほど の 精度 が 得 られる の です が 、 なぜ 精度 が 高く なる の か 、 その 学習 や 識別 の 内部 について は 分から ない の です 。 古典 的 な 手法 で あれ ば LDA や SVM など も あり ます 。 他 に は 手元 の データ を いきなり 分類 する の で は なく 、 所得 を 決定づける データ の 本質 的 な 構造 を 得 たい という の で あれ ば 、 統計学 で は 重回帰分析 が 頻繁 に 用い られ ます 。 他 にも 主成分分析 、 そして その 発展 版 で ある 独立成分分析 など も 信号 解析 など で 用い られ ます 。 データ を 解析 しよ う と する とき 、 どの よう な アルゴリズム が 良い の か は 手持ち の データ と 、 それ に対する 先見 知識 に より ます 。 データ 空間 で 線形 和 が 重要 な 意味 を 持つ と 思う の で あれ ば 重回帰分析 を すれ ば いい です し 、 線形 和 の 複数 の 次元 が 必要 で あれ ば 主成分分析 という こと に なっ て き ます 。 最近 の 機械学習 の 研究 テーマ は 、 どんな 種類 の 問題 に対して も 汎用 的 に データ を 解析 できる 手法 の 開発 です が 、 それ は どの よう な アルゴリズム を 選択 する か という 問題 自体 を アルゴリズム の 中 に 内包 し て いる の で あっ て 、 本質的 に は 問題 に 応じ た 解き方 が ある はず です 。 それ は 正直 職人 技 に も 近い 、 技術者 の 勘 によって 発見 さ れ ます 。 （ 現在 の 機械学習 は 、 その 勘 すら も 学習 に 包含 し て しまっ て いる ） 
メイン 処理 以降 が 無い ので なんとも 言え ませ ん が for 文 で バー の 本数 分 値 の 格納 を やっ てる として バッファ は 配列 です ので 新しい 値 を 格納 する 直前 に ArrayFill () で 全 要素 に emptyvalue を 入れ て リフレッシュ さ せ て やっ た あと 新しい 値 を 入れ て やる とか どう です か ね ？ 私 は EA は よく 作る ん です が インジケーター は あまり 作ら ない ので 思いつき です が 
趣味 な の か 仕事 に する の か どちら か によって も 変わる と 思い ます が 。 パターン 的 に C を 先 に し て 、 後で C++ 移行 し た ほう が いい と 思い ます 。 理由 として は 、 C++ の ほとんど の サイト が 「 C を 熟知 し て いる 前提 」( 最低 で も ある程度 知っ て い て 、 使える レベル ) が 多い です 。 たま に C++ から 入っ て も いい よう に 基礎 の 基礎 から やっ て いる 場合 も あり ます が 、 ごく 少数 。 な ので 、 どのみち C を やる はめ に なる かも 。 
10 進数 を 7 進数 と みなす なら Integer . to String じゃなくて Integer . parseInt ( str , 7 ) で は ない か と 。 
そもそも PC に java は 導入 さ れ てる ？ 
Java の ダウンロード サイト に 行け ば 前 の バージョン を 落とせる だろ う が 。 
a . matches ("^ abc ") ↓ a . matches ("^ abc .*") なら 、 yes に なり ます 。 たぶん ・ a 「 全体 」 が パターン と マッチ する か ？ という 判定 セマンティクス な ん じゃ 、 ない です か ね 。 
JDK は 入っ て ます か ? 実行 環境 の 事 です 。 Java の 実行 環境 が ない と 動き ませ ん 。 
キーボード 入力 でし たら これ を ... http:// aidiary . hatena blog . com / entry / 20050115 / 1251462005 
でき ます 。 こちら の callCalc を 参考 に どうぞ 。 http:// www . ne.jp / asahi / hishidama / home / tech / java / jar . html 今回 の 目的 で あれ ば 、 リフレクション 使う より も インターフェース 切っ た ほう が いい と 思い ます 。 
軽量 化 MOD を 入れる のに 、 「 その ファイル は 開か ず に ぶち込む だけ 」 という 大前提 を まずは 知り ましょ う 。 あと 、 mods フォルダ が 生成 さ れ て ない の は 、 フォージ を 導入 し て ない から で あっ て 、 それ なし で 直接 軽量 化 MOD を ぶち込む の は 多少 の 知識 も 有する ため お勧め しません 。 また 、 ファイル を 操作 する ので PC そのもの に も 影響 が 出る 可能性 も あり ます 。 です ので MOD 導入 すべて に対し 、 自己責任 と なっ て いる の です 。 まず 任意 の ヴァージョン の フォージ を DL し 、 それ を W クリ し て インスト し ます 。 ゲーム を 起動 さ せ 、 プロフィール 設定 で フォージ が うまく インスト さ れ て たら ○○～～ なん ちゃ ら forge と バージョン が 追加 さ れ て ます ので 、 それ を 選択 し て から 、 セーブ プロフィール を 押す 。 その後 、 ワールド を 一旦 読み込ま せ て から ゲーム を 一旦 終了 し 、 win マーク と R キー 同時 押し で 検索 窓 を 開き 、 % appdata % と 打ち込ん で 、 . minecraft を クリック 。 その 中 に 必ず mods フォルダ が 生成 さ れ て ます 。 
cpad （ jcpad ） じゃ 厳しい です 。 ＧＵＩ やる なら 最低 で も 継承 関係 把握 ・ 補完 や コード 補完 の 機能 が ある ＩＤＥ が ない と 開発 効率 が 極端 に 異なり ます 。 ぶっちゃけ 普通 の プログラム で も eclipse なら 30 分 で 終わる ところ が jcpad だ と 30 時間 かかっ て も 終わら ない という の が 大げさ じゃ ない くらい 違い ます し 、 GUI なら その 差 は さらに ひどく なり ます 。 あなた が 超 一流 の スーパー エンジニア で Java に 精通 し て おり 、 Java Gold Programme r の 資格 を 保有 し て いる という レベル で あっ た として も 、 jcpad で 作る なら 、 ２ ０ 分 程度 で 終わる よう な ノベル ゲーム の 作成 に すら 半年 は かかる でしょ う 。 初心者 なら １ 年 かけ て も できる と は 思え ませ ん 。 GUI やる なら NetBeans くらい は 使っ た ほう が いい でしょ う 。 
可能 です 。 まず 、 起動 時 で は なく ログイン 時 です よ ね 。 ログイン 時 の 実行 し たい もの は 、 / etc / lightdm / lightdm . conf の # session - setup - script = を session - setup - script =/ usr / local / bin / hoge なんか に 変更 し ます 。 そして 、 / usr / local / bin / hoge に #!/ bin / bash 実行 する コマンド を 書い て 、 chmod + x / usr / local / bin / hoge 問題 は 、 実行 する コマンド です が 、 この ページ に ある 、 processing - java を 使っ た 方法 で 出来 そう です 。 http:// hoshi - sano . hatena blog . com / entry / 2013 / 08 / 01 / 213236 
Java の 場合 何 も 設定 し ない と 自動 コミット さ れ ます 。 トランザクション 処理 を し たい 場合 は Connect ion インスタンス の setAutoCommit ( false )； メソード を 実行 し 、 自動 コミット を さ せ ない よう に し て から 、 トランザクション 終了 時点 で Connect ion インスタンス の commit (); か rollback (); メソード を 実行 し ます 。 
もし ジェネリクス の ワイルドカード が なかっ たら どう なる か 、 考え て み ましょ う 。 その 場合 の 方法 は ２つ あり ① ワイルドカード を 使わ ず に 、 ジェネリクス を 固定 する ② Object 型 で 受け取る ① で 事足りる 場合 、 つまり ジェネリクス が 固定 できる 場合 は 、 それで 問題 あり ませ ん 。 ワイルドカード を 使う メリット は 薄い です 。 ② の 場合 、 つまり ジェネリクス が 不定 の 場合 は 、 Object 型 で 受け ざる を 得 ませ ん が 、 それ を 使用 する 際 に キャスト する 必要 が あり ます 。 コード が 冗長 に なり ます し 、 なん でも 入れる こと が できる という の は 、 思わ ぬ 不 具合 を 呼ぶ 原因 に も なり ます 。 もちろん 、 使用 する 段階 で instanceof を 使用 する という 手 も あり ます が 、 本来 なら コンパイル レベル で 検出 できる エラー を 、 実行 し て みる まで 検出 でき ない という の で は 生産性 の 面 で 劣り ます 。 これ は List クラス を 考える と わかる でしょ う 。 List クラス に ワイルドカード ジェネリクス が なかっ た 場合 、 この世 に 存在 する すべて の クラス に対する ジェネリクス を 記述 する こと は 論理的 に 不可能 （ たとえば A と A [] と A [][] と A [][][] と … と Aクラス だけ でも 無限 に 型 を 用意 する 必要 が あり ます ） です ので 、 Object 型 で 受け取る しか あり ませ ん 。 ワイルドカード ジェネリクス によって String のみ 格納 する List < String > と 書い た 場合 、 if ( list . get ( key ). length ()== len ) と シンプル に 書ける ところ です が 、 ワイルドカード ジェネリクス なし で Object 型 しか 受け られ ない 場合 、 ClassCastException 覚悟 で if ((( String ) list . get ( key )). length ()== len ) と 書く か 、 if (! list . get ( key ) instanceof String ){ // エラー 処理 } else if ((( String ) list . get ( key )). length ()== len ){ } という よう な 冗長 な 記述 が 必要 に なり 、 ワイルドカード ジェネリクス を 使用 し ない ほう が かえって わかり にくく なり ます 。 ※ ちなみに Java 1 . 4 まで は ジェネリクス が なかっ た ため 、 この よう な 記述 を する こと に なり 、 あまりに 不便 すぎ た ため に 1 . 5 から ジェネリクス が 導入 さ れ まし た 。 もっとも 、 ワイルドカード ジェネリクス を 使用 する よう な コード を 、 一般 の エンジニア が 記述 する こと は ほとんど ない でしょ う 。 その 手 の クラス は 標準 ライブラリ で 事足り ます 。 ほとんど の ケース で は interface を 使う こと で ワイルドカード ジェネリクス を 使わ ず に 済む はず です 。 
こんにちは。 取り合え ず 、 フォーム の onsubmit で 行っ て み て 下さい 。 submit ボタン は click イベント と は 別に それ 自体 が POST 処理 を し て しまい ます 。 また 、 動作 確認 として 、 button で 一 度 作っ て 、 サーバー 送信 を 行わ ず 、 きちんと window . returnValue で 、 呼び出し 元 の 画面 に 値 が 返せる か 単体テスト を 行っ て 下さい 。 単体テスト → 結合テスト という 順序 、 慣れ て くる と ないがしろ に なり がち です が バグ 潰し で は 初心 に 戻る 事 も 大切 です 。 ではでは 。 
C言語 で は ^ を 使い ます 6 ^ 2 ( 6 の 2 乗 ) = 36 です が 、 Java で は 意味 が 変わり ます 。 6 ^ 2 ( 6 XOR 2 ) = 4 ビット 単位 で の 排他的論理和 を 出し ます 。 な ので 、 API を 利用 し ましょ う 。 java . util . Math # pow ( 6 , 2 ) = 36 利用 する 場合 は 、 java ファイル の 先頭 に import java . util .*; と 書き ます 。 また 、 実際 の 呼び出し は Math . pow ( 0 , 0 ); と なり ます 。 java . util . Math クラス は 、 ルート 、 サイン 、 乱数 生成 など いろいろ と 役に立つ ので 計算 に 困っ たら いつ でも 使える よう に し て おき ましょ う 。 参考 : Math クラス の メンバ 変数 と メソッド の 概要 https :// docs . oracle . com / javase / jp / 8 / docs / api / java / lang / Math . html 
katsuyanpasaran さん 1 . String a = " asdf "; a は 変数 2 . " a " は 文字列 定数 " Hello! " と 同じ 。 3 . 変数 に 紛らわしい 文字 を 使わ ない 。 と 、 ミス が 減る 。 
Java 言語 に そのよう な 機能 は あり ませ ん 。 何 か 勘違い さ れ て いる の で は あり ませ ん か ？ 
もし 実行 環境 が Windows の コマンドプロンプト の 場合 、 java Calculator . java 1 ^^ 1 または java Calculator . java 1 "^" 1 の よう に 入力 し ない と 正しく 伝わり ませ ん 。 一部 記号 は 特殊 な 扱い に なる ので 要 注意 。 
そもそも その ファイル は 、 それ 自体 を 起動 し て 使う タイプ じゃ ない と 思う ん です よ ね 。 minecraft forge を 前提 mod として 、 forge が 作成 する mods フォルダ に その ファイル を 入れ て 使う もの でしょ う 。 インストーラ を 使い たい なら インストーラ を しかる べき 場所 から ダウンロード し 直し て ください 。 
社内SE を し ながら 、 個人 で WEB サービス も 提供 し て おり ます 。 何 を し て いき たい か 、 どんな 事 を し たい か を 明確 に さ れ て から 、 学習 する 先 を 決め た ほう が よい かも しれ ませ ん 。 java で web という くくり で も 、 非常 に すそ野 が 広い です 。 java 言語 そのもの も 、 重要 です が 、 関連 技術 （ フレームワーク ） の 理解 も 重要 です 。 strust , struts2 , sesser など の MVC フレームワーク や DB へ の 接続 を 抽象 化 する Hibanate iBatis など DI など を 提供 する , SpringFrameWork クライアント 側 に 特 化 し た 、 JavaFX 、 GWT など また 、 商用 の フレームワーク など 多数 あり ます 。 java で しっかり やっ て いく なら 、 java そのもの の 理解 と 、 Strut 2 、 Spring を 使っ た web アプリ を 作成 さ れる と 、 理解 が ふかまる と 思い ます 。 がんばっ て ください 。 これ も java で やっ て おり ます 。 【 宣伝 】 私 が 提供 する webサービス 「 無料 動画共有サイト 」 http:// kut 2 . dip .jp / KUT _ VIDEO / 
2016年 04 月 22日 dokojava サーバー 障害 による 停止 について https :// flairlink .jp / news _ news . html 本社 が ごった返し て て メール 対応 どころ で は ありません 
ラズパイ で IDE とか 動かし たら まとも に 動か ない し 、 コマンドライン で Java 8 って の も 現実性 が ない です 。 質問者 さん が 勉強 し たい の は Linux の 使い方 です か ？ コマンドライン の 使い方 です か ？ 何 か を 調べ たい とき に おっ そい Epiphany で 無駄 に 時間 を 浪費 し たい の です か ？ 違う でしょ う 。 他 の 不要 な 要因 に 時間 を 取ら れ て 、 本来 学び たい はず の Java に関する 学習 効率 が 悪く なる なんて 本末転倒 以外 の 何 物 で も あり ませ ん 。 5 インチ 以下 を 望む なら 、 他 の 回答者 さん が 書か れ た 通り 他 に 選択肢 が 幾らでも あり ます 。 5 インチ Windows タブレット に キーボード つけ た って いい ん です し 、 ラズパイ に 拘る 意味 は あり ませ ん 。 
class [ クラス 名 ] implements [ インターフェース 名 ],[ インターフェース 名 ] と カンマ 区切り で 複数 の インターフェース を 実装 する と 、 1つ の クラス で 複数 の イベント を 受け取る こと が でき ます 。 
javascript を 直接 呼び出す 方法 は お 試し さ れ まし た でしょ う か ？ 引数 に 値する 箇所 が どう なっ て いる か わから ない の です が 取得 できれ ば なんとか なり そう です 。 http:// www . vba - ie .net / ie / javascript . html この あたり を 参考 に お願い し ます 。 objIE . Document .S cri pt. setTimeout " javascript : sendDelivery (' 1 ',' 届け先 名 ', '***-****','●● 県 ● ● 市 ● ● 区 ●●','● 丁 目 ● 番地 ●','',' 000 - 000 - 0000 ',' 000 - 000 - 0000 ')", 1000 上記 の よう な 感じ です 。 問題 は 引数 の 「 1 」 や 「 000 ・ ・ ・ 」 の 箇所 です ね 。 ソース を 比較 し て 取得 する 方法 が ある か 見比べ て みる しか な さ そう です 。 住所 部分 だけ は class の 「 address 」 と 一致 し て いる よう です ので 下記 で 取得 できる の で は ない でしょ う か 。 （ 未検証 です ） Set classObj = objie . document . getElementsByClassName (" Adress ") For i = 0 To classObj . length - 1 Debug . Print classObj . innerText Next i 個人的 に は わりと よく 見 られる ページ です 。 一度 慣れ ます と 次回 は 出来る か どう か も 含め て すぐ 判る よう に なるか と 思い ます 。 是非 がんばっ て ください ！ 
いま まで クラス や インスタンス を 作っ て いる と 、 何 か の 物 を 一緒に 管理 し た いって こと が あり ませ ん か ？ 例えば 、 2 人 で パーティー を 組む RPG で あれ ば 「 財布 は ２ 人 で 一緒 に 使う 」 とか 、 「 アイテム は ２ 人 とも 同じ もの を 共同 で 管理 する 」 とか です 。 その 時 に 使う の が static 修飾 子 です 。 static 修飾 子 で 修飾 し た メンバ は 自分 の 知る 限り 5つ の 特殊 効果 を 持ち ます 。 なお 、 static で 修飾 さ れ た メンバ を 「 静的 メンバ 」 と 呼び ます 。 1 . 静的 メンバ は クラス に 用意 さ れる 。 いま まで インスタンス に 1つ ずつ 用意 さ れ て い た 静的 メンバ が クラス に 用意 さ れ ます 。 2 . インスタンス に は 静的 メンバ の コピー が 用意 さ れる 。 インスタンス に は 静的 メンバ の コピー が 用意 さ れ ます 。 例えば 、 Googleドライブ が インストール さ れ た デバイス に ファイル を 保存 する と 、 Googleドライブ の サーバー に 自動 で アップデート さ れる の と 同じ です 。 3 . インスタンス が 一つも ない 状態 で 利用 可能 。 静的 メンバ が クラス に 用意 さ れ ます 。 よって 、 所有 者 は クラス です 。 な ので 、 インスタンス が 一つも ない 状態 で アクセス 可能 に なり ます 。 4 . 直列 化 の 対象 に なら ない 特徴 と いう より 欠点 です 。 直列 化 と は 、 データ を 保存 する 手段 の 一つ です 。 対象 に なら ない ため 、 その 静的 メンバ は 保存 でき ませ ん 。 5 . 通常 の メンバ は 利用 でき ない 。 これ も 欠点 です 。 静的 メンバ が クラス に 用意 さ れる ため 、 実行 時点 で 仮想世界 に 生み出さ れ て いる の です 。 よって 、 通常 の メンバ は まだ 仮想世界 に 生み出さ れ て い ない ので 、 利用 でき ませ ん 。 使える の は 「 静的 メンバ 」 と 「 インスタンス 」 のみ です 。 いろいろ や やっこ し い の が static です 。 私 も Java を やっ て い ます が 、 最初 は 理解 でき ませ ん でし た 。 難しい なら 後回し で 結構 です 。 ちなみに 「 メンバ 」 と は 「 フィールド 」 「 メソッド 」 を 合わせ て 呼ぶ 呼び方 です ( ほか に も 「 メンバ クラス 」 など を 含む こと が あり ます が ...)。 
TextView の 文字列 の 一部 だけ 色 を 変える 場合 は 、 HTML の 埋め込み を し ます 。 ここ まで は コメント の 中 で やら れ て いる ので あと 少し だ と 思い ます 。 ↓ ↓ ↓ String str = " ここ は 黒 、 < font color =\" Red \"> ここ は 赤 </ font >！"; CharSequence cs = Html .fr omHtml ( str ); textview .s etText ( cs ); ↑ ↑ ↑ こんな 感じ で 色 が 変え られる と 思い ます 。 頑張っ て ください 。 
BigDecimal クラス という もの が あり ます 。 参考 URL http:// docs . oracle . com / javase / jp / 7 / api / サンプル コード import java . math .*; class S { public static void main ( String [] args ){ BigDecimal bd = new BigDecimal ( Double . MAX _ VALUE ); BigDecimal bd 2 = new BigDecimal ( Double . MAX _ VALUE ); bd = bd . add ( bd 2 ); System . out . println ( bd . toPlainString ()); } } 128 bit か は わかり ませ ん が 、 double 型 の 最大 値 を 2つ 足し て も 動き ます 。 double 型 より 大きい こと は 確か でしょ う 。 
再 コンパイル に 失敗 し た 。 疑わしい の は あなた が 最近 作っ た 何 か だ と 削除 と 報告 を 勧告 し て いる よう だ 。 
> System . out . printIn (" 金木研 "); print line の 略 です ので 、 大文字 の アイ I で は なく 、 小文字 の エル l と 相成り ます 。 
エディタ の コンテキストメニュー [ Generate ...] で 選択 メニュー が 出 て くる 。 そこで [ Override Methods ...] を 選ぶ 。 ショートカットキー Ctrl + O で も 呼び出せ ます 。 > 日本語化 は でき ない の でしょ う か 今 の とこ でき ない と 思っ た ほうがい です 。 ネット 検索 する と 、 大きく 2 方法 が 出 て き ます 。 1 ) Intellij / IDEA の 日本語 リソース ファイル を 入れる 。 2 ) eclipse の 日本語化 Pleiades を 入れる 。 両方 やっ て み た けど 、 どっち も ダメ でし た 。 1 ) やる と 起動 し なく なり まし た ( 2 .* の 場合 )。 2 ) は 一見 できる ん だ けど 、 起動 後 だんだん 動作 が おかしく なり ます 。 あきらめ た 方 が よさげ 。 > Eclipse と android studio で 、 どっち が いい の でしょ う か 。 Android Studio です 。 もう eclipse 向け の ADT は サポート さ れ ない から 。 まだ Download は できる よう だ けど 、 過去 の API バージョン の どっか 時点 ので 凍結 さ れ ちゃっ て た と 思う 。 
ぱっと 見 、 Java と C# なら 同じ に 見える けど ね VB は 全然 違わ ない か ？ 
意味 が 違う という 訳 じゃ ない 。 括り が 違う 。 インターフェース と は 、 何かと 何 か を 繋ぐ 仕組み の 事 。 ユーザーインターフェース の 場合 は 、 それ が 人間 と 何 か を 繋ぐ 仕組み に という 限定 が かかる だけ 。 
せめて その エラーログ を 解析 し ない 事 に は 誰 に も 原因 は わかり ませ ん 
ソースコード を 書い て 保存 し javac コンパイル する 時点 で クラス 名 や メソッド 名 を 一意 に 決める こと が でき 、 それで 別段 困ら ない なら 、 あなた の おっしゃる とおり 。 リフレクション など 必要 なし 。 そして 、 ほとんど の 場合 、 これ で 困ら ない 。 逆 に いえ ば 、 希少 (?) な 「 リフレクション 必要 ケース 」 は 、 ・ 上記 時点 で は 、 相手 する クラス 名 や メソッド 名 を 決める こと が でき ない って こと です 。 クラス 名 や メソッド 名 は 、 具体 的 に 決まっ て ない 。 けど 、 java コマンド で 「 実行 」 する こと は でき て 、 その 実行 時点 で 初めて 呼び出し たい 相手 が 指定 さ れる 。 そういう プログラム を 書か ね ば なら ない 、 という とき 。 ピン と こ ない かも しれ ない ので 、 おちゃらけ プログラム 書い て み た 。 # ___ は スペース 文字 に 置き換え て ください 。 ＃ 知恵袋 に 投稿 する と 、 インデント が なくなっ ちゃう ので 、 ＃ その 逃げ 対策 。 インデント なし コード 、 個人的 に イヤ な ので 。 --------- Foo . java ---------- class Foo { ___ public static void main ( String [] args ) throws Exception { ___ ___ for ( String class _ name : args ) ___ ___ ___ doReflection ( class _ name ); ___ } ___ private static void doReflection ( String class _ name ) throws Exception { ___ ___ Class <?> clazz = Class . forName ( class _ name ); ___ ___ Object obj = clazz .new Instance (); ___ ___ System . out . println ( obj ); ___ } } - - - - - ------------------------- まず 、 上記 を Foo . java として 保存 、 javac Foo . java で コンパイル し 、 Foo . class を * 先 に * 作っ て おく 。 その後 、 なん でも いい から 、 あなた が クラス を 作る 。 条件 は 1つ だけ 、 ・ 引数 なし な 公開 コンストラクタ を 持っ て いる こと 。 完全 修飾 クラス 名 は 、 お 好き な もの で かまわ ない 。 たとえば 、 以下 。 -------- foo / bar / Zzz . java ----------- public class Zzz { ___ public Zzz () { ___ ___ System . out . println (" constructor of Zzz "); ___ } ___ @ Override public String to String () { ___ ___ return " I am Zzz "; ___ } } - - - - - - - - - - - - - - ------------------------- println 印字 し たり 、 to String を オーバライド 実装 し てる の は 、 動い た こと を 目視確認 し やすい から だけ の 理由 、 ナシ でも かまわ ない 。 で 、 これ も javac で コンパイル する 。 この とき 、 前記 Foo . class は 既に でき て て 、 再 コンパイル し てる わけ で は ない こと に 留意 。 で 、 前記 Foo を 実行 。 この とき 、 コマンドライン 引数 で 、 後 から 作っ た Zzz の 完全 な クラス 名 を 与える 。 私 の PC で の 実行 例 : $ java Foo foo . bar . Zzz constructor of Zzz I am Zzz Foo . java が コード 上 に 書い て ない クラス Zzz が インスタンス化 さ れ 、 インスタンス メソッド Zzz # to String が 動い て いる こと が 、 わかり ます か ？ 
こんにちは 「 NoClassDefFoundError 」 は 使っ て いる クラス が 見当たり ませ ん という 内容 の もの です 。 その あたり に 「 見つから ない クラス 」 が ある はず です 。 これら を ビルド パス に 追加 し て ください 。 がんばっ て ください 。 【 宣伝 】 私 が 提供 する webサービス 「 無料 動画共有サイト 」 http:// kut 2 . dip .jp / KUT _ VIDEO / 
Tomcat の バージョン や server . xml の 中身 知り たい です が 、 とりあえず 推測 で 。 server . xml の 中 に unpackWARs や autoDeploy の 記述 は あり ます か ？ false に なっ て たり する と 自動 展開 さ れ ませ ん 。 参考 url 貼っ とき ます 。 http:// d . hatena . ne.jp / ozuma / touch / 20131227 / 1388151846 とりあえず 復旧 を 再 優先 と し た 応急処置 は war の 拡張子 を zip に し て webapps 配下 に 解凍 で 大丈夫 だ と 思い ます 。 
システム 環境変数 から 、 C :\ ProgramData \ Oracle \ Java \ javapath ; を 消し たら うまく 行き ませ ん か ？ 
・ Google で 閲覧 可能 か １ 、 検索 結果 の URL を 保存 し て 、 リクエスト を 送る ２ 、 レスポンス の 中 に サイト URL が 含ま れ て い ない か 検索 する ・ サイト が 更新 さ れ て いる か １ 、 サイト URL に対して リクエスト を 送る ２ 、 過去 の レスポンス と の 内容 を 比較 し て 完全 一致 する か どう か 調べる この よう に 、 それぞれ 別 の プログラム として 実装 し て から 二つ を くっつける と いい かも しれ ませ ん 。 ブラウザ を 利用 する なら 手作業 が 必要 に なっ て くる と 思い ます ので 、 自動 化 し たい なら HTML リクエスト の 構成 や レスポンス の 内容 、 それら を 送受信 する 機能 の 勉強 を する こと も 必要 に なっ て くる かも 。 API によって は HTML リクエスト を 構成 し て くれる もの も ある と 思い ます 。 使っ た こと ない ので わかり ませ ん が 、 これ とか そんな 気 が し ます 。 java .net . HttpURLConnection https :// docs . oracle . com / javase / jp / 8 / docs / api / java / net / HttpURLConnec ... 大変 でしょ う が 頑張っ て ください 。 
文字コード が Shift - jis ( MS 932 ) だから でしょ う ね 。 取得 する 前 に InputStreamReader 使っ て エンコード を 変え て あげる 必要 が あり ます 。 gzip の 解凍 に 何 の ストリーム 使っ て いる か わかり ませ ん ので 適当 です が 、 基本的 に は BuffferedReader br = new BufferedReader ( new InputStreamReader ( new gzip Stream (" xxxx ")," MS 932 ")); という 形 で MS 932 を Unicode 変換 し て あげ ます 。 
多分 です が 、 集団 で 作る 場合 の 指針 みたい な もの です ので 、 個人 レベル で 守る 必要 が ある か は 疑問 です よ 。 
これ は 逸話 として 面白い と 思う 。 実際 、 やっ て み まし た 。 " ロジカルオア " ８ 件 。 でも 、 あっ た だけ マシ という 見方 も でき ます 。 初めて 見 まし た よ 、 これ 。 " ロジカルロア " と も なる と ゼロ 件 です 。 あっ たら おかしい けど 。 失礼 。 『 なぜ です か ？ 』 カタカナ で 書い た の が 敗因 です 。 カタカナ で 書く 人 が それだけ 少ない という こと です 。 " Logical OR " 何 十 万 件 も 出 て くる 。 当然 です よ ね 。 " 論理 OR " 夥しい 数 の ページ が 出 て き ます 。 すべて が || の 話 で は なかっ たり する か も しれ ませ ん が 、 まぁ 、 見つかる でしょ う 。 『 Java で 使う 単語 なら 』 Java は 関係 ない 話 です 。 そもそも C 言語 が 始まり 。 それ を 取り入れ て Java が 成立 し て いる という 実態 が あり ます ので ね 。 だから Java 用語 とか 、 そういう わけ じゃ あり ませ ん ので 。 C 言語 、 C++ 、 Java 、 C# 、 みんな 同じ ですよ。 『 そもそも こんな 単語 は ない って こと な の でしょ う か 』 表記 として 、 ともかく 初めて 見 まし た 。 「 ない 」 と 言っ て 良い か どうか わかり ませ ん が 、 かれこれ ３ ０ 年 以上 経ち ます けれども 初めて です 。 『 研修 が おかしい ん でしょ う か 』 そう 書い て た ん です か ？ なら Yes です 。 口頭 で 言っ て た だけ なら おかしく ない です 。 
jar ファイル は 、 マニフェスト ファイル という もの を 設定 し なけれ ば 動き ませ ん 。 以前 やっ た だけ で 詳細 は 忘れ まし た が 、 ブクマ に 入っ て た これ を もと に やっ た 気 が し ます 。 違っ たら ごめんなさい 。 http:// www .s earchman . info / tips / 2130 . html 大まか な 流れ は 、 jar ファイル を 作る ↓ 元 に 戻す ( jar ファイル の 作成 時 に マニフェスト ファイル が 追加 さ れる ) ↓ マニフェスト ファイル を 書き換える ↓ jar ファイル に 戻す だっ た と 思い ます 。 jar ファイル の 解凍 方式 は zip と 同じ な ので 、 拡張子 を zip に 書き換え て 無理やり 解凍 でき ます 。 ダブルクリック で 実行 さ せ たい なら bat ファイル を お勧め し ます 。 --- 実行 . bat --- java FileName . java javac ClassName pause -------------- みたい に 書く と 実行 でき ます 。 また 、 VBS など を 応用 する と コマンド ウィンドウ を 表示 せ ず に 実行 でき ます 。 
> これ は アプリ の インストール 時 に 「 アプリ が 次 の 権限 を 求め て い ます 」 みたい に で て くる あれ に 関係 し て ます か ？ はい 。 けど 、 正確 に は 「 Google Play から の ダウンロード インストール 時 に 」 じゃ ない です か ね 。 開発者 の ローカル 環境 で の install 時 に 出る わけ じゃ ない と 思い ます 。 permissions に 限り ませ ん が 、 Android の 開発者 向け 情報 は 比較的 よく 整備 さ れ て て 、 探せ ば たいてい 本家 サイト で 見つかり ます 。 英文 です けど 。 per mission について は 、 アプリケーション から 使える API の 動作 を 変える もの な ので 、 開発者 は 関心 持た ざる を 得 ず 、 日本語 で の 情報 も 多数 見つかり ます 。 # 未 確認 だっ たり 古かっ たり は ある と 思い ます が 。 
・ 改訂 新版 基本情報技術者 らくらく 突破 Java こちら は 基本情報 レベル の java の 勉強 が でき ます 。 自分 が 持っ てる テキスト の 中 で 一番 わかり やすく 為 に なり まし た 。 一般的 に は こういう コード が 使わ れ て い ます よ～ といった こと も 書か れ て い て 、 変数 や メソッド など の 命名 に 非常 に 役に立っ て い ます し 、 他人 の ソースコード を 読む の が とても 楽 に なり まし た 。 実践 的 な 内容 です 。 ・ Android プログラミング バイブル SD K5 / 4 対応 eclipse という 開発 環境 が Android を サポート し なく なる という 噂 を 聞い た ので 、 Android Studio という 開発 環境 に 対応 し て いる こちら の テキスト を 買い まし た 。 読破 は し て い ませ ん が 、 現状 で は とても 役に立っ て い ます 。 欠点 を 挙げる なら 、 サンプル の ソースコード が 異常 に 長い こと です ね 。 その 分 関係 の ない 分野 の 勉強 に は なり ます 。 と は いえ 、 丸 写し は 厳しい ので 、 どの プログラム が どこ に 必要 か という 選別 できる 程度 の 知識 は つけ て おき たい ところ です 。 たま に 情報不足 を 感じる ので 、 ネット で 調べ て 補完 し て い ます 。 テキスト の ダイレクト な マーケティング は これ くらい に し て 、 環境 の 構築 の 方 を 参考 まで に 。 java アプリケーション に せよ 、 androidアプリ 開発 に せよ 、 JDK ( java 開発 キット ) という 開発 環境 が 必要 です 。 「 JDK 8 」 と 検索 する と 一番 上 に 英語 の ページ で 最新 版 の ダウンロード が できる と 思い ます 。 自分 の PC に 対応 する もの を インストール し ましょ う 。 インストール で 来 たら ＵＲＬ の サイト の よう に 。 http:// www . javadrive .jp / install / jdk / in de x4 . html こちら の サイト で 環境変数 の 設定 方法 が 画像 付き で 丁寧 に 説明 さ れ て い ます 。 Android Studio の 方 は 長文 に なる ので 割愛 し ます 。 参考 に なる と うれしい です 。 大変 でしょ う が 頑張っ て ください 。 
＞ .zip を . jar に 変える と 化け 文字 の メモ帳 に なっ て しまい ます 。 そんな バカ な ！ ！ zip と jar は 、 ほぼ 同じ もの な ので 、 あなた の やり方 の ミス で なけれ ば 、 そんな 事 に は 絶対 に なり ませ ん 。 https :// convertio . co / ja / zip - jar / ご 自分 で は でき ない の でし たら 、 こちら で 変換 し て み て ください 。 
・ Java プログラマー なら 習得 し て おき たい Java SE 8 実践 プログラミング この 本 は Java 7 まで マスター し て いる 人が Java 8 の 新 機能 を 習得 する ため の 本 です 。 Java 7 GOLD 資格者 が Java 8 GOLD 資格 に アップグレード する の に 最適 な 本 だ と 思い ます 。 中級 者 レベル の 書籍 として は 以下 の 本 が 良い と 思い ます 。 ・ プログラミング言語 Java 第 4 版 
ハズレ かも しらん けど 。 > Firefox で は アドオン が 見つかり ませ ん FireFox が 32 bit 版 な のに 、 Java ( JRE ) は ・ Windows が 64 bit だ から 64 bit 版 のみ インストール し て ない です か ？ FireFox に 合わせ て 、 32 bit 版 の JRE を インストール し ない と 、 32 bit な Firefox アドオン が インストール さ れ ない ん じゃ ない か な 。 P.S. Java アプレット 、 もう 終焉 じゃ ない です か ね 。 。 。 (^_^;) 
boolean [] flag = new int [ 10 ];// 使用済み フラグ int [] data = new int [ 10 ];// 数字 // 初期化 for ( int n = 0 ; n < data . length ; n ++){ flag [ n ] = true ; data [ n ] = n + 1 ; } int main = 1 ;// 地雷 を 設定 BufferedReader br = new BufferedReader ( new InputStringReader ( System . in )); while ( true ){ int i = Integer . parseInt ( br . readLine ()); // ここ に コード } ヒント に なり ます 。 わから なけれ ば 言っ て くだされ ば 。 
> Java for quicktime そんな ソフトウェア が どこ に ある の でしょ う か ？ 
今後 どう さ れ たい か です 。 プログラマー として やっ て いく なら 両方 必要 です 。 プログラマー で は ない 私 で さえ 10 くらい の 言語 は 使える ので 。 会社 の お金 で 学べる の なら Java が いい と 思い ます 。 PHP は 、 その 手 の プロ が 見 て いる と 怒ら れる かも しれ ませ ん が 、 片手間 の 独学 で なんとかなる と 思い ます 。 
簡単 です よ 。 アホ で も 書け ます 。 
実行 でき ない 、 という の は 上 の 緑 三 角 ボタン から でしょ う か 。 もし そう なら 、 緑 三 角 ボタン の 右 の ▼ を クリック し て 、 実行 し たい クラス 名 を 選択 し て ください 。 
そんな もん 、 君 の パソコン の 中身 を 実際 に 見 て み ない 事 に は わから ん よ 。 
課題 1 の ところ って 、 たぶん 構文 エラー です よ ね 。 誤 system . out . println (" x =& quot ;+ x ); 正 system . out . println (" x ="+ x ); 課題 1 x = true x = false 課題 2 x を 入力 し て ください ※ 1 を 入力 し エンター 入力 y を 入力 し て ください ※ 2 を 入力 し エンター 入力 1 + 2 = 3 1 * 2 = 2 課題 3 文字列 を 入力 ※ 知恵袋 を 入力 し エンター 入力 何 文字 目 か 入力 ※ 3 を 入力 し エンター 入力 知恵袋 の 3 番目 の 文字 は 袋 です 課題 4 年 を 入力 ※ 2004 を 入力 し エンター 入力 うるう年 です 課題 5 月 を 入力 ※ 5 を 入力 し エンター 入力 5月 は 春 です 
java .s ecurity . cert . X5 09 Certificate を 使う よう です 。 API ドキュメント の javax .s ecurity . cert . X5 09 Certificate に 以下 の 記述 が あり ます 。 注 : パッケージ javax .s ecurity . cert の クラス は 、 旧 バージョン の Java Secure Sockets Extension ( JSSE ) と の 互換性 の ため に 存在 し ます 。 新規 アプリケーション の 場合 、 この クラス で は なく 、 java .s ecurity . cert に ある 標準 Java SE 証明書 クラス を 使用 する よう に し て ください 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / javax / security / cert / X5 ... 
\ は エスケープ と いっ て 、 その 後ろ の 文字 に 特殊 な 意味 を 持た せる ため に 使用 し ます 。 たとえば 改行 コード を 表現 する 場合 、 コード 上 に 実際 に 改行 コード を 入れる わけ に は いき ませ ん 。 こういう 場合 に \ n で 改行 コード の 意味 です よ 、 と 表す わけ です 。 この よう な エスケープ に は タブ (\ t ) や "（\")、\ マーク そのもの (\\) など が あり ます 。 % % も エスケープ で 、 % という 文字 を 表し ます 。 \% で ない の は 、 通常 % は エスケープ する 必要 の ない 文字 で 、 printf の とき だけ エスケープ する 特殊 な 文字 だ から です 。 このへん 、 なぜ ？ と 深く 突っ込ま れる と 、 実際 の コンパイル さ れ た とき の バイナリ データ が 異なる という 話 に なり 非常 に わかり にくい ので 、 そういう もの だ と 思っ て ください 。 . 1 は . が 小数点 を 表し て い ます 。 . 1 なら 小数点 1 桁 まで 表示 する という 意味 に なり ます 。 
減っ て き た 、 と いう より スキル 重視 の 募集 が 多い から 、 技術者 派遣 の 会社 経由 で 雇う よう に なっ た ん だ よ 。 公募 し て も ロク な の が 来 ない って こと だ 。 
1 . 8 以上 で やっ て いる の でし たら 、 一 回 java を アイン ストール し て から やっ て み て ください 。 インストール する 前 に 起動 し て み て それでも ダメ だっ たら 連絡 し て ください 。 
先読み と 戻り 読み を 使え ば 何とか なり そう な ん です が 。 。 。 難しい です ね 。 
Java 言語 、 と いう より 、 ・ java . util .S canner という 特定 クラス の 、 ・ 仕様 を 理解 せ ず 使っ てる ので ハマっ た という 話 じゃ ない かしら 。 おそらく です けど 、 ・ Scanner # nextInt や nextLong といった 整数 変換 入力 と ・ Scanner # nextLine を 連続 ・ 混在 で 使っ てる から じゃ ない か と 思い ます 。 nextInt ( や nextLong ) は 「 整数 として 意味 を なす 文字 」 しか 入力 し ませ ん 。 な ので 、 たとえば 、 20 < Enter キー > と 入力 すれ ば 、 nextInt は 2 0 の 2 文字 を 読み 、 入力 バッファ 内 に は (< Enter > キー の 結果 で ある ) 改行 文字 '\ n ' が 残り ます 。 次に 実行 さ れる の が nextLine で あれ ば 、 https :// docs . oracle . com / javase / jp / 6 / api / java / util / Scanner . html # next ... な ので 、 長さ ゼロ の 空文字列 "" を 返す と 思う 。 以下 、 おちゃらけ 実験 プログラム 。 import java . util .S canner ; class Foo { ___ public static void main ( String [] args ) { ___ ___ Scanner s = new Scanner ( System . in ); ___ ___ while ( s . hasNext ()) { ___ ___ ___ int n = s . nextInt (); ___ ___ ___ System . out . println (" n = " + n ); ___ ___ ___ String line = s . nextLine (); ___ ___ ___ System . out . println (" line = \"" + line + "\""); ___ ___ } } } これ を コンパイル し 、 実行 し て 20 とか 30 とか 入力 し て みる と 、 1 入力 あたり 2回 println 表示 が 出る の 、 わかる と 思う 。 $ javac Foo . java $ java Foo 20 n = 20 line = "" 30 n = 30 line = "" どうしても nextInt ( や nextLong ) に 続け て ・ nextLine を 使い たい の なら 、 ・ 改行 を 読み 捨てる ため に 1回 nextLine を 実行 してやれ ば 、 うまく いく ん じゃ ない か な 。 
これ は 、 コンストラクタ の 使い方 を 学ぶ ため の 実用 的 で ない プログラム だ から そう 思う の かも しれ ませ ん 。 質問者 さん の 言い たい こと を 書く と 、 // 宣言 側 Account ( String name , int balance ) { this . name = name ; this . balance = balance ; } void showAccount () { System . out . println (" 口座 名義 :" + name ); System . out . println (" 残高 :" + balance + " 円 "); } // 呼び出し 側 Account acc = new Account (" 田中 ", 20000 ); acc .s howAccount (); もしくは // 宣言 側 // 引数 、 処理 とも に ない コンストラクタ は 何 も 記述 し なく て も 自動的 に 生成 さ れる // ただし 、 自ら 宣言 し た コンストラクタ が 1つ 以上 ある 場合 は 、 生成 さ れ なく なる Account () {} void showAccount ( String name , int balance ) { System . out . println (" 口座 名義 :" + name ); System . out . println (" 残高 :" + balance + " 円 "); } // 呼び出し 側 Account acc = new Account (); acc (" 田中 ", 20000 ); こういう こと だ と 思い ます 。 上 は メンバ 変数 に 値 を 格納 する という 利点 が あり ます し 、 下 は メソッド を 直接 利用 できる という 利点 が あり ます 。 共通 する こと は 、 呼び出し 側 で 値 を 設定 できる こと です ね 。 元 の プログラム は 呼び出し 側 に よら ず 常に 一定 の 値 を 出力 する だけ の クラス です 。 質問者 さん の いう よう な 、 呼び出し 側 で 値 を 決める 方 が ミス も なく 実用 性 も 高い です 。 です が 、 今回 ばかり は こういう 挙動 を する もの だ という こと を 説明 し て いる だけ だ と 割り切っ た 方 が いい かも しれ ませ ん 。 
最低 動作 可能 スペック ( Windows の 場合 ) CPU : Intel Celeron G3 902 E HDD : 256 GB RAM : 2G B GPU : Intel HD gaphics 510 上記 スペック の 場合 は 最大 で 30 fps 行く か 行か ない か です バニラ で の 快適 な 動作 が 可能 スペック CPU : Intel Core i5 - 4670 HDD : 1 TB RAM : 8 GB GPU : Intel HD graphics 4600 これ だ と GPU 性能 は Inte HD 510 より も 下 です が 、 CPU が その 分 高性能 な ので 、 通常 時 で 40 fps を 維持 可能 です あらゆる 条件 で の 快適 な 動作 が 可能 な スペック CPU : Intel Core i7 - 6700 HDD : 3 TB RAM : 16 GB GPU : GeForce GTX 750 ti この スペック の 場合 は 通常 プレイ 時 で 100 fps の 動作 が 可能 です ゲーミングスペック CPU : Intel Core i7 - 6700 K HDD : 8 TB SSD : 3 TB ~ RAM : 16 GB ~ GPU : GeForce GTX 980 Minecraft と 言う より 普通 に ゲーム を 最高 設定 で 遊び たい人 向け です Minecraft だ と 安定 時 に 1000 fps は 軽く 行き ます ものすごい 高 負荷 な ゲーム を する 気 なら この スペック か GPU を 980 ti に する とか が 必要 です が 、 Minecraft に こんな スペック は 通常 必要 ない です オーバースペック ( 以下 構成 が 可能 なら 車 買っ た ほう が 良い です ) CPU : Intel Xeon E 7 - 8893 v3 SSD : 13 TB RAM : 64 GB GPU : Geforce GTX 980 ti この スペック は GPU を 除い て 完全 に サーバー 用 です ( 通常 の サーバー 動作 に GPU は あまり 関係 ない です ) そもそも Xeon 系 CPU 自体 ゲーム する に は オーバースペック な くらい です 
サンプル コード です 。 ------- A . java ------- import java . io .*; class A { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new in pu t StreamReader ( System . in )); int total = 0 ; while ( true ){ int input = Integer . parseInt ( br . readLine ()); total += input ; if ( input == - 1 ) break ; } System . out . print ( total ); }// end main }// end A -------------------- 説明 し ます と 、 import java . io .*; で BufferedReader を 直接 利用 できる よう に し ます 。 BufferedReader br = new ... で 、 標準入力 を 受け付ける 準備 を し ます 。 br . readLine (); で 、 入力 さ れ た値 を String 型 で 受け取り ます 。 ( 入力 さ れる まで 処理 を 待ち ます ) Integer . parseInt ( String ); で 、 int 型 ( 計算 できる 状態 ) に 変換 し ます 。 break ; で 、 while の ループ を 終了 し ます 。 答え で なく ヒント を もらっ て 自分 で 何とか したい 、 という 場合 は 、 標準入力 の 方式 を java . util .S canner という クラス など 使っ て みる と いい でしょ う 。 大変 でしょ う が 頑張っ て ください 。 
実装 例 です 。 public class Sample { public static void main ( String [] args ) { for ( int year = 1000 ; year <= 1500 ; year ++) { if ( isLeapYear ( year )) { System . out . println ( year ); } } } private static boolean isLeapYear ( int year ) { return ( year % 4 ) == 0 && ( year % 100 ) != 0 || ( year % 400 ) == 0 ; } } // perao _ yoshio 1126 q 11158511686 
プログラマー として なら 、 eclipse です ね 。 仕事 で も 使え ます し 。 
> ローカルホスト の Tomcat ｖ ８ ． ０ サーバー で 実行 さ れる Tomcat の 違い を 、 解説 いただけ ませ ん でしょ う か 。 この カテ で は 解説 いただけ ない と 思い ます 。 
n 1015814 さん 私 が 回答 し た 質問 を 削除 し た 後 、 それ を 反映 し て い ない 、 全く 同じ 質問 を し て いる 理由 を 教え て いただける と 助かり ます 。 
環境変数 と は 、 コマンドライン 操作 において 使用 できる 変数 です 。 例えば % USERNAME % と 指定 すれ ば ユーザー 名 が コマンドライン 上 で 取得 でき ます が 、 これ は インストール し た プログラム 等 が デスクトップ に ファイル を 置く とき に 必要 不可欠 です 。 C :\ Users \ ユーザー 名 \ Desktop と なっ て いる ので 、 コマンドライン 上 で は C :\ Users \% USERNAME %\ Desktop と 入力 する こと で でき ます 。 Path は 、 詳しい 中身 は わかり ませ ん が 未知 の コマンド に対する ファイル 検索 です か ね 。 java c.e xe や java . exe を Path の 中 の ディレクトリ から 検索 し ます 。 ファイル 名 の exe や bat など の 実行 形式 プログラム は コマンドライン で の 呼び出し は 拡張子 を 省略 できる ので 、 javac FileName . java java ClassName の よう に 指定 できる わけ です 。 java c.e xe に FileName . java を ドラッグ&ドロップ し たり 、 javac の フル パス を 入力 し て も 同じ こと が 実現 可能 です が 、 eclipse 等 の Java を 利用 する 開発 環境 は javac コマンド を 発行 する はず です ので 利用 でき なく なり ます 。 
それ たぶん オンライン 版 です よ ね ？ オフライン 版 を ダウンロード し て ください 。 古い バージョン は 削除 し て ください 。 
Mac です ね 。 Windows しか 分から ない けど ・ ・ 。 パッケージ ・ エクスプローラ を たぶん 表示 し たい の で は ない か と 推測 し ます 。 メニュー の Window から View の サブ メニュー から パッケージ ・ エクスプローラー っぽい 英語 を 選択 し て み たら ・ ・ 。 表示 し たい ウィンドウ は Window だ から 、 探せ ば ある かも 。 
java は 汎用 言語 です 。 何 か に 特 化 し た 言語 で は あり ませ ん 。 オブジェクト指向言語 です ので 、 大 規模 な システム を 複数 の 人で 共同 開発 する の に 適し て い ます 。 
電子計算機 上 で 動く プログラム を 作り ため の プログラミング言語 の 1つ です 。 特徴 として は 、 オペレーティングシステム 上 に Java で 作っ た プログラム を 動かす 環境 を 別に 持つ 事 で 、 異なる オペレーティングシステム 上 で 同じ プログラム が そのまま 動かす 事 でき ます 。 
win 版 を 素直 に DL し たら どう です か ？ 
Logcat くらい 見ろ よ 。 エラー 出 てる はず だ から 。 
ものすごく 簡単 に 言う と フォルダ の こと 。 Java で 扱う クラス は 大量 に ある 。 もし これ が 全部 1つ の フォルダ に 入っ て い たら 管理 が 大変 。 だから 、 クラス の 機能 や 使う シーン に 合わせ て フォルダ に 分け て 管理 し て いる 。 クラス を 利用 する 時 は 、 どの パッケージ の どの クラス を 使う の か フル パス で 記載 する 。 たとえば 、 ArrayList クラス を 使い たかっ たら 、 java . util . ArrayList と 書く 。 これ は 「 java フォルダ の 中 の util フォルダ の 中 に ArrayList 」 という 意味 。 この 他 に 、 クラス の 先頭 に import 文 を 書く 方法 も ある 。 import java . util . ArrayList ; こう し て おく と 、 ただ 単に ArrayList と 書い て も 、 それ は java . util . ArrayList を 指す こと に なる 。 よく 使わ れる String や Integer など は 、 java . lang パッケージ に 入っ て いる 。 本来 なら これら も 、 java . lang . String import java . lang . String ; と 書か なく て は いけ ない 。 けれど 、 java . lang パッケージ は よく 使う クラス を 集め た パッケージ だ から 、 明記 し なく て も 良い 決まり に なっ て いる 。 だから 、 String と 書け ば java . lang . String の と 解釈 さ れる し 、 Integer と 書け ば java . lang . Integer の こと だ と 解釈 さ れる 。 省略 できる の は 、 あくまでも java . lang パッケージ だけ 。 他 の パッケージ に ある クラス を 使う 時 は 、 import し たり フル パス で 書い たり し なけれ ば なら ない 。 どの クラス が どの パッケージ に 該当 する か は API に 載っ てる 。 http:// docs . oracle . com / javase / jp / 7 / api / 
下記 参照 。 http:// info . 2ch.net/ index . php / Read . html ちなみに Java で は なく て JavaScript です 。 Java と JavaScript は 全く 別物 です 。 
型 変数 じゃなくて 型 引数 ( もしくは 型 パラメータ ) じゃ ない か な 。 ＃ 言葉 の 問題 です けど 。 T は 型 で あっ て 変数 で は ない から 。 他 は 、 大筋 、 あっ てる 気 が し ます 。 > 一つ 目 の 「 < T >」 は 何 を 表し て いる ... たぶん ・ 以降 に 出 て くる T は 、 Generics の 型 引数 だ よー ん という こと を 、 コンパイラ に 知らせる ... 役割 じゃ ない か な 。 public static < T > T element At ( Collection < T > c , int index ); み たい の が ある として 、 もし 、 class T { ...} という クラス を あなた が 持っ て た として 、 public static T elementAt ( Collection < T > c , int index ); に なっ ちゃう と 、 戻り値 型 T が いきなり 出 て くる ので 型 引数 な の か 、 ほん も の (?) の class T の こと な の か 、 文法 上 見分け が つか なく なる 気 が する 。 ＃ 想像 です 。 言語 規格 書 まで 見 た わけ じゃ ない っす 。 
Scanner を open し た 場合 、 最後 に close 処理 を 書く 必要 が あり ます 。 それ が 書い て い ない ため 、 「 プログラム 終了 時 に Scanner が open し っぱなし に なる 」 という 警告 が 出 て い ます 。 System . in は 本来 close する 必要 が ない ため 、 余計なお世話 と いえ ば お世話 な の です が 、 「 リーダー や ライター を オープン し たら 、 必ず クローズ する こと 」 という ルール が 優先 さ れ て い ます 。 省略 せ ず に Scanner scanner = new java . util .S canner ( System . in ); int input = scanner . nextInt (); /* 略 */ scanner . close (); と 書け ば エラー は 消え ます 。 また 、 try - with - resource 構文 を 使用 し て try ( Scanner scanner = new java . util .S canner ( System . in )){ int input = scanner . nextInt (); /* 略 */ } と 書く 方法 も あり ます 。 
> 最後 は 改行 System . out . print ( i * n + " "); ここ です あなた の 出力 は たぶん 以下 の よう に なっ て い て 、 例 なら ば 「 18 」 の 次に 半角 空白 が ある でしょ う 2 半角 空白 4 半角 空白 6 半角 空白 8 半角 空白 10 半角 空白 12 半角 空白 14 半角 空白 16 半角 空白 18 半角 空白 改行 ＊ ＊ ＊ perl に は join という 関数 が あり まし て 、 配列 の 合間 合間 に 半角 空白 を 指し 込ん で 文字列 を 作る など という こと が 比較的 楽 に でき ます 。 無論 、 ruby に も 同等 の 関数 は 存在 し ます 。 これら は 、 つまり は 、 配列 から 文字列 を 作る 関数 です 。 そして 、 普通 の Java に は 無い です 。 
こんにちは。 public void appendResult ( String c ) に 入力 キー の 処理 が ある と 思い ます が c が '.' の 場合 、 result . getText () の 中身 を 調べ 、 すでに '.' が ある 場合 は + c で 文字 を 入れ ない よう に する IF 文 と 処理 を 追加 する と 出来る と 思い ます 。 ではでは 。 
Class . forName と Class # newInstance を 組み合わせれ ば 可能 です 。 http:// www . ne.jp / asahi / hishidama / home / tech / java / reflection . html 
両方 必要 です 。 Eclipse 単体 で インストール すれ ば JDK も インストール が 必要 に なり ます 。 これら が ひとつ に セット に なっ て いる の が 以下 URL から ダウンロード 出来 ます 。 https :// mergedoc . osdn .jp バージョン は どれ でも いい ので 、 Java の FullEdition を ダウンロード し て ください 。 こちら で あれ ば JDK の インストール は 不要 です 。 
こちら でも 同じ 現象 を 確認 し まし た （ Windows 10 64 bit 版 ） 。 Android Studio が 1 . 5 . 1 の とき は 問題 なかっ た こと は 確認 し て いる ので 、 2.0 に 対応 でき ない みたい です ね 。 この 日本語化 ライブラリー 自体 、 Android Studio 用 で は なく 、 あくまで IntelliJ IDEA 用 で あり 、 非公式 利用 し て いる よう な もの な ので 、 正しく 動か なく て も それ は 諦める より 他 ない と 思い ます 。 そもそも 、 3年 近く 更新 さ れ て い ない ので 、 最新 の IntelliJ IDEA で あっ て も 日本語 化 さ れ ない 部分 が かなり 多く なっ て い ます 。 この ライブラリー による 日本語化 自体 、 あまり あて に できる もの で は ない と 考える べき でしょ う ね 。 
char 型 は 文字 です 。 出力 さ せ て いる ところ が m = m - n に なっ て いる ため 、 文字 は 計算 でき ない から です 。 a 、 b の ところ に 直接 数字 に する と 結果 が でる はず です 。 int m = 100 ; int n = 30 ; System . out . println ( m = m - n ); また 、 a 、 b を 変数 として 使う の で あれ ば 、 以下 の よう に なり ます ね 。 int a = 10 ; int b = 8 ; int m = a ; int n = b ; System . out . println ( m = m - n ); 要は 、 単に a 、 b は 文字 な ので 計算 でき ない 。 どうしても a 、 b を 使う の なら 変数 として 使う 。 また 、 char 型 で 計算 を する 場合 は 、 結果 が 文字コード 同士 の 計算 に なり ます 。 次 の よう に すれ ば 結果 は 出 ます 。 char m = ' a '; char n = ' b '; System . out . println ( m - n ); 文字 a は 文字コード 97 、 文字 b は 文字コード 98 として 認識 さ れ ます 。 
普通に to String () 使い ます ね 。 String . valueOf の 内部 実装 は 、 引数 が null だっ た 場合 は " null " という 文字列 を 、 そう で なけれ ば to String を 呼ぶ だけ です ので 、 null の とき に 変 な 値 が 返っ て くる String . valueOf は 使う べき で は あり ませ ん 。 どうしても null 除け が し たい の で あれ ば 、 Java 8 なら Optional . of (). orElse () を 使っ た ほう が いい でしょ う 。 
もういちど eclipse 本体 を ダウンロード し て 、 eclipse . ini を 最初 の 状態 に 戻す 。 
管理者権限 の とき は 、 ユーザー 権限 で 設定 さ れ てる PATH が 見え なく なる から かも よ 。 つまり その マシン に は 1 . 8 と 1 . 7 が インスコ さ れ て い て 、 グローバル （ 管理者権限 ） 環境変数 で は PATH に 1 . 7 の ディレクトリ が 設定 さ れ て い て 、 ユーザー 権限 で は 1 . 8 が 設定 さ れ て いる の かも 。 javac は 開発 環境 込み で 入れ てる 1 . 8 に しか 入っ て ない から そう なる 。 以下 の コマンド それぞれ を 、 管理者権限 と ユーザー 権限 で 実行 し て 、 結果 を 比べ て みな よ 。 path where java where javac 
ナビタイム を 見る のに JAVA は 必要 ありません 、 知ら ぬ に インストール し て しまっ た 、 いわゆる 迷惑 ソフト が 、 JAVA に 見せ掛け て 、 新た な 迷惑 ソフト を インストール さ せ よう し て いる 可能性 が 高い です 。 
仕事 として の プログラミング は 面白い です 。 チーム で 仕事 を する 場合 は 自分 の やり やすい 設計 に できる と は 限ら ない ので 、 辛い 面 も あり ます が 基本的 に は 物 づくり な ので 、 そういった こと が 好き な 自分 に は 向い て い ます 。 gizagizamax さん が 回答 さ れ て いる よう に 、 ドキュメント や 資料 作り 、 テスト も 結構 多い の は 確か です が 、 プロジェクト 内 の 役割 に も より ます 。 
//「:」 区切り で 3 ～ 6 個 の 要素 数 で 、 すべて が 数字 で 、 先頭 が 4 桁 、 残り 2 桁 の もの を 判定 し ます 。 boolean isFormat ( String format ){ String [] str = format .s plit (":"); if ( str . length < 3 || str . length > 6 ) return false ; if ( str [ 0 ]. length () != 4 || ! isNum ( str [ 0 ])) return false ; for ( int n = 1 ; n < str . length ; n ++) if ( str [ n ]. length () != 2 || ! isNum ( str )) return false ; return true ; } 詳しい 日時 から あふれ てる か どう か 判定 する の に は もう少し 工夫 が いり ます 。 // 文字列 が 数値 か どう か 判定 boolean isNum ( String num ){ for ( int n = 0 ; n < num . length (); n ++) if ( num . charAt ( n ) < ' 0 ' || num . charAt ( n ) > ' 9 ') return false ; return true ; } 
頑 シミュ の アプリ ( 末尾 が . exe の やつ ) を 右クリック し て 、 「 プログラム から 開く 」 → 「 Java 」 を 選べ ば ok です 。 
目的 が web を 一 人 で 運営 し て いる 人 の 支援 なら 、 web を 勉強 する 必要 が あり ます 。 html , css , javascript を 覚える 必要 が あり ます 。 google chrome で は ctrl + U で 表示 さ れる 「 ページ の ソース 」 と 呼ば れる もの が それ に なり ます 。 webページ の 提供 方法 は クライアント が ブラウザ で 要求 ( リクエスト ) を 出す ↓ サーバ が 要求 を 受け取る ( サーバ は java .net 等 や tomcat など で 構成 ) ↓ ★ 要求 を もと に 、 java プログラム で html 文書 を 作成 ↓ html を サーバ に 渡し 、 サーバ が クライアント に 送信 ↓ クライアント の ブラウザ に 返す ( レスポンス ) ↓ ブラウザ が html を 解釈 し て webページ を 表示 こんな 感じ の 流れ だ と 思い ます が 、 ここ で java が する こと は html の 構成 です 。 html は 文書 形式 です から 、 文字列 処理 が 欠か せ ませ ん 。 文字列 の 結合 、 分割 、 挿入 、 置換 、 検索 、 抽出 など など 。 String クラス の メソッド で 提供 さ れ て いる もの は 多い です 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / java / lang / String . html そして こちら が サーバー プログラム を 構成 できる かも しれ ない java .net パッケージ です 。 https :// docs . oracle . com / javase / jp / 8 / docs / api / java / net / package - summa ... ServerSocket クラス が サーバー の 機能 を 提供 し て いる と 思い ます 。 文字列 処理 と 比べ て 難易度 が 高い ので tomcat など の サーバ アプリケーション を 勉強 し た ほう が いい 可能性 が あり ます 。 この 二つ の クラス と ファイル 書き出し と 読み取り を 利用 できる よう に すれ ば それなり に 実用 できる と 思い ます 。 これら の 利用 を 目標 に 、 ひとまず やる べき こと は オブジェクト指向 へ の 理解 。 RPG が オブジェクト指向 だっ たら 問題 ない です が 、 オブジェクト指向 は オブジェクト ( インスタンス ) の 利用 が 肝 に なり ます ので 覚え ましょ う 。 
share インスタンス が 共有 化 さ れ て おり 、 threadA と threadB の 順序 が 不定 だ から です 。 threadA の run の 1回 目 の set の a ++; b = " data "; まで が 実行 さ れ た 状態 で 、 threadB の run の 1回 目 の print の a --; b = null ; まで が 実行 さ れ 、 それから threadA の run の 1回 目 の set の System . out . println (" set () a : " + a + " b : " + b ); が 実行 さ れ ①、 threadB の 1回 目 の print の ため の 暗黙 の String 生成 つまり _=" print () a : " + a + " b : " + b ; が 実行 さ れ た 後 で threadA の run の 2回 目 の set 処理 ②、 3回 目 ③ の set 処理 が 全て 実行 さ れ 、 その後 threadB の 1回 目 の System . out . println (_);④ が 実行 さ れ た 、 と すれ ば 、 実行 結果 は set () a : 0 b : null //① set () a : 1 b : data //② set () a : 2 b : data //③ print () a : 0 b : null //④ と なり ます 。 
Java が 使える レンタルサーバー は あり ます よ 。 無料 の は ほぼ 皆無 です が 、 有料 の は 結構 ある はず です 。 Heroku や Google App Engine は 無料 で も 使え ます 。 Java の 場合 は 、 ある Web アプリケーション で エラー が 発生 し た とき に 最悪 Webサーバ ごと 落ちる ため 全 利用者 に 迷惑 が かかる 可能性 が あり ます 。 それ を 避ける ため に は サーバ を 仮想 化 する 必要 が あり コスト が かかる ため 、 普通 は 有料 サービス に なり ます 。 
そもそも 枠 内 の 判定 が 間違っ て い ます 。 rect は （ 開始 x 座標 , 開始 y 座標 , 幅 , 高さ ） を 指定 し ます 。 ( 10 , 10 , 500 , 500 ) なら 、 枠 内 座標 は ( 10 , 10 , 500 , 500 ) では なく ( 10 , 10 , 10 + 500 , 10 + 500 ) に なり ます 。 さて 、 枠外 の 判定 です が 、 ようは x 座標 が 枠 の 外 で ある か y 座標 が 枠 の 外 で あれ ば 枠外 と なり ます 。 よって 正しい コード は /* 枠 内 に クリック し た 条件 ( 枠 の 上 も 含む )*/ if ( xy <= cor [ 0 ] && cor [ 0 ]<= wh + xy ){ if ( xy <= cor [ 1 ] && cor [ 1 ]<= wh + xy ){ g .s etColor ( Color . RED ); g . drawOval ( cor [ 0 ]- 25 , cor [ 1 ]- 25 , 50 , 50 ); } } /* 枠外 を クリック し た 条件 */ else { if ( xy > cor [ 0 ] || cor [ 0 ]> wh + xy || xy > cor [ 1 ] || cor [ 1 ]> wh + xy ){ g .s etColor ( Color . BLUE ); g . drawLine ( cor [ 0 ]- 25 , cor [ 1 ]- 25 , cor [ 0 ]+ 25 , cor [ 1 ]+ 25 ); g . drawLine ( cor [ 0 ]- 25 , cor [ 1 ]+ 25 , cor [ 0 ]+ 25 , cor [ 1 ]- 25 ); } } と なり ます 。 
概略 、 その とおり です 。 プログラム を Java の 用語 と 文法 に従って 書き ましょ う 。 コンパイル 、 実行 すれ ば 正しい か どうか 分かり ます 。 
Java の 確認 および 最新 で ない バージョン の 検索 http:// java . com / ja / download / installed . jsp 
リモート エンジニア に なっ て 具体 的 に 何 を し たい の です か ？ リモート エンジニア を 目指す と は 、 サラリーマン を 目指す の と 同じ くらい 漠然と し た 目標 です 。 
先 の 回答 の やりとり を 見る に 、 「 JRE だけ インストール すれ ば Eclipse で Java 開発 は 可能 な のに 、 なぜ 別途 JDK という もの が 存在 する ん だろ う ？ 」 という 疑問 な の か な ？ Eclipse の Java 開発 プラグイン に は 、 Eclipse Compiler for Java （ 略し て ECJ ） という Eclipse 独自 の Java コンパイラー が 同 梱 さ れ て い ます 。 この ため 、 Eclipse で は JRE だけ でも Java プログラミング が 可能 に なっ て い ます 。 しかし 、 あくまで 独自 コンパイラー で ある ため 、 本家 Oracle が 公開 し て いる Java コンパイラー と 完全 同一 で は あり ませ ん 。 また 、 ECJ に は Java FX の よう な 拡張 も 含ま れ て い ませ ん 。 です から 、 互換 品 で は なく 本家 の コンパイラー を 使い たかっ たり 、 ECJ に は 含ま れ ない 拡張 を 必要 と する 場合 に は 、 JDK を 別途 入れ なけれ ば なら ない という こと です 。 Eclipse に 限っ て は 、 個人 レベル の 開発 で ECJ だけ で 事 が 済ん で しまう の で あれ ば 、 それでも 別 に 構わ ない と 思い ます 。 
１ ． ウィンドウズキー を 押す ２ ． [ プログラム と ファイル の 検索 ] ( 色 が 薄い ) に cmd . exe と 入力 し て Enter ３ ． ( 標準 なら ) 黒い 画面 に 次 の よう に 打つ べし 、 打つ べし !! java - jar ( optfine の フル パス ) ※ フルパス と は ドライブ 名 から 始まる ファイル の 指定 方法 で ある C :\ Users \ username \ Download \ OptiFine _ 1 . 9. 2 _ HD _ U _ B 1 . jar これ で 起動 し ない 場合 は Java を 最新 に アップデート し て もう一度 やっ て みる 
「 保存 先 を ダウンロード に 指定 し たら 」 意味不明 です 。 具体 的 に 記し て 下さい 。 保存 先 を 「 ダウンロード 」 フォルダー に 指定 し た ？ ダウンロード の まま で 、 保存 先 を 指定 し なかっ た ？ c :\ Program Files \ java の 中 に jdk , jre の 二つ の フォルダー が 出来 て い ませ ん か ？ 
実装 例 です 。 import java . text .S impleDateFormat ; import java . util . Calendar ; import java . util . Locale ; import java . util .S canner ; public class Sample { public static void main ( String [] args ) { Scanner scanner = new Scanner ( System . in ); SimpleDateFormat format = new SimpleDateFormat (" MMMM ", Locale . ENGLISH ); System . out . println (" 数字 を 入力 し て 下さい 。 "); int month = scanner . nextInt (); scanner . close (); if ( 1 <= month && month <= 12 ) { Calendar cal = Calendar . getInstance (); cal .s et ( Calendar . MONTH , month - 1 ); System . out . println ( month + " 月 は 英語 で 『 " + format . format ( cal . getTime ()) + "』 です 。 "); } } } // q10 156495965 
主催者 に 聞い て ください 。 
C :¥ Users ¥ ユーザー 名 ¥ AppData ¥ Roaming ¥. minecraft ここ の フォルダ で OK なら "% AppData %/. minecraft " と 記述 し て ください 。 
AutoCAD .NET API を 使う と でき そう な 感じ は し ます が 、 やっ た こと は 無い です 。 （ 大昔 に AutoLISP を 使っ た こと は あり ます ） process は 、 Autocad を 起動 さ せる こと は でき ます が 、 それ 以上 の こと は 難しい と 思い ます 。 Autocad で 現在 開い て いる ファイル は 、 Autocad 内 で 持っ て いる 情報 な ので 、 外部 の プログラム で それ を 取得 する こと は 基本的 に でき ませ ん 。 ただし 、 API が 公開 さ れ て いる 場合 に は 、 API を 介し て その アプリ の 内部情報 を 取得 し たり 、 メソッド を 実行 （ 図形 を 描画 する とか ） できる はず です 。 
やっ てる こと に 間違い は な さ そう な ので 、 それ 以外 の 部分 な ん じゃ ない です か ？ Android Studio など IDE で 開発 し て いる の なら 、 putStringArrayListExtra し て いる 行 に ブレークポイント を 設定 し て 、 デバッグ 実行 によって 変数 kokyakudata の 値 を 確認 し て み て は どうでしょう か 。 二 度目 の タップ によって ブレーク が かかっ た とき に 、 この 変数 の 内容 が 一 度目 の 顧客情報 の まま 改まっ て い なけれ ば 、 この 変数 の 内容 を セット する 処理 の 問題 でしょ う 。 変数 の 内容 は 改 って いる の に 遷移 し た Activity で は 一 度目 の 顧客情報 が 表示 さ れる の なら 、 受け取り 側 の 問題 という こと に なる でしょ う 。 まずは そう やっ て 切り分け て み ましょ う 。 
java . util .S canner # nextInt () これ は integer に 変換できない 文字列 を 受け取る と エラー が 出る みたい です ね 。 for (; 条件 ;) と 同じ 役割 の while ( 条件 ) を 使い ます ね // サンプル コード import java . io .*; class Mottainai { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ));// System . in から 入力 を 受ける String str ; while (!( str = br . readLine ()). equals (" e ")){// 入力 を 受け取っ て 、 e と 一致 し ない 間 ループ int m = Integer . parseInt ( str );// 文字列 を 数字 に 変換 int b = m / 3 ; int c = m - b * 3 ; int d = b + c ; System . out . println ( b +" 束 と "+ c +" 個 で "+ d +" 個口 です 。 "); } }// end main }// end class java . io . BufferedReader # readLine () この メソッド が String 型 で 一行 取得 し て くれ ます 。 java . lang . Integer # parseInt ( String ) この メソッド は 、 String 型 を int 型 に 変換 し て くれ ます 。 while (!( str = br . readLine ()). equals (" e ")) // java . lang . String # equals ( Object ) を 使用 この 文 は 、 str に 入力 値 ( br . readLine ()) を 格納 し た あと 、 equals で 入力 値 と " e " を 比較 し て 、 ! で 否定 し て い ます 。 // サンプル コード for (;;){ String str = br . readLine (); if ( str . equals (" e ")) break ;// e と 一致 し たら 終了 } こんな 書き方 も あり ます 。 ごちゃごちゃ し て て すみません 。 
word で 文章 を 作っ た から と いっ て Micro Soft に 著作権 が ある わけ で は ない こと は わかり ます よ ね 。 java 言語 を 解釈 し て 実行 する java . exe という ツール と とらえる と 、 その 手続き で ある java で プログラム を 組ん だ から と 言っ て その 公開 に 何 か 制限 が さ れる こと は ない です 。 ( word で いう と 手続き は キーボード を 押す こと に 等しい ) あなたに 著作権 が ある ので 、 自作 物 の 公開 は 自由 に やっ て 構い ませ ん 。 「 プログラミング言語 著作権 」 とか 調べる と 詳しい 情報 が 出 て き ます 。 入門 講座 は 、 同様 に 自作 の コード を webページ など に 載せる こと は 問題 ありません し 、 それ について の 解説 も 問題 あり ませ ん 。 他人 の コード と 明らか に わかる よう な もの を コピペ し て 引用 を 示さ ず に 載せる の は やめ ましょ う 。 
Random . nextInt は 線形合同法 を 使っ て いる ため 毎回 同じ 値 を 返し ます 。 Math . random () を 使え ば 意図 し た こと が でき ます よ 。 
BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); int num = Integer . parseInt ( br . readLine ());// 入力 値 を 受け取る if ( num < 1 && num > 9 ){ System . out . println (" 入力 エラー ( １ ～ ９ 以外 の 入力 )"); } else { for ( int n = 1 ; n < 10 ; n ++)// n = 1 ~ 9 の ループ System . out . print (( num * n ) + ","); System . out . println ("\ b " + " ");// 最後 の コンマ を 消す } // 完了 こんな 感じ です か ね 。 ・ ファイル の 先頭 ( class の 手前 ) に import java . io .*;// ヘッダファイル の インポート ・ main メソッド の 右 に public static void main ( String [] args ) throw IOException // 例外 の スロー を 記述 する 必要 が あり ます 。 即興 で 作っ た ので ミス が ある かも ...? 
未確認 な ん だ けど 、 < c : import url ="/ template / header . html " context ="/" /> で どう ？ 通常 、 url が "/" で 始まる とき は コンテキスト の ルート が 基準 に なり ます が 、 context ="/" を 指定 する と 、 サーバー の ルート が 基準 に なっ た と 思い ます 。 
フレームワーク 本来 の 意味 は 、 「 枠組み 」 です 。 プログラム を 複数 の 人で 作成 する とき 、 プログラム の 書式 や プログラム の 間 の 受け渡し 条件 を 定め た もの 、 開発 環境 など 。 あるいは 、 関数 の 定義 や ライブラリ の 内容 。 アーキテクチャ は 、 「 構造 」 が 本来 の 意味 。 ソフトウエア の 論理的 構造 と 説明 さ れ て い ます 。 具体 的 に は 、 プログラム が どの 様 な モジュール に 分け られる か 、 その 論理 的 な 関係 など 。 データ の 場合 でも 、 フォルダー 、 ファイル 、 データ 、 配列 など や その 関係 。 java の 中 で 例 を あげる と eclipse は 、 ひとつ の フレームワーク と 云う こと が 出来 ます 。 デザインパターン は 、 アーキテクチャ を 幾つ か 例示 し た もの 。 クラス と 継承 、 インスタンス の 関係 も アーキテクチャ と 云 える でしょ う 。 
> java の 64 bit を インストール し た ... > java の バージョン は jre - 8 u 77 - windows - x64 . exe です 。 ... JRE を インストール し た の なら 、 javac は 入っ て ませ ん 。 javac を 含む の は JDK です 。 JRE と JDK の 区別 が つか ない の で あれ ば 、 まず その 違い を 知っ て ください 。 Java JDK JRE の 3 語 で ネット 検索 する だけ でも 、 多数 解説 は 見つかり ます 。 ほんとに ・ Java プログラム を 作ってみた い ・ だから Java の 開発者 環境 を インストール し たい という こと な の で あれ ば 、 JDK が 必要 です 。 今 だ と 、 Windows 64 bit 環境 向け は jd k-8 u 77 - windows - x64 . exe という ファイル 名 の ヤツ 。 
> 一応 ここ まで は でき て て 縦 と 横 の 値 は 表示 さ せる こと が でき た の です が 質問 で 提示 さ れ て いる コード だけ で は 、 表示 でき ませ ん よ ね 。 ほんとに 表示 さ れ て い ます か ？ Rectangle クラス に は 、 四角形 に関する 情報 と 処理 を 記述 する 必要 が あり ます 。 まずは 、 フィールド です ね 。 縦 と 横 の データ を 格納 する 変数 です 。 次に 、 初期 化 する コンストラクタ を 作成 し ます 。 質問 の main メソッド で 書か れ て いる 、 クラス を インスタント 化 し て いる 1 行 は 初期 化 し て いる コード に なり ます 。 → Rectangle a1 = new Rectangle ( 5 , 10 ); もし 、 setRectangle メソッド を 使う の で あれ ば → Rectangle a1 = new Rectangle (); → a1 .s etRectangle ( 5 , 10 ); と する 必要 が あり ます 。 面積 を 求め たい の で あれ ば 、 Rectangle クラス に 面積 を 求める メソッド を 作成 すれ ば 良い だけ です 。 いろんな 作り方 が あり ます が 、 下 の コード は 1つ の ファイル 内 に すべて を 記述 し た 例 です 。 public class CheckFigreArea { public static void main ( String [] args ) { Rectangle a1 = new Rectangle ( 5 , 10 ); System . out . println ("=== 長方形 の 面積 ==="); System . out . println (" 幅 :" + a1 . getWidth () + " " + " 高さ :" + a1 . getHeight ()); System . out . println (" 面積 ：" + a1 . getArea ()); } } class Rectangle { // フィールド private int width ; private int height ; // コンストラクタ public Rectangle ( int width , int height ) { this . width = width ; this . height = height ; } // ゲッター public int getWidth (){ return width ; } public int getHeight (){ return height ; } public int getArea (){ return width * height ; } } 複数 の クラス を 作っ て 処理 を 行う 場合 は 、 クラス ごと ファイル に 分け て 、 処理 し ます 。 クラス の 継承 は 重要 な ポイント な ので 、 1つ 1つ 何 が 必要 な の か を 確認 し ながら ステップアップ し て ください 。 
> C , Java , Ruby で の 書き方 まず perl だ と 下 の よう に なり ます use strict ; use warning s ; my @ array = ( 1 .. 10 ); print join " ", @ array , "\ n " ; ＊ ＊ ＊ なので ruby だ と さらに 下 の よう に なり ます arr = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] puts arr . join (" ") ＊ ＊ ＊ 従っ て perl だ と 1 から 10 まで を 足す とき は " 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 " という 文字列 を 作っ て eval する と 晴れて 55 が 出 ます 文字列 を わざわざ つくっ て 評価 し て いる ところ が スゴ い です ね 。 use strict ; use warning s ; my @ array = ( 1 .. 10 ); print eval ( join "+", @ array ) , "\ n " ; ＊ ＊ ＊ そして ruby で は それ を 一気に やる ため の 専用 の 関数 たる reduce が 用意 さ れ てる ので それ を 使う と 合計 の 55 が 出 て き ます arr = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] puts arr . reduce (:+) 
- 128 ～ 127 の byte 型 は 、 - 11 ～ 11 しか 2 乗 の 計算 が でき ませ ん 。 byte b = 12 ; System . out . print ( b * b );//[ 144 ] これ を byte 型 に 代入 しよ う と する と オーバーフロー し ます 。 計算 の 幅 が 狭く なり すぎる ので int 型 に 変換 する の だ と 思い ます 。 
検索 結果 取得 時 に ID 非公開 の もの は 外す よう に でき て いる もの と 思わ れ ます 。 これ は ハード コード さ れ て おり 、 外部 から どうこう できる もの いは ない ため 、 裏技 は ない でしょ う し 、 それ が でき て しまっ たら ＩＤ 非公開 の 意味 も あり ませ ん ので 、 できる よう に も し ない でしょ う 。 
あなた の やり たい こと が 伝わっ て こ ない の だ けれど 。 マウスカーソル 云々 って どういう こと ? 軌跡 「 も 」 って 、 画像 表示 に 軌跡 が どう 絡む ? > 動画 の 上 に 透過 情報 の 入っ た 画像 を 載せる と 、 動画 が 止まっ て しまい ます 。 て もとで は 再現 し ませ ん 。 import processing . video .*; PGraphics pg ; // 画像 を 用意 する の が 面倒 だっ た ので 描画 し ます // て もとで は PImage に 透過 png を load し た の で も 試し て い ます Movie mv ; int hue ; void drawPg (){ pg . beginDraw (); pg . background ( 0 , 0 , 0 , 0 ); // 透過 背景 pg . colorMode ( HSB ); pg . fill ( hue , 255 , 128 ); pg . noStroke (); pg . ellipse ( 50 , 50 , 100 , 100 ); pg . endDraw (); } void setup (){ size ( 200 , 200 ); pg = createGraphics ( 100 , 100 ); drawPg (); mv = new Movie ( this , " 適当 な 動画 "); mv . loop (); } void draw (){ image ( mv , 0 , 0 , 200 , 200 ); image ( pg , 50 , 50 , 100 , 100 ); } void movieEvent ( Movie m ){ m . read (); } void keyPressed (){ // PImage なら ここ で image を 差し替える と か 。 hue += 30 ; hue %= 256 ; drawPg (); } 
いくつ か 勘違い レベル の もの が あっ た ので 、 補足 し ます 。 1 - 1 に関して は 、 クラウド サービス と クラウドゲーム を 混同 し て い ます 。 近年 、 クラウド という 単語 が 広まっ て い ます が 、 クラウド と は 手元 に PC 以外 何 も なく て も 、 インターネット 回線 さえ 繋がっ て いれ ば 、 様々 な アプリケーション の サービス を 受け られる 形態 を 指し ます 。 具体 的 な 例 で いえ ば 、 Dropbox や Line 、 アドビ 、 G メール 等 が あげ られ ます 。 例えば 、 Windows で 作成 し た データ が 、 Mac に 対応 し て い なく て 動か せ なかっ たり 、 地震 や 火災 で ハードウェア を 破損 し て 、 復旧 でき なかっ たり する 問題 が 生じ ます 。 そこで 、 インターネット 上 に アプリケーション や データ を 置く こと で 、 物理 的 問題 から 発生 する 障害 を 回避 する の が 目的 です 。 対し て 、 クラウドゲーム は 、 高度 な 演算 処理 を サーバー 側 で 行い 、 端末 側 と サーバー 間 で は 、 ボタン 操作 の 内容 と 結果 のみ を 送受信 さ せる 新しい タイプ の もの です 。 元々 は オンラインゲーム 上 で 、 端末 側 の スペック 差 から 動作 ・ 通信 の 遅延 等 が 問題 に あがっ て まし た 。 その 問題 を 解決 する ため 、 サーバー 側 の ほう で 、 複雑 な 処理 を 担当 さ せ て 、 スペック 間 の 差異 を なくす もの です 。 しかし クラウドゲーム は 、 サーバー へ の 負荷 が 重い ため 、 現在 は まだ 実験 程度 の もの で あり 、 これ が 普及 する の は 10年 以上 先 か と 思わ れ ます 。 業務 システム で は 、 あんまり クラウドゲーム の よう な 仕組み は 、 負荷 が 大きい こと と 、 リアルタイム で 同時 演算 に 対応 さ せ なけれ ば なら ない 面 から 、 よほど リアルタイム で 対応 さ せる システム で 無い 限り 採用 し ませ ん 。 後 、 クラウドゲーム は 通信 環境 が 安定 し て いる の が 前提 です ので 、 スマホアプリ と は 相性 が 最悪 です 。 1 - 2 に関して は 、 自分 も 経験 し た 身 で ある ので わかり ます が 、 基本的 に サーバー プログラム と ゲーム プログラム は 間接 的 に は 関係 が あっ て も 、 直接的 に は 全く 関係 が あり ませ ん 。 サーバー プログラム の 目的 は 、 端末 と サーバー 間 の 通信 に関する 処理 と 、 DB や ログファイル へ の データ保存 、 出力 が 目的 です 。 SNS ゲーム が PHP で 動い て いる という の は 、 ゲーム を 行う うえ で 必要 な パラメーター を DB や ファイル から 取り出し 、 取り出し た パラメーター を 元 に ゲーム ファイル を 起動 さ せ 、 ゲーム が 終了 し た 後 の データ を 受け取り 、 それ を 保存 する 流れ を 取っ て おり ます 。 だから 正直 言っ て 、 サーバー プログラム を 勉強 し た ところ で 、 ゲーム開発 に 役立つ か と いう と 、 役割 と 目的 が 違う ので 、 あんまり 関係 あり ませ ん 。 例える なら 、 料理 と 食器 と の 関係 の よう な もの です 。 1 - 3 の 仮想化 について です が 、 一体 どの 記事 を 読ん だ の か わかり かね ます が 、 やっ て いる こと は 、 Windows 上 で 、 Mac や Linux を 動かす よう な もの です 。 1つ の 端末 に 複数 の OS を 動作 さ せ られる よう に し たり 、 複数 の 端末 を 統一 し た 環境 下 で 動作 さ せる こと を 差し ます 。 世の中 に は 、 サーバー や OS の 環境 が 全く 異なり ます 。 また 環境 の 違い によって 、 動作 する もの と そう で ない もの が あり ます 。 ある プロジェクト が PH P5 . 6 、 MySQL で 動い て い た けれども 、 別 の プロジェクト を 担当 し たら 、 そっち は PH P5 . 3 、 PostgresSQL で 動い て い た と し ます 。 その 場合 、 仮想 化 し て い なけれ ば 、 PHP を 削除 し て 、 MySQL を 停止 し て と 、 結構 めんどくさい です 。 そこで 仮想化 を 使う と 、 各 プロジェクト ごと に 仮想 環境 を おける ので 、 それら を 使い分けれ ば よい 形 に なり ます 。 コンシューマゲーム で 言う と 、 動作 確認 目的 で 、 Windows で PlayStation4 対応 の ゲーム を 動かす の も 、 仮想化 に 含ま れ ます 。 仮想化 の メリット として は 、 実際 に その 端末 を 持っ て い なく て も 、 作業 が できる という の が あり ます 。 個人 で 全て の スマホ を 確保 する の は 不可能 です 。 しかし 、 仮想化 を 使いこなせ ば 、 主要 な 端末 で 動かせる か どう か テスト が でき ます 。 個人的 に 問題 と 感じ た の が 、 何でもかんでも ゲーム に 結び付け て 考え て いる ところ です 。 エンジニア として 考える なら 、 この 技術 の 意味 は 何 か ？ どの よう な 作用 が ある の か ？ という 風 に 考える の が 大事 です 。 ゲーム に 使える か どう か は その後 の 話 です 。 しかし 、 ゲーム が 優先 さ れ て しまっ て いる ので 、 技術 の 意味 を 取り違え て 解釈 し て いる 向き が あり ます 。 そこ は 改め ない と 、 エンジニア として 食べ て いく に は 、 厳しい です 。 
簡単 な 方法 jar に し たい ファイル で zip を つくり 、 以下 の よう な サイト で 変換 する https :// convertio . co / ja / jar - zip / 
java を 起動 し て ない から でしょ う 。 
{} の中 で 定義 し た 変数 は {} の中 で しか 使え ない 、 と 思っ て 下さい 。 do { ... int num = ...; ← これ が 使える の は ... } while ( count == 1 ); ← ここ まで if ( num < 0 && num > 0 ) { ← ここ で は 使え ない で 、 どう すれ ば いい か 。 int count = 0 ; int num ; ← 外 に 出す do { ... num = Integer . parseInt ( str ); ← int は 消す 。 ここ で は つかえる 。 ... while ( count == 1 ); if ( num < 0 && num > 100 ) { ← ここ でも 使える 
空白 と いう か 、 インデント は 何 個 連結 し て も １つ と 数え られ ます ので 、 個数 は 関係 あり ませ ん 。 ※ 無い と 問題 に なる こと は あり ます 。 提示 さ れ た コード に は 問題 ない と 思わ れ ます 。 
可能 みたい です よ 。 http:// stackoverflow . com / questions / 30511238 / moving - android - studio - p ... 
Minecraft Modding wiki にて 、 1 . 9 の Mod 開発 方法 が こう かいさ れ まし た ので 、 こちら を 参考 に し て み て ください http:// minecraft jp . info / modding / index . php /% E3 % 83 % 81 % E3 % 83 % A5 % E3 % 83 % ... ブロック を 追加 する 程度 でし たら ほとんど 旧 バージョン と 変わっ て い ませ ん ので 安心してください 。 
カッコ 書き で 書い て いる 意味 が 分からん の かね 。 ant - install - dir って の は Apache ant を インストール し た ディレクトリ を 指し て ん だ よ 。 インストール する ディレクトリ なんて 人 それぞれ だ から そういう 風 に 表現 し てる の 。 要は Apache ant を 使える よう に パス を 通せ って こと だ よ 。 
javascript の 実行 環境 は ハード で は なく ブラウザ 依存 です 。 スマホ 側 に 新しく 別 の ブラウザ を インストール する か 、 現在 の ブラウザ と 使用 し て いる 関数 など と の 互換性 を 調べ て 解決 する しか ない と 思い ます 。 
> クリック し て も トースト が 出 ませ ん Button の 設定 と 同じ で リスナー を 設定 し ない と いけ ませ ん lv .s etOnItemClickListener ( this ); ＞ simple _ list _ item _ 1 今 は いい けど 、 いずれ カスタム アダプター に し た 方 が いい かも ね 
ご 利用 の 環境 は QuickStart VM の 要件 を 満たし て い ませ ん 。 http:// www . cloudera . com / documentation / enterprise / latest / topics / clou ... Cloudera Express ( 無償 版 Cloudera Manager ) を 利用 する 場合 、 VM に は 最低 8 GB の メモリ を 割り当てる 必要 が あり ます 。 流す クエリ 次第 で は さらに 必要 に なる でしょ う 。 物理 メモリ 8 GB の 環境 で は 要件 を 満たす こと が でき ませ ん 。 システム 要件 を 満たし て いる 環境 で 、 再度 お 試し ください 。 
九九 を 表示 し て い ます ので 、 外 ループ １ ～ ９ 、 内 ループ １ ～ ９ の 範囲 です 。 １ 、 [ = 1 ; I < 9 ; I ++] ２ 、 [ = 1 ; s < 9 ; s ++] ３ 、 [ I * s ] ４ 、 [ print ( ans + "\ t ")] これ は 問題 が 微妙 です ね 。 他 の 問題 と の 兼ね合い も ある ん でしょ う が import java . util .S canner ; Scanner stdIn = new Scanner ( System . in ); int ans ; は 正直 必要 ない です し for ( int I = 1 ; I < 9 ; I ++) 変数 は 先頭 小文字 という 暗黙の了解 を 守っ て い ない です し ( 一文字 なら いい の か な ) System . out . println (); の インデント も おかしい です 。 
comparator を 使え ば いけ ます よ 。 
最初 の public が 大文字 に なっ てる の と 、 Hero クラス が 無い の が 原因 か と 。 
オンライン コンパイラ が どういう もの か は わかり ませ ん が 、 1 、 「 public class AAA 」 と 宣言 が 入っ て いる 場合 は 、 ファイル 名 を 「 AAA . java 」 と する 必要 が ある 。 つまり 、 クラス 名 と ファイル 名 が 等しい 必要 が あり 、 public class を 同じ ファイル に 複数 書く こと は でき ない 。 どちら も 外部 から 参照 し たい 場合 は 、 ファイル を 分け たり パッケージ を 利用 し て まとめ たり する こと を お勧め し ます 。 最初 の public が 先頭 大文字 に なっ て いる ので 単純 に スペル ミス で も あり ます 。 2 、 Wizard クラス の メンバ 変数 wand が 初期 化 さ れ て い ない 。 int recovPoint = ( int ) ( basePoint * this . wan d.p ower ); -------- 案 1 -------- wand は 、 初期 化 さ れ て い ない ので NG メンバ 変数 の 宣言 を Wand wand = new Wand (); と す べき です 。 -------------------- 複数 の オブジェクト を 扱わ ない 場合 は 、 static を 指定 し ましょ う 。 -------- 案 2 -------- public class Wand { static String name ; static double power ; } // メンバ 変数 は 宣言 し ない int recovPoint = ( int ) ( basePoint * Wand . power ); -------------------- また 、 this は 、 同じ クラス の メンバ 変数 で ある こと を 明示 的 に 表す だけ な の で なく て も いい でしょ う 。 3 、 引数 の 型 の 先頭 が 大文字 で ない 。 クラス 名 の 先頭 の 文字 は 大文字 で ある こと が 一般的 です 。 void heal ( hero h ){ ここ で は 先頭 が 小文字 な ので 、 スペル ミス か 何 か の 可能性 も 考え られ まし た 。 こんな ところ でしょ う か 。 プログラム 全体 や エラー 出力 が わから ない ので 解決 でき た か は わかり ませ ん 。 System . out . print ( wand + ":" + hp ); の よう に 変数 内容 を すべて 出力 し 、 null や 想定 し て い ない 値 が 代入 さ れ て ないか 確かめる と 半分 くらい の バグ は 取れる 気 が し ます 。 デバッグ は 大変 でしょ う が 、 頑張っ て ください 。 
optifine 単体 で 入ら ない の なら forge を 使っ て 導入 し たら いい の で は 無い でしょ う か ？ 
単純 に 分けて 書く と Animal a = new Animal ();// 1 個 目 Animal b = new Cow ();// 2 個 目 Cow c = new Cow ();// 3 個 目 これ を 前提 として 、 そのまま 実行 する と a . say Something ();//[ Gurrr !] b . say Something ();//[ Gurrr !] c . say Something ();//[ Moo !] これから 、 オブジェクト 変数 の 型 に 影響 さ れる こと が わかり ます 。 (( Cow ) a ). say Something ();//[ 型変換 エラー ] (( Cow ) b ). say Something ();//[ Moo !] (( Cow ) c ). say Something ();//[ Moo !] すべて Cow に 変換 しよ う と する と 、 中身 が Cow で ない 変 数 a だけ 変換 でき ませ ん 。 b は 結果 が 変わり ます 。 ここ から 、 サブクラス ほど 融通 か 利く こと が わかり ます 。 
JRE と JDK が 混在 し て いる と 、 どちら の 環境 を つかっ て 実行 する か 選択 する こと が でき ます 。 最新 の Java に 更新 し た とき に 、 Windows の JAVA ＿ HOME と PATH の 内容 が 変わっ て しまっ た の だ と 考え られ ます 。 昔 の パス を 再度 設定 すれ ば 動く と おもい ます よ 
int a = 0 , b = 1 , c = 2 ; String [] str ={ a , b , c }; という こと ？ でし たら でき ませ ん 。 型 が 違う ため エラー に なり ます 。 String [] str ={ String . valueOf (a) , String . valueOf ( b ), String . valueOf ( c )}; と 型 を String 型 に する なら 可能 です 。 String a =" 0 ", b =" 1 ", c =" 2 "; String [] str ={ a , b , c }; for ( int i = 0 ; i < 3 ; i ++){ str [ i ]=" 値 を 代入 "; } と し た 場合 、 a , b , c の 値 は 変わり ませ ん 。 String は 値 を 変更 し た 瞬間 に メモリ 上 、 別 の 空間 に 値 を 保持 し ます 。 String a =" 0 "; String b = a ;// b は a と 同じ 場所 (" 0 ") を 指し て いる 。 String b =" 1 ";// b は " 1 " に なる が a は " 0 " を 指し た まま 。 String a =" 0 "; String b = a ;// b は a と 同じ 場所 (" 0 ") を 指し て いる 。 String a =" 1 ";// a は " 1 " に なる が b は " 0 " を 指し た まま 。 
C言語 で 言え ば # define A 1 って ところ か 。 そう 言っ た 物 は 無い な 。 
ファイル の 内容 が 日時 ログ と なっ て いる ん でしょ う が 、 日時 と ログ を 分割 する こと は でき て い ます か ？ 日時 と ログ が スペース 区切り なら 、 例 の ２ と ３ の 途中 の スペース と 区別 が つか なく なる ので 判定 に 工夫 が 必要 に なり ます 。 一行 分 まるっ と ログ の 具体 例 を 教え て いただき たい です 。 日時 を 分割 し て とりだせ て いる なら 、 String # indexOf ("/") とか で ２ と ３ を 特定 でき ます 。 また 、 indexOf ("[") で １ か ４ を 特定 でき ます 。 その 判定 結果 ごと に 日時 の 判定 処理 を 分ける と いい でしょ う 。 例 if ( str . indexOf ("/") == 4 ){②} else if ( str . indexOf ("/") == 2 ){③} else if ( str . indexOf ("[") == 0 ){④} else {①} プログラム を 、 一定 の フォーマット に 書き換える メソッド として 宣言 し て おけ ば 検索 文字列 も ある程度 自由 に でき そう です ね 。 フォーマット が ファイル ごと に 違う の か 行 ごと に 違う の か が 文章 から 読み取れ なかっ た ので 、 もし ファイル ごと なら この 処理 は 必要 ない です ね 。 読み取っ た ファイル ごと に 対応 し て ください 。 ファイル を すべて 読み取る ↓ 改行 ごと に 分割 する ↓ 日付 を 取り出す ↓ 日付 の フォーマット ごと の 差 を 補完 する ( 上 の 例 の よう な プログラム ) ↓ 引数 から 受け取っ た 日付 と ファイル の 日付 を 比較 する ↓ 該当 する 行 だけ ファイル に 出力 する 細かい 部分 が どう すれ ば いい の か わかり ませ ん が 、 こんな 感じ の アルゴリズム に なる と 思い ます 。 まとまり が なく て すみません 。 
以下 の よう に サイズ 指定 に なっ て いる から で は ない でしょ う か ？ android : layout _ width =" 320 px " android : layout _ height =" 384 px " と 指定 し て い ます ので 、 この サイズ で 表示 さ れ て いる はず です 。 スマホ で ちょうど よく 表示 さ れ て いる の は 、 たまたま スマホ の 画面 と この サイズ が 合っ て いる から だ と 思い ます 。 画面 の 最大 に 表示 する 場合 は 以下 の よう に 指定 し ます 。 android : layout _ width =" match _ parent " android : layout _ height =" match _ parent " この よう に 指定 する と 縦横 を 最大 に する こと が でき ます 。 それ と 、 FrameLayout の 方 は android : layout _ width =" fill _ parent " android : layout _ height =" fill _ parent " と なっ て い ます が 、 fill _ parent は match _ parent に する よう 推奨 さ れ て い ます ので 、 そちら も 直し て おい た 方 が いい と 思い ます よ 。 
Double . is Infinite で true なら メッセージ を 変えれ ば いい 。 具体 的 に は if ( ope . equals ("/")){ double ans = calc . getTotal (); System . out . println (+ num 1 +" "+ ope +" "+ num 2 +" = "+( double ) ans ); を if ( ope . equals ("/")){ double ans = calc . getTotal (); if ( Double . is Infinite ( ans )){ System . out . println (" ０ では 割れ ませ ん " ); } else { System . out . println (+ num 1 +" "+ ope +" "+ num 2 +" = "+( double ) ans ); } と で も すれ ば 望ん だ 結果 に なる の で は 。 
多分 、 PC に グラフィック ドライバー が 入っ て い ない の だ と 思い ます 。 https :// help . mojang . com / customer / portal / articles / 928493 - error - bad - v ... この サイト に したがっ て インストール し て み て ください 
pac kage 名 は 何 か を 送信 し たり する ため に ある わけ で は なく 、 「 一意 （ 世界 で どこ に も 重なら ない ） の 名前 」 を 付ける ため に 利用 し ます 。 その 理由 は 以下 の 通り です 。 たとえば 誰 か が hoge という パッケージ に Fuga という クラス を 作成 し 、 その クラス を 含ん だ ライブラリ を hoge . jar として 公開 し た と し ます 。 この ライブラリ を 使う 場合 、 hoge という パッケージ を 作成 し て しまう と 、 ライブラリ 内 の パッケージ hoge と 自分 の 作成 し た パッケージ hoge は 同 一 パッケージ と みなさ れ 、 思わ ぬ 不 具合 を 発生 さ せる こと が あり ます し 、 自分 の 作成 し た パッケージ hoge に Fuga という クラス を 作成 する と クラス バッティング が 発生 し て コンパイル でき なく なり ます 。 ライブラリ を 使う 場合 、 その ライブラリ の 中 の パッケージ 名 と クラス 名 全て を 把握 し て い ない と 開発 でき ない 、 という こと に なっ て しまい ます 。 その ため 、 パッケージ に は 「 一意 の 名前 」 を 付ける 必要 が あり 、 バッティング の ない 名前 として ＵＲＬ が 使用 さ れる こと が 多い の です 。 また 、 言語 規約 で も それ を 推奨 し て い ます 。 参考 ： https :// docs . oracle . com / javase / specs / jls / se 7 / html / jls - 6 . html # d 5 e 648 ... You form a unique package name by first having ( or belonging to an organization that has ) an Internet domain name , such as oracle . com . You then reverse this name , component by component , to obtain , in this example , com . oracle , and use this as a prefix for you r package names , using a convention developed within your organization to further administer package names . Such a convention might specify that certain package name components be division , department , project , machine , or login names . 
Yahoo! は ネットショッピング 用 の API を 提供 し て いる と 思い ます 。 スクレイピング で は なく API を 利用 す べき な の で は ？ 
動的 Web アプリケーション の フロント や バックエンド で 使い ます 。 最近 は シェア が 落ち て い ます し 、 新規 システム で spring 使う こと は 少なく なっ て い ます が 、 アスペクト指向 や Model - View - Control 分離 による 疎結合 、 Dependency Injection の 概念 といった 、 ” モダン な 開発 なら 必須 と なる 基礎 ” を 勉強 する 役 に は 立ち ます 。 
String str = "< a > あれ </ a >"; String start = "< a >"; String end = "</ a >"; int indexS = str . indexOf ( start );// 開始 文字列 を 探す int indexE = str . indexOf ( end , indexS );// 終了 文字列 を 開始 文字列 より 後ろ から 探す String picup = str .s ubstring ( indexS + start . length (), indexE );// はさま れ た 部分 を 取り出す 挟ま れ た 文字列 を 取り出す プログラム は こんな 感じ で 動い た と 思い ます 。 即興 な ので 間違っ て たら 修正 し て ください 。 
こんにちは。 ユーザー で できる こと は 、 「 ランタイム の 最新 更新 」 を し て いる か 、 java の モジュール を 確認 です 。 ある dll が 、 限界 を 超え た 書き込み を しよ う と し た ので 、 エラー 停止 し まし た 。 という こと です 。 とりあえず 、 最新 の java を インストール し なおし し て 、 再起動 し て ください 
インストール さ れ て いる か 確認 は 以下 の コマンド を 入力 し て ください 。 yum search openjdk インストール は 以下 の コマンド を 入力 し て ください 。 ( ja v a8 の 場合 ) yum install ja v a-1 . 8 . 0 - openjdk 
それ 以前 に javac は どこ に インストール さ れ てる ん です ？ find / - name javac とか 実行 し て み ましょ う 。 
式 そのもの は 排他的論理和 ( XOR ) に なっ て い ます が 、 XOR なら 素直 に ^ を 使え ば いい の では 。 data . charAt ( num )^ thekey . charAt ( num ) で (! D & T )|(! T&D ) と 同じ XOR 処理 に なり ます 。 それ は それ と し て 、 文字 が 復元 でき ない の は 、 XOR 処理 で バイナリ 化 し た データ を String に 入れ た こと で 、 不正 な 文字列 変換 が 発生 し た ため と 思わ れ ます 。 この 手 の データ を 扱う 場合 は バイナリ を 一度 byte の 配列 に 入れ て 、 BASE 64 等 で テキスト エンコード し ない と String 文字列 の 自動 変換 によって 誤動作 を 起こし ます 。 
アプレット か Java Web Start の こと か と 思い ます 。 ブラウザ を 消し て も 、 java アプリ 自体 は 動い た まま 、 と いう ので Java Web Start の 方 でしょ う 。 この 辺 に 詳しく のっ て い ます 。 https :// www . java . com / ja / download / faq / java _ webstart . xml ただ 、 最近 は ブラウザ から Java を 利用 する こと が セキュリティ 上 で 問題 視 さ れ て いる ので この 先 は あまり 使わ れ なく なる かも しれ ませ ん 。 アプレット の 方 は もう ほとんど アウト みたい な 扱い に なっ て き て い ます 。 とりあえず 同じ Java 関連 技術 で も Spring MVC と は あまり 関わら ない と 思わ れ ます 。 
d は 宣言 さ れ て い ない 変数 です 。 また 、 式 の 左右 の 辺 が 逆転 し て ます 。 a - b = d ; を int d = a - b ; と す べき です 。 「 変数 = 計算 式 」 という 形式 は プログラミング で は 一般的 です 。 プログラム の アルゴリズム の 設計 時 に 擬似 的 に 「 変数 ← 計算 式 」 と 書く こと も ある くらい です 。 
こちら の アンインストール ・ ツール を 使用 し 再度 インストール し て 下さい 。 https :// www . java . com / ja / download / faq / uninstaller _ toolinfo . xml 
aNameList の 方 は 合っ て い ます ね 。 つまり 、 重複 要素 は 見つけ出せ て いる 。 ただ 、 bNameList は かぶり まくり 。 何故 か と 言う と 、 ２つ の 配列 の 組み合わせ を 試す 中 で 、 外れ た 時 毎回 リスト に 入れ て しまっ て い ます 。 たろ う が ３つ 続い て いる の を 見る と わかり やすい です ね 。 たろ う じゃ ない ！ たろ う じゃ ない ！ たろ う じゃ ない ！ これ を やめ させる ため に は 、 A . a の 一つ の 要素 （ aa ） に対して b を 全部 見 て 、 なけれ ば aa を ｂNameList に 入れる B . bNameList に 一 度 入れ た 値 を 二度と 入れ ない よう に 工夫 を する など の 方法 が 考え られ ます 。 A の 方法 は 質問者 の やり たい こと かも 知れ ませ ん 。 ただし 、 b に しか ない 要素 を bNameList に 入れ られ ませ ん 。 B の 方法 は 一つ ループ が 増え ます が 、 b に しか ない もの も 見つけ出せ ます 。 
Intel の OpenGL ドライバ （ ig 4d ev 32 . dll ） で エラー が 発生 し て い ます 。 メーカー サイト から ドライバ を 更新 し て み て 下さい 。 最新 の ドライバ に 更新 し て も ダメ な 場合 、 少し 古い もの に する と 解消 する 可能性 も あり ます 。 それでも ダメ な 場合 、 PC の スペック 不足 が 考え られ ます 。 （ マイクラ 非公式 ユーザー フォーラム より 引用 ） 
一応 個人的 に 感じ て いる 事 を 書き ます ので 、 参考 に し て 下さい 。 「 プログラミング が かなり 苦手 」 と 書か れ て い ます が 、 これ は プログラミング言語 が 難しい 事 が 理由 と 考え て い ます 。 例えば 、 自動車 の 場合 、 半クラッチ による 坂道発進 や 、 交差点 を 曲がり ながら の ギヤ チェンジ が かなり 苦手 な 人 が いる ので 、 オートマチック 車 を 開発 し 半クラッチ も ギヤチェンジ も 不要 と し 、 免許証 を オートマ 限定 の 物 まで 作っ て 多く の 人 の 苦手 を 無くす 努力 を し て き 来 て い ます 。 これ を プログラミング に 置き換え た 時 、 苦手 を 克服 出来る よう に し た 技術 も 有り ます が 、 逆 に 更に 苦手 に し て しまっ た 技術 も 残念 ながら 存在 し ます 。 この 辺 を 論文 として 整理 さ れれ ば 良い の で は ない でしょ う か 。 因みに 、 私 の 経験 から オートマチック 車 に 匹敵 する 物 は SQL です 、 苦手 に し て しまっ て いる 物 は 、 構造化プログラミング と goto 文 悪者 （ 悪者 は 条件 分岐命令 で goto 文 は 被害者 です ） 説 です 、 更に 、 駄目押し し た 物 が オブジェクト指向プログラミング です 、 この ２ 個 だけ でも 苦手 な 人 が かなり 増え た と 推測 し ます 。 
エラー の 原因 は インストール さ れ て いる Java の バージョン です 。 最新 バージョン で は Forge は 動作 し ませ ん 。 JDK の バージョン を ダウン すれ ば 動き ます 。 
＞ この 春に 基本情報 を 受ける ＞ 授業 で は java を 習っ て い ます まさか 基本情報技術者 の 午後 の 試験 の 選択 問題 で ＪＡＶＡ を 選ぶ わけ で は ない ん です よ ね ！ ？ 午後 の 選択 問題 に Ｃ 言語 ・ ＪＡＶＡ を 選ん だ 時点 で 自動的 に 不 合格 に なり ます （ エクセル 関数 について は 知り ませ ん ） 午後 の 選択 問題 を 合格 する 者 は 、 私 の 知る 限り で は 全員 が アセンブラ を 選択 し て い ます ＞ 全商 1 級 程度 そんな レベル で は 無理 でしょ う 基本情報技術者 の 試験 で ” 級 ” という 概念 を 出し て いる 時点 で 落ちる と しか 思え ない ” 級 ” という 概念 は 検定 の 話 で あり 、 基本情報技術者 は 検定 と は 遥か に レベル が 違い ます 様々 な ” ○ ○ 検定 ” で １ 級 を 取っ て いる 者 で も 基本情報技術者 に は 太刀打ち でき ませ ん ＞ 午後 の プログラム が よく わかり ませ ん 。 ＞ 参考書 を 買う べき です か ？ 午後 の プログラミング 問題 は 、 アプリ 開発 が でき ない 者 は １ ０ ０ ％ 不合格 に なり ます 
API えらー です 。 この 意味 が 分から ない なら この まま 構文 を 書く の を やめ ましょ う 。 
C :\ の 下 に User と work の 両方 が あっ て いい ん です 。 C :\ ├ User └ work 
なぜ か 知ら ない けど 、 プログラム 上 、 盤 目 を 二 重 配列 で なく 、 100 個 の 直列 配列 に し て おり 、 その 配列 （ placeMap ） は 横 + 縦 * 10 の 値 で アクセス し て い ます 。 例 ： 横 0 , 縦 4 → placeMap 配列 の 0 + 4 * 10 = 40 番目 placeMap は makePlaceMap によって 、 リバーシ 上 置ける 場所 に 数字 を 入れ て おり 、 置け ない 場所 に は 0 が 入っ て い ます 。 その ため 、 placeMap の 横 + 縦 * 10 番目 の 要素 が 0 より 大きけれ ば 、 という 条件 で 置ける か どう か を 判定 し て い ます 。 
普通 の 操作 で は あり 得 ない 話 な ので 、 この 質問 内容 で は 回答 の しよう が あり ませ ん 。 そちら の パソコン の 中身 や 操作 の 経過 を 透視 し て くれ と 言っ てる よう な もの です 。 
エクストリームプログラミング と は 、 ソフトウェア開発 において 、 「 シンプル さ 」 「 コミュニケーション 」 「 フィードバック 」 「 勇気 」 の ４つ の 要素 を 重視 する 考え方 の こと です 。 ちなみに 、 ４ 番目 に ある 「 勇気 」 という の は 、 大胆 な 設計 変更 に も 立ち向かっ て いく 勇気 の こと です 。 
ペネトレーションテスト と は 、 ネットワーク で 外部 と 接続 さ れ て いる システム の 安全性 を テスト する 手法 の ひとつ です 。 既知 の 技術 を 用い て 実際 に システム へ の 攻撃 や 侵入 を 試み 、 システム に セキュリティ 上 の 脆弱性 が ない か どう か を 調べ ます 。 別名 「 侵入 実験 」 や 「 侵入 テスト 」 など と も 呼ば れ ます 。 
オブジェクト指向プログラミング で は クラス を 宣言 し て インスタンス化 し て 使う ルール を 作っ た から です 。 個人 的 な 意見 です が 、 この ルール は 余り 良い ルール と は 言え ない ので 、 何 の ため に 分ける 必要 が 有る の か と 疑問 に 思わ れる 事 と 推測 し ます 。 プログラミング において クラス 名 と インスタンス 名 が 登場 する ので 、 結果的 に は 難解な プログラム に なる 要因 を 作っ て いる と 考え ます 。 オブジェクト指向プログラミング で は オブジェクト は 鋳型 で 、 幾つも インスタンス化 で 実体 を 作る 事 で プログラム を 作る 方法 を 採用 し て い ます 。 尚 、 main メゾット だけ で 使う 場合 は 普通 の 変数 （ main メゾット の 書か れ て いる クラス で 変数 を 宣言 する ） を 使う の が 一般 的 な 方法 です 。 
詳しく ない けど 普通に notepad . exe の 所 を test .s h ( 当たり前 だ けど 名前 は 何 でも 良い よ ) に し て 、 起動 し て コマンド を ProcessBuilder p = new ProcessBuilder ( cat testpass ); Process process = p .s tart (); で すれ ば いい の では ？ しかし この まま だ と エラー が 出る から try ブロック の 中 に 書い て キャッチ ブロック を catch ( IOException e ){ // 処理 } finally { p . destroy (); } で いい と 思う 。 しかし 、 スコープ の こと も 忘れ ず 。 try ブロック の 中 に 書い て いる から p . destroy (); が でき ない 。 だから 、 フィールド に Process p ; と 書け ば 大丈夫 。 もしくは throws を 付け て メソッド を 宣言 する か 。 
Minecraft 1 . 7 . 10 、 Minecraft Forge 10 . 13 . 3.14 28 、 Eclipse 4 . 3K epler 、 JDK 1 . 6 . 0 _ 45 で Modding を 行っ て い ます 。 ソースコード を コピペ し て 上記 環境 で 実行 し て み まし た が 、 特に 問題 なく 起動 ・ 反映 さ れ て い まし た 。 eclipse で 製作 し て いる の で あれ ば 、 エラー 部分 は 赤 の 波線 で 強調 さ れ 、 クイック フィックス である 程度 修正 できる はず です が 、 いかが でしょ う か 。 また 、 クラッシュ レポート の 提出 に 加え 、 どの よう な 挙動 な の かも 公開 し た 方 が より 回答 を 得 やすい か と 思い ます 。 例えば ｢ 必要 な プロジェクト で エラー ｣ が 出る 、 MOJANG の 画面 で クラッシュ 、 ワールド に 入っ たら クラッシュ 、 等 等 ・ ・ ・ 。 
キーボード 自体 が 故障 し て いる とか ? キーボード を いくつ か 交換 し て も 発生 する の でしょ う か ? Windows で 日本語 入力 が でき なく なる こと が まれ に あり ます が 、 OS を 再起動 する と 回復 し ます 。 
シェアウェア と は 、 一定 の 試用期間 内 は 無償 で 使用 でき ます が 、 試用期間 後 も 引き続き 使用 する 場合 は 使用料 を 支払わ なけれ ば なら ない という ソフトウェア の こと です 。 有料 と なる こと 以外 は フリーウェア と 同じ です 。 
「 絶対値 が ほぼ 等しく 同 符号 で ある 数値 の 減算 」 を 行っ た 時 です 。 
はい 。 保護 さ れ ます よ 
Z = 50 A + 120 B を B について 解け 、 という の は 、 中学 １ 年 くらい ？ の 代数 です ね 。 Z = 50 A + 120 B ↓ 移項 120 B = Z - 50 A ↓ 全て を 120 で 割る B = Z / 120 - 50 A / 120 ↓ 約分 B = Z / 120 - 5 A / 12 ↓ Z と A を 単に 入れ替え （ し なく て も 良い ） B = - 5 A / 12 + Z / 120 この - 5 A / 12 という の は 、 - 5 * A / 12 な ので 、 - 5 / 12 * A と 変形 でき ます 。 （ 本当は この 両者 は 違う の だ が 同じ と 見なし て 差し支え ない こと も ある ※ １ ） そこ で 最終 的 に B = - 5 / 12 A + Z / 120 という 形 が 得 られ ます 。 Java っぽく 書け ば B = - 5 / 12 * A + Z / 120 ; と なり ます 。 ※ １ 結果 が 必ず 整数 に なる の で あれ ば 両者 は 同じ である が 、 結果 が 整数 と は 限ら ない 場合 、 「 割っ て から 掛ける 」 と 「 掛けて から 割る 」 と では 、 Java など の プログラミング言語 で は 精度 の 問題 が 生ずる 。 
ネットワーク を 利用 し た 攻撃 手法 （ 技術 的 脅威 ） の 一 種 です 。 ファイル 名 を 扱う よう な プログラム に対して 、 特殊 な 文字列 （ パス 名 など ） を 含め て ファイル を 指定 する こと で 、 ディレクトリ を さかのぼり 、 管理者 が 意図 し て い ない ファイル を 不正 に 取得 する 攻撃 手法 です 。 「 トラバーサル 」 に は 、 横断 する とか 横切る など の 意味 が あり ます 。 
映像 制作 を する ため に Java や C言語 で プログラミング を する こと は 殆ど あり ませ ん 。 映像 制作 に 用いる ソフトウェア で は 、 専用 の 言語 による プログラミング を 行い ます 。 コンピューター の こと で は なく 、 まずは 映像 制作 について の 初歩 から 勉強 し ましょ う 。 
実行 時 に 、 コマンドプロンプト 画面 に エラー は 表示 さ れ て い ます か ？ なんと かかん とか Exception ... と か 。 本当に 、 実行 時 に public void wmpaint () が 呼び出さ れ て い ます か ？ 確認 の 方法 は 、 System . out . println () を 使い ます 。 public void wmpaint () の なか の 一番 はじめ の 文 に 、 System . out . println (" 呼び出さ れ た よ ！"); など 書い て 、 もう一度 コンパイル 、 実行 し た 時 に 文字列 が 表示 さ れれ ば 、 メソッド 内 の エラー で 、 表示 さ れ なけれ ば 、 public void wmpaint () メソッド 自体 が 呼び出さ れ て い ない こと に なり ます 。 その 場合 、 part 03 クラス が 継承 し て いる jp .net gamers .fr ee . tugame . jf ra me. TUGame クラス の 、 コンストラクタ に 原因 が ある と 思い ます 。 今回 の プログラム に 限ら ず 、 プログラム の 実行 時 エラー 探し で は System . out . println () が 非常 に 便利 です ので 、 どんどん 使う よう に し て ください 。 
ツール → アドオン の 管理 で Java は 有効 に なっ て い ます か ？ 
ブレース { } が アンバランス 。 putGameClear () に 閉じ ブレース が なく 、 put () が この メソッド 内 に 入れ子 で 入っ て しまっ て い ます 。 ちゃんと ソースコード を インデント 表示 くれる エディタ で 見 てる なら 、 一目瞭然 な はず です が 。 P.S. 文字列 の 連結 コード 、 全部 おかしい です 。 Java で は System . out . println (" レベル " + lv + " の くせ に 運 よく 勝て まし た "); の よう に 、 連結 演算子 + が 必要 です 。 
ランチャー の データ 損傷 と 思わ れ ます 。 . minecraft フォルダ と 、 ランチャー を 削除 （ インストール 型 なら アンインストール ） を し て 、 ダウンロード から やり直し て ください 。 
Java なら Eclipse か Java JDK か NetBeans ぐらい ？ 私 は JDK の 方 を 使っ て い ます 。 これ は コンパイラ ( と 必要 最小限 の プログラム ) で 構成 さ れ て い ます 。 Eclipse は C/C++ で いう VC++ のようなもの 。 
> AdMob の 広告 収入 って 、 どの タイミング で 発生 こちら を 参考 に http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1415677160 ... 実際 に やり 始めれ ば 日々 の レポート を み られ ます が クリック の 方 が 単価 が 高い です 
Fragment と は ？ について 、 調べ て みる こと を お勧め する 。 Android Fragment の 2 語 で 検索 する だけ でも 、 多数 解説 は 見つかる と 思い ます 。 ( e . g .) http:// www . techdoctranslator . com / android / guide / activities / fragments http:// nobuo - create .net / fragment / 
これ で いい ん でしょ う か ? ① public class method _{ public static void main ( String [] args ){ System . out . println ( sum ( 5 , 10 )); } static int sum ( int a , int b ){ return a + b ; } } ② class A { void print _(){ System . out . println (" Hello World !"); } } class B extends A {} public class Extends { public static void main ( String [] args ){ new B (). print _(); } } 
＞ TextView 1 個 ずつ に対して フォント を 指定 し て いく 方法 しか 見つかり ませ ん 。 それで 十分 だ から それ 以上 説明 し て ない の です ＞ アプリ 内 の フォント を 一括 で 変更 する 方法 って ありません でしょ う か フォント を 変更 する べき ところ を 変数 に 置き換え て みれ ば いい の では と 考える これ が あなた の プログラミング の 始まり です TextView textView = ( TextView ) findViewById ( R . id . text _ view ); textView .s etTypeface ( Typeface . create ( Typeface .S ANS _ SERIF , Typeface . BOLD _ ITALIC )); と なっ て い たら Typeface .S ANS _ SERIF と Typeface . BOLD _ ITALIC を 変数 に 置き換える と か 
いまどき swing か よ 。 JavaFX を 使え 。 
手っ取り早い 方法 として は 、 フォルダ 名 " examples " を " ROOT " に 変更 すれ ば 、 http:// 192 . 168 . 11 . 20 / index に なる と 思い ます 。 / usr / to mc at8 / webapps / examples / WEB - INF / classes ↓ / usr / to mc at8 / webapps / ROOT / WEB - INF / classes ただし 、 既に ROOT という フォルダ が 存在 する 可能性 が あり ます ので （ tomcat を 普通に インストール すれ ば 存在 し ます ） 、 その とき は それ を 削除 する か 別 の 名前 に する など を する 必要 が あり ます 。 参考 ページ ： Eclipse で 、 Tomcat 上 の Web アプリ を ルート に 配備 する 方法 http:// web . plus - idea .net / 2012 / 07 / eclipse - tomcat - web - root / 他 にも 「 tomcat ルート コンテキスト 」 など で 検索 すれ ば 、 いろいろ 出 て くる と 思い ます 。 
こんにちは 、 Spigot 1 . 8 . 7 にて サーバー を 運営 し て いる 者 です 。 今回 バージョン 表記 が ない ので 、 Spigot 1 . 8 . 8 , permissionEx 1 . 23 . 4 を 使う と 仮定 し て 回答 さ せ て いただき ます 。 軽く 見 た 感じ です が 所々 パーミッション が 間違っ て いる ところ が 存在 し ます 。 / co i コマンド は coreprotect . inspect / jail 及び / unjail コマンド は essentials . togglejail が 正しい パーミッション です 。 パーミッション は 検索サイト で [( プラグイン 名 ） per mission ] 等 で 検索 を すれ ば 出 て くる こと が 大半 です ので 、 各 プラグイン ごと に 調べ て み て ください 。 初 回答 と の こと も あり 、 非常 に グダグダ な 回答 文 に なっ て しまい 申し訳ない です 。 また 、 次回 質問 時 から サーバー / 導入 プラグイン の バージョン など を 記載 し て くれる と 、 回答者 が 詳細 な 回答 を できる ので 、 記述 する こと を お勧め し ます 。 サーバー 運営 頑張っ て ください ！ 
ファイル が 見つから ない と 言わ れ て いる の です から 、 そのまま ファイル が 無い の でしょ う 。 c :\ Users \ Owner \ の 直下 に Calc . java ファイル は あり ます か ？ なけれ ば 、 エクスプローラー で Calc . java の 置か れ て いる フォルダ を 開き 、 コマンドプロンプト に は cd ( cd の 後ろ に 空白 ) と 打っ て Enter 「 し ない 」 状態 で 、 エクスプローラー の 左上 の 黄色い フォルダ マーク を ドラッグ ＆ ドロップ で コマンドプロンプト に 入れ て cd [ Calc . java の 置か れ た フォルダ ] と なっ た ところ で Enter し て ください 。 それから javac を 実行 すれ ば コンパイル できる はず です 。 
＞ 予想 として は xml で 表示 さ れる view と addview で 直接 追加 さ れる view を 両立 さ せる こと が でき ない の か な 、 なんて 思っ て ます 。 せっかく 長い コード を 書い て くれ て ます が Ball クラス が 何 か わから ない レイアウト も 分から ない コピペミス だ と 思い ます が コード 合っ て ます か ？ void dxdyCount () が おかしい ＞ view と addview で 直接 追加 さ れる view を 両立 これ は でき ます が 、 そこ を 書い て ない ので わかり ませ ん ね https :// akira - watson . com / android / custom - canvas 1 . html コード が 長く なっ て 自分 で も 分から なく なっ て い ない でしょ う か 余分 な ところ は 省い て 、 単純 に View が 動く か どう か の 確認 を 先 に やっ た 方 が いい です アニメーション を 使う 方法 も あり ます https :// akira - watson . com / android / canvas - an imation . html 
ボタン 押下 なら ば 、 Button btn = new Button ( this ); // コード で 配置 する ボタン // 配置 とか の 処理 が ここ に 入っ た として btn .s etOnClickListener ( new View . OnClickListener () { @ Override void onClick ( View v ) { // 押し た とき の 処理 } }); みたい な 感じ で 、 setOnClickListener メソッド の 引数 として 押し た 時 の 処理 を 実装 すれ ば でき ます 。 別 に コード で 配置 し た から と 言っ て 特別 な こと は あり ませ ん 。 EditText で 文字列 を 取得 する 場合 も 、 EditText edt = new EditText ( this ); // 中略 String text = edt . getText (). to String (); みたい な 感じ で 、 こちら も 特別 な こと は あり ませ ん 。 「 id を 設定 する こと で 」 という の は findViewById を 使っ て View の インスタンス を 参照 する 方法 の こと を 指し て いる と 思う の です が 、 コード で 配置 し た から と い て 難しく 考える こと は なく 、 コード で 作成 し た インスタンス を 参照 する 変数 を 操作 すれ ば いい だけ の 話 です 。 
恐らく MAC で は UTF-8 で 書い た の でしょ う 。 Windows の 場合 、 MS 932 文字コード が デフォルト の ため 、 文字化け し ます 。 これ を 直す に は 「 ウィンドウ 」 → 「 設定 」 → 「 一般 」 → 「 コンテンツ ・ タイプ 」 を 開き 、 ツリー の 「 テキスト 」 あるいは テキスト の 下 の Java ソース ・ ファイル を 開い て 、 下 の 「 デフォルト ・ エンコード 」 に 「 UTF-8 」 と 入れ て ください 。 なお 、 java ファイル が 少ない 場合 は 、 パッケージ ・ エクスプローラー から 文字化け する java ファイル を 選択 し て 右クリック → プロパティ で テキスト ・ ファイル の エンコード を デフォルト から その他 に し 、 UTF-8 を 選択 する という 方法 も あり ます 。 
https :// java . com / ja / download / faq / win 10 _ faq . xml java を 管理 し て いる 会社 の ページ の 日本語版 です 。 以下 、 引用 ーーーーーー Windows 10 で Java は サポート さ れ て い ます か 。 はい 、 Java 8 Update 51 以降 、 Java は Windows 10 で 動作 保証 さ れ まし た 。 ーーーーーー 私 は 確認 し て い ませ ん が 、 こう 書い て ある ので 動く はず です 。 windows10 で も そう じゃなくて も 、 ブラウザ ごと の 互換性 が ある ので 確認 する と いい でしょ う 。 Edge で は 動か ない そう な ので 、 FileFox や IE を ダウンロード し て プラグイン を 設定 する と いい でしょ う 。 ブラウザ の プラグイン の 機能 だ と か で ダウンロード し ない 場合 http:// www . oracle . com / tech network / java / javase / download s / jre 8 - downlo ... java の 会社 の 直接 ダウンロード できる ページ です 。 java の ダウンロード が 可能 と 装っ て ウイルス を 仕込ま れる 可能性 は ゼロではない ので 、 こう いっ た 公式 の ページ を 使う の が 最も 安全 でしょ う 。 この リンク も 心配 なら 「 JRE 8 」 と 検索 する と上 の ほう に 出 て き ます 。 ライセンス の 許諾 みたい な のに チェック を いれ て 、 自分 の PC に 適合 する ビット 数 の タイプ の exe ファイル を ダウンロード し て 実行 する と インストール でき ます 。 
ページ の 中 に 、 サブ ミット ・ ボタン が １つ だっ たら 、 次 の よう に 記述 し ます 。 < script > function submitCommand () { var submitButton = document . querySelector (" input [ type =' submit ']"); submitButton . click (); } </ script > あと は 、 必要 な 場所 で 、 この 関数 を 実行 さ せれ ば いい の です 。 submitCommand (); あるいは 、 即 実行 し たい の なら 、 document . querySelector (" input [ type =' submit ']"). click (); これ でも 、 かまい ませ ん 。 さあ 、 これ で 一件落着 ！ 
まず 、 handler . postDelayed ( rannable , time ) は 、 time ミリ 秒 ごと に rannable を 実行 する メソッド で は なく 、 time ミリ 秒 後 に rannable を 実行 する メソッド です rannable の 中 に も それ を 書い て おく こと で 、 結果的 に time ミリ 秒 ごと に rannable を 実行 し て いる という 形 に なっ て い ます な ので 、 3 で 一 度 だけ rannable を 実行 し 、 それ 以降 は 2 で 定期 的 に 実行 し て いる よう です そして 1 について です が 、 その 時点 で は まだ rannable を 初期 化 し て い ない ため 何 も 起こら ない はず です 1 の 文 は 全く 意味 の 無い もの だ と 思わ れ ます 
何 やっ てる か 自分 で 理解 し てる か ？ Java は 上 から 順に プログラム が 実行 さ れる わけ じゃ ない ぞ ？ 
関数 ( java で は メソッド ) で 、 値 を 返し たり 、 送っ たり し たい という こと です ね 。 class W { int num = 0 ; int get (){ return num ;}// int 型 の 値 を 返す void set ( int n ){ num = n ;}// int 型 の 値 を 送る } たとえば こんな クラス で 、 呼び出し 時 は W w = new W ();// インスタンス の 生成 w .s et ( 7 ); System . out . print ( w . get ());//[ 7 ] という よう に なり ます 。 値 を 返す の ( 戻り値 ) は 、 使用 する メソッド の 左 に 書か れ た 型 で return の 右 の 値 を 返す 、 という こと を し ます 。 これ は 変数 の よう に 扱え て 、 ( w . get () + 2 ) で 9 を 表示 さ せ たり も でき ます 。 逆 に 値 を 送る の ( 引数 ) は 、 括弧 の 中 に 適合 する 型 の 値 を 入れ て メソッド を 呼び出す こと で でき ます 。 複数 送る とき は カンマ 区切り に し ます 。 
おそらく 、 Java が 正しく インストール さ れ て い ない か 、 . jar ファイル が 正しく 関連付け さ れ て い ない だけ だ と 思い ます 。 試しに 何 も 考え ず に 設定 も 変え ず 実行 し て み まし た が 、 1 ) サイト から 最新 版 の zip ファイル を DL ・ 解凍 。 2 ) 頑 シミュ . jar を ダブルクリック し て 起動 。 ( もしくは 頑 シミュ . bat を 実行 ) これ だけ で 問題 なく 起動 し まし た 。 Java は あらかじめ インストール 済み です 。 頑 シミュ . jar ファイル を 右クリック し て プロパティ を 開き 、 全般 タブ の プログラム の 変更 から 、 一覧 の 中 の Java を 選択 もしくは Java の インストール 先 フォルダ を 開き 、 Java の 実行ファイル ( java . exe ) を 参照 選択 し て 下さい 。 関連 付け を 行い たく ない 場合 は 、 Readme に も 書い て あり まし た が 、 java . exe まで の フル パス を 入力 し て 、 頑 シミュ . bat を 実行 し て 下さい 。 フルパス は 、 シフトキー を 押し ながら java . exe を 右クリック し 、 「 パス として コピー 」 で クリップボード に コピー 出来 ます 。 Java の インストール 先 は 、 Java インストール 時 に ご 自身 で 指定 さ れ た はず です 。 
id を 書き換え て も でき ます が 、 Layout . xml の Button タグ の 順番 を まるっ と 入れ替えれ ば 入れ替わり ます 。 
SQLite で 保存 し て みる とか オブジェクト 情報 を バイナリ で 保存 し て みる とか 下記 は バイナリ 保存 の 方法 https :// cloudear .jp / blog /? p = 933 
Baka が いちばん 良い です 。 
ソース は 、 読め ない ので 、 スクリーンショット で は なく 質問 の 中 に 文書 として 入れ て 下さい 。 回答 でき ませ ん 。 
ひとこと で 言え ば 、 「 サービス指向アーキテクチャ 」 という 意味 です 。 SOA は 、 Service Orient ed Architecture の 略 で あり 、 大 規模 な システム を 「 サービス 」 の 集まり として 構築 する 設計 手法 です 。 ソフトウェア の 機能 を サービス という 部品 と みなし 、 その サービス を 組み合わせる こと で システム を 構築 する 概念 の こと 。 再利用 可能 な サービス として ソフトウェアコンポーネント を 構築 し 、 その サービス を 活用 する こと で 高い 生産性 を 実現 する アーキテクチャ です 。 
Spring は 分かり ませ ん が 、 画像 の 1 行 上 の org . spring framework . web . bind . annotation . RequestMapping が ロード 出来 て org . spring framework . web . bind . annotation . RestController が 見つから ない の で あれ ば RestController は 4 . 0 で 追加 さ れ た よう な ので パス が 通っ て いる jar ( spring - webmvc ) が 古い の で は ない でしょ う か ？ 
次 から 次に 出 て くる Java の 脆弱性 は 、 ほとんど が アプレット や Java Web Start 関連 です 。 通常 の Java プログラム で ウイルス や バックドア など が 仕込ま れ たり 、 個人情報 が 流出 し て しまう の は 、 ユーザー が マルウェア など 悪意 の ある プログラム を 安全 だ と 判断 し て 実行 し て しまっ た の が 原因 で 、 これ は Java に 限っ た 事 で は なく 、 Windows の exe ファイル や Androidアプリ など 、 他 の 言語 で 作成 さ れ た プログラム で も 同じ です 。 アプレット や Java Web Start は デフォルト で は ユーザー の ファイルシステム や ネットワーク へ の アクセス が 制限 さ れ て い ます が 、 脆弱性 が 見つかる と 通常 の Java プログラム と 同様 の 処理 が 可能 に なっ て しまっ たり し ます 。 つまり Java の 脆弱性 と 呼ば れ て いる ものの ほとんど が 、 ブラウザ 上 で 実行 さ れる アプレット が 通常 の プログラム と 同等 の 処理 が 出来 て しまう 事 を 指し て い ます 。 その 為 アプレット を 有効 に し て いる ブラウザ で 脆弱性 の ある バージョン の Java を 使用 し て いる と 、 悪意 の ある ページ を 開い た だけ で ウイルス に 感染 し たり する 可能性 が あり ます 。 もし アプレット や Java Web Start を 無効 に し て い て 、 通常 の Java プログラム を 実行 する だけ なら ば 、 元々 ファイル アクセス も ネットワーク アクセス も 可能 な ので 、 脆弱性 うんぬん より も 、 実行 する プログラム に 悪意 が ある か どう か の 判断 が 重要 で あり 、 セキュリティ 上 の リスク は 古い バージョン の Java で も 最新 の もの で も 変わり ませ ん 。 ご 質問 の 回答 です が 、 アプレット や Java Web Start を 無効 に し て いる の で あれ ば 、 古い バージョン の Java に し て も 問題 あり ませ ん 。 ブラウザ で アプレット や Java Web Start を 使える 設定 に し て いる の で あれ ば 、 古い バージョン の Java で は ウイルス に 感染 する 可能性 が あり ます 。 アプレット や Java Web Start を 無効 に する 方法 です 。 ( Java コントロールパネル の 開き 方 は OS 毎 に 違う ので 検索 し て ください ) Java コントロールパネル の セキュリティ タブ で " ブラウザ で Java コンテンツ を 有効 に する " の チェック を はずし 、 念の為 、 詳細 タブ の " JNLP ファイル / MIME の アソシエーション " で " 許可 し ない " を 選択 し て 、 適用 ボタン や OK ボタン で 設定 を 有効 に し て ください 。 もし 古い バージョン の Java に する の で あれ ば インストール 後 に 上記 設定 を 確認 し て ください 。 もしか する と 管理者 以外 の アカウント で 設定 し て も 有効 に なら ない かも しれ ない ので 、 OK ボタン で 閉じ た 後 に もう一度 開い て 設定 内容 を 確認 し て み て ください 。 
> plintIn java 最大 の 欠陥 です 初心者 に I とか l とか の 判然 と し ない 記号 を イキナリ 見せ て しまう 、 Java 最大 の 欠陥 です な ので 初心者 に は Java は 向い て い ませ ん Java で は 、 I と l という コンピュータ 史上 最も 間違い やすい もの が 、 print 文 という 入門 の 第一歩 に 置か れ て いる から です これ は 大量 の 初 学者 に 無駄 な コンプレックス を 植え つけ て い ます 最初 に 出 て くる もの が 目 で 見 て 分から ない から で 、 そこで いきなり 躓く から です 例えば 、 c言語 で は 「 printf 」 と 末尾 の 意味不明 の 「 f 」 が あり ます が 、 それ は I と l より か は 視認 性 が 高い ので 、 間違い に くい の です 。 「 f 」 を ほか の もの に 勘違い する こと は 、 とても 少ない の です 。 もしか する と 教科書 の フォント も 悪い 可能性 が あり ます エディタ で 使っ て いる font も 悪い 可能性 も あり ます さらに その 教科書 に は 「 ln は line の こと だ 」 と の 説明 が ない の でしょ う （ あれ ば 大文字 の I に は し ない ハズ だ から です ） な ので 、 フォント の 視認 性 が 悪く 、 「 ln 」 について 何 の 説明 も ない 、 欠陥 の ある 教科書 を 、 あなた は 使っ て いる こと に なり ます 。 気 の 利い た 教科書 なら ば 「 大文字 の アイ で は なく 小文字 の エル ですよ 」 と 懇切丁寧 に 説明 し て くれ て いる かも しれ ませ ん 。 つまり 、 あなた にとって の Java の 習熟 を ムダ に 難しく し て いる の は 、 使っ て いる 教科書 の せい です 。 
一意 の 乱数 は 擬似乱数 で 得 られ ます が 、 java . util . Random # nextInt () は int の 最大 サイズ から 最小 サイズ まで の 疑似 乱数 しか 提供 でき ませ ん 。 なので 自分 で つくっ ちゃ い ましょ う 。 Wikipedia https :// ja . wikipedia . org / wiki /% E 7 % B7 % 9 A % E 5 % BD % A 2 % E 5 % 90 % 88 % E 5 % 90 % 8 C %... num = ( 1 * num + 7 ) % 10 ; この 場合 、 10 が 乱数 の 循環 する まで の 個数 、 ほか は 調整 値 です 。 参考 リンク を 見 て 調整 し ましょ う 。 一応 ↑ は そのまま 使える よう 調整 し まし た 。 num の 初期 値 を 確定 さ せ たく なけれ ば 、 初期 値 のみ java . util . Math # random () など で ランダム に 生成 し て しまい ましょ う 。 import java . util . Math ;// ファイル の 先頭 に 書く //.... int num = ( int )( Math . random () * 10 );// 0 ~ 9 の 乱数 他 に も 、 配列 の 中身 を 乱数 で シャッフル し て 、 前方 から 順番 に 利用 する 、 という 方法 が あり ます 。 配列 [ 0 ] と 配列 [ random ] を 交換 、 配列 [ 1 ] と 配列 [ random ] を 交換 、 と 最後 まで 繰り返す と シャッフル でき ます 。 import java . util . Math ; が 必要 です 。 int ran ;// シャッフル する ため の 乱数 を 格納 int [] data = new int [ 10 ];// 最終 的 に 利用 する 乱数 を 格納 for ( int n = 0 ; n < data . length ; n ++) data [ n ] = n ;// 初期 値 を 代入 for ( int n = 0 ; n < data . length ; n ++){ ran = ( int )( Math . random () * data . length );// 乱数 を 生成 int w = data [ n ];// 交換 処理 data [ n ] = data [ ran ]; data [ ran ] = w ; }// end for 
grow 1986115 さん Java 8 の 新 機能 を 使え ば 、 ナノ秒 単位 の 時刻 も 取得 ＆ format でき ます 。 System . nanoTime () が 経過 時間 しか 見れ ない なら 、 プログラム 開始 時点 から の 経過 時間 を ミリ 秒 単位 の 時刻 に 加え れる plusNanos メソッド を 使え ば 良い だけ です 。 http : // ideone . com / jT 4 F 09 「 " 111111 "," 0000000001 "," ABCD 1234 "," 2016 - 03 - 22 00 : 49 : 21 . 634931079 ", " 111111 "," 0000000002 "," EFGH 5678 "," 2016 - 03 - 22 00 : 49 : 21 . 651709741 ", 」 class Ideone { public static void main ( String [] args ) throws java . lang . Exception { int i , n = 100 ; java . time. format . DateTimeFormatter for matter = java . time. format . DateTimeFormatter . ofPattern (" yyyy - MM - dd HH : mm : ss . nnnnnnnnn ") . withLocale ( java . util . Locale . JAPAN ) . withZone ( java . time. ZoneId .s ystemDefault ()); java . time. Instant instant ; long base = System . nanoTime (); for ( i = 1 ; i < n ; i ++){ System . out . print ("\"" + " 111111 " + "\","); System . out . print ("\"" + String . format ("% 010 d ", i ) + "\","); System . out . print ("\"" + (( i % 2 ) != 0 ? " ABCD 1234 ": " EFGH 5678 ") + "\","); instant = java . time. Instant . now (). plusNanos ( System . nanoTime ()- base ); System . out . println ("\"" + formatter . format ( instant ) + "\","); } } } 
java 以外 の 言語 は 何 か ご存知 です か ？ 
LD GR 0 , 1 と する と 、 メモリ の 1番 地 の 値 と 取っ て き て しまい ます 。 事前 に 値 を 入力 し て い なけれ ば 、 値 が 不定 に なっ て しまい ます 。 LD GR 0 ,= 1 と する と 、 メモリ の 1番 地 に 1 という 値 を 格納 し て 、 その 値 を 取っ て き ます 。 常に 1 を 格納 し ます 。 1 を 格納 する こと が 目的 なら 、 後者 を 使う と いい でしょ う 。 メモリ の 番地 を 指す か 、 メモリ の 番地 の 値 を 指す か 、 直接 値 を 指す か 。 そんな 微妙 な 違い は 結構 ある ので 気 を つけ て ください 。 
プログラミング において 、 確保 し た メモリ 領域 が 不要 と なっ た 時 に 、 自動的 に その 領域 を 解放 し て くれる 機能 です 。 解放 さ れ た 領域 は 、 他 の アプリケーション など を 使う ため に 再度 割り当て られ ます 。 昔 の プログラミング で は 、 不要 に なっ た メモリ 領域 を 解放 する に は 、 人間 が 自分 で コンピュータ に 指示 する 必要 が あり 、 とても 大変 でし た 。 そこで 、 近年 で は 、 メジャー な プログラミング言語 を 中心 と し 、 ガベージコレクション 機能 が 導入 さ れる よう に なり まし た 。 
プリコンパイラ は 別名 プリプロセッサ ともいい 、 高水準 言語 に 付加 的 に 定義 さ れ た 機能 と 文法 に従って コーティング さ れ た プログラム を 、 元 の 高水準 言語 だけ を 使用 し た プログラム に 変換 する プログラム です 。 
SGML は 正式 名 を Standard Generalized Markup Language と いい 、 ISO によって 定め られ た 、 マークアップ言語 を 定義 する ため の メタ言語 の 一つ です 。 タグ を 使っ て 文書 の 論理 構造 や 属性 を 記述 する 方法 を 定め た 国際規格 で あり 、 電子 的 な 文書 の 管理 や 交換 を 容易 に 行う ため の 文書 記述 言語 です 。 HTML や XML の 元 と なっ た 言語 で も あり ます 
プログラム の 実行 過程 を 時系列 的 に モニタリング する ため に 、 メモリ や レジスタ の 内容 を 書き出す 機能 が あり ます 。 
カプセル化 と いい ます 。 データ （ 属性 ） と メソッド （ 振る舞い ） を 一つ に まとめ 、 オブジェクト の 内部 を 隠蔽 する （ ブラックボックス 化 する ） こと で 、 ・ 複雑 さ を 隠蔽 し 利用 を 簡単 に する ・ 不正 な 操作 を 防ぐ ・ 修正 に対して 影響 を 極小 化 する など の 利点 が 得 られ ます 。 
自分 が 読ん だ テキスト に は たしか ジェネリック 型 、 ジェネリック クラス と あり まし た 。 特に API で すでに 実装 さ れ て いる もの は 、 コレクション と 呼ば れ て い ます 。 ちなみに 、 クラス 名 を さす ので 正しく は < Integer > です 。 
メソッド で で戻り 値 が 必要 と し ない 例 として よく 出 て くる の は 、 答え を メソッド 内 で 表示 する もの です 。 表示 する だけ で 目的 を 達する なら 、 戻り値 は 要り ませ ん 。 これ を 使っ て 更に 何 か を しよ う と する 場合 に 限り 、 戻り値 が 必要 です 。 
API と は 、 アプリケーション から OS が 用意 する 各種 機能 を 利用 する ため の 仕組み です 。 Application Programming Interface を 略し て API と いい ます 。 アーキテクチャ の 異なる CPU 間 で も 、 同じ OS と その API を 利用 する こと によって 、 プログラム の 互換性 を 高め 、 移植 時 の 工数 を 削減 する こと が 可能 です 。 
SQL の 方 が 覚え やすい です 。 扱い やすい か と 言わ れ て も 、 使う 目的 が 違う ので 、 扱い やすい か と 言わ れ て も ・ ・ ・ 。 SQL は データベース 、 JAVA は プログラミング言語 です 。 SQL http:// e-words .jp / w/ SQL . html プログラミング言語 http:// e-words .jp / w/ % E3 % 83 % 97 % E3 % 83 % AD % E3 % 82 % B 0 % E3 % 83 % A9 % E3 % 83 % 9 F % E ... ソフト を 作る の が プログラミング言語 で 、 その ソフト が データ を 記録 し たり する 場合 、 管理 を する の が SQL です 。 それ と 、 JAVA は プログラミング言語 の 中 で も かなり 嫌わ れ て いる 言語 です よ ・ ・ ・ 。 
ご 教授 で は なく 、 「 ご 教示 」 だ と 思い ます 。 
電源 ボタン を 5 秒 以上 長押 し で 強制 シャットダウン ． 
体重 や 栄養 の 概念 を 追加 する の は 面白 そう です ね 。 肉 ばかり 食べ てる と 太っ て 鈍 足 とか 、 野菜 ばかり 食べ てる と 攻撃 力 低下 とか 、 パン だけ 食べ てる と 栄養失調 で 毒 とか ... で もっ て 、 ランニングマシーン や 栄養 サプリメント を 使っ て 治す 、 みたい な もの でしょ う か 。 あまり 役に立つ アイデア で は ない です が 、 多分 、 食べ物 や アイテム によって 体重 や 栄養 の スコア を 増減 さ せ て 効果 に 反映 さ せる だけ で 簡単 だ と 思う ので 、 試し に 作っ て みれ ば どうでしょう か 。 
てきとう に 定数 を 設定 し て 実行 し て み まし た が 、 ボタン は 表示 さ れ て い まし た 。 です が いくつ か 修正 し て み まし た 。 1 . Board を Picross の 内部 クラス に する 2 . Board は 描画 専用 に し て ボタン を 別 の パネル に 張り付ける 3 . ボタン の パネル を フレーム の 上部 に 張り付ける 4 . Board パネル は 中央 に 張り付ける 1 . Swing で GUI を 作成 する 場合 に は JFrame に 張り付ける パネル を 内部 クラス に し て おく と JFrame の フィールド に 透過 的 に アクセス できる ので 便利 で 、 よく 使わ れる やり方 だ と 思い ます 。 欠点 として は ソース が 大きく なり 、 見通し が 悪く なる 事 です が IDE を 使っ て いる 場合 に は あまり 問題 で は なく 、 独立 し た クラス に する と 参照 の やり取り が 面倒 に なり ます 。 2 . ryousuke 171 さん が ご 質問 の 最後 の 方 で 仰っ て いる やり方 です 。 古い アプレット の コード など で は ボタン を 張り付け て その 下 に 描画 する よう な コード が ある かも しれ ませ ん が 、 通常 は レイアウトマネージャー を 使っ て コンポーネント を 配置 する ので フレーム 以外 の コンポーネント に setBounds を 使う こと は あまり あり ませ ん 。 その 為 、 描画 用 の パネル に 直接 ボタン を 張り付ける 事 も あまり ない です 。 また JPanel に 描画 を 行う 場合 に は paint で は なく paintComponent を オーバーライド し ます 。 その 際 に 最初 に super . paintComponent ( g ) を 実行 し て 背景色 で 塗りつぶし ます 。 3 . JFrame の add メソッド は getContenPane (). add と 等価 で コンテントペイン は デフォルト で ボーダーレイアウト な ので その 上部 に ボタン パネル を 張り付け て い ます 。 add ( btn , BorderLayout . NORTH ); で も よい の です が ボタン が 他 に も ある かも しれ ない ので パネル を 間 に 入れ まし た 。 4 . add ( board , BorderLayout . CENTER ); この コード も getContentPane (). add ( board ); と 等価 です 。 最後 に main です が main メソッド で Swing コンポーネント に アクセス する 場合 に は SwingUtilities # invokeLater を 使い ます 。 この 部分 を 説明 する と 長く なる ので 、 作法 の よう な もの だ と 割り切っ て そのまま お 使い ください 。 Swing の レイアウト に関して は 以下 サイト を 参考 に し て ください 。 Swing を 使っ て みよ う http:// www . javadrive .jp / tutorial / 以下 Board を 内部 クラス に し た Picross . java です 。 package picross ; import javax .s wing . JFrame ; import java . awt . BorderLayout ; import java . awt . Color ; import java . awt . Dimension ; import java . awt . Graphics ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import java . awt . event . MouseEvent ; import java . awt . event . MouseListener ; import javax .s wing . JButton ; import javax .s wing . JPanel ; import javax .s wing .S wingUtilities ; import static picross . Common const .*; public class Picross extends JFrame implements ActionListener { JButton btn = new JButton (" CSV 出力 "); public Picross () { setTitle (" ピクロス "); setDefaultCloseOperation ( EXIT _ ON _ CLOSE ); JPanel buttonPanel = new JPanel (); btn . addActionListener ( this ); buttonPanel . add ( btn ); add ( buttonPanel , BorderLayout . NORTH ); Board board = new Board (); add ( board , BorderLayout . CENTER ); pack (); } @ Override public void actionPerformed ( ActionEvent e ) { // TODO 自動 生成 さ れ た メソッド ・ スタブ System . out . println (" ボタン が 押さ れ まし た "); } class Board extends JPanel implements MouseListener { int [][] boardarray = new int [ MASS ][ MASS ]; public Board () { // TODO 自動 生成 さ れ た コンストラクター ・ スタブ setPreferredSize ( new Dimension ( WI + 1000 , HI + 1000 )); addMouseListener ( this ); boardarray [ 5 ][ 5 ] = 1 ; } @ Override public void paintComponent ( Graphics graphi ) { super . paintComponent ( graphi ); // graphi .s etColor ( Color . GRAY ); // graphi . fillRect ( 0 , 0 , HI , WI ); for ( int x = 0 ; x < MASS ; x+ +) { for ( int y = 0 ; y < MASS ; y ++) { if ( boardarray [ x ][ y ] == 1 ) { graphi .s etColor ( Color . BLACK ); graphi . fillRect ( x * SIZE , y * SIZE , SIZE , SIZE ); } else if ( boardarray [ x ][ y ] == 0 ) { graphi .s etColor ( Color . GRAY ); graphi . fillRect ( x * SIZE , y * SIZE , SIZE , SIZE ); } graphi .s etColor ( Color . ORANGE ); for ( int i = 0 ; i < MASS ; i ++) { graphi . drawLine ( 0 , SIZE * i , WI , i * SIZE ); graphi . drawLine ( i * SIZE , 0 , i * SIZE , HI ); } } } } @ Override public void mousePressed ( MouseEvent e ) { // TODO 自動 生成 さ れ た メソッド ・ スタブ int x = e . getX (); int y = e . getY (); x /= SIZE ; y /= SIZE ; if ( boardarray [ x ][ y ] == 0 ) { boardarray [ x ][ y ] = 1 ; } else if ( boardarray [ x ][ y ] == 1 ) { boardarray [ x ][ y ] = 0 ; } repaint (); System . out . println ( x + "," + y ); } @ Override public void mouseReleased ( MouseEvent e ) {} @ Override public void mouseEntered ( MouseEvent e ) {} @ Override public void mouseExited ( MouseEvent e ) {} @ Override public void mouseClicked ( MouseEvent e ) {} } public static void main ( String [] args ) { SwingUtilities . invokeLater (() ->{ Picross picross = new Picross (); picross .s etVisible ( true ); }); } } 
パブリックドメインソフトウェア と いい ます 。 略し て PDS です 。 
多分 、 JavaVM が インストール さ れ て い ない と 思わ れ ます 。 http:// www . oracle . com / tech network / java / javase / download s / jdk 8 - downlo ... から 「 Accept License Agreement 」 に チェック を 入れ た 上 で 64 bitOS なら ｘ 64 の 方 、 32 bitOS なら ｘ 86 の 方 を ダウンロード し て インストール し て み て 下さい 。 （ 64 bitOS か 、 32 bitOS か は 、 コントロールパネル の システム を 確認 し て 下さい 。 ） 
間違っ て ます よ 。 (^_^;) 要素 数 5 の 配列 の 要素 は 、 [ 0 ] [ 1 ] [ 2 ] [ 3 ] [ 4 ] の 5 個 です 。 あなた の for の 継続 条件 だ と 、 [ 5 ] まで やっ ちゃ い ます 。 ＃ そこで 例外 発生 、 落ちる でしょ う 。 
Java の インストール が 正しく 出来 て い ない の かも しれ ませ ん 。 環境変数 の 設定 は し まし た か ？ 
実行 する 場所 が 悪い ん じゃ ない です か ？ パッケージ を 作成 し て その 中 に クラス を 作っ た の なら ば 、 プロジェクト の フォルダー は < プロジェクト 名 >\ bin \< パッケージ 名 >\ Sample . class という 構成 に なっ て いる はず です 。 この Sample . class を コマンドプロンプト から 実行 する なら ば 、 Sample . class の ある 場所 で は なく bin フォルダー の ある 場所 に 移動 し て java コマンド を 実行 する 必要 が あり ます 。 C :\ xxx \ xxx \< プロジェクト 名 >\ bin > java Sample の よう な 感じ です 。 それでも エラー に なり ます か ？ 
Windows10 で hamati の 動作 報告 が まだ 入っ て き て い ない よう です 。 もしか し たら 、 まだ Windows10 に 対応 し て い ない かも しれ ませ ん 。 
「 ターゲット 」 に 候補 を 表示 さ せる ため に は 、 SDK マネージャー で API レベル ごと に 用意 さ れ て いる SDK Platform を インストール する 必要 が あり ます 。 「 CPU / ABI 」 に 候補 を 表示 さ せる ため に は 、 前述 の SDK Platform と 同じ API レベル ごと に 複数 用意 さ れ て いる System Image の いずれ か を インストール する 必要 が あり ます 。 ARM 、 x86 など が 用意 さ れ て い ます が 、 その ラベル 通り の CPU を エミュレーション する こと に なり ます 。 さらに 、 x86 Atom または x86 Atom _ 64 の System Image を CPU / ABI として 選択 し た エミュレーター を 動作 さ せる ため に は 、 Intel HAXM という ソフトウェア を インストール する 必要 が あり ます 。 これ は SDK マネージャー の Extras の 一番 下 に あり ます が 、 SDK マネージャー 上 で 「 インストール 」 という 操作 を し て も 実は インストーラー が ダウンロード さ れる だけ で あり 、 ダウンロード 完了 後 に 自分 で エクスプローラー など を 開い て ダウンロード さ れ た インストーラ ー を 実行 し て HAXM を インストール する 必要 が あり ます 。 その HAXM を インストール する ため に は 、 使用 し て いる PC が Intel VT - x という 仮想化 支援 機能 を サポート し て いる 必要 が あり 、 且つ PC の BIOS または UEFI で その VT - x を 有効 に 設定 し て おか なけれ ば なり ませ ん 。 マザーボード によって は デフォルト で 無効 化 さ れ て いる こと が あり ます 。 もし PC の CPU が VT - x を サポート し て い ない 品種 で あっ た と し たら 、 x86 系 の AVD を 動かす こと は 不可能 です 。 ここ まで の こと を クリア し なけれ ば 、 AVD を 動かす こと は でき ませ ん 。 
開発 環境 は 、 java の 基礎 で ある JDK が おすすめ です 。 JDK 8 と 調べる と 一番 上 の ほう に 英語 の サイト が 出 て くる と 思う ので 、 同意 する に チェック を 入れれ ば ダウンロード できる はず です 。 http:// tech fun. cc / java / windows - jdk - pathset . html ダウンロード 、 exe ファイル の 実行 による インストール が 終わっ たら 、 大体 こんな 感じ で 環境変数 の 設定 を し て java を 有効 に し ます 。 http:// www . javadrive .jp / start / 自分 が 別 の 用途 に 使っ た サイト です 。 段階 に 分けて わかり やすく 説明 し て くれ ます が 、 java の 初心者 向け の もの が わかり やすい か どう か は わかり ませ ん 。 この サイト を さらっと 見 た ところ 、 ちょっと 捕捉 し たい ところ が あっ た ので し ます 。 ・ テキストエディタ は TeraPad ( シンプル ) か 、 サクラエディタ ( 多 機能 だ けど 複雑 ) が おすすめ です 。 ・ コマンドプロンプト を 開く とき は 、 デスクトップ や フォルダ の 背景 で shift + 右クリック → コマンド ウィンドウ を ここ で 開く を 選択 し て ください 。 サイト の 方法 より 少し 楽 です 。 ・ ファイル を コマンド ウィンドウ に ドラッグ ＆ ドロップ する と 、 ファイル ( フォルダ ) パス を 簡単 に 入力 でき ます 。 ・ bat 形式 の ファイル で 、 コマンドプロンプト へ の 入力 内容 を 保存 し て クリック で 実行 でき ます 。 ↓ は 一 例 です 。 ---------- 実行 . bat ---------- javac Name. java java Name pause - - - - ------------------------- こう いっ た 細かい ところ が ある ので 、 ほか の サイト と 併用 する と より いい と 思い ます 。 http:// docs . oracle . com / javase / jp / 7 / api / こちら の サイト は 、 java の ほぼ すべて の API の 使い方 が 書か れ て い ます 。 より 高 機能 、 高性能 を 求める とき に 使え ます 。 初心者 向き で は ない かも しれ ませ ん 。 大変 でしょ う が 頑張っ て ください 。 
右側 の テキスト の 編集 を クリック し て .; C :¥ Program Files ・ ・ ・ 
数値 の 四捨五入 や 切上げ 、 切捨て を 行う こと によって 生じる 誤差 の こと です 。 
＞ https :// gyazo . com / 024 f1 c5 2967 e 543 c5 63101 fdecfb 7 e 10 cancel が 赤 に なっ て い ます ので 、 それ に 対応 する Ｂutton は android : layout _ alignTop ="@+ id / set " と なっ て い ます id の 設定 が まちがっ て い ます し android : id ="@+ id / cancel " が あり ませ ん 
グループウェア と は 、 コミュニケーション ツール や スケジュール管理 機能 など により 、 グループ や 組織 の 共同 作業 を 支援 し 、 業務 効率 を 高める ため の ソフトウェア です 。 
はい 。 Pascal は コンパイラ 型 言語 です 。 他 にも 、 C 、 C++ 、 C# 、 FORTRAN 、 COBOL など が コンパイラ 型 言語 に あたり ます 。 
インタプリタ 方式 の プログラム 言語 に は 、 Perl 、 PHP 、 Java script 、 Python 、 Ruby など が あり ます 。 これら は スクリプト言語 と も 呼ば れる もの です 。 
どの テキスト を 利用 し た の か 不明 です が 、 テキスト が 間違っ て いる と しか 言い よう が あり ませ ん 。 Java の 言語 仕様書 で は １つ の コンパイル 単位 （. java ファイル と 思っ て ください ） は 、 package 宣言 、 import 宣言 、 クラス / インターフェース の 宣言 の 順 に 記述 さ れる と 定義 さ れ て い ます が 、 package が １ 行 目 に 書か なけれ ば なら ない なんて 一言 も 書か れ て い ませ ん 。 よって 、 package の 宣言 は クラス / インターフェース 宣言 や import 宣言 より 前 に 書く 必要 は あり ます が 、 １ 行 目 に 書く 必要 は あり ませ ん 。 
実際 に 、 仕様書 を 渡さ れ て 指定 し た 言語 で ソフト を 期限 内 に 作れる の なら マスター し た と 言える と 思い ます 。 Java なら 、 Servlet で 様々 な Web システム を 作れる レベル で マスター し た と 言っ て も いい と 思い ます 。 丸 暗記 は 必要 あり ませ ん 。 わから なけれ ば ググ れ ば いい の です から 。 言語 丸 暗記 し て も 、 実際 に プログラム が 組める か は 別 です 。 実際 に 大卒 で 新人研修 を 受け た 新人 が プロジェクト に 来 て 、 できる と 言っ た 言語 で プログラム が 組め なかっ た ので 、 テスト ばかり さ せ て たら 、 辞め ちゃっ た けど 。 それでは マスター し てる と は 言え ませ ん よ ね 。 初心者 の 「 言語 を マスター し た 」 という の は 、 入門書 の サンプル プログラム を 一 通り 打ち込み 、 本 を 最後 まで 読ん だ レベル で 、 実務 に は 耐え られ ない と 思い ます 。 それ が 、 初心者 の 言語 に対する すべて の 世界 で 、 それ を 駆使 し て 何 か ツール を 作っ て みよ う という ところ まで 考え が 及ば ない ため 、 本 を 一 通り 読ん だ という レベル で 「 マスター し た 」 と 言っ て しまう の で は ない でしょ う か 。 
あなた の パソコン の メモリー は 何 GB でしょ う か ？ バニラ の 状態 で この よう な 画面 が 出る とき は 、 パソコン の メモリー の 空き 容量 が なくなっ た とき か 、 minecraft に 設定 さ れ て いる メモリー の 量 の 上限 に 達し て クラッシュ し た 時 くらい です 。 また 、 Java 8 で は 、 動作 し なかっ たり 、 描画 バグ や 、 minecraft 本体 が 起動 し なく なる とき も あり ます 。 が 、 1 . 9 では 起動 でき た と の こと です ので 、 クラッシュ の 可能性 が 高い です 。 ver 1 . 9 で は 、 最低限 の 性能 を 落とす ため 軽量 化 を 行っ た 結果 、 Windows2000 で も 起動 できる ほど に 軽量 化 さ れ て いる そう です ので ・ ・ ・ 
非公式 日本 ユーザー フォーラム に あり ます 。 【 質問 禁止 】 クラッシュ レポート を 読む 方法 ( 2013 / 11 / 15 更新 ) http:// forum . minecraft user .jp / viewtopic . php ? t = 7032 【 質問 する 前 に 】 クラッシュ ･ エラー の 原因 と 対処 法 の 調べ 方 ( 基本 編 ) http:// forum . minecraft user .jp / viewtopic . php ? f = 5 & t = 28134 # p2 44981 ネット 検索 すれ ば 簡単 に 出 て くる 。 それ すら でき ない のに レポート 読める の か なぁ 。 
でき ませ ん 。 できる の は パソコン か Windows タブレット だけ です 。 
一応 すべて の クラス は Object 型 を 継承 し て いる ので 、 Object 型 を ダウン キャスト って の は あり ます 。 たとえば Web 系 の 画面 入力 結果 なんか で 、 Map < String , Object > entryMap みたい な の が あっ て 、 ここ に Web 画面 で 入力 さ れ た パラメータ を まとめ て 管理 し て いる なんて パターン です 。 key に対して List で 結果 を 返し たり String で 結果 を 返し たり 、 Map で 結果 を 返し たり Integer で 結果 を 返し たり する ので 、 val を いったん Object 型 で 受けて 、 instanceOf か key の 値 そのもの に従って List や String など に ダウン キャスト し て 処理 する と いう 。 あと は clone か な 。 こいつ は Object 型 を 返す ので アップ キャスト が 必要 です 。 Calendar cal 1 = Calendar . getInstance (); Calenadr cal 2 =( Calendar ) cal 1 . clone ();// アップ キャスト と 書く こと に なり ます 。 
if ( data [ j ]< data [ j + 1 ]){ ここ で チェック し て 交換 し ます よ ね 。 ここ の i の 値 ごと の j と j + 1 の 値 の 変化 を トレース し ましょ う 。 i = 0 --- j = 0 , 1 , 2 , 3 -- j + 1 = 1 , 2 , 3 , 4 i = 1 --- j = 0 , 1 , 2 ---- j + 1 = 1 , 2 , 3 i = 2 --- j = 0 , 1 ------ j + 1 = 1 , 2 i = 3 --- j = 0 -------- j + 1 = 1 単純 に みる と 、 左右 を 比較 し て より 小さい 値 を 右 に 送る 、 という 処理 に なり ます 。 この こと から 、 最初 の 外 ループ で 一番 右 の 要素 に 最低 の 値 が 格納 さ れる こと が わかり ます 。 最低 の 値 が 格納 さ れ た こと が 確定 し て いる ので 、 そこ は もう 比較 し ませ ん 。 次 の 外 ループ で 右 から 二 番目 の 要素 が 二 番目 に 小さい 数字 に なり ます 。 あと は その 繰り返し です 。 質問者 さん の 仰っ て いる こと は 前提 から 間違っ て い て 、 for ( int j = 0 ; j < 4 - i ; j ++){ 内 ループ で ある この 文 は for ( int j = 0 ; j < 4 ; j ++){ 重複 比較 防止 を あえて し ない なら こう なり ます 。 ( 処理 結果 は 同じ です ) for 文 が ある こと が 直接的 に 重複 比較 防止 に なる わけ で は あり ませ ん 。 つまり ・ for 文 は 前提 として 2つ 必要 ・ 重複 比較 防止 は 内 for 文 の 内部 で 解決 し てる ・ ループ が １つ しか ない 場合 、 一番 右 に 最小 値 を 持っ て くる だけ という 処理 に なる お 分かり 頂け た でしょ う か 。 
以下 の ２ か所 を 修正 - - - - - - - - - - - - - ------------------------- > import comment . Zenhan ; ↓ import comment . Kouhan ; import comment . Zenhan ; - - - - - - - - - - - - - - ------------------------- > comment . Kouhan . callDeae (); > comment . Kouhan .s howMondokoro (); ↓ Kouhan . callDeae (); Kouhan .s howMondokoro (); 
エラー の 原因 は 、 最小 必須 API レベル （ Minimum Required SDK ） が API 8 に 設定 さ れ て いる のに 、 API 11 以降 で なけれ ば でき ない こと を し て いる から です 。 最小 必須 API レベル を 11 に 引き上げる しか 解決 法 は あり ませ ん 。 その アプリ を Android 2 . x で 使用 し たい の で あれ ば 、 API 11 を 必要 と さ れる API を 使わ ない よう に 作り 変える しか あり ませ ん 。 
私 の 知っ てる 限り で は ない です ね 。 サーバー 側 で 出力 さ れる メッセージ は 主 に 2 種類 あり ます 。 ① サーバ 本体 の メッセージ ② 各種 プラグイン の メッセージ ① の 場合 で あれ ば 日本語 、 英語 両方 の メッセージ ファイル を 用意 し た うえ で 切り替える プラグイン が あり そう な 気 も し ます （ たぶん 作れる ） ② の 場合 は プラグイン の 実装 に も より ます が ほぼ 無理 だ と 思っ た ほう が いい です 。 該当 の プラグイン で 出力 さ れる メッセージ が 一覧 と なっ て 別 ファイル から 読み ださ れ てる の で あれ ば メッセージ の 出力 を ハンドル する こと で 実現 可能 な 気 も し ます が 、 現実的 で は ない です 。 また 、 ローマ字 を 打っ た 際 に 英語 ・ 日本語 に 自動 変換 さ れる という 意味 が 分から ない の です が 。 たとえば 、 「 arigato u 」 と 打っ た 場合 に チャット 欄 に 日本語 ： ありがとう 英語 ： Thank you と 表示 さ れる という こと でしょ う か ？ 日本語 に 変換 で あれ ば 既存 の プラグイン で 「 LunaChat 」 という の が あり ます 。 http:// forum . minecraft user .jp / viewtopic . php ? f = 38 & t = 13739 英語 に 変換 さ れる もの は 知ら ない です 。 
要は この ３つ を 実現 し たい ？ の か な ※【< a href =#> back </ a >】⇒ html に 書き込む （ 全体 を div で 囲み 、 外部 ファイル css で 装飾 希望 ） 。 ※ 【 java 内 に ある CSS の 部分 】⇒ 外部 ファイル css 側 で 設定 。 あと 、 クラス ” A ” を 他 の 記号 に 変え たい の です が 、 java の どの 部分 を 変えれ ば 宜しい でしょ う か 。 （ class = A を 、 class = XXX ） に 変更 する 場合 、 offsetTopA を offsetTopXXX に 変える 必要 が あり ます か ？ 1 個 目 の はやり たい こと が よく わかり ませ ん 。 2 個 目 の は 外部 CSS の クラス を 設定 してやれ ば いい ので . css ({ CSS 略 }) の 部分 を . addClass (" 外部 CSS の クラス 名 ") で できる と 思い ます 。 3 個 目 は クラス " A " と 言っ て いる 部分 が 「 < p class =" A "> A </ p >」 の こと で あれ ば これ を 「 < p class =" hogehoge "> A </ p >」 に 変更 し た ば あい ほか に 修正 する 部分 は 「 var offsetTopA = $(". A "). offset (). top ;」 を 「 var offsetTopA = $(". hogehoge "). offset (). top ;」 の 箇所 だけ か と 思い ます 。 捕捉 について は よく 意味 が わかり ませ ん 。 
脳内麻薬 β - エンドルフィン 、 ドーパミン 出 まくり で 、 まるで 麻薬中毒 一 度 始める と 止め られ ない 
絶対パス で java を 起動 すれ ば いい か と … 環境変数 path に は 入れ ない 方 が いい でしょ う 。 
全 画面 に する 方法 は 紆余曲折 あっ た みたい で わかり にくい です けど 、 https :// github . com / processing / processing / wiki / Window - Size - and - Full -... で 2015 / 10 に Ben Fly が " With Processing 3 . 0 , use the fullScreen () method to run at full screen ." と 書い て いる の だ から 現状 これ な ん じゃ ない でしょ う か 。 つまり 、 import も なん も なく て 、 void setup () の 先頭 に fullScreen (); と 記述 する だけ 、 です ね 。 
指定 の フォルダ って クライアント 側 の フォルダ の こと です よ ね ？ でき たら 危険 です よ ね 。 。 クライアント 側 の フォルダ を 操作 できる という こと です ので 。 やる と し たら 独自 の ブラウザ 作る くらい しか ない か と 
重かっ たり する ん じゃ ない です か ？ 
Luna バイパス ( プラグイン で は なく ) し て port 8089 で 設定 し て みそ 。 あと JK ( 女子 なんとか ぢ ゃなくて ) とか は おら ん ぬ ？ ｶﾞﾝｶﾞﾚ (´･ω･｀) y ━ ・ 。 oO 
いら ない ソフト など を 消し て み て は ？ 
Android 端末 の GPS 機能 が オフ に なっ てる ん じゃ ない です か ？ 
これ の こと じゃ ない か な 。 https :// ja . wikipedia . org / wiki /% E 5 % A5 % 91 % E 7 % B4 % 84 % E3 % 83 % 97 % E3 % 83 % AD %... 
戻り値 の 考え方 は Java 特有 の もの で は なく 関数型プログラミング の もの です ね 。 基本 的 な 考え方 は 数学 の 関数 の 計算 結果 と 同じ です 。 例えば f(x) = x + 1 という 関数 が あっ た として 、 x が 1 の とき f ( 1 ) = 2 に なり ます 。 この 計算 結果 の 2 が 「 戻り値 」 です 。 戻り値 が ある おかげ で 、 関数 は 普通 の 値 と 同じ よう に 使う こと が でき ます 。 a = 1 + 1 ; で a に 代入 さ れる の が 「 1 + 1 」 の 計算 結果 である 2 で ある こと と 同じ よう に 、 a = f ( 1 ); と し た とき a に 代入 さ れる の は f ( 1 ) の 戻り値 である 2 に なり ます 。 他 にも 真偽 値 を 戻す こと で 条件 分岐 を 整理 し て 書い たり 、 関数 の 戻り値 を 別 の 関数 の 引数 に する こと など も 可能 です 。 基本的 に 関数 は 戻り値 を 持つ もの です 。 なぜ なら 引数 を 受け取っ て 戻り値 を 返す の が 関数 の 本来 唯一 の 機能 だ から です 。 でも プログラミング言語 の 関数 は 戻り値 が いら ない こと が あり ます 。 それ は 、 「 画面 に 文字列 を 出力 する 」 など 、 計算 と は 関係 ない 「 副作用 」 のみ を 目的 に 使用 さ れる 場合 です 。 プログラミング言語 に この よう な 関数 が 存在 する の は 、 恐らく 「 副作用 」 だけ を 関数 と は 別 の 仕組み として 用意 する の が 面倒 だっ た から でしょ う 。 （ プログラミング言語 の 中 に は 完全 に 関数 と 副作用 と を 別 の 仕組み として 用意 し て いる もの も あり ます 。 ） この よう な 「 副作用 」 だけ の 関数 で も 一応 None （ なし ） という 戻り値 を 返す こと で 一応 関数 として の 体裁 を とっ て い ます 。 
1 . 0 に なら ない という 意味 なら 、 0 . 1 は 2 の 乗数 で 表現 し きれ ない （ 誤差 が 出る ） から です 。 詳しく は 浮動 小数点 を 検索 し て もらう として 、 簡単 に 説明 する と double は 数字 を 2 の 何 乗 + 2 の 何 乗 +... という 形 で 保持 し ます 。 たとえば 0 . 5 なら 2 の - 1 乗 (= 0 . 5 ) です し 、 0 . 75 なら 2 の - 1 乗 (= 0 . 5 )+ 2 の - 2 乗 (= 0 . 25 ) で 保持 し て い ます 。 0 . 1 の 場合 、 2 の n 乗 の 和 で 表す こと が でき ませ ん ので 、 誤差 が 生じる の です 。 なお Java は 数値 演算 用 に BigDecimal という クラス を 用意 し て い ます ので 、 こちら を 使え ば 正しく 計算 でき ます 。 
得意 で は ありません が 仕事 で 使い ます よ (*^_^*) 
グラボ が 関係 ある わけ ない ﾀﾞﾙﾙｫ ！ ？ とりあえず そんな 不具合 は 報告 さ れ て ない ゾ マウス とか そこら の 問題 と 思う から 新調 し て 、 どうぞ 
スパイラルモデル と いい ます 。 大 規模 な システム を 独立 し た 部分 単位 に 分割 し 、 部分 ごと に 設計 、 開発 、 テスト の 工程 を 反復 し ながら 完成 度 を 高め て いく 技法 です 。 
ソフトウェア 方式 設計 で 行う こと は 、 すでに 決定 し て いる ソフトウェア 要件 を どの よう に 実現 さ せる か を 決める こと です 。 ソフトウェア 要件 を 実装 し 、 それ を 検証 できる ソフトウェア の 設計 を 提供 し 、 評価 および レビュー など も 行い ます 。 
結合テスト と いい ます 
一番 最初 に 行わ れる の は 「 ソフトウェア 要件 定義 プロセス 」 です 。 以下 、 ソフトウェア 方式 設計 プロセス ソフトウェア 詳細 設計 プロセス ソフトウェア 構築 プロセス ソフトウェア 結合 プロセス ソフトウェア 適格 性 確認 テスト プロセス ソフトウェア 導入 プロセス ソフトウェア 受け入れ プロセス の 順 で 続き ます 。 
データ 結合 … 制御 に 影響 し ない 引数 だけ を 受け 渡す スタンプ 結合 … データ構造 そのもの を 受け 渡す 制御 結合 … 制御 に 影響 する 引数 を 受け 渡す 外部 結合 … 必要 な データ だけ を 外部 宣言 し て 共有 する 共通 結合 … 必要 の ない データ も 含め て 外部 宣言 し て 共有 する 内容 結合 … 他 の モジュール 内 の データ を 直接 参照 する この よう に なり ます 。 
機能 的 強度 … １つ の 処理 を 実行 する 機能 する だけ の 機能 の 集まり 情報 的 強度 … 特定 データ を 処理 する 複数 の 独立 機能 の 集まり 連絡 的 強度 … 内部 で データ の 受渡し が ある 複数 の 逐次 機能 の 集まり 手順 的 強度 … 内部 で データ の 受渡し が ない 複数 の 逐次 機能 の 集まり 時間的 強度 … 特定 の タイミング で 実行 さ れる 複数 の 機能 の 集まり 論理的 強度 … 引数 により 選択 さ れる 複数 機能 の 集まり 暗号 的 強度 … 大き さ など で 分割 さ れ た 、 意味 の ない 機能 の 集まり の 順 と なり ます 。 
AndroitStudio の ウィンドウ 下端 の ステータスバー (?) 部分 に 、 メッセージ 出 てる じゃ ない です か 。 そこ に 出 てる とおり だ よ 。 View . OnClickListener は 抽象 メソッド だけ を 定義 し た interface . http:// developer . android . com / reference / android / view / View . OnClickLis ... それ を implements する って いっ たら 、 その 抽象 メソッド を オーバーライド 実装 し なきゃ いけ ない 。 な のに 、 あなた の コード に は 、 それ が ない 。 ＃ で なけれ ば 、 あなた の MainActivity クラス を ＃ 抽象 クラス 宣言 しろ 、 って 話 だ けど 、 Activity 派生 クラス ＃ で そんな こと は 普通 あり え ない 。 「 教本 」 に は 、 続き で @ override public void onClick ( View v ) { ___ ... 実装 ... } を MainActivity 内 に 書け って 、 出て くるん じゃ ない です か ？ 「 赤い 波線 」 は とりあえず 無視 し て 、 それ 写経 すれ ば 、 「 赤い 波線 」 は 消え ます よ 。 
[ 18 : 41 : 18 ] [ main / FATAL ] [ FML ]: Director y Better - Builders - Wands - Mod - 1 . 7 . 10 contains [ MANIFEST . MF ] Better - Builders - Wands - Mod で エラー と なっ て いる みたい です 。 再インストール する か 別 の ビルドバージョン を 試し て み て ください 。 
関数 ごと に 共有 する 場合 は 、 メンバ 変数 として 宣言 する と いい です 。 同じ {} の中 だっ たら 変数 が 利用 できる と 考える と いい です 。 class part 01 { static int EXP = 0 ;// メンバ 変数 として 宣言 static int Level = 1 ;// メンバ 変数 として 宣言 public static void main ( String [] args ){ sub ();// 呼び出す } void sub (){ //... 処理 ... } } メンバ 変数 に ついてる static は 、 互換性 を 持た せる ため です 。 それぞれ メンバ 変数 と メソッド が static 無 + static 無 と static 有 + static 有 の よう な 関係 で なけれ ば エラー に なる と でも 思っ て もらっ て 構い ませ ん 。 main は static な ので メンバ 変数 に も static を 指定 し ます 。 それ と 、 文法 上 エラー に は なり ませ ん が ・ 変数 、 メソッド 名 ・ ・ ・ 先頭 小文字 ・ クラス 名 ・ ・ ・ 先頭 大文字 ・ 定数 ( 初期 値 を 決め たら 最後 まで 値 を 変更 し ない ) ・ ・ ・ 全 大文字 という 暗黙の了解 が ある ので 、 他人 に プログラム を 見せる 場合 や API を 利用 する 際 など に 覚え て おく と 便利 です 。 
古典 的 な 手法 です が 。 if (( event . getEntity () instanceof Player )) { Player victim = ( Player ) event . getEntity (); if (( victim . getKiller () instanceof Player )) { 上記 の 各 IF 文 の 前 に 、 プレイヤー が 取得 でき て いる か ログ を だし て み て は どうでしょう か 。 
大文字 と 小文字 は 区別 し ない で 処理 する 必要 が ある の でしょ う か 。 以下 は 区別 し て い ます 。 # include < stdio . h > void string _ rep ( char *, char , char ); int main ( void ) { char buf [ 100 ], sea , rep ; printf (" 置換 前 の 文字列 ："); scanf ("% s ", buf ); getchar (); printf (" 検索 文字 ："); scanf ("% c ",& sea ); getchar (); printf (" 置換文字 ："); scanf ("% c ",& rep ); string _ rep ( buf , sea , rep ); printf (" 置き換え し まし た 。 \ n "); printf (" 置換 後 の 文字列 =\"% s \"\ n ", buf ); return 0 ; } void string _ rep ( char * buf , char sea , char rep ) { int i ; for ( i = 0 ; buf [ i ]!='\ 0 '; i ++) if ( buf [ i ]== sea ) buf [ i ]= rep ; } 
まず Mod なし の 状態 で 起動 でき ます か ？ java の バージョン は version ８ Update ５ ０ 以上 で おｋ です 古い java が 入っ て たら http:// java . com / ja / download / help / uninstall _ java . xml から アンインストール し て また 最新 の java を ダウンロード ＆ インストール し て 下さい 。 （ 最新 java の ダウンロード 場所 ↓ ） http:// java . com / ja / download / manual . jsp そうしたら minecraft を 起動 し mod を 入れ たい バージョン に し て MOD 無し で 起動 し て ください 。 起動 でき たら 一 回 閉じ て ↓ http:// files . minecraft forge .net / から Forge という ほとんど の Mod に 必要 な 前提 mod を 入れる 必要 が あり ます Mod を 入れ たい バージョン を クリック し 右側 の Download Recommended の Installer - win を クリック し ダウンロード し て 下さい ダウンロード し た もの を クリック する と なんか 出 て くる ので OK を 押し Error と 出 なけれ ば 成功 です minecraft を 起動 し 左下 の Edit Profile を クリック し Forge という 名前 の 欄 が ある ので それ に 変え PLAY ボタン を おし minecraft を 起動 し て 左下 に 文字 が バーっと かかれ て い たら 導入 成功 です あと は 好き に mod を 入れ て 楽しん で 下さい 
レスポンシブWebデザイン は 、 PC 、 タブレット 、 スマートフォン など の 閲覧 環境 に 適し た Web サイト を 、 単一 の HTML で 実現 する 手法 です 。 
1 . こういう の は 、 ・ コード の どこ が 時間 食っ てる の か ？ を ( 想像 する ん で なく ) 実際 に 確かめ ない と 、 迷路 に はまり ます 。 ＃ ボトルネック 箇所 は 、 たいてい ごく 一部 な こと が 多く 、 ＃ かつ その 箇所 は 想像 と は 全く 異なる こと が 多い ので 。 2 . 以下 、 質問 文 掲載 コード 拝見 し て 、 想像 し た だけ ＆ ＆ 根拠 なし な ので 、 その つもり で 。 ＃ ハズレ 可能性 大 。 String src = ""; while (...) { ___ src += tmp ; } と 、 String で 連結 し て ます ね ？ この ループ が ( あなた の 目的 WWW ページ 相手 だ と ) 何 回 くらい 回っ てる か に よる けど 、 かなり 多い なら これ が ボトルネック かも しれ ない と 思い まし た 。 String Builder で 連結 すれ ば 、 かなり 変わる かも 。 http:// d . hatena . ne.jp / nowokay / 20140408 P.S. 文字列 連結 が 出 て き た だけ で 、 「 String じゃなくて String Builder 使う べし 」 と 教条主義 (?) 的 に おっしゃる 人 も いる が 、 私 は それ は おかしい と 思う 。 上記 紹介 ページ に も 、 書い て ある とおり 。 1回 しか 連結 し ない 自明 コード に まで これ を 適用 する の は 、 可読性 下げる だけ だ し 、 バカげ てる 。 
4 . 5 でも そういう 動作 に なっ て い ます が 、 何 か 見 て いる ビュー か パースペクティブ が 違う の で は ？ 通常 、 Eclipse の パッケージ エクスプローラー から 実行 する 場合 、 . java ファイル を 選択 する はず です 。 . class ファイル を 選択 する こと は ありえ ない と 思い ます 。 
お 求め の 回答 じゃ ない と 思い ます が 。 Java を 学ぶ と Android を 学ぶ は 、 別個 の こと だ と 思い ます 。 現在 の とこ 、 Android アプリケーション の メジャー な 記述 言語 は 確か に Java です けど 、 Java 知っ てりゃ その 延長 で Androidアプリ は 書ける 、 に は なら ない です 。 そう 考える 理由 は 、 以下 です 。 1 . Android の Java は 、 「 標準 の Java 」 で は ない 。 Java の 標準 クラス ライブラリ の 一部 は カット さ れ て 存在 せ ず 、 代わり (?) に Android 固有 な 多く の クラス 群 が 含ま れる 。 2 . Androidアプリ を 書く に は 、 後者 ( Android 固有 ) な クラス 群 が カギ に なる 。 Androidアプリ 書く に は 、 Java の 基礎 知識 は 必要条件 だ けど 、 それだけ 知っ てりゃ 書ける ... に は なり え ませ ん 。 そして 、 単に どんな Android 固有 クラス が ある か 、 断片 で 知っ てる だけ で は 、 無理 です 。 Activity , Service , Intent , ... といった 、 理解 し て ない と Androidアプリ は 書け ない 固有 クラス 群 は 、 個々 の 断片 で 理解 できる もん で は ない から です 。 全体 として 、 有機 的 な 「 フレームワーク 」 を 構成 し て い て 、 全体 の 考え方 を アバウト に でも 理解 でき て ない と 、 使え ない と 思い ます 。 > 実際 に 本屋 で 立ち読み し て いる と 、 結構 難しく 、 ... と 感じる の は 、 その へん が 理由 な の で は ない です か ？ Android じゃなくて も 、 「 GUI アプリケーション を 作成 する ため の フレームワーク ライブラリ 」 は 、 多かれ 少なかれ 同様 です 。 ・ 個々 の クラス 断片 を ・ こう 書け ば こんな こと が できる ... だけ 即 物的 に 覚えよ う として も 、 歯 が 立た ない 気 が する と 思う 。 逆 に 言え ば 、 どんな ん でも いい から アプリケーションフレームワーク の 経験値 が あれ ば 、 なんとかなる と 思う の です けど 。 > 結構 難しく ... の 原因 は 、 「 Java 言語 」 が 原因 じゃ ない の で は ？ という 気 が し まし た 。 
Androidアプリ だけ が 目的 なら Java FX の 知識 は 無駄 だ と 思い ます 。 全然 違う ので 。 非常 に 遠回り に なる でしょ う 。 「 スッキリ わかる java 入門 」 を 一 通り 理解 でき た なら 次 は Android 入門 で いい と 思い ます 。 Androidアプリ の 入門書 を 読み ながら 実際 に アプリ を 作成 し たり 動かし たり し て み たら よい でしょ う 。 
反比例 なら void setup () { size ( 480 , 120 ); stroke ( 0 , 102 ); } void draw () { float weight = dist ( mouseX , mouseY , pmouseX , pmouseY )+ 1 ; //+ 1 は weight が ゼロ に なる の を 防ぐ ため strokeWeight ( max ( 60 / weight , 1 )); // strokeWeight が ゼロ に 設定 さ れる の を 防ぐ ため max () を 使う line ( mouseX , mouseY , pmouseX , pmouseY ); } とか ? でも 、 反比例 より は 定数 から 引い た 方 が 綺麗 かも 。 void setup () { size ( 480 , 120 ); stroke ( 0 , 102 ); } void draw () { float weight = dist ( mouseX , mouseY , pmouseX , pmouseY ); strokeWeight ( max ( 30 - 3 * weight , 1 )); // strokeWeight が ゼロ 以下 に 設定 さ れる の を 防ぐ ため max () を 使う line ( mouseX , mouseY , pmouseX , pmouseY ); } それぞれ 係数 を いじる と 雰囲気 変わり ます 。 
> 同じ Activity の layout 内 に ２つ の listview を 設置 し て 、 連動 さ せる こと は 可能 でしょ う か 。 これ は 、 アプリ スクリーン に 縦 に 左右 （ あるいは 上下 ） に ２つ の スクロール する ListView が 並ば せる こと でしょ う か 連動 さ せる と は どういう こと でしょ う ＞ 一つ は アイコン を 表示 さ せ 、 もう 一つ は チェックボックス つき リスト を 表示 さ せよ う と 思っ て い ます 。 １つ の ListView の セル に アイコン と チェックボックス が 並ぶ の と は 違う の でしょ う か 
MS は Java を サポート し て おり ませ ん 。 よって ロードマップ な んで もの を 発表 する わけ が あり ませ ん 。 かつて MS 版 の Java を 作っ て まし た が 、 とっく の 昔 に 中止 し て おり ます 。 Java は Oracle の 仕事 で あっ て 、 MS の 仕事 で は あり ませ ん 。 Oracle が Windows10 上 で の Java を 動作 さ せる 作業 を し て いる の です 。 Windows10 に なっ て 新しい ブラウザ として Egde が 用意 さ れ まし た 。 これ は IE に 将来 が ない こと を 意味 し 、 そして Egde 上 で は Java の 実行 は でき ませ ん 。 これ は 、 Windows10 の 発表 とともに Java と の 間 に さらなる 距離 を 置い た こと に なり ます 。 
int っていう 型名 の 宣言 は 一 回 で いい ん です よ 。 2回 目 から は 型名 を つけ なく て も 、 「 そいつ は int 型 の pass だ 」 と 認識 し て くれる ん です 。 逆 に 型名 を つけ て しまう と 再 宣言 とか スコープ の 関係 で うまく いか ない 時 が あり ます 。 
Eclipse は 、 種々 の 言語 の 統合開発環境 です 。 初め から 、 Java .s e を 内蔵 し た もの も 提供 さ れ て いる よう です 。 
分類 という の は 、 複数 の 種類 の データ が あっ た 時 に 、 どの データ が どの 種類 な の か を 分類 する こと です 。 例 を 見る と 分かり やすい と 思い ます 。 データ は 身長 ( cm ) と 体重 ( kg ) だ と し ましょ う 。 この データ は 男 か 女 の データ です 。 男 １ （ 176 , 69 ) 男 ２ ( 181 , 75 ) 男 ３ ( 168 , 60 ) 女 １ ( 158 , 43 ) 女 ２ ( 171 , 53 ) 女 ３ ( 163 , 51 ) という よう な データ が ある とき に は 、 二 次元 平面 に 点 を プロット でき ます 。 男と女 の 点 を 綺麗 に わける よう な 線 を 引く こと が 分類 です 。 この ケース だ と 、 例えば 身長 は 男 の 方 が 大体 高い だろ う と 考え て 、 170cm 未満 を 女 で ソレ 以外 を 男 と 分ける と 考え た 場合 に 男 ３ と 女 ２ に 不具合 が おき ます 。 この 分類 は 失敗 です 。 では 体重 も 考慮 し て 上手く 線 を 引き たい と 考え ます 。 女 の 人 の ほう が 身長 は 低め です し 、 体重 も 小さめ です 。 です から 二 次元 平面 上 で 左下 の 方 に 女 の 人が 固まっ て い そう な ので 、 左下 と 右 上 で 分ける よう に すれ ば 良 さ そう です 。 男 ３ は 身長 は 低い です が 体重 が ある ので 上手く 分ける こと も でき そう です 。 この よう に プロット さ れ た データ を 種類 ごと に 分けよ う と する の が 分類 です 。 願わくば 、 手持ち の データ で 引い た 境界線 が 、 他 の データ （ この 例 で は 男 ４ とか 女 ４ が 追加 さ れ た 場合 ） に も しっかり 適応 し て いる こと を のぞみ ます 。 一方 で 回帰 という の は ある データ を 説明 する 線 （ 関数 ） を 得る こと です 。 上記 の データ を 考える と 男 １ （ 176 , 69 ) 男 ２ ( 181 , 75 ) 男 ３ ( 168 , 60 ) に対して 、 男 という もの は 身長 と 体重 が 大体 どれ くらい の 割合 な の か を 考える の です 。 この データ から だ と 、 身長 が 伸びる ほど 体重 も 増え て い そう です ね 。 とにかく この ３つ の 点 を 上手く 通る よう な 直線 （ 一次関数 ） が 考え られ そう です 。 完璧 に ３ 点 を 通ら なく とも 、 少し 誤差 が ある と 考え て 、 男 の 人 は 大体 体重 と 身長 に どんな 関係 が あり そう か を 直線 で 説明 しよ う と 試み ます 。 （ 普通 は 最小 二 乗 直線 など を 引く ） これ が 回帰 です 。 必ずしも 直線 で なく て も いい です 。 しかし 曲線 でも 構わ ない の です が 、 あまり 複雑 な 曲線 を 考える と 、 たしかに 与え られ た データ を 通る よう に 線 を 引く こと が でき ます が 、 かわり に 今後 得 られる データ を その 線 で 説明 する の が 困難 に なり ます 。 （ ただただ 手持ち の データ を なぞっ た だけ に なっ て しまう ） 同様 に し て 女 に関する 回帰 も 行え ば 、 ２つ の 異なる 直線 が 得 られる こと に なり ます 。 回帰 は とにかく ある データ を 説明 する よう な 線 を 引こ う と する の です 。 回帰 を 行っ た 場合 に は 分類 と 違っ て 、 ただ ２ 種類 の データ を 分ける の で は なく 、 ２ 種類 の データ が それぞれ どの よう な 関数 で 表さ れ そう な の か を 知る こと が でき ます 。 従って 、 新た に 得 られ た データ が あっ た と すれ ば 、 どちら の 回帰 直線 に 近い の か を 見る など し て 、 分類 に 応用 する こと も でき ます 。 新た な データ が 男 か 女 か ハッキリ さ せ なく とも 、 データ の 近 さ の 割合 など で 確率 として 表現 し たり する こと も でき ます 。 （ 最小 自乗 直線 は 最尤推定 という 確率 パラメータ の 推定 に なっ て いる ので 、 確率変数 として データ を 扱える ） 普通 は 単に データ を 分類 する ほう が 簡単 です 。 しかし 回帰 の 場合 は データ が 本来 どの よう な 関数 から 現れ て いる の か を 表現 できる ので 、 更に 詳細 な 情報 を 得 られる 言え ます 。 また その 詳細 な 情報 を 使っ て 分類 も 行なえ ます 。 分類 と 回帰 は 上記 の よう な 違い が あり ます 。 しかし 機械学習 で は 最終 的 に は 分類 を し たい という の が ほとんど です 。 まず 詳細 な 情報 を 得る 回帰 を 行ない 、 最終 的 に は 分類 する という ケース が 多く 、 初学 者 が 勉強 を する とき に 回帰 が 何 な の か 分から なく なる こと は ある と 思い ます 。 また 似 た 概念 として 、 識別 的 と 生成 的 という もの が あり ます 。 識別 的 という の は 、 上記 で 述べ た よう に データ を 分類 できる よう な 境界線 を いきなり 得よう と する 方法 です 。 一方 で 生成 的 という の は 回帰 など で データ が 本来 持っ て いる 規則 （ 確率 分布 ） を 得て から 、 その 確率 パラメータ を 使っ て 分類 する 方法 です 。 です から 機械学習 で は 回帰 という 概念 は 最終 的 に は 確率 的 な 考え に 昇華 さ れ 、 生成 的 分類 手法 として 扱わ れる よう に なる の が ほとんど です 。 
回答 に なっ て い なく て すみません 。 たまたまこ の 質問 を 開い た もの です 。 質問 の 最初 に 「 就活 を し て いる 上 で 、 Es を 提出 し 、 これから webテスト を し なけれ ば なら ない の です が 、 webテスト を やる にあたって 、 」 という 文章 が あり ます が 、 この 部分 は いら ない と 思い ます よ 。 回答 する 側 は 質問 の 冒頭 の 文章 で 判断 する こと も 多い ので 、 最初 に 簡潔 な 質問 を し た ほう が いい ですよ。 今回 の 場合 、 「 Java の アンインストール について 質問 です 。 〇〇～」 といった よう な 質問 に し た ほう が 回答 が つき やすい と 思い ます 。 後 そこ まで 考え なく て も いい です が 回答 は 夕方 から 夜 に きやすい ので 、 その 時間 に 質問 する と いい かも しれ ない です 。 もう一度 質問 し なおす と いい ですよ。 大変 な 時期 の 苦労 が 伝わっ て き まし た 。 解決 に なっ て い ない おせっかい 回答 で すみません 。 応援 し て い ます 。 
ソースコード の 一番 上 に import java . util . Date ; import java . util . Random ; と 記述 すれ ば 良い です 。 そう すれ ば 、 ターミナル に関する メソッド が 使用 可能 に なり 、 グラフ を 生成 できる よう に なり ます 。 
楽しい 社会生活 を 頑張っ て ね 
中段 あたり に ある 、 proguardFiles getDefaultProguardFile (' proguard - android . txt '), ' proguard - rules . pro ' } } packagingOptions { exclude ' META - INF / LICENSE . txt ' } という コード は 文法 上 エラー に なり ます 。 な ので 、 この 部分 を 消せ ば 直る か と 思い ます 
> setup () の 中 に 書い て も 数 十 秒 ごと に 流れ て しまい ます 。 それ は マイコン の プログラム と は 別 の 問題 。 プログラム を いくら いじっ て も 無駄 。 > for を 入れ て も 結局 そこ から 抜ける と それ が 原因 なら for (;;); とか while ( 1 ); で 解決 する はず 。 でも 、 きっと ダメ でしょ う 。 手元 で も 再現 し ます 。 com ポート を スキャン する とか なに か PC が 内部 的 に やっ て い て 、 その 時 に リセット が かかる ん じゃ なかろ う か 。 対策 1 シリアル モニタ を 起動 し て おく ( 該当 の com ポート を 専有 し て 余計 な アクセス を さ せ ない )。 対策 1 バリエーション teraterm など の 通信 ソフト や 、 Processing で 該当 ポート を 専有 する ( だけ の ) プログラム を 立ち 上げ て おく 。 ただし 、 Arduino の プログラム 書き換え 時 に は こいつ ら を 閉じ ない と いけ ない 。 対策 2 書き込み が 終わっ たら 、 Arduino を 別 の USB 電源 ( 携帯 の 充電器 とか ) に つなぎ 替える 。 もちろん プログラム 書き換え 時 等 に は PC に 繋ぎ 変え ない と いけ ない 。 対策 3 な ん だ っけ 、 USB から の リセット を 禁止 する よう に Arduino の パターン カット か なにか の 手段 が あっ た はず 。 ただし 、 やっ ちゃう と 書き込み 時 は 手動 で リセット を かけ なき ゃいけなくなるんだったと 思う 。 あたり 、 お 好き な もの を 。 
Java の 標準 クラス ライブラリ の 、 とある クラス の 、 とある メソッド の ふるまい 知り たい ... って いう なら 、 他人 に きく 前 に 、 少なくとも JDK 内 に 含ま れ てる 以下 は 、 自分 で あたる べき だ 。 ( 1 ) API ドキュメント ( javadoc の 出力 物 ) ( 2 ) ソースコード java . io . InputStream # read は 、 引数 違い で いくつ も 存在 する けども 、 ( 1 ) を あたれ ば https :// docs . oracle . com / javase / jp / 6 / api / java / io / InputStream . html # re ... が プリミティブ だろ う と 想像 できる 。 おたずね の 「 0 の ケース 」 について も 、 きっちり 書い て ある よ 。 さらに お 手持ち の JDK インストール フォルダ 内 に ある src .zip 内 の java / io / InputStream . java を 読め ば 、 上記 メソッド の 実装 が 確認 できる 。 見 て み た けど 、 API ドキュメント の 説明 通り に 見え た 。 InputStream は 抽象 クラス で 、 実体 は ファイル だっ たり ソケット だっ たり 様々 だろ う けど 、 InputStream # read を 介し て 使う 分 に は 、 セマンティクス に 差 は 無い はず です よ 。 len 引数 あり の read に len = 0 を 渡し た 場合 だけ じゃ ない か な 、 戻り値 0 が 返さ れる の は 。 ストリーム 終端 に 達し た 場合 ( socket なら 相手 が shutdown 済み とか close 済み な 場合 ) は - 1 を 返す だろ う し 、 予期 せ ぬ エラー が 発生 し た 場合 は 戻り値 で は なく 例外 で 知らせ て くる だろ う と 思う 。 
float double など で 計算 する と どうしても 誤差 は 出 ます 。 １ ０ 倍 し て 、 Math . round で 丸め て 10 で 割る か 、 BigDecimal を 使っ て ください 。 http:// d . hatena . ne.jp / j5 ik 2 o / 20091024 / 1256369305 
選択肢 の 中 の " to " が 何 を 意味 し て いる か によって 、 ① か ③ に なり ます 。 " to " が メール ヘッダ の TO の こと で ある なら 、 TO が 自動的 に 書き換え られる こと は あり ませ ん 。 （③） " to " が メール の 宛先 という 意味 なら 、 第 二 パラメータ で 指定 し た 全部 の 宛先 に 送信 さ れ ます 。 （①） ２つ パラメータ が ある send メソッド は 、 第 一 パラメータ の Message オブジェクト に 設定 し て ある 宛先 （ TO 、 CC 、 BCC ） は 無視 し て 、 第 二 パラメータ で 指定 し た 宛先 に だけ 送信 し ます 。 その とき でも 、 第 一 パラメータ の 中 の TO 、 CC 、 BCC の 設定 は 変更 さ れ ませ ん 。 つまり 、 TO や CC 、 BCC で 指定 し て あっ て も 、 第 二 パラメータ で 指定 し て ない と 、 その 宛先 に は 送信 さ れ ませ ん 。 第 一 パラメータ の 中 の TO 、 CC は 、 メール ヘッダ の TO 、 CC に なり ます 。 第 二 パラメータ は 、 エンベロープ の " RCPT TO " に なり ます 。 この あたり の こと は 、 http:// cloud . biglobe . ne.jp / mail / semi / semi _ 002 . html http:// at network . info / tc pi p2 / tcpip 231 . html など を 参照 し て ください 。 １つ だけ パラメータ が ある send メソッド 、 Transport .s end ( message ); は Transport .s end ( message , message . getAllRecipients ()); と 等価 です 。 message に 設定 し て ある TO 、 CC 、 BCC の 全部 に 送信 さ れ ます 。 ※ なんか 、 文章 が まとまら なく て 申し訳 あり ませ ん 。 
説明 の ため に ちょっと 書きかえ ます 。 static int calc ( int x , int y ){ System . out . println ( x + y );// 追加 return x + y ; } この よう に し た 場合 に 、 呼び出し 側 で 受け取る か 受け取ら ない か を 自由 に 選択 でき ます 。 calc ( 5 , 4 ); 単に 9 を 表示 する 。 System . out . println ( calc ( 5 , 4 ) + 50 ); 9 を 表示 し た 後 、 59 を 表示 する 。 もし 戻り値 が ある の に 活用 し なけれ ば エラー に なる の でし たら 、 この 場合 に 単に 9 を 表示 する こと が でき なく なり ます 。 それでは 不便 です 。 なので 実際 に は どちら も エラー に は なり ませ ん 。 9 ; 明らか に 何 も し ない ので エラー 。 calc ( 5 , 4 ); 呼び出し 先 で 何 を し て いる か わから ない ので エラー に でき ない 。 エラー に する 理由 も ない 。 な ので 、 戻り値 は 受け取ら ない 場合 に のみ void 型 に なる と でも 思う と いい かも しれ ませ ん 。 
ご 教授 で は なく 、 「 ご 教示 」 だ と 思い ます 。 
貴方 が 読ん で いる 参考書 は 何 か 知り ませ ん が 、 セキュア / 非 セキュア を 切り替える タイミング で 通信 相手 も 切り替え を 行う 必要 が ある の は 当然 ですよ ？ 非 セキュア な セ ション ( ソケット ) を 、 セキュア な セション に 変える 手続き として は 、 HTTP の UPGRADE メソッド など が あり ます 。 よう は 、 UPGRADE メソッド に 対応 し た ブラウザ や Webサーバ を 作る の に 便利 だ よ ね と 言う こと 。 
＞ そういった 意味 の ” 動的 ” に 自動 調整 する ため に は どう すれ ば 宜しい でしょ う か 。 JavaScript と CSS を 学習 する と 良い と 思い ます 。 
こちら の 症状 が 出 た 場合 、 この 下 の FAQ の どちら か あるいは 両方 を 実行 する と たいてい 直り ます 。 http:// wiki . netbeans . org / FaqWhatIsUserdir http:// wiki . netbeans . org / FaqRunningOnJre 
hakodate _ future さん データ の 送受信 の 際 に 使う 共通 鍵 を 作る の に 使う ん じゃ ない か と 思い ます 。 もしか し たら 、 他 で も 使う の かも しれ ませ ん が 、 少なく て も 共通 鍵 の 生成 の 際 に 乱数 を 使わ ない と 、 毎回 同じ 鍵 で データ の やり取り を し なく て は いけ なく なる ので 、 安全性 が 下がり ます 。 念 の ため に ssl で の 簡単 な 流れ を 言っ て おく と 、 共通 鍵 を 生成 秘密鍵暗号方式 で 、 共通 鍵 を 鍵 交換 以降 、 データ を 共通鍵暗号 方式 で 送受信 と なり ます 。 秘密鍵 は 固定 で ある ため 乱数 は 必要 ありません が 、 共通 鍵 は 毎回 作り直し て い ます 。 乱数 を 使わ ない と 毎回 違う 鍵 は 作れ ませ ん ので 、 少なく て も 、 この ため に は 乱数 を 使用 する はず です 。 
CPU と メモリ と GPU を 教え て ください 。 後 , Optifine 入れ たら 動く かも しれ ない です 。 
img タグ の src や 、 background-image は 取得 でき てる と 思う ので その ソース を 元 に 別途 ダウンロード 用 に java を 書く しか ない です 。 HttpGet で 取っ て き て ファイル に 書き出す だけ です 。 
http:// www 58 . atwiki .jp / chapati 4 it / sp / pages / 104 . html ほ い 、 でも java だ と 音声 ファイル の 対応 薄い から ネイティブ で c++ とか で 書い た 方 が 早い 。 
Java を インストール し て ください 。 
軽量 化 mod を 抜い て 、 完全 に バニラ の 状態 に すれ ば いい と 、 それでも ダメ で あれ ば 、 PC を 変える 、 変え たく なけれ ば 、 バニラ 
ソースコード ないと わかり ませ ん よ 。 入力ミス が ほど ん ど と 思う けど 
ArrayList < String > list という の は 参照 型 な の ね 。 http:// nobuo - create .net / sanshougata / ArrayList < String > list = new ArrayList < String >(); で ArrayList < String > の インスタンス ( 実体 ) が メモリ 上 の どこ か に 作成 さ れ 、 list に は 、 その 参照 ( 簡単 に 言う と メモリ 上 の アドレス ) が セット さ れる の ね 。 で 、 method ( list ); で 、 その 参照 を 値 渡し で 渡し て 、 private void method ( ArrayList < String > arg ) の arg で 受け取っ て いる ワケ だ けど 、 参照 が コピー さ れ て も 、 参照 先 ( インスタンス 、 実体 ) は 同じ 一つ の モノ な ので 、 method の 実行 結果 が list に も 反映 さ れる という わけ 。 
String [] filemane = {" ファイル 名 . bat "}; process = Runtime . getRuntime (). exec ( filename ); 一部 を 抜粋 し まし た 。 調べ て みる と 全体 で は かなり 長文 だっ た ので 、 上 の もの を 参考 に 検索 し て み て ください 。 ランタイム クラス の getRuntime () メソッド 、 それから 作成 さ れ た オブジェクト の exec () メソッド が 主体 に なる と 思い ます 。 
モデル ( ComboBoxModel ) を 共有 さ せ ます 。 以下 サンプル コード です 。 import java . awt . FlowLayout ; import javax .s wing . JComboBox ; import javax .s wing . JFrame ; import javax .s wing .S wingUtilities ; public class TestFrame extends JFrame { private String [] items = {" A ", " B ", " C "}; private JComboBox < String > comboBox 1 = new JComboBox <>( items ); private JComboBox < String > comboBox 2 = new JComboBox <>( comboBox 1 . getModel ()); public TestFrame () { setLayout ( new FlowLayout ()); add ( comboBox 1 ); add ( comboBox 2 ); pack (); } public static void main ( String [] args ) { SwingUtilities . invokeLater (() -> { JFrame frame = new TestFrame (); frame .s etDefaultCloseOperation ( JF ra me. EXIT _ ON _ CLOSE ); frame .s etVisible ( true ); }); } } 
javascript 8989 さん Ｊ ２ ＥＥ で の DAO デザインパターン の 模範 的 な コード だっ たら 、 データソース に対して CRUD ( create , read , update , delete ) 操作 を 提供 する Data Access Object は 、 Controller に 属し ます 。 さらに 、 Controller の 中 でも 、 ビジネスロジック と 、 MVC （ Model View Controller ) における Model が 提供 する データ へ の アクセス 処理 と を 分離 する の が 、 DAO オブジェクト の 役割 です 。 ＜ 参考 ＞ 上級 DAO プログラミング ： より 良い DAO 構築 の 技法 を 学ぶ https :// www . ibm . com / developerworks / jp / java / library / j - dao / 
ぬ … … いろいろ 突っ込み たい ん です が … … （苦笑） まず スレッド 起動 出来 て ませ ん よ ！ ！ スレッド の 起動 は Animation anim = new Animation (); an ime.st art (); で スレッド の 起動 です そして Thread クラス を 継承 し た クラス の run メソッド が 実行 さ れ ます 。 スレッド を 一定 時間 止め たい 場合 は Thread クラス の sleep メソッド を 使用 し て ください 。 次に 、 これ は あまり 関係 ない ん です が 毎回 ImageIcon を 生成 する と 毎回 画像 を 読み込み に 行く ので 重く なっ たり し ます 。 なので 最初 に 必要 な 画像 は 読み込ん どい て 配列 で 管理 し て おく と いい でしょ う 。 で 、 最後 画像 が 変わら ない 理由 は イメージアイコン を 新規 に インスタンス か さ せ て ます 。 これ し て も 何 も 意味 無い です よ ね 。 正しく コード を 書き直す と 。 public gazouhyouji (){ ImageIcon [] imageIcons = { new ImageIcon (& quot ; 画像 a & quot ;), new ImageIcon (& quot ; 画像 b & quot ;)}; JLabel label = new JLabel ( imageIcons [ 0 ]); … … 省略 Animation anime = new Animation ( label , imageIcons ); an ime.st art ; } Animation クラス public JLabel label ;// ラベル の フィールド public ImageIcon [] imgs ;// イメージ の フィールド public Animation ( JLabel label , ImageIcon [] imgs ){ this . label = label ; this . imgs = imgs ; } public void run (){ for ( int i = 0 ;; i ++){ label .s etIcon ( imgs [ i % 2 ]); sleep ( 任意 の 時間 ); } } って 感じ です 。 スリープ を 入れ ない と 処理 が 一切 止まら ない ので 荒ぶ り ます ( 笑 ) 下手 し たら 描写 さ れ ない かも 。 
pl 1 it さん PL/I の 「 copy By Name 」 機能 は 、 データ 領域 の 複製 で は なく て 、 情報 の 複製 な 処 が 違い ます 。 「 del 1 A , 2 C 2 FIXED DECIMAL ( 10 , 3 ), 2 C3 FLOAT BINARY ( 31 , 8 ), 2 C4 FIXED DECIMAL ( 16 , 5 ); dcl 1 D , 2 C 2 FIXED DECIMAL ( 10 , 5 ) 2 C4 CHARACTER ( 255 ), 2 C5 FIXED DECIMAL ( 8 , 3 ), 」 において 、 「 Ａ = Ｄ , BY NAME 」 は 、 以下 の よう に 機能 し ます 。 (a) サブ フィールド の 名称 の 集合 の 積 について 転記 さ れる 。 ( b ) 型変換 が 試み られる 。 「 A . C 2 = D . C 2 ; /* FIXED DECIMAL ( 10 , 5 ) から FIXED DECIMAL ( 10 , 3 )*/ A . C4 = D . C4 ; /* CHARACTER ( 255 ) から FLOAT BINARY ( 31 , 8 ) へ の 型変換 が 試み られる が 、 コンパイル エラー に なる か 、 実行 時 に 変換できない 文字 が 入っ て いれ ば 、 データ 変換 例 が 送出 さ れる */ ※ A . C3 が メモリレイアウト 的 に C 2 と C4 の 間にあっ て も 更新 さ れ ない 。 ※ D . C5 は 参照 さ れ ない 。 」 
とりあえず Java 8 に 標準 で 含ま れ て いる クラス https :// docs . oracle . com / javase / jp / 8 / docs / api / 他 に 何 か 有用 な クラス を 探し たかっ たら https :// sourceforge .net / 
「 Java の 開発 環境 」 も 種々 あり ます 、 総合 開発 環境 なら eclipse , netbeans など 、 何 を 選ん で どの よう に 操作 し た の か 記し て 下さい 。 あるいは 、 たんに ＪＤＫ を インストール しよ う として 間違え て JRE を インストール し た の で は ？ この なか に javac は 、 有り ませ ん 。 Jre の バージョン は 、 表示 でき ます 。 
faia 0415 さん とりあえず ２ 点 ほど 。 1 . implements は メソッド 定義 に は つけ られ ませ ん 。 「 class 」 の 部分 に 付け て ください 。 2 . ActionListener を 実装 し た とき に 必要 な の は 、 「 ActionEvent 」 型 の 引数 を １つ だけ 持つ actionPerformed メソッド です 。 現状 の actionPerformed メソッド は 引数 が 4つ あり ます ので 、 これ で は 必要 な 要件 を 満たせ ず 、 コンパイル エラー と なり ます 。 
何 回 やっ て も 無理 だっ たら 違う ソフト を 使う こと を お勧め し ます 
パソコン で 見 て も 添付 画像 の 文字 が 全く 読め ませ ん 。 もう一度 、 質問 し 、 コピペ し て ください 。 
RequestDispatcher の forward （） Method を 呼出 ば いい ； 下記 は 例え です ます ： まず 、 １つ の Jsp File は そう よう な ： body > < form action ="/ test / reServlet "> username :< input type =" text " name =" username ">; < input type =" submit " value = " submit "> </ form > </ body > そして ２つ の Servlet です 、 この コード は 、 そう です public class reServlet extends HttpServlet { public void doGet ( HttpServletRequest request , HttpServletResponse response ) throws Servlet Exception , IOException { String userName = request . getParameter (" userName "); request .s etAttribute (" userName ", userName ); RequestDispatcher rd = request . getRequestDispathcer (" myResult . jsp "); rd . forward ( request , respone ); // これ 関数 は requset と respone を 一緒に 次 の Jsp へ 伝え て 利用 し て の 意味 が ある ん だ 。 ｝ ｝ 最後 、 ３つ の Jsp は 結果 を 処理 し て 表し ます ； < body > <% String userName ＿ １ =( String ) request . getAttribute (" user "); String userName ＿ ２ = ( String ) request . getParameter (" username "); // その request が 前 の Servlet から の オプジェクト です ； %> <%= username %>< br > <%= user %> <% for ( int i = 0 ; i < list .s ize (); i ++){ %><%= list . get ( i ) %> <% }%> 日本語 上手 で は ありません 、 ごめんなさい 
1 と 2 の 場合 だ と 、 2つ の 動作 に 差 は ありません ++ i と i ++ の 違い は 、 値 が 計算 の 後 に 取り出さ れる か 前 に 取り出さ れる か です 具体 的 に 書く と 、 int i = 0 ; int x = ++ i ; // x = 1 int y = i ++; // y = 1 int z = i ; // z = 2 と なり ます for 文 で は 、 後処理 部 の 計算 結果 を そのまま 利用 する わけ で は なく 、 計算 が 終わっ た 後 条件 式 を 判定 する ため 、 どちら の 書き方 を し て も 結果 は 変わり ませ ん 
プログラミング は 、 全く 初めて の よう に 見受け ます 。 本 が 厚く 、 まだ る こし い かも しれ ませ ん が 、 「 すっきり java 」 の 方 が 良 さ そう です 。 
jar 版 で は なく exe 版 で は だめ な の でしょ う か ？ 捕捉 について ファイル の 関連 付け が Word に なっ て いる ので Word で 開か れる ん だ と 思い ます 。 
windows なら システム の プロパティ → 詳細 設定 → 環境変数 に 行っ て システム 環境変数 の 下 に ある 新規 を クリック 。 変数 名 に classpath と 入力 し 変数 値 を CLASSPATH に 指定 す べき 所 を 書く 。 ( 例えば プログラム が C :¥ work に 配置 さ れ て い て パッケージ 名 が com . example だっ たら C :¥ work ¥; と 指定 する 。 )( 元 から 書い て ある 場合 、 元 の 変数 値 を 消さ ない こと ！) もしくは コマンドプロンプト で 、 set classpath = クラスパス に 指定 す べき ところ の よう に 書く 。 Unix 系 なら コマンドプロンプト 、 端末 、 ターミナル で export classpath =" クラスパス に 指定 す べき ところ " の よう に 書く 。 
dokojava は キー 入力 に 対応 し て い ない ん じゃ ない でしょ う か 。 なので キー 入力 待ち が 無視 さ れ 結果 値 が 取得 でき ず 変数 の 値 が 0 に なり 、 Switch に 突入 Switch に 0 の 場合 の case が 無く default も 無い ので 例外 が 発生 と 見え ます 。 この 際 です ので jdk と IDE 環境 を PC に 作っ て は ？ どうせ 、 スッキリ java で も dokojava で は 出来 ない 所 へ 行き ます し 。 IDE は Eclipse が オススメ です 。 特に Eclipse の デバッグ ツール は 高 機能 です 。 
パッケージ 「 org . farng . mp3 」 を 使用 する 場合 、 jar ファイル 「 jid 3 lib . jar 」 が 必要 です 。 
いま の Minecraft に は ご存知 の とおり Java が 同封 さ れ て い ます 。 です ので 通常 プレイ する 際 に は Java は 必要 です が 、 ユーザー が 格段 用意 する 必要性 は あり ませ ん 。 また mod プレイ に関して です が mod を 導入 する 際 、 ForgeModloader を 使用 する の です が 、 その 際 に 必要 に なる 可能性 が あり ます が 、 Windows の 場合 WindowsInstaller を 利用 できる ので 、 Java を インストール し なく て も 導入 でき ます ね 。 しかし 、 Forgemodloader の Universal 版 等 を 使用 する 場合 は 必要 に なっ て き ます 、 が 、 まぁ 格段 心配 する こと じゃ ない と 思い ます よ いろいろ 考える の こと 画面 独裁 の で あれ ば インストール し ちゃう こと を お勧め し ます けど ね 
Genymotion を 使う という こと は Android 開発 を し たい の だろ う けど 、 Eclipse で Android 開発 を 行う ため の ADT プラグイン は すでに 開発 も サポート も 打ち切ら れ て い ます 。 どうしても Eclipse で 開発 し なけれ ば なら ない 事情 が ある の なら ともかく 、 そう で なけれ ば Android Studio で 環境 を 作り直す の が 先決 で は ない でしょ う か 。 Android Studio 用 に も Genymotion プラグイン は 存在 し ます 。 
内蔵 さ れ て い ませ ん 。 Adobe flash player 、 Adobe Reader は アドビ 公式サイト から アップデート し て ください 。 http:// www . ado be. com / jp / java は Oracle 公式サイト から アップデート し て ください 。 https :// java . com / ja / download / 
＞ この local . properties という の が どこ に も あり ませ ん 。 生成 方法 など が あれ ば 教え て ください 。 カテ 違い な ので お断りします 。 
リファレンス & ドキュメント アーカイブ は 常に 携帯 ！ 
一般 的 な セットアップ イメージ で インストール さ れ た Windows8 . x で は Internet Explorer に あらかじめ 組み込ま れ て いる Flash Player 以外 は 入っ て い ませ ん 。 また Internet Explorer 以外 の Web ブラウザ 用 の Flash Player ( NPAPI 、 PPAPI ) は 入っ て い ませ ん 。 ただ 、 Acrobat Reader は 入っ て い ない けど 、 PDF の 閲覧 が 可能 な ストアアプリ が 標準 で 入っ て い た よう に 思い ます 。 
html に関する 知識不足 が 原因 です 。 td タグ は col の 生成 、 tr タグ は recode の 生成 です 。 データ を recode として 表示 する なら tr タグ が 必要 です 。 一応 動作 する 記述 で あれ ば 、 コード に ない tr タグ を 追加 する 部分 を コメントアウト し て // html +="< tr >"// コメントアウト する 。 while ( result . next ()){ html +="< tr >" for ( i = 1 ; i < col ; i ++){ data [ i ] = result . get String ( i ); html +="< td >" + d ata [ i ] + "</ td >"; } html +="</ tr >"; } とすれば 動く でしょ う 。 ただし 、 String の 足し算 は 禁則事項 です 。 String Builder . append を 使っ て 書き直さ ない と データ 量 が 多い 時 に 劇 遅 ＆ メモリ 大量消費 に なり ます 。 
ペネトレーションテスト と は 、 コンピュータ や ネットワーク の セキュリティ 上 の 脆弱性 を 発見 する ため に 、 システム を 実際 に 攻撃 し て 侵入 を 試みる 手法 の こと です 。 特に 、 ネットワーク 接続 さ れ た 情報システム が 外部 から の 攻撃 に対して 安全 か どう か 、 実際 に 攻撃 手法 を 試し ながら 安全性 の 検証 を 行い ます 。 不正 に 侵入 できる か どう か だけ で なく 、 DoS （ サービス 拒否 ） 攻撃 に どの 程度 耐え られる か を 調べ たり 、 侵入 さ れ た 際 に そこ を 踏み台 に し て 他 の ネットワーク を 攻撃 できる か どう か など を 調べる 場合 も あり ます 。 
いいえ 。 オープンソースソフトウェア は 必ずしも 無償 と は 限り ませ ん 。 OSD による オープンソース の 要件 「 自由 な 再 頒布 が できる こと 」 に は 、 無償 ／ 有償 の 区別 も 含ま れ て いる ため 、 有償 で 配布 し て も よい という 決まり に なっ て い ます 。 
インタレース と は 、 画像 を 見る 側 の ストレス を 軽減 する ため に 、 はじめ に 粗い 画像 を 表示 し て 、 だんだん と 鮮明 な 画像 を 表示 する 技術 の こと を いい ます 。 通常 の 画像 は ユーザ の コンピュータ に ダウンロード さ れる に従って 、 上 から だんだん 画像 が 表示 さ れる もの です が 、 インターレース 方式 の 画像 で は 、 最初 は モザイク 状 の 粗い 画像 が 現れ 、 ダウンロード が 進む と 次第に 画像 が 鮮明 に なっ て き ます 。 この ため 、 ダウンロード の 途中 でも 画像 の おおよそ の イメージ が わかり ます 。 
プログレスバー と は 、 処理 の 進行 状況 を グラフ の メモリ （ 棒 の 長さ ） で 表示 する GUI ツール です 。 
別 の HDD に あっ て 大丈夫 な はず です 私 も 、 同じ よう な 理由 で 別 の HDD に Java を インストール し て い ます が 、 動作 に 問題 は ありません 一 度 、 インストール し 直し て は いかが でしょ う か ？ インストール 時 に その HDD の パス を 指定 すれ ば ちゃんと 認識 さ れる と 思い ます 
画像 が 小さ すぎ て 見え ない ので 該当 エラー が 出 て いる 文 を 書い て ください 
アルファベット順 で の ソート は java . util . Collections の sort メソッド を 使え ば 簡単 に 実装 できる と 思い ます 下記 URL で 似 た よう な こと を やっ て いる ので 参考 に し て ください http:// syunpon . com / program ing / java / sample / objectsort .s html # sample 03 検索 で の 並び 替え は 、 リスト 内 の すべて の 要素 の ラベル に対して 、 startWith や indexOf など の 文字列 の 部分 一致 を 判定 する メソッド を 呼び出し 、 部分 一致 し て い た 場合 に その 要素 ( 仮に 2 番目 の 要素 に 見つかっ た と する と ) AppData tmp = dataList . get ( 2 ); list . remove ( 2 ); list . add ( 0 , tmp ); と すれ ば 要素 を リスト の 先頭 に 持っ て いけ ます 
症状 が わかり づらい です 。 具体 的 に 「 ○ ○ の エラー が 出る 」 とか 、 ログ に 「 ○ ○ と 表示 さ れ て いる 」 とか の 情報 が ない と 解決 策 を 提示 する こと が でき ませ ん 。 
大型 アップデート は 大体 安定 し ませ ん 。 次 の アプ デ 待ち ましょ う 。 Gtx 970 積ん だ PC 使っ て も 最初 の 数 分 は かく つい た 。 ホント 安定 性 悪い 。 
デバッグ し やすく する ため です 。 なお コンパイル 時 に - g : none を 入れれ ば デバッグ 情報 は 残り ませ ん 。 
ウインドウ → パースペクティブ を 開く → その他 で 使用 し たい 言語 を クリック し たら 、 左上 あたり に 出 て くる と おもい ます 。 
動的 アクセス （ ダイナミックアクセス ） は 、 直接アクセス と 順次 アクセス を 組み合わせ た アクセス 方式 です 。 読み書き を する 開始 の レコード を 特定 し 、 そこ から 順次 アクセス を 行う と いう もの です 。 
処理 の 履歴 など を 記録 する ファイル の こと です 。 別名 、 ジャーナルファイル や ログファイル など と も いい ます 。 主 に コンピュータ の 障害 対策 に 使用 さ れ ます 。 
直接 編成 ファイル です 。 直接 編成 ファイル の 間接 アドレス 指定 方式 で は 、 ハッシュ関数 によって レコード アドレス を 決め て いる ので 、 異なる キー が 同一 の レコード アドレス に 変換 さ れる 現象 （ シノニム ） が 発生 する 可能性 が あり ます 。 
リユーザブル プログラム と は 、 再使用 可能 プログラム の こと です 。 つまり 、 何度でも 繰り返し 使用 できる プログラム の こと 。 通常 、 プログラム は 実行 ごと に ローダ により 主記憶装置 に 格納 し 直す 必要 が あり ます （ これ を リロード という ） 。 再使用 可能 プログラム は 、 この リロード を する こと なく 、 一度 ロード し た 後 は 何度でも 繰り返し 使用 でき ます 。 また 、 プログラム の 実行 開始 時 に 変数 の 初期化 など を 行い 、 処理 の 整合性 を 保っ て い ます 。 その ため 、 同時に 複数 の タスク で 使用 する こと は でき ませ ん 。 
複数 の タスク で 同時に 使用 し て も 正しい 結果 が 得 られる プログラム の こと 。 再 入 可能 プログラム で は 、 プログラム を 変数 部分 と 手続 部分 に 分割 し 、 タスク ごと に 変数 部分 を 割り当て 、 手続 部分 のみ 共有 する こと で 同時 処理 を 実現 し て い ます 。 別名 「 リエントラント プログラム 」 と も 呼ば れ ます 。 なお 、 同時に 複数 の タスク で 使用 する ため に は 、 リロード し なく て も 繰り返し 使用 できる 「 再使用 可能 プログラム 」 の 特性 が 必要 と なり ます 。 
Java を 作っ た の は Sun Microsystems という 会社 です 。 1995年 頃 に 発表 さ れ た そう です 。 
JavaBeans と いい ます 。 
複数 の 目的 プログラム （ 目的 モジュール ） を １つ の 実行 プログラム （ ロードモジュール ） に 組み立てる （ リンク する ） サービス プログラム の こと です 。 リンケージエディタ は 別名 「 リンカ 」 と も 呼ば れ ます 。 コンパイル により 機械語 に 翻訳 さ れる 原始 プログラム は 、 元々 １つ の プログラム を 分割 し た モジュール 単位 で ある こと が 多く 、 この 場合 、 コンパイラ は 別 の モジュール （ 外部 関数 など ） を 未 解決 アドレス として 処理 し ます 。 この 未 解決 アドレス を 解決 し て 、 分割 ・ 翻訳 し た 目的 プログラム を 統合 する の が リンカ の 役割 です 。 この 時 、 すでに プログラム ライブラリ （ ロード ライブラリ ） に 登録 さ れ て いる 部品 （ ライブラリ モジュール ） を 取り出し て 組み込む 機能 も あり ます 。 また 、 この リンカ により リンク を 静的 リンキング と 呼ぶ こと も あり ます 。 
低 水準 言語 の 一 種 で あり 、 機械語 に 最も 近い 言語 です 。 CASL Ⅱ など が アセンブラ 言語 に 該当 し ます 。 また 、 アセンブラ 言語 と 機械語 の 命令 は １ 体 １ に 対応 し ます 。 アセンブラ 言語 の 体系 ・ 文法 は 、 対応 する コンピュータ によって 異なり ます 。 アセンブラ 言語 は 別名 「 アセンブリ言語 」 と も いい ます 。 アセンブラ 言語 で 書か れ た 原始 プログラム を 目的 プログラム に 翻訳 する こと を 「 アセンブル 」 と いい 、 それ を 行う ため の 言語 プロセッサ の こと を 「 アセンブラ 」 と 呼ぶ こと が あり ます 。 
以下 の よう な 違い が あり ます 。 ■ コンパイラ 原始 プログラム を 一括 し て 翻訳 する 。 時間 が かかる 。 ただし 、 目的 プログラム が でき た 後 は 、 高速 実行 する こと が できる 。 コンパイラ を 使用 する 言語 に は Ｃ 言語 や COBOL など が ある 。 また 、 手続 型 言語 の ほとんど も コンパイル 方式 を 採用 し て いる 。 バッチ処理 など に 適応 。 ■ インタプリタ 原始 プログラム の 内容 を １ 命令 ずつ 機械語 （ または 中間言語 ） に 翻訳 し て 実行 する 。 実行 速度 は 遅い が 、 全て の プログラム が 完成 し て い なく て も 実行 が できる 。 BASIC など が 採用 し て いる 。 対話 型 処理 に 適応 。 
プログラム の 実行 直前 に OS によって DLL （ Dynamic Link Library ） の 部品 （ モジュール ） を 組み込む （ ロード する ） 機能 の こと です 。 また 、 これ と は 逆 に 、 開発 時 に 必要 な プログラム を すべて 連結 し 、 それ 単体 で 実行 可能 な 形式 の ファイル を 作成 する 方式 の こと を 静的 リンキング と いい ます 。 
コンパイル の 翻訳 は 、 以下 の よう な 手順 で 行わ れ ます 。 １ ・ 字句解析 文字列 から なる 原始 プログラム を 字句 （ トークン ） 単位 に 分割 する ２ ・ 構文解析 プログラム 言語 の 文法 に従って 字句 構成 を 解析 し 、 構文木 を 生成 する 。 ３ ・ 意味 解析 構文木 の 意味 を 解析 し 、 中間 コード を 生成 する 。 ４ ・ 最適化 実行 時 の 処理 効率 を 高め て 実行 時間 を 短縮 できる よう に 、 中間 コード における 式 の 簡略 化 や 構成 の 変更 など を 行う 。 ５ ・ コード 生成 機械語 または 中間言語 の コード （ オブジェクト コード ） に 変換 する 。 
JFrame を 使っ てる 前提 で 、 適当 に オブジェクト 名 を panel と し ます 。 ・ テキスト フィールド から RGB を 取得 し て 適用 int r = red . getText (); int g = green . getText (); int b = blue . getText (); panel .s etBackground ( new Color ( r , g , b ));// 背景色 panel .s etForeground ( new Color ( r , g , b ));// 前景色 ・ オブジェクト から RGB を 取得 int r = panel . getBackground (). getRed (); int g = panel . getBackground (). getGreen (); int b panel . getBackground (). getBlue (); すべて の オブジェクト が 継承 し て いる はず な ので 、 この メソッド を オブジェクト に対して うまく 利用 し ましょ う 。 
これ の 正式名称 は わかり ませ ん が 、 デザインパターン の 「 FactoryMethod 」 パターン と 同じ 生成 方法 です ね 。 親 クラス ( 通常 の 親 クラス や インターフェース ) から 継承 し て 生成 し た 場合 、 その 親 クラス として 生成 でき ます 。 クラス は A , B , C と あり ます ね 。 クラス A : 親 ( 初代 ？ ) クラス B : A から 継承 クラス C : B から 継承 ( 孫 ？ ) と なっ て い ます 。 B b = new C (); と し た 場合 、 B として 受ける が 、 実際 に は C という 状態 です 。 なぜ こう する 必要 が ある の か 。 それ は 、 組み方 に も よる ( プログラマ の 考え方 とか ) の でしょ う けど 、 生成 する オブジェクト が " その とき に なら ない と わから ない " 場合 が あり ます 。 たとえば 、 [ 計算 クラス ]: インターフェース ⇒ do メソッド : int ( 計算 する ) [ 足し算 クラス ]: 計算 クラス から 継承 ⇒ a : int b : int do メソッド : 実装 [ 引き算 クラス ]: 計算 クラス から 継承 ⇒ a : int b : int do メソッド : 実装 [ 掛け算 クラス ]: 計算 クラス から 継承 ⇒ a : int b : int do メソッド : 実装 [ 割り算 クラス ]: 計算 クラス から 継承 ⇒ a : int b : int do メソッド : 実装 という 風 に やっ て おい て 、 ユーザ が "+" を 入力 し た とき は 足し算 クラス 、 "-" の とき は 引き算 クラス 、 ... と ユーザ の 入力 値 によって 生成 する オブジェクト が 変わる 場合 、 固定 し て しまう と きつい 。 で 、 計算 CreateInstance ( int n ){ if ( n == 1 ) return new 足し算 (); else if ( n == 2 ) return new 引き算 (); else if ( n == 3 ) return new 掛け算 (); else return new 割り算 (); } みたい に してやる と 、 n が 1 の とき " 足し算 用 ", n が 2 の とき " 引き算 用 ", みたい に 、 その とき の 処理 を 変える こと が でき ます 。 分かり づらけれ ば 、 「 デザインパターン 」 を やっ て み て ください 。 
画像 の 文字 が 読み取れ ない の です が 、 SDK は どこ に 置い て いる の でしょ う か 。 日本語 文字 が 使わ れ た フォルダー の 配下 に なっ て い ませ ん か ？ Program Files など アクセス 制限 が かかっ て いる フォルダー の 配下 に なっ て い ませ ん か ？ 
> You can configure your SDK via Configure | Project Defaults | Project Structure | SDKs 最近 の エラー 表示 は 親切 に なり まし た ね そのまま 、 Configure | Project Defaults | Project Structure | SDKs から SDK の path を 設定 できる ので 確認 せよ と いう こと です ただ 、 ここ を 適切 な SDK の Path に なっ て い ない という こと は 、 元々 の 問題 が ある と は 思い ます 、 PC 環境 に 問題 ある かも しれ ませ ん とりあえず 、 こちら に も 似 た よう な 事例 が あり ます http:// stackoverflow . com / questions / 21794272 / android - sdk - is - missing -... それから ユーザー 名 が 日本語 で インストール する と 色々 エラー に なり ます 
エラー 文 に 直接 「 ビデオカード ドライバー を 更新 し たら できる よう に なり ます 。 」 と 書か れ て いる こと は ない と 思う ので 、 質問者 さん が エラー 文 から 自分 で 調べ た 結果 、 「 ビデオカード ドライバー を 更新 し たら できる よう に なり ます 。 」 と 出 て き た の か な と 推測 し ます が 、 エラー 文 が ない と 原因 を 特定 する こと が でき ませ ん 。 調べ た 結果 が 間違っ て いる 可能性 が ある ので エラー 文 の 記載 を お願い し ます 。 
＞ SQLite を 使用 し て い ます が そっち は 正常 に 動い て いる よう な ので 邪魔 だ と 思い カット し まし た ListView の 元 と なる SQL が 正しく 削除 さ れ て い て ListView に それ が 反映 さ れ て い ない だけ でしょ う notifyDataSetChanged () を 実行 し て み て ください 下 の 例 で は 、 ArrayList で 要素 を 構成 し て い ます が 参考 に なる の で は https :// akira - watson . com / android / listview _ 3 . html 
私 の 頭 で は すぐ に 理解 でき ませ ん でし た が .... よう は main メソッド が ある クラス に 書く べき か 別 クラス を 用意 し て そこ に 記述 する か 。 です か 。 それなら 、 状況 に よる と 思い ます 。 意外と 汎用性 が 高い -> 別 クラス に す べき 今回 限り -> main メソッド と 同じ クラス で も よい たとえば 、 C から 来 た 場合 、 コンソール の 入出力 ( System . out . print とか を 使う やつ ) の 特に 、 入力 用 。 あれ 面倒 です 。 例外処理 書か ない と いけ ない し 。 これ を class MainProg { public static void main ( String [] args ){ MainProg a = new MainProg (); String s = a . write (); } String write (){ ... } // 一応 入力 用 。 例 な ので 略 。 } と する と 、 今回 は いい です が 、 別 の ファイル を 作成 する とき は 、 これ を コピー し て 、 main メソッド 内 の 処理 を 消し て ... と やる か 、 新規 で 書い て 、 write メソッド ( コンソール から の 取得 ) も 書か なく て は なり ませ ん 。 です が 、 別 クラス に 書け ば 、 その クラス を jar ファイル に し たり し て 使え 、 なおかつ 、 この jar ファイル に アクセス できれ ば write メソッド が 使え ます 。 
CODEVS の sample ファイル を eclipse 上 で 開く に は 、 以下 の 手順 で 行い ます 。 まず 、 ファイル を 右クリック し 、 その後 、 「 プログラム の 一覧 から 選択 する 」 という コマンド から eclpse を 選択 すれ ば 開け ます 。 その他 、 ファイル を ドラッグ ＆ ドロップ し て eclpse の 画面 に 移動 さ せる という 方法 でも 可能 です 
変換 や 特殊 な ソフト とか が 必要 ない の だ と 、 bat ファイル に なる と 思い ます java ファイル と 同じ 階層 --- 実行 . bat --- java ClassName ------------ どこ から でも 実行 --- 実行 . bat --- cd C :\ User \???\ Desktop \??? java ClassName ------------ あと は 、 実行 結果 を 表示 さ せ たい 場合 は --- 実行 . bat --- java ClassName pause ------------ の よう に 記述 する と いい です 。 ショートカット を 作成 する と 、 アイコン を 簡単 に 変え られる ので それ っぽく でき ます 。 
java 7 の コンパイル の やり方 は 、 コマンドプロンプト 上 で javac ファイル 名 . java と 入力 する だけ です 。 javac の 「 c 」 と は 、 コンパイル コマンド の こと 。 
a が 何 も し て い ない とか 、 Random インスタンス を 無駄 生成 し て いる など 、 色々 と 「 間違っ て は いない が よく ない 処理 」 が 大量 に 存在 し 、 修正 す べき 点 が 多々 あり ます が 、 コード を いじる な と いう こと な ので 修正 し ませ ん 。 int as = 500 ; int sum = 0 ; for ( int i = 0 ; i < as ; i ++ ){ array [ i ]= new Random (). nextInt ( as ); sum += array [ i ]; System . out . println ( array [ i ]); } System . out . println (" 合計 値 ="+ sum ); あるいは Java 8 なら int as = 500 ; for ( int i = 0 ; i < as ; i ++ ){ array [ i ]= new Random (). nextInt ( as ); System . out . println ( array [ i ]); } System . out . println (" 合計 値 ="+(( IntStream ) Arrays . stream ( array )). sum ()); でも OK 
ソース の 中段 あたり に ある for 文 の 記述 の 仕方 が おかしい です 。 普通 は 以下 の よう に 記述 し ます 。 for ( i = 1 ; i <= results () .s ize (); i ++) { // appList に results . get ( i ) が 含ま れ て いる か どう か if ( appList . contains ( new Integer ( results . get ( i )))) { county = country + 1 ; Overlap . add ( results . get ( i )); resultsString += results . get ( i ); } 
ADT プラグイン が インストール さ れ て いる なら 、 メニュー の Window の 下 に あり ます 。 Eclipse を 日本語化 し て い たら 「 Android仮想デバイス マネージャー 」 といった 名称 で 表示 さ れ て いる はず です 。 もし メニュー の 中 に 存在 し ない の なら 、 下記 が 参考 に なる でしょ う 。 私 が 以前 書い た もの だ けど 。 http:// note . chiebukuro . yahoo . co.jp / detail / n 136130 ていう か 、 Android Studio を セット アップ し た の で は ない の です か ？ 参考書籍 か 何 か が Eclipse を 用い て いる など の 都合 が ある の かも しれ ない けど 、 参考 物 通り に 記述 し て も 改版 さ れ た SDK の サポート 外 の ため に コンパイル が 通ら ない 可能性 も あり ます 。 そうなると SDK まで も 参考 物 と 同じ 過去 バージョン に 揃える 必要 が ある かも しれ ない （ 過去 バージョン を ネット から ダウンロード する こと 自体 は 可能 ） ので 、 泥沼 に 嵌る と コンパイル を 通せる よう に なる まで 非常 に 苦労 する こと に なる かも しれ ませ ん よ 。 
絶対値 用 の 変数 は 存在 し ませ ん 。 なんらかの メソッド で 取得 し ます 。 「 Java 絶対値 」 と 調べ た ところ 、 http:// www . openreference . org / articles / view / 591 が ヒット し まし た 。 Math の static 付き メソッド abs で 取得 し て 変数 に 格納 する 。 int a = - 100 ; int b = Math . abs ( a ); こう する と b に は - 100 の 絶対値 | - 100 | 、 つまり 100 が 格納 さ れ ます 。 if 文 に 埋め込ん で if ( Math . abs ( a ) == 100 ) と する こと も でき ます 。 
exlipse は 使い やすい みたい です が 、 今回 は 無視 し ます 。 操作 が 多 すぎ て 説明 に 向い て ませ ん から 。 コマンドプロンプト を 操作 する こと は 可能 です か ？ デスクトップ 等 で Shift + 右クリック で 「 コマンド ウィンドウ を ここ で 開く 」 を 選ぶ と 、 黒い 画面 が 出る と 思い ます 。 java 開発 環境 の JDK は インストール し まし た か ？ コマンドプロンプト ( 黒い 画面 ) で 「 javac 」 と 入力 し て 、 コマンド が 見つかり ませ ん と 出 たら インストール さ れ て ませ ん 。 「 JDK 8 」 で 検索 する と 英語 の ページ で 最新 版 が 手 に 入り ます 。 インストール でき たら 「 環境変数 」 の 設定 の 仕方 を 調べる と いい です 。 java を 実行 する に は まずは 下 のようなもの を 書い た ファイル を 用意 し ます 。 [ Sample 1 . java ファイル の 記述 ] import java . io .*;//... 今回 は 必要 ... class Sample 2 { public static void main ( String [] args ){ //... プログラム ... } } java の 基本 的 な 構文 です 。 (//～ は それ 以降 の 文字 を 無効 に する ) 次に java ファイル と 同じ フォルダ 上 で 右クリック し て 開い た コマンドプロンプト ( 黒い 画面 ) で javac Sample 1 . java [ ここ で エンター ] java Sample 2 [ ここ で エンター ] と 書く と 、 プログラム を 実行 でき ます 。 ( Sample の １ と ２ は わかり やすい よう に 分け て ます が 、 統一 し た ほう が エラー が 出 にくい です ) なに も 表示 さ れ なけれ ば 成功 です 。 ... プログラム ... の 部分 に これ を 書い て ください https :// docs . google . com / document / d / 1K aWgGKdfFHetfMmTTBpw 7 SxBy 6 f4 YAE ... 上 の プログラム は グー , チョキ , パー で 動き ます 下 の プログラム は 0 , 1 , 2 を グー , チョキ , パー に 関連付け て ます これ を 自分 の 使い たい よう に いじっ て いく うち に 基礎 的 な 動作 は 学べる ん じゃ ない でしょ う か 。 ほか に プログラム 言語 を やっ て いれ ば ずいぶん と 簡単 だ と 思い ます 。 
無料 だ けど まだ 開発 中 の 仕組み 。 だから なん でも 動かせる よう に なる わけ じゃ ない 。 
回答者 に は 細かい 文字 を 苦労 し て 読む 義務 は ない ん だ よ 。 
Windows8 は 、 マイクラ の バグ や 、 mod と Forge の バグ が 多い です ！ mod 入れる に は 、 Windows ７ か 10 に し ましょ う 。 
＞③ を 2 段 に 分け て 、 r = 5 の とき は 1 行 目 に ３つ 、 2 行 目 に ２つ １ 段 目 、 ２ 段 目 と し たい 場合 は LinearLayout の vertical で 設定 し た レイアウト xml ファイル 内 で ２つ の LinearLayout を 並べれ ば いい だけ です ＜ LinearLayout android : orientation =" horizontal " android : layout _ width =" match _ parent " android : layout _ height =" wrap _ content "＞ ＜ ImageView android : id ="@+ id / image _ view 00 " android : src ="@ drawable / girl " android : layout _ weight =" 1 " android : layout _ width =" 0 dp " android : layout _ height =" wrap _ content "/＞ .... ＜/ LinearLayout ＞ ＜!-- ここ から ２ 行 目 --＞ ＜ LinearLayout android : orientation =" horizontal " android : layout _ width =" match _ parent " android : layout _ height =" wrap _ content "＞ .... ＜/ LinearLayout ＞ こんな 感じ でしょ う か 
一度 minecraft の データ を 削除 し て インストール し 直し て み て は いかが でしょ う か ？ 
この 質問 だけ で は 原因 が わかり ませ ん 。 エラー 文 を 記載 し て ください 。 
よくある質問 。 http:// detail . chiebukuro . yahoo . co.jp / qa / question _ detail / q 1214414772 ... 
ちょっと 気 に なっ た の です が 、 補足 を 入力 し た とき の 単純 ミス かも しれ ませ ん が 、 補足 の 中 に ある 、 URIEncording =" UTF-8 " useBodyEncordingForURI =" true " は 、 URIEncoding =" UTF-8 " useBodyEncodingForURI =" true " が 正しい です 。 
hakodate _ future さん 二 次元 配列 の 上下 左右 の 要素 から 中央 の 値 を 計算 する よう な 処理 を 、 セル 毎 の 多数 の スレッド を 用い て 計算 する 時 、 メモリ に 入り きら ない よう な 大量 データ に なっ た 場合 、 遠く 離れ た セル は 、 並列 し て 計算 でき ます 。 ＞ ・ 並行 リード / ライト が 有用 な シチュエーション 例えば 、 天気予報 で 、 地図 の １ ０ ０ Km 毎 の メッシュ （ 二 次元 配列 ） で 、 「 明日 の 気圧 は 、 風向き に 応じ た 重み付け で 、 各々 の セル の 東西南北 （ 二 次元 配列 で の 上下 左右 ） の セル の 気圧 の 加重 和 で ある 」 という 計算 を する 場合 に 、 北海道 の 気圧 と 沖縄 の 気圧 は 、 平行 し て 計算 できる でしょ う 。 ＞ ・ その メリット 多数 の 演算 プロセッサ が あれ ば 、 高速 計算 が でき ます 。 
多分 できる と 思う けど 、 やっ て みる 。 複雑 な ( たとえば C で マルチスレッド を クラス に し て ... だけど 起動 する スレッド は あまり いじ れ ない ... とか ? ) なら ともかく 、 ほとんど static + クラス 型 + 変数 名 + ; と すれ ば いい だけ 。 これ で コンパイル エラー が 出る なら 、 無理 って こと 。 
＞① xml で onClick 処理 を 実装 さ せ たい android : onClick =" onClick " と やる より は 、 android : id ="@+ id / button " として Button の ID で 扱う 方 が 分かり やすい と 思い ます https :// akira - watson . com / android / button . html ＞① の 場合 は Button に なる の でしょ う か ？ Button が 簡単 で 分かり やすい です が ImageButton や ImageView に setOnTouchListener を 設定 し て 画像タッチ で 受け取る こと も でき ます 。 https :// akira - watson . com / android / image view - drag . html ＞② の Java で の 処理 は どう なる の でしょ う か ？ // button という id で 設定 Button button = ( Button ) findViewById ( R . id . button ); // リスナー を セット button .s etOnClickListener ( new View . OnClickListener () { @ Override public void onClick ( View v ) { // 背景色 設定 button .s etBackgroundColor (( Color . rgb ( 127 , 127 , 255 ))); } }); レイアウト です < Button android : id ="@+ id / button " android : text =" button " android : layout _ width =" wrap _ content " android : layout _ height =" wrap _ content " /> それ から Android の 仕様 な ので カテゴリー として は 、 Java で は なく Android 開発 に し ない と 回答 が 付か ない でしょ う ね 
String [] n = { test 1 , tes t2 , tes t3 , tes t4 , test 5 , test6 , test 7 , test 8 ,}; は 、 String [] n {" test 1 "," tes t2 "," tes t3 "," tes t4 "," test 5 "," test6 "," test 7 "," test 82 "}; だ よ 。 入力ミス 
日本語版 eclipse ダウンロード する サイト に https :// mergedoc . osdn .jp / All in One という の が あり 、 この 中 の Java 、 Full Edition を 選べ ば 初め から 揃っ て ます よ 
HTML の Audio タグ で 複数 曲 を 順番 に 再生 する こと は でき ませ ん 。 どうしても Audio タグ で やり たい 場合 は 、 予め 再生 し たい ファイル を つなげ て 1つ の ファイル に し て おく 必要 が あり ます 。 また 、 JavaScript で 再生 を 制御 する 方法 も あり ます が 、 こちら は JavaScript の 知識 も 必要 と なり ます 。 JavaScript で 再生 する サンプル は こちら http:// www .s ystemexpress . co.jp / htmlcss / audiovideoplayer . html 
アンドロイド 開発 は し た こと が ない ので 明言 は でき ませ ん が 、 画面 が 完全 に 描写 さ れ た イベント を 拾っ て そこ で BGM を 流す よう に すれ ば いい の で は ない でしょ う か 。 ちょっと 調べ た 感じ だ と onWindowFocusChanged で 拾える っぽい です が 、 この イベント は フォーカス が 変わる たび に 呼び出さ れる ので 別途 フラグ 建て が 必要 です が そこ さえ 制御 できれ ば 実現 でき そう です 。 
海外 なら http:// sourceforge .net / 日本 なら https :// osdn .jp / 結局 の ところ 貴方 が プロジェクト に どれ だけ 貢献 できる か に より ます 。 プロジェクト にとって クレクレ君 は 不要 な ので 。 
まぁ 、 たいてい の 場合 、 それなり の 理由 が ある わけ です 。 ３ で 割り切れる か なんて 、 そもそも 、 関数 に する 必要 が あり ませ ん 。 main に かい ちゃっ て も 、 ４ 行 で 収まる ん なら 、 それ で いい でしょ 。 って 話 です 。 私 は 、 最初 そんな こと を 思っ て まし た 。 （ 苦笑 それでも 、 メソッド に 分ける 理由 は 、 ・ 本番 は メソッド の 中身 が 長く なる ので 、 個別 に 分ける 。 ・ 処理 と 表示 を 分ける こと で 、 問題 の 切り離し や 修正 が 楽 。 ・ 複数 の 呼び出し に 対応 さ せる 。 Boolean の true / false に すれ ば 、 その 戻り値 で if 文 で 処理 を 分けれ ば いい ので 。 「 ３ で 割り切れ ます 。 」 と 「 ３ で 割り切れる ぜ ！ 」 という ２ 箇所 で 使い たい 時 に 便利 。 また 、 複雑 な 処理 を さ せる 時 に 、 メソッド 内 で 完結 し やう と 、 見通し が よく なく なっ ちゃう ん です よ 。 処理 を 表示 は 分け た ほう が いい の は 、 頭 に 入れ て おい た ほう が よい ですよ。 
これ は 、 プログラム で は なく 、 考え方 の 質問 です ね 。 Imageview の インスタンス を 持っ た 配列 を 必要 な だけ 用意 し ます 。 int 型 の カウンター を 用意 し て 、 描 する image view 配列 の 添字 を カウンター を 使っ て 操作 し ます 。 タッチ する 度 に カウンター を 増やせ ば 、 画像 が 変わる でしょ う 。 そんな 言葉 、 聞い た こと ない ！ という 場合 は Java の 基礎 から お 勉強 さ れ た 方 が いい か と 思い ます 。 でも 、 質問者 様 が 作り たい プログラム は 実は そんなに 難しい もの で は あり ませ ん 。 canvas を 使っ た 描画 だ と 思い ます ので 、 Android の 初歩 です 。 でも 、 全く の 未 経験 の 方 だ と 敷居 は 高い ん です … ( 考え方 が ね … ) 私 の おすすめ は 、 Android ゲーム の 教本 を 買っ て 、 例題 の プログラム を かき ながら 、 一度 最後 まで 終わら せる こと です ！ 技術 だけ で なく 、 ゲーム の 考え方 も 勉強 できる ので 、 おすすめ です よ 。 守破離 と 言う 言葉 が あり ます 。 最初 は 、 本 に 書い て いる 通り に 作っ て み て ください 。 それ が 一番 の 近道 だ と おもい ます 。 頑張っ て ください ね ！ http:// www . amazon.co.jp / gp / a w/ d / 484433008 X / ref = mp _ s _ a _ 1 _ 38 ? qid = 1458 ... ゲーム & dpPl = 1 & dpID = 51 dwPy 0 st 1 L & ref = plSrch 
① HDD の 空き 容量 を 確かめ て 、 十分 に ある か 確認 する 。 ② 解凍 先 を できるだけ 浅い フォルダ に する 。 特に ② は 重要 。 eclipse の plugin に は 名前 が 長い もの が 多く 、 深い フォルダ だっ たり （ OS や 解凍 ツール によって は ） 日本語 が 含ま れ て いる フォルダ だっ たり する と 解凍 でき ない ケース が ある 。 可能 なら 、 C :\ 直下 に eclipse フォルダ 作っ て 解凍 し た ほう が いい 。 
Android について は 、 アプリ の 多く が Java で 作ら れ て い ます 。 Java を 覚えれ ば 、 Android も 覚え やすい か どう か と 言う より 、 Java を 知ら ない と 話 に なら ない と 思っ た 方 が 良い です 。 Swift について は 、 Java と の 互換性 は あり ませ ん 。 Swift の ため に 、 Java を 覚える の は 無駄 です 。 ただし 、 プログラミング の 基礎 知識 は 、 言語 不問 で 通用 し ます 。 
選択肢 の 1つ で は あり ます 。 選択肢 は 5つ くらい 考え られ ます 。 結局 あなた の 目標 が どこ に ある の か に より ます 。 1 . デザインパターン 2 . データベース ( SQL 、 JDBC ) 3 . Web ( サーブレット 、 Java EE ) 4 . GUI ( Swing 、 JavaFX ) 5 . Android 
> papico 9999372 さん それ やっ た こと ない けど 元 データ の 順番 を 逆 ( old の 後 に new が くる よう に ) し たら 上手く いく よう な 気 が する 他の方法 も ある だろ う けど 
JavaFX で は 通常 他 の スレッド に 直接アクセス でき ない 。 遅延 アクセス すりゃ 良い だけ 。 JavaFx の プログミング 本 を 買っ て 読め 。 
出来る はず です よ 。 やり方 は 分かり ませ ん が 。 
別 の scene を stage に セット すりゃ 良い だけ 。 JaxaFX の プログミング 本 を 読め 。 
javax . servlet . http . Part は Servlet 3 . 0 以降 で 使える よう に なり まし た 。 Servlet 3 . 0 という の は Tomcat で は 7 . 0 以降 に なり ます 。 どの バージョン の Tomcat を ターゲット に し て いる か は 、 「 プロジェクト 」-「 プロパティ 」 の 、 「 ターゲット ・ ランタイム 」 か 「 Java の ビルドパス 」 の 「 ライブラリー 」 で 確認 でき ます ので 、 Tomcat 7 . 0 以降 が 指定 さ れ て いる か 確認 し て み て ください 。 （ Eclipse の バージョン によって は メニュー の 項目 が 違う かも しれ ませ ん ） 他 の 質問 を 見 て み たら 、 Tomcat 6 . 0 とか 5 . 5 を 使っ て いる よう な 質問 が あり まし た が 、 それ と 同じ プロジェクト だ と し たら 、 javax . servlet . http . Part は 使え ない と 思い ます ので 、 Tomcat の バージョン を 変更 でき ない の で あれ ば 、 他の方法 を とる しか ない と 思い ます 。 （ 例えば 、 Apache Commons FileUpload を 使う とか ） 
文字列 は 配列 です 。 配列 の 実体 は メモリ の 場所 を 示す ポインタ です 。 例えば プログラム に 書い た " abcde " が 100 番 から 始まる いくつ か の メモリ の 保存 さ れ た と し ます 。 そして 、 標準入力 から 入力 し た " abcde " が 200 番 から 始まる いくつ か の メモリ に 保存 さ れ た と し ます 。 この とき 、 プログラム に 書か れ た " abcde " と 入力 し た " abcde " を == で 比べる の は 、 メモリ 番号 を 表す 数 「 100 」 と 同じく メモリ 番号 を 表す 数 「 200 」 を 比較 する の と 同じ です 。 当然 100 と 200 では 等しく ない ので 偽 に なり ます 。 という わけ で 、 Java は 、 == では 文字列 の 内容 が 同じ か どう か を 比較 する こと は でき ませ ん 。 専用 の 文字列 メソッド equal を 使え ば 。 ふたつ の 文字列 を 比較 でき ます 。 ～ 文字列 メソッド equal ～ 文字列 1 . equal ( 文字列 2 ) 
弾 の 存在 非存在 を 切り替える フラグ を 設置 し て 、 存在 条件 を 諸々 調べ て その フラグ を セット し 、 セット さ れ て いる とき は 描画 、 そう で ない 時 は 描画 そのもの を スキップ ( 簡単 に は ただ の if 文 で 切り替え ) すれ ば よろしい の で は 。 int ranx ; int rany ; final float A = 5 ; final float R = 10 ; final int M = 12 ; final int N = 3 ; // 弾 の 発射 回数 float [] angleplus = new float [ M ]; boolean [][] bullet Active = new boolean [ N ][ M ];// 弾 の 存在 フラグ float [][] x = new float [ N ][ M ]; float [][] y = new float [ N ][ M ]; // 標的 関連 変数 / 定数 float target _ x , target _ y ; final int TARGET _ R = 30 ; final color TARGET _ COLOR = color ( 255 , 0 , 0 ); final int DELAY = 60 ; int dl ; void triggerOnce ( int n ) {// 目的 に あう よう メソッド の 名前 変更 。 // 一 回分 の 発射 処置 for ( int i = 0 ; i < M ; ++ i ) { bullet Active [ n ][ i ]= true ; x [ n ][ i ] = ranx ; y [ n ][ i ] = rany ; } } void setup () { size ( 1200 , 900 ); for ( int i = 0 ; i < M ; i ++) { angleplus [ i ]= 2 * PI * i / M ; } background ( 255 ); ranx = int ( random ( 100 , width - 100 )); rany = int ( random ( 100 , height - 100 )); target _ x = random ( TARGET _ R , width - TARGET _ R ); target _ y = random ( TARGET _ R , height - TARGET _ R ); dl = 0 ; } void draw () { background ( 255 ); strokeWeight ( 1 ); stroke ( 0 ); fill ( 0 ); ellipse ( ranx , rany , 20 , 20 ); // 標的 描画 fill ( TARGET _ COLOR ); ellipse ( target _ x , target _ y , TARGET _ R , TARGET _ R ); fill ( 255 ); if ( dl % DELAY == 0 ) {// DELAY 毎 に if ( dl / DELAY < N ) {// N 回 まで // 弾 発射 triggerOnce ( dl / DELAY ); } } for ( int n = 0 ; n < N ; n ++) { for ( int m = 0 ; m < M ; m+ +) { if ( bullet Active [ n ][ m ]) {// 弾 が 存在 する なら x [ n ][ m ]+= A * sin ( angleplus [ m ]); // 弾 の 位置 更新 y [ n ][ m ]-= A * cos ( angleplus [ m ]); if ( x [ n ][ m ]< 0 || width < x [ n ][ m ] || y [ n ][ m ]< 0 || height < y [ n ][ m ]) {// 画面 外 なら ば bullet Active [ n ][ m ]= false ; // 弾 削除 } if ( dist ( x [ n ][ m ], y [ n ][ m ], target _ x , target _ y )<( R + TARGET _ R )/ 2 ) {// 標的 に当たり ? bullet Active [ n ][ m ]= false ;// 弾 削除 } } if ( bullet Active [ n ][ m ]) {// 存在 する 弾 だけ 描画 ellipse ( x [ n ][ m ], y [ n ][ m ], R , R ); } } } dl ++; } void keyPressed () { ranx = mouseX ; rany = mouseY ; target _ x = random ( TARGET _ R , width - TARGET _ R ); target _ y = random ( TARGET _ R , height - TARGET _ R ); dl = 0 ;// 発射 遅延 の 変数 の 初期化 だけ に 留める } 以上 、 あくまで サンプル 。 いろいろ 矛盾 や おかしな こと が ある かも 知れ ない けれど 。 
＞ この サイト と 同じ 状況 に し た つもり だっ た の です が android . hardware . Camera を 使っ て Android 4 . 3 を ターゲット に し て い ます が Android 5 . 0 以降 は android . hardware . camera 2 と なり ます 実装 は 異なり ます ので 、 それ を 調べ て から やり直し ましょ う 手持ち の 実機 が 4 . x しか ない の で あれ ば つらい です が 
cielup さん 文字列 の 例 を 書く 。 
> ID 非公開 さん *** そもそも それ を ここ で 質問 し ない と いけ なく なっ てる の は その 方法 を 調べる の が 面倒 で 調べる の を し て ない ( 心 が 折れ てる から ) まず やり たい こと を おい て おい て OpenGL で やり たい こと を やる ため に 必要 な 方法 を 調べれ ば 質問 する 必要 なく なる し 今後 も なにか やり たく なっ たら 使っ た こと ない ツール つかう こと に なり ます ちゃんと 自分 で やり たい こと を やる ため に 必要 な こと は 自分 で 調べ れる よう に なる 方 が 良い と 思い ます *** 調べ かた ツール 名 やり たい こと ツール 名 キーワード ツール 名 関数 名 で ネット 検索 すれ ば すぐ やり方 は 調べ れ ます やり たい こと を いきなり やろう と せ ず ( 上 に も 書い た けど ) その ページ に で てる ソース を ちゃんと 動かし て ソース 熟読 使う 関数 について は 上 の 検索 方法 で ネット 検索 かけて 関数 も ちゃんと 調べ て おく そのうえで 簡単 な サンプルソース を 作っ て み て やり たい こと の やり方 を 確認 し て から 最後 に 自分 の やり たい こと を やれ ば 自己 解決 できる はず よっぽど 頭 の 性能 が 悪く なけれ ば だ けど *** つまっ たら 返信 し て くれれ ば ヒント アドバイス は し ます 上 の 手順 で やれ ば その 必要 なく なる はず だ けど *** 昔 は 上 の 方法 で 私 が 調べ て 実際 に 改造 し て 動作 確認 し て から 回答 し て た けど それ する と 私 も 大変 だ し 君 も い つ また で たっ て も 調べる 能力 あがら ず 両者 不利益 な ので 私 の 調べる 手順 を 回答 する 方針 に 方針 転換 し まし た これ だ と 私 も 楽 だ し 、 君 も 自分 で 調べ れる よう に なっ て 今後 効率 良く なる ので でき たら 上 の 手順 を 試し て 欲しい 今 は 忘れ てる けど 上 の 手順 で 実際 君 の やり たかっ た こと を 自作 の ゲーム で やれ た ので この 方法 で 出来る の は 確認 ずみ ( 他 の 使っ た こと ない ツール でも 色々 上 の 方法 で 調べ て でき て るし ) *** マニュアル ある 場合 は 全文検索 できる よう に し とく と 便利 本家 の マニュアル が ある なら それ を 全文検索 ( Namazu とか ) で できる よう に し とく の も 良い *** ゲームエンジン 使う 方 が 良い よう に 思う ゲームエンジン とか つかう と テクスチャ はるの が 楽 に なる よう な 仕組み が 用意 さ れ てる の も ある かも しれ ない ので 、 それ 使う の も 良い かも そういう の が 用意 さ れ て なく て も OpenGL を サポート し てる ゲームエンジン ある ので それ 経由 で OpenGL 使う 方 が 楽 だ と は 思い ます ( SFML とか ) 
＞ java で 将棋 の プログラム を 作っ て い ます 。 ＞ はじめて まだ 1 ヶ月 くらい な の です が 、 どれ ぐらい の 物 を 作ろ う と し て いる の か は 知り ませ ん が 将棋 ・ チェス など の コンピューター 戦 の プログラム は キャリア １ ０ 年 の 人で も 作れ ませ ん ので ” 人間 ＶＳ 人間 ” で 作り ましょ う ＞ コンソールアプリケーション という か 、 ＞ コマンドプロンプト で 実行 結果 を 表示 する 種類 の プログラミング の 勉強 を し て い ます 。 ＞ CUI という ん です か ？ そう です 、 ＣＵＩ の プログラム です ” コンソールアプリケーション の プログラム ・ ＣＵＩ で 作っ た ” など と 言え ば 伝わり ます ＞ 文字 を 上下 逆転 さ せ て 表示 さ せる こと って でき ない ん でしょ う か ？ ＞ コマンドプロンプト に は 上下 逆転 さ せ た 文字 を 表示 する 昨日 は ない ん でしょ う か ？ ＣＵＩ は キーボード から 入力 できる 文字 しか 表示 が 出来 ませ ん ので 反転 表示 は 出来 ませ ん 角 ↓ 歩 ↑ 飛 ↑ こう やっ て 向き を 表し たら 駄目 です か ？ 
public class Sample { int [] a = new int [ 7 ];// 0 ~ 6 の 要素 の 配列 を 宣言 int [] b = { 0 , 0 , 0 , 0 , 0 , 0 , 0 };// 0 ~ 6 の 要素 の 配列 を 、 値 を 指定 し て 宣言 public static void main ( String [] args ){ for ( int n = 0 ; n < a . length ; n ++) a [ n ] = 0 ; //--- ここ に 処理 --- }// ENDmain }// END class 上 の 例 の 場合 は a と b は ( 別 の オブジェクト を 指し て い ます が ) 同値 です 。 クラス に 直接 書き込む こと が できる の は 、 変数 の 宣言 と メソッド の 宣言 です 。 変数 の 宣言 では 型 の 宣言 から 「 ;」 まで 書く こと が でき ます 。 値 を 代入 する こと が でき ます 。 メソッド の では 、 {} の中 に 処理 を 書く こと が でき ます 。 つまり 、 for 文 や if 文 を クラス に 直接 書き込む こと は でき ませ ん 。 初期化 の 方法 は 場合 によって 使い分け て ください 。 ・ 要素 数 が 少ない 場合 は 、 宣言 時 に すべて の 値 を 書き込む 。 { 0 , 0 , 0 , 0 } みたい な やつ 。 ・ コンストラクタ で も いい けど 、 宣言 が 面倒 な 場合 は main () に 直接 初期化 処理 を 書く 。 ・ main () が 存在 し ない クラス を 扱う 場合 は コンストラクタ を 使う 。 ・ 複数回 初期 化 する 場合 は 以下 の よう な メソッド で 。 void ini ( int [] data , int num ){ for ( int n = 0 ; n < data . length ; n ++) data [ n ] = num ; } 配列 は 戻り値 で 返さ なく て も 直接 操作 さ れる ので 、 void 型 で いい です 。 一番 上 の 例 で 呼び出す なら ini ( a , 0 ); で 初期化 でき ます ね 。 順位 付け の 処理 で 初期 値 を 1 に し たい とき は ini ( a , 1 ); など と 引数 を 変え て しまえ ば いい です 。 
もしかして: javascript java で 知恵袋 の 検索 を かけ て いる 人 は [ java - javascript ] みたい に javascript は 検索 に かから ない よう に し て いる 場合 も あり ます 。 逆 に javascript で 検索 し た い人 は 、 [ javascript ] と 普通に 検索 する ので 、 javascript が 得意 な 人が この 質問 を 見 て くれ ず 、 java が 得意 な 人が 素通り し て いる 可能性 が 高い です 。 構文 的 に javascript に 見える ので 、 追記 する 形 で いい ので 修正 する こと を お勧め し ます 。 間違っ て い たら すみません 。 
i386 の パス を 見 に 行っ て いる 時点 で jdk は 32 bit コンパイル に なっ て い ます 。 32 bit コンパイル で 64 bit 指定 し たら 何 が 起こる の か わかり ませ ん し 、 試し た こと も ない です し 、 エラー が 出て も 仕方 ない か と 思い ます 。 エラーメッセージ から Windows 環境 と 思わ れ ます ので 、 Pleiades の Java full edition を 入れる の が 楽 か と 思い ます 。 https :// mergedoc . osdn .jp / こちら は jdk を ダウンロード し なく て も 自前 で 内包 し て おり 、 コンパイル 時 に 環境 指定 で 好き な バージョン で コンパイル できる など 、 「 扱い やすい 開発 環境 」 として は 便利 です 。 
大手 SIer の PMO ( プロジェクト ・ マネジメント ・ オフィス ） の 下っ端 の 担当者 が まかさ れ そう な 中規模 案件 として は 、 あり そう な 規模 でしょ う 。 > 俺 、 いきなり 200 人 の リーダー に なっ ちゃっ て さぁ ＞ 超 大手 SIer ( システムインテグレーター ) でも 最初 は 開発 を やる と 思い ます し イイエ 、 何処 か に 納入 する よう な プログラム を 開発 を OJT ( オンザジョブトレーニング ） さ せる 必要 も 無い の が 、 大手 SIer です 。 また 、 SIer の 育て 方 として 、 PMBOK 等 の 資格 習得 要件 を 満たさ せる ため に も 「 入社 直後 から ５ 年 程度 かけて 中規模 以上 の プロジェクト に 参画 」 等 、 普通 の こと に なっ て いる と 思い ます 。 なにせ 、 PMBOK 等 の 資格 保有 者 数 は Sier という 組織 の カタログ ・ スペック みたい な 指標 です から 。 PMO で は 、 プログラミング ・ スキル と いう より 、 「 お客様 言葉 を 、 人月 や 原価 に 換算 できる ボキャブラリ の 多 さ や 、 原価 見積り に ” 揺るぎ の 無い 自信 ” が もてる 経験 」 が 重要 です 。 さらに 、 PMO の 下っ端 の 担当者 は 、 「 今 何 が し の 工程 で 、 その 工程 成果物 は ｘｘ を 数え上げれ ば 良い 。 ２ ０ ０ 人 くらい の 開発者 の 中 を 走り回っ て ｘ ｘ の 数 の 出来高 を 聞い て 回っ て 、 EXCEL に 入力 し て 報告 し て ネ 」 と 言わ れる 、 体力 勝負 でしょ う 。 PMO の 中堅 に も なれ ば 「 工程 成果物 の 出来 具合 から 、 １ ヶ月 程度 の 先 の 状況 を 見積もっ て 、 工程 の 遅れ を 発見 し 、 対策 立案 」 という こと も する でしょ う が 、 そこ に は プログラミング の スキル は 重要 で は なく 、 「 プログラマ と 対話 し て 、 対策 案 を 検討 できる 」 為 の 技術 的 な コミュニケーション が できれ ば 良い だけ で 、 プログラム を 作る 能力 は 重要 で は ない （ ただ 、 プログラム 体験 が 、 プログラマ と 対話 を スムーズ に する 程度 ） 
> JAVA _ HOME は C :\ Program Files \ Java \ jdk 1 . 8 . 0 _ 73 \ bin JAVA _ HOME は 設定 し なく て も ふつう は 大丈夫 あえて 設定 し て も bin は いら ない です ね C :\ Program Files \ Java \ jdk 1 . 8 . 0 _ 73 \ もう一度 インストール 方法 を 確認 し ましょ う https :// akira - watson . com / android / adt - windows . html 
一つ 気 に なる こと が ある の です が 、 エラー と なる の は 、 全て の 行 でしょ う か ？ それとも 特定 の 行 でしょ う か ？ もし 、 先頭 の 行 だけ で エラー が 発生 する の で あれ ば 、 最初 の 「 1 」 の 前 に 見え ない 文字 が ある の かも しれ ませ ん よ 。 よく ある の が 、 ファイル を 作成 し た エディタ によって は 、 文字コード を UTF-8 で 保存 し た とき に 、 先頭 に 「 BOM （ Byte Order Mark ） 」 が 自動的 に 追加 さ れ て しまい 、 Java で その ファイル を 読み込ん だ とき に 、 BOM を 処理 でき ず に エラー に なっ て しまう という もの です 。 特に 、 Windows の メモ帳 で UTF-8 の ファイル を 作成 する と 、 BOM が 付い て しまい ます 。 ファイル に BOM が 付い て しまっ て いる 場合 は 、 バイナリエディタ 等 で BOM を 削除 する か 、 BOM を 追加 し ない エディタ で ファイル を 作成 する か 、 プログラム 側 で BOM を 適切 に 処理 する よう に する か 、 に なる と 思い ます 。 詳しい こと は 「 Java BOM 」 で 検索 し て ください 。 参考 サイト ： BOM 付き UTF-8 の トラブル http:// yanok .net / 2013 / 03 / bom - utf-8 . html BOM つき UTF-8 へ の その 場 しのぎ の 対処 http:// yanok .net / 2014 / 07 / bom - utf-8 - 1 . html 
Eclipse は Android の 開発 から サポート 除外 さ れ た から 。 それ くらい の 事 を 事前 に 調べ きれ て ない よう じゃ アプリ 開発 なんて 無理 だ から 。 
はっきり 明記 さ れ て い ます 。 「 Windows 10 で は 、 Edge ブラウザ で プラグイン が サポート さ れ ない ため 、 Java は 実行 さ れ ませ ん 。 Java プラグイン を 実行 する に は 、 別 の ブラウザ ( Firefox または Internet Explorer 11 ) に 切り替え ます 。 」 ブラウザ を Windows 10 標準 の Edge では なく Internet Explorer 11 を 使っ て 下さい 。 （ 「 他 の 操作 」 から 起動 し て 下さい 。 ） 
人 に 寄っ て 学習 方法 は まちまち だ と 思い ます が 、 入門 が 終わっ た あたり で 、 貴方 にとって 実践 は アプリ 作成 らしい ので 、 その 参考書 を 購入 す べき だっ た ん で は ない です か ね ？ 
確か に 、 見にくい です が 、 とりあえず 、 int chkCdn ( String s , String s2 ){ return ( s.l ength ()-( s . replase ( s2 ,""). length ()))/ s2 . length () } で どう です か ？ 他は わかり ませ ん 
指定 し てる ID 、 パスワード が 違っ て ん だろ 。 認証 で 拒否 られ てる 感じ だ ぞ 。 
誰 が 書い た か 知ら ない けど 、 質問 文 の 正規表現 は 綺麗 な 正規表現 と は 言え ない なぁ … 。 何故か 否定 先読み 使っ て 組み立 て てる けど 、 普通に 肯定 先読み で いい し そっち の が 意味 も 分かり やすい 。 感嘆符 に は エスケープ 必要 ない のに エスケープ し てる って 言う ミス も し てる ね 。 不慣れ が 人 が 書い た 正規表現 っぽい 。 ↓ が 綺麗 に 書け てる と 思う から 、 これ 参考 に し て 改造 し て くと いい よ 。 http:// stackoverflow . com / questions / 3802192 / regexp - java - for - password ... 
java . lang . Math に pl なんて フィールド は あり ませ ん ので 、 □ に 何 を 入れ て も エラー に なり ます 。 よって 、 解 は あり ませ ん 。 
Mac の 事 は 分かり ませ ん が 。 pleiades _ 1 . 6 . 0 .zip を ダウンロード し た の でしょ う か ？ その 場合 、 解凍 する と pleiades _ 1 . 6 . 0 という ディレクトリ が 展開 さ れ て その 中 に features と plugins という ディレクトリ が あり ます 。 Eclipse を インストール し た ディレクトリ を Eclipse _ HOME と する と Eclipse _ HOME に も Features と plugins という ディレクトリ が あり ます 。 pleiades _ 1 . 6 . 0 / features の 中 の jp . sourceforge . mergedoc . pleiades という ディレクトリ を Eclipse _ HOME / features の 中 に コピー し て 、 pleiades _ 1 . 6 . 0 / plugins / jp . sourceforge . mergedoc . pleiades を Eclipse _ HOME / plugins に コピー し ます 。 Pleiades の Readme に も 書い て あり ます が 、 Eclipse _ HOME / eclipse . ini の 最終 行 に 下 の 2 行 を 追加 する 必要 が あり ます 。 (/ Application s / Eclipse . app / Contents / Eclipse の 部分 は 実際 の Eclipse _ HOME の パス に 置き換え て ください ) - Xverify : none - javaagent :/ Application s / Eclipse . app / Contents / Eclipse / plugins / jp . sourceforge . mergedoc . pleiades / pleiades . jar 
Mac で 動か ない という こと は 聞い た こと が ない です ね 。 とくに java に は 環境 依存 し ない という 特徴 が あり ます ので 、 その 可能性 は あまり 考え たく ない です 。 ImageIcon icon = new ImageIcon ("[ アイコン パス ]/ icon . png "); [ JFrame オブジェクト ]. setIconImage ( icon . getImage ()); この コード で 動か なけれ ば 、 パス の 指定 が おかしい かも しれ ませ ん 。 package を 指定 し てる 場合 は 、 アイコン の パス の 先頭 に package の ディレクトリ 名 を 指定 する 必要 が ある 可能性 が あり ます 。 正しく 読み取れ て いる か 確認 する なら 、 System . out . println ( icon . getIconWidth ()); の よう に し て 適当 な 値 を 取り出し て みる と いい です 。 ( 0 が 表示 さ れ て い たら 失敗 だっ た か な ) もしくは 、 アイコン 画像 の 形式 や サイズ が おかしい 可能性 も ある ので 画像 自体 の 選別 も 検討 し て み て ください 。 自分 の 環境 で は PNG 形式 、 サイズ 32 × 32 で 動き まし た 。 バグ 取り は 大変 でしょ う が がんばっ て ください 。 
＞ 現在 業務 アプリケーション を 作成 し て いる プログラマ です 。 web 業界 へ 転職 を 考え て おり 、 j 自分 で 勉強 でき ない 初心者 を 採用 する 会社 は ない ので 転職 は やめ た ほう が いい ですよ 
SNS を 実装 する のに 、 http プロトコル を 使わ ない つもり です か 。 そうなると 専用 の アプリ を 使わ ない と 使え ない もの が できあがり ます が よろしい です ね 。 その 前提 で 話す と 、 サーバー 側 で 着信 待ち する ポート は １つ だけ です 。 質問 さ れ て いる 内容 は tcp/ip プロトコル 通信 の 基礎 の 基礎 な 話 で 、 これ を 知ら ず に ソケット プログラミング は 無謀 と しか 思え ませ ん 。 「 通信用語の基礎知識 」 レベル で いい ので 一 通り 学ん だ ほう が いい です 。 簡単 に 説明 する と 、 サーバー 側 が 空ける ポート は １つ だけ です 。 そもそも クライアント が サーバー に 接続 する に は サーバー の ポート 指定 が 必要 で 、 それ が 複数 あっ たら どこ に つない で いい の か わから なく なり ます 。 その ため 、 そんな 実装 は さ れ て い ませ ん し 、 しません 。 全て の クライアント は その ポート に対して 接続 を 行い ます 。 また 、 TCP/IP コネクション が 成立 する と 、 各 Connect ion に対して 固有 の キー が 振ら れる ため 、 クライアント 間 の 通信 が 混線 する こと は あり ませ ん 。 ポート は ポートマップ の プライベート ポート を 使用 すれ ば 安全 でしょ う 。 https :// ja . wikipedia . org / wiki / TCP % E3 % 82 % 84 UDP % E3 % 81 % AB % E3 % 81 % 8 A % E3 %... 
こんな 感じ に すれ ば よい の で は ない でしょ う か ？ // データベース 接続 Class . forName (" com . mysql . jdbc . Driver "); Connect ion conn = DriverManager . getConnection ( " jdbc : mysql :// localhost / dbmag ? useUnicode = true & characterEncording = Windows-31J "," root "," ssks 3911 "); // PID を 作成 ResultSet r = s . executeQuery (" select count (*) count from tbl _ hoge "); int rno = Integer . paseInt ((( Map ) r . get (" count ")). to String ()); String pid = String . format ("% 1 $0 3d ", String ( rno + 1 )); PreparedStatement ps = conn . prepareStatement (" insert into tbl _ hoge values (?, ?)"); ps .s et String ( 1 , pid ); // ← ここ を pid に 変える ps .s et String ( 2 , str ); ps . executeUpdate (); 
Zenhan 、 Kouhan の 両 クラス の メソッド は static で 書い て いる こと と 、 どちら も comment パッケージ という Main クラス と 異なる ところ に 書い て いる 。 以上 の こと から 、 Zenhan と Kouhan の メソッド に は Public と 付け ない と アクセス でき ませ ん 。 書い て い ない と 同じ パッケージ 内 だけ の アクセス しか でき ない ので 。 Main クラス で は 、 両方 の クラス を インポート し て 、 static メソッド だ から クラス 名 . メソッド 名 と 書け ば 良い の で は 。 Main クラス ： import comment . Kouhan ; import comment . Zenhan ; public class Main { public static void main ( String [] args ) throws Exception { Zenhan . doWarusa (); Zenhan . doTogame (); Kouhan . callDeae (); Kouhan .s howMondokoro (); } } Zenhan クラス ： package comment ; public class Zenhan { public static void doWarusa (){ System . out . println (" きなこ で ござる 。 食え ませ ん の 。 "); } public static void doTogame (){ System . out . println (" この 老いぼれ の 目 は ごまかせ ん ぞ "); } } Kouhan クラス ： package comment ; public class Kouhan { public static void callDeae (){ System . out . println (" え ぇ 、 こしゃく な 。 曲者 だ ！ であえ い ！"); } public static void showMondokoro () throws Exception { System . out . println (" 飛車 さん 、 角 さん 。 も ういい でしょ う 。 "); System . out . println (" この 紋所 が 目 に 入ら ぬ か !"); Zenhan . doTogame (); } } 
x [ i ]=( int )( x 0 + Math .☐( rd )* r ); y [ i ]=( int )( y 0 - Math .☐( rd )* r ); は x [ i ]=( int )( x 0 + Math . cos ( rd )* r ); y [ i ]=( int )( y 0 - Math .s in ( rd )* r ); だ と 思い ます 高校 数学 を 復習 し ましょ う 
同じ マシン 上 なら gnuplot を 外部 プロセス として 起動 すれ ば よい でしょ う 。 外部 プロセス 起動 http:// www . ne.jp / asahi / hishidama / home / tech / java / process . html 
Consumer Key と Access Token が ちゃんと 設定 さ れ て ない と そう なる 。 ファイル が 読み込め て ない か 、 おかしな 値 を 設定 し てる か どっち か 。 
「 Ver 確認 」 が でき なく て も 、 正常 動作 する なら 、 それ で よい の で は ？ たぶん 、 エクスプローラ で c :\ Proguram Files に アクセス すれ ば 、 \ jav \ jre 1 . 8 . 0 _ 71 が 有る でしょ う 。 
x10 2 z 3 . 0 x1 02 z - 2 . 5 x 97 . 0 z 0 ノーズ R は 無視 し て ます が 。 安全 について は ご 自信 で 確認 の 上 実行 ください 。 
IPアドレス と ポート 番号 が 分かれ ば 通信 可能 です 。 その 意味 で ローカル 通信 と 全く 変わり ませ ん 。 問題 が ある と すれ ば 、 その 辺 の レンタルサーバ で は ファイアウォール により ポート 番号 が 制限 さ れ て いる こと でしょ う 。 
大学 、 専門 で ゲームプログラミング 講師 経験 者 です 。 なぜ 、 NetBeans な の でしょ う か ？ ネットゲーム が 目的 でしょ う か ？ 
＞ どっか で 間違え てる かも しれ ない ので 。 なにか 間違え そう な 手順 が あっ た という こと です か ？ まずは " tomcat 起動 し ない " こんな 感じ で ググっ て から で 遅く な さ そう です 。 よく ある の は 、 ポート の 競合 です 。 話 は それ まし た が 、 質問 の こたえ として は 、 ・ 8 u 71 重大 な 脆弱性 を 解消 し た バージョン ・ 8 u 72 8 u 71 の アップデート に 加え て 、 バグ 修正 など を 含め た バージョン その他 の もの は 文字通り 、 デモ 、 サンプル です 。 よほど の こと が 無けれ ば 、 8 u 72 を インストール し ます 。 よほど の こと って の は インストール する ハード が 何らかの システム を 動かし て い て 、 この アップデート で 不具合 が 出る かも しれ ない など です 。 これ は 自己責任 で 。 
たぶん 、 エラー が 発生 し て いる の で は 思い ます ね 。 Concole クラス で 例 が を 投げ て いる か と 。 通常 、 コンソール で 確認 する なら Scanner クラス を 使う ほう が 便利 かも ね 。 下 の コード で 試し て み て ください 。 import java . util .S canner ; public class Sample { public static void main ( String [] args ) { int a , b ; Scanner in = new Scanner ( System . in ); System . out . println (" 2つ の 値 で 足し算 を 行い ます 。 "); System . out . print (" 1つ 目 の 値 を 入力 ："); a = in . nextInt (); System . out . print (" 2つ 目 の 値 を 入力 "); b = in . nextInt (); System . out . println ( a +" + "+ b +" = "+( a + b )); in . close (); } } 
Arrays . asList () は 、 引数 に 指定 さ れ た 配列 を List 型 の オブジェクト に 変換 する 命令 。 sort _ target は String 型 の 配列 だ から 、 Arrays . asList ( sort _ target ) の 結果 は 中身 が String の List に なる 。 for ( String output : Arrays . asList ( sort _ target )) { だっ たら 、 String 型 の 配列 の sort _ target を 中身 が String の List に 変換 し て 、 その List に 入っ て いる String の データ を ループ する 、 という 命令 に なる 。 for ( String output : sort _ target ) { で あれ ば 、 String 型 の 配列 の sort _ target 内 の データ を ループ する という 命令 だ から 、 どちら も 結果 は 変わら ない し 、 普通 は for ( String output : sort _ target ) { で やる 。 Arrays . asList ( sort _ target ) を 入れる 意味 は 無い 。 
エラー の メッセージ 内容 は 何 です か ？ Non WritableChannelException な の か 、 IllegalArgumentException な の か 、 それとも IOException な の か 。 その 際 の メッセージ は なん です か ？ また 、 size , in の 値 を System . out し た とき 、 なんと 表示 さ れ ます か ？ 
いくつ か 質問 が あり ます 。 １ ． 自分 の PC で サーバ を 立て て い た の か 。 （ マイクラ を 実行 する PC と サーバ の PC が 同一 ？ ） ２ ． 自分 以外 の 人 は サーバ に アクセス できる の か ？ （ ほか の 人 は 入れる けど 自分 だけ 入れ ない ？ ） ３ ． サーバ の バージョン と クライアント の バージョン は 合っ て いる か 。 （ 異なっ た バージョン だ と 入れ ない 場合 が あり ます 。 ） 
自分 で デバッグ すれ ば わかる でしょ ？ テストケース つくっ て 検証 する まで が 問題 です （ きっと ） 
PROTOTYPE な ので 、 コンテナ から インスタンス 取得 時 に 作成 さ れ ます 。 と いっ て も わかり にくい ので 、 DI さ れる 際 に 新た に インスタンス が 作成 さ れ て インジェクション さ れる 時 です 。 
っていう か 、 状態 が 違う 。 例 に 出 て いる やつ は 文字列 。 普通 は 、 if ( rannsu == 1 ){ }... みたい に する 。 で 、 範囲 が ある 場合 は && とか の 演算子 で 処理 。 1 ～ 20 っていう の は 1 以上 20 以下 の 意味 です ね 。 これ を 数学 （ ？ ） で あらわす と 、 x ≧ 1 , x ≦ 20 これ を && で つない で 、 x >= 1 && x <= 20 これ を 条件 式 と する 。 if ( x >= 1 && x <= 20 ){ // 1 ～ 20 まで の 数字 } els .... という 風 に やる 。 あるいは 乱数 の 範囲 を 1 ～ 5 に する と か 。 
> どなた か この 問題 解ける 方 お願い 致し ます 。 学校 に 確認 し ます 。 名前 と 学校 を 書い て ください 。 それ より 何で ID 非公開 で 質問 し てる の ？ 悪用 目的 ？ 
java . exe は コマンドライン アプリケーション です 。 jar ファイル を 開き たい の で あれ ば 、 コマンドプロンプト ( 検索 で cmd ) を 起動 し て java - jar jar ファイル 名 で 実行 し て ください 。 
何 の 言語 か はっきり し ない の と 、 Turtle クラス が よく わから ない ( タートル グラフィックス とかいう やつ でしょ う か ) ので 自信 は ない の です が 、 void run () { } で くくる 必要 が 無い 気 が し ます 。 対応 する カッコ とともに 除去 すれ ば 、 if ( key () == 49 ) の 条件 に 当てはまれ ば sleep ( 0 . 25 ) 以降 が 実行 さ れる でしょ う 。 また 、 キーボード の 他 の キー に関する 処理 も 追加 し たけれ ば 、 if ( key () == 49 ){ の カッコ に 対応 する 閉じ カッコ 、 つまり 最後 から ３つ め の 閉じ カッコ から 以下 の よう に if を 生やし て いけ ば いい です 。 if ( key () == 49 ) { ... } else if ( key () == 50 ) { ... } else if ( key () == 51 ) { ... } 
CF : http:// futurismo . biz / archives / 2833 それ は それ と し て 、 古い システム 保守 目的 で 仕方 なく 行う 以外 、 いまや 誰 も 使わ ない Struts を 新規 に 勉強 する の なら 、 あまり 深入り し ない よう に し た ほう が いい かも 。 
public void actionPerformed ( ActionEvent ev ){ Circle circle = new Circle (); で 、 呼び出さ れる たび に 新しい Circle を 使っ て いる から で は ない か と 
データベース に も 色々 な 種類 が 有り ます が 、 一応 リレーショナル データベース を 使う として 回答 し ます 。 リレーショナル データベース は データ を テーブル に 登録 し SQL を 使っ て 操作 し ます 。 テーブル の 設計 次第 で SQL 文 も かわり ます が 、 この 場合 は 多分 最小 値 又は 最大 値 と 返す 値 で 持て ば 良い と 思い ます 、 最大 値 を 持つ と すれ ば 値 と の 文字 の ペア で 5 と E 、 10 と D 、 ２ ０ と C 、 ３ ０ と B 、 ５ ０ と A と 成り ます 。 求め たい 物が ２ ５ の 場合 は SQL 文 で 25 以上 で 一番 小さな 値 30 を 持っ て いる B が 求める 文字 です ので 。 select 文字 from tbl where 値 = ( select min ( 値 ) from tbl where 値 >= 25 ) で 出来 ます 。 別 の 物 は テーブル の ５ と E の データ を delete すれ ば 対応 出来 ます 。 
http:// blog . oyukinp . com / shiroto /? p = 12 これ か ？ 
startNum が 最初 の 数値 10 、 endNum が 最後 の 数値 100 と 入力 し て 、 結果 が 5 , 005 に なる という こと は 、 10 から 1 ずつ 加算 し て 100 に なる まで の 合計 を while 文 で 行う 処理 という 問題 です 。 while 文 を みる と 条件 が 「 i <= endNum 」 と なっ て いる ので 、 変数 i が endNum の 値 に 達する まで 繰り返す という こと は 、 最初 の 数値 が 最後 の 数値 に 達する まで 繰り返せ ば 10 、 11 、 12 ・ ・ ・ ・ 98 、 99 、 100 の 数値 が 加算 でき ます 。 1 ） は 、 変数 i に 最初 の 数値 の 変数 を 代入 し て あげれ ば 良い です 。 while 文 で 、 sum += i ； と さ れ て いる ので 、 最初 は sum に 最初 の 数値 10 が 代入 さ れ ます 。 次 は 、 11 を sum に 加算 さ せ なけれ ば いけ ない ので 、 2 ） は 変数 i に 1 を 加算 さ せる インクリメント を 書け ば よい です 。 表示 結果 は 「 5 , 005 」 という 書式 を printf で 表示 さ せ て い ます 。 printf ( 書式 , 値 ) です が 書式 は 指定 さ れ て いる ので 、 3 ） は 合計 の 変数 sum を 指定 し て あげれ ば 良い です ね 。 
自前 で その 仕組み を 用意 する しか ない な 。 
