.CommandText = "INSERT INTO db_nukitori(MEASSURE_t) VALUES(TextBox1);" を .CommandText = "INSERT INTO db_nukitori(MEASSURE_t) VALUES(”＆TextBox1.Text & ");" としてみて下さい。
この辺は難しいです。 正直、インターフェースを使ったからといってその後のプログラム変更が最小限になるかはケースバイケースかと思います。 ぶっちゃけた話、業務システム用のプログラムを作っててインターフェースを使ったからその後の修正が楽になるとは言い切れないです。 最初の設計時によほどにうまく設計されていたらあるいはそうなるかもしれませんが、要求仕様が大幅に追加や変更になったら対応できないこともありえます。 javaでのインターフェースの利点としてはSpringなどのフレームワークを使った際に有効になるという点はあります。 Springはインターフェースに対してどの実装クラスを割り当てるかはSpringの設定で変更することができます。 あるクラスに public class ClassA { private InterfaceA instance; と記述していて、InterfaceAを実装したクラスが、ClassB、ClassC、ClassDの3つあった時、Springの設定によりinstanceフィールドの中身をClassB、ClassC、ClassDいずれに割り当てるか自由に設定できます。 Springが生成したClassB、ClassC、ClassDいずれかのオブジェクトをinstanceフィールドに格納してくれるのでプログラム側でnewする必要はありません。 これでたとえば実際の製品にはinstanceフィールドの中身はClassBを、試験段階では試験用のClassCを割り当てるなどの使い方ができます。 この辺はSpringフレームワークの特徴などで時々紹介されます。 ただ、これもそうそううまくいくかどうかは使う人次第です。 教科書に書かれた利点がいついかなる時でも有効になるとは限らないです。
■System.in.read()は「入力ストリームからデータの次のバイトを読み込みます」。 1を入力するとエンターキーを押した改行の分まで含まれて、 49 13 10が入力データになるようです。（13 10が改行コードです。）以下で試しました。 -- System.out.println("年齢を入力してください。"); input = System.in.read(); System.out.println(input); System.out.println(System.in.read()); System.out.println(System.in.read()); -- 2回目のSystem.in.read()は13が返却されるために、質問内容のプログラムでは入力待ちがスキップされてような現象になってます。 ■25行目付近、input2 = Character.digit(input, 10);となってます。 既に入力されているinputの値を使ってます。これは数値となってます。 digitメソッドは第一引数は文字コードするのですが、「文字が指定された基数の有効数字でない場合は、-1が返されます。」 -- ■scannerを使った方が良いと思います。 public static void main(String[] args) throws java.io.IOException{ // TODO 自動生成されたメソッド・スタブ int ret = 0; int ret2 = 0; int input = 0; int input2 = 0; human my = new human(); Scanner scanner = new Scanner(System.in); System.out.println("年齢を入力してください。"); input = scanner.nextInt(); my.setData(input); ret = my.getData(); System.out.print("年齢は" + ret + "です。"); System.out.println(); System.out.println("HPを入力してください。"); input2 = scanner.nextInt(); my.setData2(input2); ret2 = my.getData2(); System.out.println("HPは" + ret2 + "です。"); scanner.close(); }
>> PHPのプログラミングで掲示板が作れるくらいにはなったのですが、初心者卒業くらいのレベルだと思っても良いのでしょうか。 いいんじゃないですかね？サンプル丸写しではなくある程度自力でコードが書けるのであれば身についている証拠です． >> 自分がどのくらいのレベルに居るのかが良く分かりません。 その人によってPHPを使う方向性も全く違ったりするので，単純に答えを出すことはできません． 例えばデザイン寄り，とくにWordpressからPHPを触った人は「ちょっと高級なテンプレートエンジン」だと思っているかもしれませんし，汎用プログラミング言語として「それRubyとかPythonでやればいいじゃん？」と突っ込みたくなるような変態的な使い方をする人だっています．コードはガリガリかけるけどセキュリティなんてまんざらでもない人もいれば，セキュリティに気を配れるけどコードを書くのが遅い人もいます．「もうPHPは極めた！十分！」とふと言いたくなっても，PHP言語の処理系をC言語から作っているえらい人たちを見ると全く力が及んでいない気分になって悲しくなったりもします． 確かに最初の駆け出しレベルでは比較することはできるんですが，ある一定のレベルを超えてくると人それぞれ使い方の個性が発現し，PHP言語という枠の中でも「こっちは得意だけどこっちは苦手…」という分野が出てきて当然なので，一概な比較はだんだんとしにくくなってきます．
順番に書きます ①カンマで区切られた数字の読み方が解らない ファイルに書かれたカンマ区切りのデータを配列データとして読み込む方法を２つ提示します （１）ファイルより１行読み込んで、改行コードを削除した後に ',' で分割する方法 with open('data', 'r') as f: __data = f.readline().rstrip().split(',') print(data) （２）標準ライブラリであるcsv パッケージを使用する http://docs.python.jp/3.5/library/csv.html import csv with open('data','r') as f: __data = csv.reader(f) # py3の場合は list(csv.reader(f)) とする必要あり print(data) この方法の場合は全ての行が読み込まれますので、結果は２重配列にて行毎のデータが出力されます ③（順番が前後しますが）読み込んだ値を文字列から整数値に変える方法が分からない 文字型を数値型に変換するには組み込み関数 int() を使用します。 http://docs.python.jp/3.5/library/functions.html#int また、配列のデータ全てに上記の int() を適用するには 同じく組み込み関数である map() を使用します。 http://docs.python.jp/3.5/library/functions.html#map ２つを合わせるとこのようになります data = ['25', '10', '5'] data = map(int, data) # py3の場合は data = list(map(int, data)) print(data) ②値の数字の数に寄らない一般化の仕方が分からない 配列データに対して累積的に処理を行うには reduce() を使います。 http://docs.python.jp/2/library/functions.html#reduce http://docs.python.jp/3/library/functools.html (reduce は py2では組み込み関数ですが、py3では 標準ライブラリ functools パッケージに移動しております) from functools import reduce # py3のみこれが必要 data = [25,10,5] res = reduce(lambda a,b: (a*b) ,data) print(res) 上記の３つをまとめると、以下のようになります from functools import reduce #py3のみ with open("data", "r") as f: __res = reduce(lambda a, b: (a * b), map(int, f.readline().rstrip().split(","))) print(res)
３回連続、という条件がよく判りません。 A列の2行目,3行目と値を入力し、4行目が入力された時点でユーザーフォームを開きたいのでしょうか？ その場合、ユーザーフォームを閉じた後で5行目を入力した時点で、再び「3,4,5行目に連続して入力した」と見なしてユーザーフォームを開くのでしょうか？それとも一旦ユーザーフォームを開いたら「連続」のカウントをリセットするのでしょうか？ またA2,A3,B3,C3,A4という順に入力した場合は3回連続と見なすのでしょうか？
一例です。 対象シートのシートタブ上で右クリック→コードの表示→サンプルコードを貼り付けてお試しください。 Private Sub Worksheet_Change(ByVal Target As Range) Dim r As Range Set Target = Intersect(Target, Range("A1:A100")) If Target Is Nothing Then Exit Sub For Each r In Target If r = 5 Then MsgBox r.Address(0, 0) & "に【５】が入力されました！" End If Next End Sub
404てことはドキュメントルートがおかしいですね C:¥xampp/htdocs/ ってことでしたが index.htmlはそこに置いてありましたか？ httpd.conf を検索して、そいつの中にdocument root って設定があったと思うので、まず探してください
午前の内容理解したら過去問を解きまくる。 1も同じ方法でいける。 本番はまずアルゴリズムと言語問題、1を解いて2~7の問題をざっと見て解けそうなのからやる。 時間が余ったら全部解いて自信のあるものを記入する。 ちなみに私は今年度前半一発合格しました。
ファイル名なしだとエラーが出るはずなので、そこは分かりません。 とりあえず次のようにして確認してみてください。 IFB (CHKIMG("ファイル名")=TRUE) THEN MSGBOX("見つかりました") ELSE MSGBOX("見つかりません") ENDIF これで、見つかったかどうかは確認できるはずです。
んーと…まず、イベントハンドラはhead内のスクリプトで設置しているので、onclick属性は必要無いですよね。 > data : { > //ここに何かを入れる > } ここで通信先に送るデータを指定できますので、 data : { val: 2015 } このようにkeyとvalueを入れておけば、データとして送られます。もし、例えばp要素が複数あって、clickするp要素によって送るデータを変えるのであれば、 <p data-val="2015">2015</p> <p data-val="2016">2016</p> <p data-val="2017">2017</p> 例えばこのようにdata-*属性を使って独自のデータを埋め込んでおき、 data : { val: $(this).data("val"); } 送るデータをclickされたp要素から取り出すとかとか。
下のように書いて実行してみてください。 printf("aiueo"+2); ヒントです。
おはこんばんにちゎ＊＾－＾)o text-overflow が効かない原因は、 テキストがブロック幅を超えたときに自動改行されてしまっているために、 ブロックの右側の外へはみ出すことが出来ていないからです。 「white-space:nowrap;」を指定しましょう。 ただし、 質問のコードで #block1 に「white-space:nowrap」を追加したばあい、 <p> の中身のテキストは右側に隠れてちゃんと途切れますが、 「text-overflow」が効いている状態ではありません。 単に、 #block1 の「overflow: hidden」で隠れているだけです。 「text-overflow」は、 適用させたいテキストが入っている直属のブロックに指定しないと 効きません。 今回の場合、 ▼──────── ああああああああ...以下続きます ────────▲ に「text-overflow」を適用したいので、 それの直属の親ブロックは <p> です。 なので、 <p> 要素に「text-overflow」を設定しないといけませんね'd(・ω・＊ ▼──────── #block1 p{ width: 100%; white-space: nowrap; overflow: hidden; text-overflow: Ellipsis; } ────────▲
有りがちなのは、 ・必要階層数だけ再帰呼出でループ変数を複製 ・最初から必要階層数だけのループ変数を配列持ち の何れかでは。 例として、２進数３(複数)桁をループで 列挙するコードを挙げてみます。 [VBScript/VBA/VB.Netの種別が不明なので VBScriptで記述。他は高機能版なので変換可] ''http : //codepad.org/n0aMREJ8#コードは後述# Main01では、フツーにi,j,kの３つのループ 変数を使って三重ループを組んでいますが、 Main02では、必要回数だけ再帰呼出でループ 変数 i を３つ分 確保して使っています。 Main03では、ループ変数配列a(*)を確保して a(*)をループ内でカウントアップ調整します。 正直言えば再帰型は書き易くともデバッグ他 保守が面倒になりがちなので、可能なら配列 型で書くことをオススメします。 重複・非重複に関わらず、順列 列挙であれば 配列型で多重ループを駆使せずに記述出来ます。 [別言語コードからの移植版で少々煩雑ですが] ''http : //codepad.org/wmhnNDt3#コードは後述# ''http : //codepad.org/n0aMREJ8#２進数３桁を列挙# Option Explicit Sub Main01 ''直接３重ループ''   Dim i, j, k, lc   For i = 0 To 1     For j = 0 To 1       For k = 0 To 1         lc = Array(i, j, k)         WScript.Echo(Join(lc, ","))       Next     Next   Next End Sub Sub Main02(n, m, o) ''再帰型多重ループ''   Dim i   If n <= m Then     WScript.Echo(Mid(o, 2))   Else     For i = 0 To 1       Call Main02(n, m + 1, o & "," & CStr(i))     Next   End If End Sub Sub Main03(n) ''非再帰型多重ループ''   Dim i, j, a()   ReDim a(n - 1)   For i = 0 To n - 1     a(i) = 0   Next   i = 0   Do While 0 <= i     WScript.Echo(Join(a, ","))     i = n - 1     Do While 0 <= i       a(i) = a(i) + 1       If 2 <= a(i) Then         a(i) = 0         i = i - 1       Else         Exit Do       End If     Loop   Loop End Sub Call Main01 WScript.Echo("--------") Call Main02(3, 0, "") WScript.Echo("--------") Call Main03(3) ''http : //codepad.org/wmhnNDt3#(非)重複順列4Π2,4Ｐ2を列挙# 'Option Explicit Const SS = 1 ''開始番号'' Sub RP(n, r) ''重複順列nΠr''   Dim i, j, o, a()   ReDim a(r - 1)   For i = 0 To r - 1     a(i) = SS   Next   i = 0   Do While 0 <= i     o = ""     For j = 0 To r - 1       If 0 < j Then o = o & ", "       o = o & CStr(a(j))     Next     WScript.Echo(o)     i = r - 1     Do While 0 <= i       a(i) = a(i) + 1       If SS + n <= a(i) Then         a(i) = SS         i = i - 1       Else         Exit Do       End If     Loop   Loop End Sub Sub NP(n, r) ''非重複順列nＰr''   Dim i, j, o, a()   ReDim a(n - 1)   For i = 0 To n - 1     a(i) = i + SS   Next   i = 0   Do While 0 <= i     o = ""     For j = 0 To r - 1       If 0 < j Then o = o & ", "       o = o & CStr(a(j))     Next     WScript.Echo(o)     i = r - 1     Do While 0 <= i And i < n       a(i) = a(i) + 1       If SS + n <= a(i) Then         i = i - 1       Else         For j = 0 To i - 1           If a(i) = a(j) Then Exit For         Next         If j >= i Then           i = i + 1           If i < n Then a(i) = SS - 1         End If       End If     Loop   Loop End Sub Call RP(4,2) WScript.Echo("--------") Call NP(4,2)
> for (var i = 1; i <= school.length; i++) { > $('#gakkou').append('<option value="' + i + '">' + data[school[i]]+ '</option>'); > } オブジェクトを走査するときはfor...inを使ってください。配列と違い、lengthを得られないからです。 jQueryには$.eachがあるので、これを使っても構いません。 $.each(data[school], function(i, v) { $('#gakkou').append('<option value="' + i + '">' + v + '</option>'); }); とか、 for (var i in data[school]) { $('#gakkou').append('<option value="' + i + '">' + data[school][i] + '</option>'); } こんなんでいかがでしょうか。
こちらの「順序論理回路」が参考になるのでは。 https://www.yonago-k.ac.jp/denki/lab/nitta/lecture/E3_digital/note/... (R,S)が逆になっていますが (0,0)→不変 (1.0)→Reset (0,1)→Set とすると (0,0)では不変で(1,0) (1.o)でResetで(0,1) (0,0)で不変なので(0,1) では？
問19が見つかりません。 もし、Ⅳ-19 のデジタルカメラの問題だとすると、 これは物理でも情報でもなく、中学数学の応用問題です。 下図において、A,Bの赤線は画像、 赤字のCは自動車の像、Dは山の像、Eは電柱の像です。 DC：DE＝20：40、OE＝4m の時、OCを求める問題です。 補助線として青線を描けば、計算するまでもなく OC＝2･OE＝2×4＝8m である事は一目瞭然です。
こんにちは <form>で囲むと<form>のネームと<select>や<input>のネームを組み合わせてvalueを取得します。 取得した値とセレクトボックスで選択した値をif文やスイッチ文などで比較します。 比較して合っていればインプットボックスの値を代入します。 <!DOCTYPE html> <html> <head> <title>select name="omosa"</title> </head> <body> <form name="selbox"> <select name="omosa" onchange="ch()"> <option label="選択してください" value="">選択してください</option> <option label="10kg以下" value="103">10kg以下</option> <option label="25kg以下" value="102">25kg以下</option> <option label="50kg以下" value="101">50kg以下</option> <option label="75kg以下" value="100">75kg以下</option> <option label="100kg以下" value="99">100kg以下</option> <option label="125kg以下" value="98">125kg以下</option> <option label="150kg以下" value="97">150kg以下</option> <option label="175kg以下" value="96">175kg以下</option> <option label="200kg以下" value="95">200kg以下</option> <option label="225kg以下" value="94">225kg以下</option> <option label="250kg以下" value="93">250kg以下</option> <option label="275kg以下" value="92">275kg以下</option> <option label="300kg以下" value="91">300kg以下</option> </select> <p>このセレクト内容で91を選択したときは</p> <p>このセレクト内容で92を選択したときは</p> <input type="hidden" name="product_id" value=""> <input type="hidden" name="category_id1" value=""> </form> <script type="text/javascript"> function ch() { //セレクトボックスの値を取得 var sentaku = document.selbox.omosa.value; //比較してinput type="hidden"に値を代入 switch (sentaku) { case "91": document.selbox.product_id.value = "27 /"; document.selbox.category_id1.value = "102"; break; case "92": document.selbox.product_id.value = "26 /"; document.selbox.category_id1.value = "103"; } //alertでinputのvalueを確認 alert(document.selbox.product_id.value); alert(document.selbox.category_id1.value); } </script> </body> </html>
下記のサイトはいかがでしょうか？ http://www.excel-excel.com/vbachair/step1-7.html そのほか「vba デバッグ」でググると様々なサイトがヒットしますので、ご自分で判りやすいサイトを探してみて下さい。
＞簡単に早く高度なプログラムを そんなことできたら誰でも敏腕エンジニアになっちゃいます 実力ある人たちはきちんと基礎から勉強してると思いますよ。
それぞれの単語で検索してヒットする件数を比較しましょう。 世の中でどの表記が多く使われているか分かります。それに合わせれば良いのです。もう一つはアドワーズのキーワードアドバイスツールで検索ボリュームを調べる方法もあります。
sample[1].append(hoge)
LcdLib.h , LcdLib.c を流用していると思われますが ANSEL=0; // digital I/O mode が無い為、RB7 , RB6 がアナログモードのままです 初期設定に追加してみて下さい また main の最後に while(1); // STOP が無いとリセットがかかり、再度 main から始まります。
Sub sample() With Range("B1") .Copy .End(xlDown).Offset(1).PasteSpecial xlPasteValues End With End Sub
問題文を（原文で）示してみて下さい。 「大域変数numには配列tに設定されている要素数が格納されている。」 だと普通、要素の数の事だと思うのですが？
PHP でフォームを受け取る場合は filter_input関数、filter_input_array関数を使います。 クロスサイトリクエストフォージェリを防ぐために以下のようなクラスを作っておきます。 <?php class CSRFValidate { public static function generate() { if(session_status() === PHP_SESSION_NONE) { throw new \BadMethodCallException('Session is not active.'); } return bin2hex(openssl_random_pseudo_bytes(16)); } public static function validate($token, $throw = false){ $success = self::generate() === $token; if(!$success && $throw){ throw new \RuntimeException('CSRF validation failed.', 400); } return $success; } } <input type="hidden" name="token" value="<?=CSRFValidate::generate(); ?>"> これをチェックする場合は if (!CsrfValidator::validate(filter_input(INPUT_POST, 'token'))) { header('Content-Type: text/plain; charset=UTF-8', true, 400); die('CSRF validation failed.'); } session_status()を使っているので session_start()を他のファイルから呼び出す必要があります。
エラーメッセージは何ですか？
エラーが出るのを「恒久的に」防ぐ事はおそらく出来ないと思います。 「いいえ」ボタンを押しまくって無視して下さい。 ソフト自体の動作には影響しません。 【エラーが出る原因】 じつは「苦C」タブのヘルプページの中に「広告」が表示されるようになっているのですが、ソフト自体が古いので広告の中で使用されているスクリプトに対応できずエラーが発生しているようです。つまり、【広告の表示に失敗してエラーが出ている】ようです。 【一時的にエラーが出るのを防ぐ方法】 PCをインターネットから切断した状態でソフトを使用して下さい。そうしますと、広告のスクリプトを読み込めないのでエラーが出なくなります。 (^_^;
少なくともパスとは path でファイルパスのことですよね？ (画像のアンカーポイント間のことではありませんよね？) しかし「画像パスをfor文で回す」とは？？？ 具体的に何をどうしたいのかがわかりません。。。 何をどうしたいのかわからないので スイカ割りのようにやたらめったらと， 思いついたコード例を書いてみます。 === === === === === === 【例１】for文 で変数を回して <img> エレメントを書き込み <html> <head> <title>Sample 1</title> </head> <body> <script type="text/javascript"> for(var i=1; i<=15; i++){     document.write('<img src="' + i + '.jpg">'); } </script> </body> </html> === === === === === === 【例２】for文 で変数を回して <img> エレメントを作成＆配置 <html> <head> <title>Sample 2</title> <script type="text/javascript"> window.onload = function(){     for(var i=1; i<=15; i++){         var pic = document.createElement("img");         pic.setAttribute("src", i + ".jpg");         document.body.appendChild(pic);     } }; </script> </head> <body> </body> </html> === === === === === === 【例３】最初の画像を最後に回す(ローテーション) <html> <head> <title>Sample 3</title> <script type="text/javascript"> var pics = new Array(); window.onload = function(){     for(var i=0; i<=14; i++){         pics.push(document.getElementsByTagName("img")[i].src);     }     pics.push(pics.shift());     for(var i=0; i<=14; i++){         document.getElementsByTagName("img")[i].src = pics[i];     } }; </script> </head> <body> <img src="1.jpg"> <img src="2.jpg"> <img src="3.jpg"> <img src="4.jpg"> <img src="5.jpg"> <img src="6.jpg"> <img src="7.jpg"> <img src="8.jpg"> <img src="9.jpg"> <img src="10.jpg"> <img src="11.jpg"> <img src="12.jpg"> <img src="13.jpg"> <img src="14.jpg"> <img src="15.jpg"> </body> </html> === === === === === === 【例４】最後の画像を最初に回す(ローテーション) <html> <head> <title>Sample 4</title> <script type="text/javascript"> var pics = new Array(); window.onload = function(){     for(var i=0; i<=14; i++){         pics.push(document.getElementsByTagName("img")[i].src);     }     pics.unshift(pics.pop());     for(var i=0; i<=14; i++){         document.getElementsByTagName("img")[i].src = pics[i];     } }; </script> </head> <body> <img src="1.jpg"> <img src="2.jpg"> <img src="3.jpg"> <img src="4.jpg"> <img src="5.jpg"> <img src="6.jpg"> <img src="7.jpg"> <img src="8.jpg"> <img src="9.jpg"> <img src="10.jpg"> <img src="11.jpg"> <img src="12.jpg"> <img src="13.jpg"> <img src="14.jpg"> <img src="15.jpg"> </body> </html> === === === === === === 【例５】最後の画像を最初に連続で回す(連続ローテーション) <html> <head> <title>Sample 5</title> <script type="text/javascript"> var intId; var pics = new Array(); function rotareSrc(){     pics.unshift(pics.pop());     for(var i=0; i<=14; i++){         document.getElementsByTagName("img")[i].src = pics[i];     } } window.onload = function(){     for(var i=0; i<=14; i++){         pics.push(document.getElementsByTagName("img")[i].src);     }     intId = setInterval("rotareSrc()", 1000); }; </script> </head> <body> <img src="1.jpg"> <img src="2.jpg"> <img src="3.jpg"> <img src="4.jpg"> <img src="5.jpg"> <img src="6.jpg"> <img src="7.jpg"> <img src="8.jpg"> <img src="9.jpg"> <img src="10.jpg"> <img src="11.jpg"> <img src="12.jpg"> <img src="13.jpg"> <img src="14.jpg"> <img src="15.jpg"> </body> </html>
InputBox MsgBox If ～ Then ～ ElseIf ～ Then ～ Else ～ End If 辺り習っている筈で、VBAが分かって いれば出来る。習っていて二十歳近く なのに出来ないなら、もう根本的に 不可 認定されるべきかと。
addMemoでは、Data[]の末尾に追加しますから、 Data[]末尾のインデックス「19」がMemo[]に 格納されます。 Data[]の末尾は、Data[]内の要素の個数と 一致しますから、DataLenが答えです。
>vvkv65885さん2016/8/623:15:55 >submitのボタンを押したときの処理と画面をポップアップウインドウでやって、そのあとその画面を自動で閉じるようにはできますか？ 出来ますよ。
>分かりやすく説明もしていただけるとより助かります。 判りやすく説明するには習ったことを開示する必要があります。 まずは、そこから始めてみてください。
アルゴリズムの基本が分かっていて、他の言語を知っている状態ならば、ネットで調べれば十分かもしれません。命令の置き換えと、VBAに特化した命令を調べるだけで済みますから。 しかし、何も下地がない状態では、かえって混乱を招きかねません。せっかく教本があるのですから、まずは全部読んで、試してみるのが良いと思います。 その後で、扱い慣れたと思ったら、自分で適当な例題を定めて作ってみてください。そこまで来れば、効率良くネットで調べられると思います。 例題ですが、知恵袋で回答を試みるのも一案ですよ。
>oshieteyo649さん2016/8/613:20:03 >Movable Type Pro version 4.27-jaで行間を狭くする方法を教えてください。 これだけしか開示できない場合は、フォントサイズを小さくする事くらいだと思います。
囲碁は終盤(終局)にかけて序盤戦より変化が狭まってきます なので質問にあるようにソフトやハードが発達すれば水源から何処へ水が流れていくのか後を追えるかもしれませんが 将棋で逆算とは海から水源を探すようなもので正しいものを追えるとは思えません
表示しないのではなく、更新しないのです。つまり値の変更があってもノーケアです。何かの理由で変になってもそのままです。 タイトルバーはおそらく手はないと思います。
おはこんばんにちゎo(＾－＾＊ ■■■ リアルタイムで監視 ■■■ 監視したい変数が、 どういう使われ方をしているのによりますが、 大抵の場合は、 その変数が変更されるコードが書かれている位置で監視できます。 まず、 変数の値を表示するためのブロックを、 HTML で適当な位置に用意します。 style 属性で「position:fixed」を使えば、 変数の表示を左上に固定できます。 /──────── <div id="variable_view" style="position: fixed; left: 0px; top: 0px; z-index: 9999;" ></div> ────────/ あとは、 Javascript のコードで、 変数が変更されるコードが書かれた場所で、 /──────── document.getElementById("varialbe_view").innerHTML = 変数; ────────/ これで、 リアルタイムで変数の変化が監視できます。 ■■■ 確認したいときだけ監視 ■■■ リアルタイムで監視する必要がないのであれば、 Google Chrome や FireFox の開発者ツールでも、 変数の値を確認できます。 Google Chrome であれば、 [ F12 ] キーで開発者ツールを開いたあと、 いちばん上のメニューで「source」のタブを開けば、 「Watch」っていう欄が見つかるので、 その「Watch」のタブを開きます。 そこには、 ページで使われている変数の一覧が、 階層ツリー状に表示されているので、監視したい変数を探しましょう。 監視したい変数がそこにない場合は、 「Watch」欄の上側にある「+（add expression）」のボタンから、 監視したい変数を追加しましょう。 「Watch」欄に表示されている変数は、 リアルタイムで値の更新はされません。 欄の上側にある更新ボタンを押したときだけ、その表示値が更新されます。
おはこんばんにちゎ（＾－＾＊ それは fluff_lovesさん の PC のバグじゃないです。 あと、Chrome 以外でも、box1 の CSS しか適用されません。 ■■■ 原因 ■■■ CSS コード内の <!-- ------- --> の位置でエラーが起きているので、 そのあとの CSS が無視されてしまっています。 そのため、 ▼──────── .box2{ width:100px;height:100px; background-color:#dddddd; } ────────▲ が適用されていないのです'd(・ω・＊ ■■■ コメントアウトの挙動 ■■■ まず、 <!-- --> は HTML のコメントアウトとして使われるコードです。 CSS のコード内では、基本的には使えません。 ▼──────── <style type="text/css"> <!-- .box1{ width:100px;height:100px; background-color:#cccccc; } .box2{ width:100px;height:100px; background-color:#dddddd; } --> </style> ────────▲ のように記述した場合、 CSS に対応していないブラウザで閲覧した場合は、 CSS が機能しないがために、 <!-- ～ --> の範囲は HTML のコメントアウトとして扱われ、 CSS のコード部分 ～ がページにそのまま表示されるのを 防いでくれます。 いっぽう、 CSS がちゃんと機能するブラウザで閲覧した場合は、 <style>～</style> の範囲は CSS のコードとして扱われるので、 HTML のコードである <!-- と --> は無視されます。 では、 ▼──────── <style type="text/css"> <!-- .box1{ width:100px;height:100px; background-color:#cccccc; } <!-- --------------------------- --> .box2{ width:100px;height:100px; background-color:#dddddd; } --> </style> ────────▲ って書いた場合はどうでしょう。 まず、 CSS に対応していないブラウザでみた場合は、 HTML のコメントアウト <!-- --> の中に さらに <!-- ------ --> が入って入れ子になっているので、 この部分は文法となり、正しい表示がされません。 コメントアウト <!-- --> は入れ子にできません。 いっぽう、 CSS に対応しているブラウザでは、 <style>～</style> の中は CSS コードとして扱われるので、 <!-- と --> はすべて無視されます。 その結果、 ▼──────── .box1{ width:100px;height:100px; background-color:#cccccc; } --------------------------- .box2{ width:100px;height:100px; background-color:#dddddd; } ────────▲ っていうコードが CSS として読み込まれます。 CSS のコード内で裸の「-」は使えないので、 ---------- の部分でエラーになります。 そのため、 それ以降の CSS コードは処理されず、適用されません。 つまり、 CSS に対応しているブラウザで、 .box2 の CSS が適用されないのはすべて、 CSS コード内の ---------- が原因です＊・ω・)b' なので、 ▼──────── <style type="text/css"> <!-- .box1{ width:100px;height:100px; background-color:#cccccc; } <!-- --> .box2{ width:100px;height:100px; background-color:#dddddd; } --> </style> ────────▲ って記述すれば、 CSS 対応のブラウザではエラーにはなりませんが、 CSS 非対応ブラウザでは、 やはり <!-- --> が入れ子になっているのでダメです。 っていうか、 いまは「CSS 非対応のブラウザ」なんて存在しないので、 CSS のコード内の <!-- --> は必要ありません。 <!-- --> を記述するのはやめて、 ▼──────── <style type="text/css"> .box1{ width:100px;height:100px; background-color:#cccccc; } .box2{ width:100px;height:100px; background-color:#dddddd; } </style> ────────▲ っていうふうにしましょう。 .box1 と .box2 の間にどうしても ---------- を入れたいなら、 CSS 用のコメントアウト /* */ で囲って記述するとイイです。 ▼──────── <style type="text/css"> .box1{ width:100px;height:100px; background-color:#cccccc; } /*---------------------------*/ .box2{ width:100px;height:100px; background-color:#dddddd; } </style> ────────▲
1.23という数は二進数では割り切れない数で循環小数になる。それを単精度の有限桁で切るので、どうしても誤差が出る。それが最後に２が付く理由である。 2/3という数を十進法で書くと、0.6666....となるが有限桁で切って四捨五入すれば0.6666667 となるようなものである。 IEEE754で検索すれば分かるが、単精度実数の場合、符号に１ビット、指数部に８ビット、仮数部に23ビット割り当てている。1.23 の場合、指数部によるシフトは無く、1.0 は暗黙の内に勘定されているので、23ビットで0.23を表すことになる。23ビットは、先頭から十進表記で 0.5, 0.25, 0.125, 0.0625, 0.03125, 0.015625.... という数を表わしているので、今の場合 0,0,1,1,1,0.... という表記になる。 24ビット目で丸め処理を行っているが、丸めのルールは複雑である。 1.23000002 1.2300000190734863 0 01111111 00111010111000010100100 0 01111111111 0011101011100001010010000000000000000000000000000000 0 0 1 1 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 1 0.500000000 0.00000000E+00 0.00000000E+00 2 0.250000000 0.00000000E+00 0.00000000E+00 3 0.125000000 0.125000000 0.125000000 4 6.25000000E-02 6.25000000E-02 0.187500000 5 3.12500000E-02 3.12500000E-02 0.218750000 6 1.56250000E-02 0.00000000E+00 0.218750000 7 7.81250000E-03 7.81250000E-03 0.226562500 8 3.90625000E-03 0.00000000E+00 0.226562500 9 1.95312500E-03 1.95312500E-03 0.228515625 10 9.76562500E-04 9.76562500E-04 0.229492188 11 4.88281250E-04 4.88281250E-04 0.229980469 12 2.44140625E-04 0.00000000E+00 0.229980469 13 1.22070312E-04 0.00000000E+00 0.229980469 14 6.10351562E-05 0.00000000E+00 0.229980469 15 3.05175781E-05 0.00000000E+00 0.229980469 16 1.52587891E-05 1.52587891E-05 0.229995728 17 7.62939453E-06 0.00000000E+00 0.229995728 18 3.81469727E-06 3.81469727E-06 0.229999542 19 1.90734863E-06 0.00000000E+00 0.229999542 20 9.53674316E-07 0.00000000E+00 0.229999542 21 4.76837158E-07 4.76837158E-07 0.230000019 22 2.38418579E-07 0.00000000E+00 0.230000019 23 1.19209290E-07 0.00000000E+00 0.230000019 参考プログラム program hello implicit none real :: a, f, g real(kind(0.0d0)):: d character(len = 80):: text1, text2 integer :: i, m(23) a = 1.23 d = a Print *, a, d write(text1, '(b32.32)') transfer(a, 0_4) write(text2, '(b64.64)') transfer(d, 0_8) print '(a, 1x, a, 4x, a)', text1(1:1), text1(2: 9), text1(10:) print '(a, 1x, a, 1x, a)', text2(1:1), text2(2:12), text2(13:) ! read(text1(10:), '(23i1)') m print '(23i2)', m f = 0.0 g = 1.0 do i = 1, 23 g = g / 2.0 f = f + g * m(i) print *, i, g, g * m(i), f end do end program Hello
