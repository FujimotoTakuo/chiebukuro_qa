プログラミングのことですね。
cronでの処理起動時に「.bash_profile」読み込んでましたっけ？
簡単に言えばプログラミングの事ですね。
chiaki7aaaさん 下記の資料を お勧めします。 他の書籍を探すにしても、下記書籍の目次と比較したほうが良いでしょう。 ・書籍：『ルビィのぼうけん』 http://www.shoeisha.co.jp/book/rubynobouken/ ・書籍：たのしいRuby 第4版 ・書籍：Ruby 2 さまざまなデータとアルゴリズム (CD-ROM付) (プログラミング学習シリーズ) 大型本 ・サイト：RHG 第1章 Ruby言語ミニマム ＨＴＴＰ://i.loveruby.net/ja/rhg/book/minimum.html このサイトは、たったの１ページだが、最初に覚えるべき最小限のことだけが書かれていて、迷い道に入り込む余地が少ない。 ・サイト：Rubyライブラリの辞書的 マニュアル ＨＴＴＰs://www.ruby-lang.org/ja/documentation/ ・サイト： Rubyでアルゴリズムを学ぶ ＨＴＴＰ://www.mnet.ne.jp/~tnomura/algorithm.html このｕｒｌには、Ｃ言語で記述されていたコードをＲｕｂｙに直訳して、応用アルゴリズムが掲載されています。 ・対話型ruby実行環境： https ://repl.it/ >Vagrant upというコマンドが上手く動作せず、Ruby を使う以前のレベルで立ち止まっています。 Vagrant環境は、環境構築に詳しいティーチング・スタッフが準備した環境を、生徒が無茶苦茶に壊しても直に戻せるような環境としては便利ですが、全て独学の人には、敷居が高いだけです。 terminalを開くだけでも難しい場合、無理をする必要はありません。 repl.itサイトを開いて、ブラウザ経由でrubyコードを投稿すれば、ドットインストールのRuby教材や、その他の書籍の入門レベルのプログラムは試すことができます。 --------------------------- ＜補足＞『ルビィのぼうけん』 最近、『ルビィのぼうけん』という、小学生向けの絵本に載っています演習課題を、プログラミングを学んで2年目の大学生が1発では解けなかった人の例を観ました。 それは、プログラマになる為には、マズ「知的持久力（≒根気）や洞察力が居るという、独学だけでは学び難い教訓を含んでいたという事例でもあります。 この絵本は、ソウソウタル推薦者も居るだけあって、結構深遠な 侮れない演習問題が載っていると思って良いでしょう。 『ルビィのぼうけん』より、引用 「 下の作業項目を、順序良く並べ替えることは出来ますか？ a.おさらをならべる b.スプーンをならべる c.おたんじょうびケーキを、テーブルにならべる d.テーブルクロスをひろげる。 」 なお、この設問に例示された順に並べると、おたんじょうびケーキの上にテーブルクロスが被さっていて、食べることができません。 また、この設問に例示された順では、ケーキの下にスプーンが隠れるので、スプーンを持つことも出来ません。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1216291211...
ruby KCODE で検索するだけで ruby1.9で廃止された って説明がいっぱい出てきますけど…… スクリプトファイル内でエンコーディングを確認する方法は、確かにちょっとだけ探しにくいけど、ちゃんとでてきます。 __ENCODING__ を使いましょう。 print("ENCODING=", __ENCODING__); とか puts "ENCODING=#{__ENCODING__}" とか。
そうでもないと思いますよ。
プログラミングの事ですね
一定の時間でツイートさせるには Linuxサーバーや Unixサーバーに搭載している crontabという機能を使います。 Windowsや Mac環境ではそのcrontabという機能は搭載されていません。
そのソートボタンを押した時に、自分自身のページへGETでパラメータを送ります。 例えば、このページをindex.phpとして、nankaiでソートしたければ、 index.php?sort=nankai&order=desc とか、 index.php?sort=nankai&order=asc とか、自分でわかりやすいように、 ソートする項目名と、昇順降順どちらかなのかを送ります。 <a href="index.php?sort=nankai&order=asc">何階を昇順</a> で、このページのSQL文の構築より前で、そのGETパラメータを受け取って、 SQL文のorder by に突っ込めばよいです。 （デフォルトは、何を昇順/降順でやるのかそれぞれ変数にいれといて、その変数を上書きすると良いです）
不具合かもしれませんね。
そうでもないですよ。
<php function createToken() { $_SESSION['token'] = bin2hex(openssl_random_pseudo_bytes(16)); } function validateToken() { $token = (string)filter_input(INPUT_POST, 'token'); if( empty($_SESSION['token']) || empty($token) || $token !== $_SESSION['token']){ echo 'Invald Token!'; } } といったクロスサイトリクエストフォジェリー(CSRF）といった対策をする必要があります。 $_SESSION というスーパーグローバル変数を使うのでプログラム中に session_start(); と書いておきます。 if ( $_SERVER['REQUEST_METHOD'] !== 'post') { createToken(); }else{ validateToken(); //コレ以降は書き込み処理を行う } <form>タグから </form>にある以下の文を書いておきます。 <input type="hidden" name="token" value="<?=htmlspecialchars($_SESSION['token'], ENT_QUOTES, "UTF-8"); ?>"> CSRF対策するとこで悪意のある書き込みを防ぐことができます。
プログラミングの事です
先ずは、explode() の使い方を公式マニュアルで調べてください。 > $explode2 = explode(",",$file[0]); > print_r($explode2); この部分での表示結果で、分かりそうなものですが... ＿＿デバッグ時は print_r() より var_dump() の方が良いと思います
客先提出単価が600,000/月だったとして、そこから給料払うのに単価を抑えたいから。 なんだかんだ言っても、未だに女性の方が給料低く抑えてる企業は多く存在します。
ago1mutantさん 下記条件で考えてみたのだが、、意外とメンドクサイです。 ・utf-8エンコードの漢字とかの下位バイトが偶々'N'と同じ文字コートとナル場合を除外して、'N'だけを数える。 ・改行文字が全く含まれないかもしれない。（getsとか使えない） ・’N'が全く含まれない場合、１番目のファイルは0バイト。 ・最長の’N'の続きがファイル末にしかない場合、２番目のファイルは0バイト。 誰か、もう少し エレガントなコードを求む。 「 n=30 inFile = File.new('a.txt','r:utf-8') reqSize=inFile.size / 2 bestCount=0 bestSize=0 curCount=0 curSize=0 inFile.each_char {|c| curSize +=1 if c == 'N' curCount +=1 elsif c='\n' || '\r' else curCount=0 end if (curCount >=n ) && ((curSize - reqSize).abs < (bestSize - reqSize).abs) bestCount=curCount bestSize=curSize end } inFile.rewind outFile = File.new('b.txt','w+:utf-8') curSize=0 inFile.each_char {|c| curSize +=1 outFile.write(c) if curSize >= bestSize break end } outFile.close outFile = File.new('c.txt','w+:utf-8') inFile.each_char {|c| outFile.write(c) } outFile.close inFile.close 」 ちなみに、上記のコードをC言語に直訳などすると、冒頭の漢字の下位バイトが偶々’N'の場合に旨くは動かない分だけ、Rubyの方が簡単だが、、
単純に指定URIの httpを httpsに書き換えるだけで実行できるかと思います 具体的には下記のようになるかと思います ================== require 'net/http' require 'uri' uri = URI.parse('https://www.google.co.jp') response = Net::HTTP.get_response(uri) puts response.inspect Net::HTTP.get_print(uri) # 蛇足 ==================
モデルの関連付けは上手くできたようで、嬉しく思います！！ ご質問を上手く読み取れておらず、恐縮です。 ご質問で書かれている「記事」というのは commentクラスということで よろしいでしょうか？ もし違っていればすいませんが、comment : 記事という前提でお応えいたします current_user が Userクラスであれば current_user.comments で urrent_userと紐付いている commentの配列が得られます よって、showページの 「 <%= comment.body %> 」 の部分を下記の用にすることで、投稿した全てのコメントが表示されます <% current_user.comments.each do |comment| %> <%= comment.body %> <% end %> ■うまく行かなかった場合 (1) current_user.commentsの中身が入っているか確認 下記のコードで、「current_user.comments」の中身がざっくり表示されます 記事があるはずなのに、nil(空)だった場合は何らかのミスがあると思われます <%= current_user.comments.inspect %> (2) (1)が上手く行かなかった場合 この場合、commentのuser_idがうまく設定されていない可能性が高いと思われます 下記のようなコードで、user_idが設定されているか、ご確認ください <% comments = Comment.all %> <% comments.each do |comment| %> <%= comment.user_id %><br> <%= comment.body %> <% end %> 例えば、 current_user.id が 1 のユーザが書き込んだ Commentは comment.user_id が 1 となっている必要があります ご解決の助けになれば幸いです
Ruby言語は、単一言語で、下記に示す5分野の入門的コードを、他の言語より コンパクトに記述できる稀有なプログラミング言語です。 プログラミング言語の種類を増やすより、応用分野の幅を広げたほうが良いと思います。 (a) サーバソフト (b) デスクトップ対話型アプリ (c) パズルのように、大量計算を伴う処理 (d) 電卓として； (e) 組込み機器分野；Raspberry PiとRubyでLED制御； 上記の5分野の 入門的な百行未満のコードは、下記の拙作回答のリンク先にも示しています。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1415956970... このリンク先の百行未満のコード、５種を、「他の単一言語で記述できた」という人、出てくるかな？ そこに例示しているRubyコードを観ても、ドレ一つ自分が最も推奨する言語に書き直せない”自称ｘｘ言語の使い手”の言うことなど、信じれますか？ ＜補足＞ ☆プログラミング学習の”伸びなやみ”の証拠 ・中学生にも解けるパズルを解くのに向いたプログラミング言語は？ http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1113650350... こうしたパズルを解くには、抽象データ構造やアルゴリズムの学習が居るものですが、そのレベルに達しないまま”伸び悩み”する人も多いようです。 この御題に回答者を出していない言語など、学習の優先度は、ズーット下げて良いでしょう。 ・言語自由お題で、アルゴリズム虫食い算 http : / /detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11145031321#a358109314 この御題の質問者は、自称PHPの使い手のようだが、Ruby言語で約７０行のコードを回答したあとカレコレ２年近く、この御題のコードをPHP言語では書けていない。 と、かれこれ１年以上、挑発的に何度か問いかけているのだが、PHPやC言語だけではなく、”初学者にｘｘ言語を推奨する自称ｘｘ言語の使い手の方”は、この御題には回答をしようとしていない。
tsucyuさん Ruby言語は、標準装備のクラスの機能が多機能なので、 classもメソッドも自作する必要はありません。 ＞classで括らなくても、目的は達成できるのに 同様にメソッドを自作しなくても、大抵の目的は達成できます。 下記URLに、Rubyの手ほどきのコードを６例、実行結果を示していますが、自作関数など使わないで”来月のカレンダー”表示とか、１から1万までの逆数の和とか計算できているでしょう。 http ://ideone. c om/41yUao このコードは、普通の入門書だと ５０ページ位 読み通して、ヨウヤク解るレベルだと思います。 ＞使わないでもとりあえずの処理ができているので、 ＞わざわざ行を増やす意味が分からないと、どうも前に進 覚えることを最小化するのは、それはソレデ、良い事です。 そうゆう場合に良い参考資料もあります。 ・第1章 Ruby言語ミニマム http://loveruby.net/ja/rhg/book/minimum.html A.オブジェクトに対してはメソッドが呼べる。 p "content".upcase() B.メソッド呼び出しは（オブジェクトを返すので）、連鎖してよい。 "content".upcase().downcase() 覚えるべき最小限のことは、コレだけです。 if文もfor文も、実は覚えなくて良いです。 それより、標準装備されたmapとかselectとかのメソッドの使いかたの方を覚えたほうが良いです。 例えば、「１から1万までの逆数の和」は、 「（１から1万までの数(n)）を、分子が１分で分母がnの分数（Rational)に変換した並びに、演算子（:+)を挟んだ（inject)式の計算結果を、表示（P)する」という風に、和文に１対１に対応するようなコードがかけます。 p (1..10000).map{|n| Rational(1,n)}.inject(:+) これを理解するのに、上記のA.とBだけで済んだでしょう ーーーーーーーーーーーーーーーーーーーーーーーーーーーーー 一応、Ruby言語のマニュアルも引用しておこう。 http://docs.ruby-lang.org/ja/2.1.0/doc/spec=2fdef.html#method 引用「 ◆メソッド定義 文法: def メソッド名 ['(' [arg0 ['=' default0]] ... [',' '*' rest_args [, post ...]] [',' key1: [val1]] ... [',' '**'kwrest] [',' '&' block_arg]`)'] 式.. (body) [rescue [error_type,..] [=> evar] [then] 式..].. [else 式..] [ensure 式..] end この定義のある場所にメソッドを定義します。 すなわち、クラス/モジュール 定義中ならばそのクラス/モジュールのメソッドを定義します。 トップレベル ならば どこからでも呼べるメソッドを定義します。 このようなメソッドは結果 として他の言語における「関数」のように使えます。 」引用終わり でも、この説明より、少しだけ覚えることを少なくするなら、 「トップレベルの開始直前、実は 隠れて 匿名のclass文が実行されているのだ。 だから、トップレベルでのdef文は、その匿名クラスのメソッドを定義しているのあって、普通にclass文とend文に挟んだdef文と 何ら変わらない」と覚えておくと、将来、並列処理（マルチプロセス）のコードを書いたときに、役に立つでしょう。
リクエストありがとうございます。 マスクした下の部分の表記は上野東京ライン開通時からありましたが(表記は【東海道線 品川 横浜 大船方面】だったと思います )、途中からマスクしたみたいです。 理由はわからないのですが、 上野東京ライン運行時は7･8番線ホームから横浜方面の列車は発車しないため誤乗車防止の為と思われます。
今回はあまり意味を感じないかもしれませんが、 たとえば、何度も使うとします。 for文でも使って、それ以外のところでも使って... 数値そのままで指定すると、 変更毎に設定しなおさなければなりません。 たとえば、メソッドAから メソッドDで使うとすると、 少なくとも 4箇所は定義しなおさなければなりません。 ですが、定数にすると一箇所で済みます。 変数でもいいじゃないか... と思うかも知れませんが、 考えてみてください。 変数だと書き換えが可能ですね。 たとえば、 @test = 100 print( @test ) # ここでは100のつもり @test = 1 # なんらかの手違いにより 100が 1 になったとする print( @test ) # ここでは 100のつもりだが、上記の理由で 1 に. こういう風に、 なんらかのミスによって値が変更される可能性があります。 自分はそんなくだらないミスしない... そうかもしれませんが、 ミスもありうるので。
ary=[2,9,4,7,8,8,7,2,1,4,3,7] rand(ary.size).times{   ary[rand(ary.size)]=55 } p ary
each_consで任意範囲を取得しつつループ http://docs.ruby-lang.org/ja/2.0.0/class/Enumerable.html#I_EACH_CON... each_sliceと共に稀に使うかも #//ideone.com/bdjuVw# a=[1,3,5,7] p a.each_cons(2).map{|x,y|y-x}
デスクトップに、 print ("hello\n") と記述したファイルを置いてください。 名前は「test.rb」とか適当に。 そして、LXterminal等のシェルを起動してください。(多分アクセサリのところにあると思います。) そこで、 cd Desktop ruby test.rb と行ごとに入力すればいけると思います。
monster_dearibさん いろいろ学んでみる。 目的を実現する方法は、同じようなもの 1. 目的 医学・物理学・経営 言語 中国語・英語・日本語・独語 2. 目的 ゲーム・科学計算・ネット 言語 C,C++,basic,java,javascript,html
Railsのハマりポイントですよね has_many, belongs_toの使い方は逆になります。 また、has_many で指定する場合はクラス名を複数形 belongs_to で指定する場合は単数形にする必要があります つまり、下記の用にクラス定義します ------------------------ class User < ApplicationRecord # Userクラスは複数の entrepreneurs と commentsを持っている(has_many) has_many :entrepreneurs # 注: has_manyなので複数系 has_many :comments # 注: has_manyなので複数系 end ------------------------ class Comment < ApplicationRecord # Commentクラスは userに属する belongs_to :user end ------------------------ class Entrepreneur < ApplicationRecord # Entrepreneurクラスは userに属する belongs_to :user end ------------------------ また、Comment, Entrepreneurはそれぞれ user_id(integer)のフィールドが 必要です 具体的なチェック例を下記に示します (1) モデル宣言 & マイグレート rails generate model User name:string tel:string rails generate model Comment user_id title:string content:string rails generate model Entrepreneur user_id name:string rake db:migrate * user_id 以外のデータフィールドは適当です (2) rails c を起動して動作確認 user = User.new(:name => '氏名', :tel => '000-0000-0000') # 親のUserを宣言 user.comments.build(:title => 'タイトル', :content => 'コンテンツ' ) # 子のコメントを新規作成 user.entrepreneurs.build(:name => '企業名') # 子の起業家を新規作成 user.save # 保存 user.inspect # Userを表示 user.comments.inspect # コメントを表示(配列になっていることに注意) user.entrepreneurs.inspect # 起業家を表示(配列になっていることに注意) ■ハマリポイントは (1) has_many, belongs_to 複数形・単数形が違う (2) 親のID保存フィールドがない(今回は user_id) あたりかと思います has_many, belongs_to は英語の意味を捉えると理解しやすいかと思います 下記のサイトは丁寧に解説していると思います http://www.stonedot.com/lecture6.html では、楽しいプログラミングを!!
写真よーく見てみたら、エラー吐いてるね。 読めない。 Rubyを勉強し始めたというより、Rails始めたのね〜 。 ターミナルでrails new hogehoge して出来上がったhogehogeディレクトリにcdしたら、rails s ブラウザでhttp://localhost:3000 開けば普通はデフォルトのwelcomeページが開けるのよ。
＞編集したいのに開けません 右クリックメニューの「送る(N)」（SendTo）に、Terapadのショートカットを入れておきます。 ＊＊＊ windowsではショートカットの名前やメニューの頭文字をキーボード入力で選択できるので、「右クリック→N→T」と押すと、マウスを動かさずにラクにテキストエディタで開くことができます。
yankee13500ktさん Rubyのgsub関数と、ハッシュとを組み合わせると簡単ですね。 「 textDic ={} textDic['A'] = 'AADAとパターン。' textDic['BB'] = 'ビーに対応するパターンB。' textDic['CCC'] = 'シーに対応するパターンC。' replatePattern=Regexp.union(textDic.keys) sample='A text is CCC cC BB AA B other' sample.gsub(replatePattern,textDic) STDIN.each {|line| puts line.gsub(replatePattern,textDic) } 」 sampleの出力は、 「 "AADAとパターン。 text is シーに対応するパターンC。 cC ビーに対応するパターン B。 AADAとパターン。AADAとパターン。 B other" 」 ここでは、textDicは、メモリ上に組み立てる連想配列だが、「operator ['A']」お部分を差し替えることができるRubyでは、textDicオブジェクトをredisなどのkey-values型のデータベースに差し替えて、大規模化しても、上記のメインルーチンは、殆ど変更しなくて済みます。 これは、「トップダウン設計の後退が無くて、インクリメンタル設計が容易」と言えるでしょう。 一方、C言語やEXCEL-VBAなどの、古い言語だと、「operator ['A']」の部分を差し替えることが出来ないので、「将来 大規模化したいカモしれない」のであれば、「operator ['A']」の部分を最初からデータベースAccess関数で書かなければならならないのです。 それは、「トップダウン設計しようとしても後退が予見されるので、ボトムアップ設計しかできない。 インクリメンタル設計不能」という、スタートアップに不向きな特性です。 このように、開発方法論や、段階的な機能拡張のしやすさに及ぼす影響まで、言語仕様を深く理解している人は、自称”C言語の使い手”とか、初学者にEXCEL-VBAを推奨する程度に”自称 識者”を名乗る人には 出てこないものだろうか？
お使いの端末にはSQLite (リレーショナルデータベースね)はインストールされてるの？ Macなら最初からインストールされてるけどwindowsはインストールされてないと思うなー
https://blog.techstars.jp/rails-book938383/ 「10日で覚えるRuby on Rails入門教室」「改訂3版基礎 Ruby on Rails 」で初歩的な所を学んだうえで、 「パーフェクト Ruby on Rails」「Ruby on Rails 4 アプリケーションプログラミング 」にステップアップする感じですかね。
このサイトの通りにやってみたら出来ましたよ。 http://hyottokoaloha.hatenablog.com/entry/2015/04/25/100605 sudo apt-get update sudo apt-get install libssl-dev sudo apt-get install ruby-dev が、足りないのでは？ ちなみに、Raspbian jessie でやりました。
キャドと読みます。。。。
しっかりCADについて勉強すればできますよ。
>プログラミング初心者にとってこの本はいいのでしょうか わたしの直感によりますと、教科書には２種類あります 教師・先生・コーチが必要なものと、独学専用のものです ＊＊＊ 前者の書籍は、買う人が先生なので、内容は教える側が優位に立てるような内容です。教師の側が「教えていて楽しい」となる内容から構成されています。 教える人間の存在を前提をしているので、書いていないことがあるかもしれません。問題集に答えがない……などのつくりになっている教科書は、教師を必要とする傾向が高いハズだと推測できます。この時、教師は学生の提出した答案を添削できるからです。 この辺りは、柄谷行人の『「教える－学ぶ」の非対称性』について書かれた「探求Ｉ」を読んでください。 ＊＊＊ つまり、『独学専用に作られている教科書』なるものが本当に存在する場合、その書籍は教師を排除してしまうので、教師はそのような本を忌避します。 なぜなら、その本を買えば学習者は独学で習得可能なので、教師が要らなくなるからです。そのような本は、教師は（学校では）教科書として選ばれません。「学校」というシステムにすら、権威が無くなってしまうからです。 ここには二項対立があることが分かりますが、その解消はわたしには思い付きません。
>hahahaha_0714さん 同じような質問を過去に見かけた事が有るので、過去ログを検索すると良いと思います。
よう、誰に対しても、虐め殺したり等々の数々の重犯罪をも犯し、其の罪をも着せてる事とかを完全に棚に上げて 己の都合の悪い時丈は、復讐法とかを否定してる之以上無い程の極悪人の偽善者の犯罪者の貴様等塵屑さんよ 然遣って、図に乗り、明らかに沢山の人様からも、悲しまれてる植松聖に直接殺された彼の被害者の皆様をも誹謗中傷してるが故に、尚更、誰からも、何時も何時も、毎日毎日、ずっと、ずっと、完璧に報復等々含めて、色々、され続け 剰え、何れ程、悲惨な目とかに遭わされても、だーーーれからも、同情、共感、心配等々は例え、天地がひっくり返っても、全然無い惨めな屑共の一人で在る貴様等塵屑さんよ 其れ程の惨めな雑魚の分際が、何、偉そうに人様の不幸を笑えるの？ 気色悪いし、胸糞悪いとしか言い様が無いね 勿論、僕も植松聖には死刑を望んでるが、だとしたら如何為る？ 植松聖も、其れを慕うお前等も、拘置所でも凄惨な虐めをも受けて 誰からも見捨てられて、とっとと、無様に果てちまいな
＞ドットインストールのRubyonrailsを最初から最後の講座を学習したらどの程度のアプリ作成が可能ですか？ カテ違いなのでお断りします。
CAD(キャドcomputer-aided design)は、コンピュータ支援設計とも訳され、コンピュータを用いて設計をすること、あるいはコンピュータによる設計支援ツールのこと（CADシステム）。人の手によって行われていた設計作業をコンピュータによって支援し、効率を高めるという目的からきた言葉です。
csv[:post_date].each_with_index do |date, i| これが、そもそも不味いと思います。 これでは、値を得ているのであって、列が特定出来ません。 row のオブジェクトでループを作る必要があります。 別ファイルに書くとして、こんな感じにしました。 #!/usr/bin/env ruby require 'csv' file_csv = './csv/postcsv' file_csvw = './csv/postcsvw' csv = CSV.table(file_csv) csv.each do |row| if row[:post_date] =~ /\d{4}-\d{2}-01/ row[:category] = 'beginning_month' end end csvw = CSV.open(file_csvw,'wb') csvw << csv.headers csv.each do |row| csvw << row end
プログラミングの事です。
この質問者は多数のカテゴリにおいて以下のアカウントで投稿していることから多重アカウントの疑いがあります。 html_css_kannrenn javascript_kannrenn rudy_puroguramu php_puroguramu cpuroguramugenngo c_pura_pura csya_pu de_tabe_su_puroguraminngugenngo html_puroguraminngugenngo java_puroguraminngugenngo javascript_puroguraminngugenngo swift_puroguraminngugenngo rudy_puroguraminngugenngo python_puroguraminngugenngo php_puroguraminngugenngo perl_puroguraminngugenngo csya_pu_puroguraminngugenngo
覚えれば簡単ですよ。
a = 99; print (a / 2).round * 2
以前のバージョンでは、use_ssl = true とかが必要でしたが、 2.3.0 あたりは、 もう、単に、 require 'net/http' res = Net::HTTP.get_response(URI('https://nanco.co/')) puts res.body なんて、感じで簡単にできます。
代入文でデータは作れるのだが、何を難しいと思っているのでしょう？ 例えば、３０個のデータの合計なら、カギカッコ（[]）で囲むだけ。 「 kyuuryou=[11,12,13,14,15,0,0, 101,102,103,104,105,0,0, 111,112,113,114,115,0,0, 121,122,123,124,125,0,0, 131,132,133 ] p kyuuryou.inject(:+) 」 これを、下記サイトのRuby実行環境に貼り付けると、合計2156が表示されます。 https://repl.it/
設計用のコンピュータツール一般を指す用語です。 ただ、最近は製図用のお絵かきソフトなどはこの範疇から除外します。 （あくまで、補助ツールのためです。回路図エディタとか、シュミレーションの結果表示部なども、同様に除外するようになってます。）
設計用のコンピュータツール一般を指す用語です。 ただ、最近は製図用のお絵かきソフトなどはこの範疇から除外します。 （あくまで、補助ツールのためです。回路図エディタとか、シュミレーションの結果表示部なども、同様に除外するようになってます。）
下記の可能性が有りますので、寸法のレイヤーについて確認してみてください。 １．寸法の属する画層（レイヤー）がDefpointになっている。 ２．寸法の属する画層（レイヤー）が印刷禁止になっている。 （画層のプロパティ管理 で確認できます。）
PDF to DXFという変換ソフトを勧めます。これは一つDXFファイルとして保存することができるソフトです。 無料でダウロードできる先： http://pdf-to-dxf.brothersoft.jp/
＞このファイルを開くには、そのためのプログラムが必要です。 のとき、「プログラムの一覧から探す」というような選択肢があるはずなので、そちらを選択すればあなたの持ってるエディタ(メモ帳など)で開くように設定できるウィンドウが開きますよ。 設定してしまうのが嫌なら(そんな状況は考えにくいですが)、エディタを開いてからそこにドラッグすれば開けます。 というか一応言っておくと、これくらい自分で検索して見つけるとかできないとプログラミングなんてできませんよ。 【補足に対して】 ＞開いて起動させたいんですが 「開く」のと「実行する」のは全く意味が違います。言葉は正確に使ってください。 Rubyのプログラムを実行するにはRubyのインストールが必要です。 実行環境をインストールしないとプログラムは実行できません。 http://www.ruby-lang.org/ja/ 公式サイトからインストーラをダウンロードしてください。 インストールした後コマンドプロンプトから実行するなどの方法でプログラムを動かすことが出来ます。 また、メモ帳でやっていくのは無理があるので、サクラエディタなど、色変えや補完の機能があるエディタを導入したほうがいいです。特に初心者のうちは。 …というか、初歩の講座くらい自分で見つけて読んでくださいよ。補足前にも同じようなことを言ったけど、「講座」でググることすら出来ない人にプログラムは扱えません。
別に問題ないです。それでいいんじゃないでしょうか？
def,if,forに対するendが無いようですが。 http://www.namaraii.com/rubytips/?%C0%A9%B8%E6%B9%BD%C2%A4
>どうすれば動きますか？ ステータスバーの右端のあたりに表示されてるのはSJISですか それともUTF-8ですか （こちらから見ると肝心のところが撮影されてない）
Java SEの機能範囲の中でも、可也限定した機能範囲しか使わないコードならRuby言語に直訳できます。 でも、 Java 2 Enterprise Editionの機能範囲や、OSSとして頒布されている様々なJavaライブラリを使ったコードとなると、Rubyで記述できないことはあるものです。 例えば、DBのXAトランザクション処理とか、DBコネクション・プーリング機能とか、DBコネクションの解法漏れの自動close機能とか、Rubyには未だ無いライブラリの機能はあります。 逆に、Ruby側では簡素に記述できるコードを、Javaで書こうとすると、トテモ長いコードになるということも、多いです。
Windowsはデフォルトでsshが使えません。 TeraTermというソフトをダウンロードしましょう^ ^
Windowsはデフォルトでsshが使えません。 TeraTermというソフトをダウンロードしましょう
Ruby/Tkではボタンを押されたときの処理(proc{} 内の処理)はメインスレッドにて実行されます。その為、この処理が終了するまではその他のイベント処理を行うことが出来ません。 つまり上記のプログラムではボタンを押された後の20秒間はWindowが全く動作しない状態になってしまっています。（リストボックスが更新されないのはその為です） sleepの代わりにTkAfter(TkTimer)を使用してください。 require 'tk' require 'tkafter' list = TkListbox.new(nil, width: 50, height: 20 ).pack('side' => 'bottom', 'fill' => 'x') tk = TkButton.new(nil, text: "button", command: proc { list.insert('end',"start waiting") puts "start waiting" TkAfter.start(20000,1){ #20秒後に1回実行する puts " end" list.insert('end',"end") } }).pack() Tk.mainloop
故意にセーブデータを消したなら、それは器物損壊に相当するのではなかったかと。 仮に損害賠償請求されたら応じなければならないと思いますよ。 殴られたみたいだから、それで相殺されるのがオチですかね…。 そして…なんでや、ポケモンは関係ないやろwww
https://www.ruby-lang.org/ja/documentation/
de_tabe_su_puroguraminngugenngo html_puroguraminngugenngo java_puroguraminngugenngo javascript_puroguraminngugenngo swift_puroguraminngugenngo rudy_puroguraminngugenngo python_puroguraminngugenngo php_puroguraminngugenngo perl_puroguraminngugenngo csya_pu_puroguraminngugenngo 通報しました。
Java SEの機能範囲の中でも、可也限定した機能範囲しか使わないコードならRuby言語に直訳できます。 でも、 Java 2 Enterprise Editionの機能範囲や、OSSとして頒布されている様々なJavaライブラリを使ったコードとなると、Rubyで記述できないことはあるものです。 例えば、DBのXAトランザクション処理とか、DBコネクション・プーリング機能とか、DBコネクションの解法漏れの自動close機能とか、Rubyには未だ無いライブラリの機能はあります。 逆に、Ruby側では簡素に記述できるコードを、Javaで書こうとすると、トテモ長いコードになるということも、多いです。
sudo apt-get update sudo apt-get install ruby-dev sudo apt-get install wiringpi sudo gem install wiringpi をやってみてください。
Windowsはデフォルトでsshが使えません。 TeraTermというソフトをダウンロードしましょう
RubyというかRoRですよね。Web画面上で自動的にフォーカスを入れるという設定です。 trueにすると生成されるinputタグにautofocus="autofocus"が追加されます。
意味・・・ですか？ google検索 https://www.google.co.jp#q=rails+link_to&gws_rd=cr
http://www.rubylife.jp/regexp/option/index2.html で説明されてますね。 質問の内容からは外れますが、 rNumはaryDate.countやaryDate.lengthなどに置き換えたほうが良いと思います。 rubyの変数名は小文字のアンダーバー区切りが一般的です。 自分なりに色々変えてみた ``` ary_date = ["n", "N", "AN", 123, 465] ary_date .map(&:to_s) .map{|s| (/N/i =~ s)? "" : s } .each_with_index {|item,i| puts "#{i}\t#{item}" } ``` 出力されるのは ``` 0 1 2 3 123 4 465 ``` です
あなたのようなゲイの方々では割と多いみたいですよ。 女友達はノンケだったのでそう答えたのでしょう。
p Math.log10(1234).to_i+1 p (1234).to_s.size
大学の授業などで使用されるのでしょうか？ その場合、大学側の環境に合わせることも必要かもしれません。
DBにいれちゃえば？ そしたらキー（1_1とか）やらデータ（東京、新宿区とか）の追加変更もプログラムには影響うけないし。
>どうすれば動きますか？ ステータスバーの右端のあたりに表示されてるのはSJISですか それともUTF-8ですか （こちらから見ると肝心のところが撮影されてない）
>2つ目の文字列は "正解" か "不正解" である 文字コードはどうしてますか
エラーメッセージは何が表示されていますか？
オヤ、Rubyカテへの御題なので、Rubyで応えねば、、 awk版と同様、各行がstringオブジェクトに収まる程度に長すぎない文字長だとして、ドコで改行されるか不定とかも 想定すると、コウでしょう。 「 matchRegExp= Regexp.compile(['clusterA','clusterC'].map {|s| '^>' + s}.join('|')) f = -1 STDIN.each {|line| if hd=matchRegExp.match(line) f = 0 puts hd elsif line[0] == '>' f= -1 elsif f >= 0 puts line end } 」http ://ideone. c o m/Z1rUYm 悔しいが、各行が 改行文字を含まないで 数億文字になりうる場合、awkで無理な領域でも大丈夫なコードは、、Rubyならできるハズだが、、直には思いつかない、、、
404ステータスはURLにページが存在しないということです。 つまりルーティングできていません。 account_activations/:id/edit(.:format) の:idは1とか2とか自動で振られるinteger型では？ Pe6Y8rtdfdaEtKG6JHGSzwは違う気が
rubyのファイル名を abc.rb とした場合、 abc.rbをrubyプログラムとして起動するには 「ruby abc.rb」と実行します。 実行するときには、カレントディレクトリにabc.rbがある 状態(lsを実行するとabc.rbが表示される状態）にして実行してください。 cygwinであれば他にも方法がありますが、 いくつか手順が必要なので、とりあえずこれでいいと思います。
どういうふうに表示したらいいのでしょうか・・・
puts gets.split("+").map{|n| n.to_i }.inject(:+) こんな感じですよ(苦笑) 笑わせてもらいました。頑張ってください！ (それじゃコンピューターを使っている意味がありませんよ。動的にやりましょう。) ちなみに getsは標準入力から文字を取ってきて split("+")は`+`で分割して("2+3"なら["2", "3"]にする) map{|n| n.to_i }はそれを文字から整数に直して(["2", "3"]から[2, 3]) inject(:+)はそれを合計しています([2, 3]から5) puts はできた数字を標準出力から出力しています
#//ideone.com/Tv2TpC#コンナ感じかねぇ while ARGF.gets   $_.sub!(/\..+GT:AD:DP:GQ:PL\s/,"")   $_.gsub!(/(\d+\/\d+):(\d+),(\d+):(\d+)[:,\d]+/,"\\1\t\\2\t\\3\t\\4")   print $_ end
{sex: "man"}だとキーがシンボルになりますので、質問欄のようになります。 キーを文字列にするには{"sex"=>"man"}とします user["sex"]="man"とすれば追加されるはずです。
このあたりを参考に http://railsguides.jp/active_record_querying.html いろいろな書き方ができます。 SQLをほぼそのまま書くことも
どのバージョンのPythonなのかは分かりませんが http://docs.python.jp/3/library/http.client.html PHP、Ruby、Pythonのhttpクライアントライブラリは恐らく通常はcURLのラップだと思いますのでタイムアウトオプションは常に設定可能かと思われます。
え？２行じゃないですが、 こんな感じでは？ require 'date' def get_days(year, month) month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] if month == 2 and Date.new(year).leap? return 29 end return month_days[month-1] end puts "年を入力してください：" year = gets.to_i puts "月を入力してください：" month = gets.to_i days = get_days(year, month) puts "#{year}年#{month}月は#{days}日間あります"
配列の先頭は0番からです。 messages[3]=["A","B","C" ] [3]は0番から2番までの3つを用意しなさいという意味になります。 messages[0]にはA messages[1]にはB messages[2]にはC になります。 messages[3]にはC言語をすると理解できますが、配列外です。 ということで、messages[1]というのは配列で2番目に格納されているものです。
>ungehdgsjmwiaszrawiさん2016/5/3017:09:08 >初心者でも理解ができるRubyのサイトや本などはありますか？ 有りますよ。
金箔をまぶしてくださいね〜〜 (=ﾟωﾟ)ﾉ
とりあえずコマンドプロンプトからRubyを立ち上げることは出来ていますか? だったら、 irb と入力すれば「対話的Ruby」が立ち上がると思いますが。 #私はcygwinからRubyを入れていて質問者さんとは状況が違うので「とりあえずなんとかする」方法だけ
ruby カテということは、 ruby のプログラムで良いのですよね。 perl 風に書きましたが、 そこそこ簡単に書けます。 ちょっと、改行処理にトリックを使っています。 #!/usr/bin/env ruby cr="" while line = gets if line =~ /^>(.*)$/ then print cr print $1 cr="\n" else if line =~ /^.+>(.*)\.\.\..*/ then print "\t"+$1 end end end print cr text.rb に入れて、 chmod +x text.rb cat input.txt|./text.rb > output.txt なんて実行してね。
「3番目のa」とは? 「3番目の文字(がたまたまa)」なのか 「3番目に出現したa」なのか 「連続するaのうち3番目」なのか "caaaaad" だったらそのままなの? "caabaad" にするの? "cabaaad"にするの? "caacacaad" だったらそのままなの? "cabcacaad"にするの? "caacbcaad"にするの?
数値積分ならscirubyの中にあるかと。 http://www.rubydoc.info/gems/integration/0.1.4 区間数はオプション initial_step, stepで調整可
``` def divisors num divisor_list = [1,2] for i in 3..num/2 if (num.to_f % i)==0 divisor_list.push i end end divisor_list end print"数字を入力>" input = gets.chomp.to_i i = input loop do break if i==divisors(i).inject(:+) i += 1 end puts i puts divisors(i).join(" ") ``` こんな感じですかね。 変数名にはもっといい名前をつけましょう。 一文字はやめましょう。(この長さでも読みづらい。) http://d.hatena.ne.jp/asakichy/20140620/1403215047 ここを見てみては。 頑張ってください。
原因：書かれていないのでわかりませんがplotに与えるオプションが間違っています。 質問文中にはないのでただの勘ですが。。。 対策： ・データをテキストファイルでもらってきてください。 or ・plot のbinaryオプションを「正しく」「漏れなく」「正確に」記述してください→質問文中に何も書かれていないので絶対に無理と思われます。
今さななぜVB?って気もするが、個人的にはRubyは飽きると思う。 ので、この二択なら、VB.Net。 グラフィカルにソフトを開発できるしね。 なんで頑なにRuby、VBに必死なの！？
google翻訳にかけたり、そのままググったりしたら出てくるのでは。 何回もエラーを起こせば慣れます。
そのためには、お金を払ってスクールに通います。 初心者にもわかるような具体的な情報が、簡単に無料で手に入るという認識を改めるのが先です。
現在のフォルダがworkspaceなら cd app/views/layouts で移動できます
正しいコトバをつかうこと。 日本語でも、英語でも。打ち間違い、つづりの間違いがあったら(まぁ、最近は"これじゃない?"言ってくることもありますけど)ヒットしませんから。 rubyをrubuと書いたり、アンドロイドをあんろいどでは... http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1415893848... http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1015917029...
フツーに動くが、、、何が分からんのか不明 #//ideone.com/ZxTPfy   p Rational(3,4)+Rational(1,5) #//codepad.org/obyEbSPj
>giggsister1996さん2016/5/1720:07:06 >名前つきルートってなんのためにあるの？ ノードを特定するためです。
game1.rb の方ですが，変数 system と 変数 judgement が if ブロック内での宣言になっており，if ブロック外では未宣言になっていると思われます． なので，それぞれ if ブロックの前で，system = nil とか judgement = nil などの宣言をしてください． それから，judgement == "draw" じゃなくて，judgement = "draw" ね． ちなみに，そこら辺を少し書き直したもの #システム側の出すものを決める system = ["gu", "cyo", "pa"].sample # 等確率ならこうかける #勝敗の判定 judgement = [user, system].tap do |u, s| __break "draw" if u == s __case u __when "gu" ____break s == "cyo" ? "win" : "lose" __when "cyo" ____break s == "pa" ? "win" : "lose" __when "pa" ____break s == "gu" ? "win" : "lose" __end __break "undefined" end
まず「rubyでのoperator []は、配列参照ではない」 モット汎用的で「クラスやオブジェクト毎に、最もoperator[]に付与することが相応しいと思われた機能が付与されたメソッドだ」と覚えましょう。 "string data"[5..7]は、 "string data".send("[]".to_sym,5..7) と等価で、レンジ・オブジェクト（5..7)を引数にしているoperator[]のメソッド呼び出しです。 operator[]も、単なるメソッドなので、自分用のクラスでは、自分用に特別な機能を付与しても良い。 例えば、”素数か否か”というbooleanの配列の様に観える自分用のクラスなら、下記の様に定義できる。 「 require 'prime' class MyPrimeChecker def [](n) if n.class == 1.class return Prime.prime?(n) else return false end end end c = MyPrimeChecker.new c[3] # trueが帰る c[4] # falseが帰る h=[c,c,c] h[2][7] # trueが帰る 」 上記も、二つの原則で理解できるでしょう。 「 ・オブジェクトはメソッド呼び出しができる。 ・オブジェクトのメソッド実行結果はオブジェクトなので、 メソッド呼び出しは連鎖できる。 」 if文ですら、「条件オブジェクト.thenメソッド{条件がtrueの場合に遅延実行するブロック}.else{条件がfalseの場合に遅延実行するブロック}」というメソッドの連鎖だと考える、とか、、 結局rubyの文は、全てコノ二つの原則の組み合わせ。
arduino UNO のマイコンは、ATmaga328P です、I/O ポートは digital port 0～7 = PORTD 0～7 ビット digital port 8～13 = PORTB 0～5 ビット analog port 0～5 = PORTC 0～5 ビット ( digital port 14～19 としても使用可） に対応します 対応ポートに直接データを出力すれば、PORTD 8ビット PORTB/PORTC なら５ビット単位の出力が可能です データ読み込みは、PIND , PINB , PINC で行います 1,2 ピンにHIGH を出力するなら PORTD = PIND | 0B00000110; // OR ビット演算 1,2 ピンにLOWを出力するなら PORTD = PIND & 0B11111001; // AND ビット演算 が必要です （入出力が８ビット単位も為、他のビットを変化させないように） 例 13 ピン BLINK void setup(){ digitalWrite(13,LOW); pinMode(13,OUTPUT); } void loop(){ PORTB = PINB | 0B00100000; // digitalWrite(13,HIGH); delay(500); PORTB = PINB & 0B11011111; // digitalWrite(13,LOW); delay(500); }
なんでyを打つと思ったのですか？ 落ち着いて英文を読んでみてください。 また、ssh やssh-keygen が何をするものかご存知ですよね？ で、なぜ git を使うのに ssh が必要なのかも。
class MessagesController < ApplicationController __def index ____@message = Message.new ____# Messageを全て取得する。 ____@messages = Message.all __end # ここ __def create ____@message = Message.new(message_params) ____if @message.save ______redirect_to root_path , notice: 'メッセージを保存しました' ____else ______# メッセージが保存できなかった時 ______@messages = Message.all ______flash.now[:alert] = "メッセージの保存に失敗しました。" ______render 'index' ____end # ここ（正直 else 句がたぶんいらないので，なくすこともできる） __end # ここ end # ここ 基本的にすべてのブロックに end が必要です（class でも def でも if でも）
何を言っているのか、意味不明です。 具体的なプログラムを示して質問してください。
>プロゲートのrubyでファイル ふぉるだーがなかなか見つからないので見つかる方法教えてください 大勢で探すのが早く見つけるコツです。
・問１と２はほぼ似ているのでまとめました。 print "実数１：" num1 = gets.chomp.to_i print "実数２：" num2 = gets.chomp.to_i puts "和：#{num1 + num2}" puts "差：#{num1 - num2}" puts "積：#{num1 * num2}" puts "商：#{num1 / num2} あまり：#{num1 % num2}" ・問３ print "底面の半径：" r = gets.chomp.to_i print "高さ：" height = gets.chomp.to_i teimennseki = r * r * (Math::PI) taiseki = teimennseki * height / 3 puts "体積：#{taiseki}" 問４、５ print "実数：" a = gets.chomp.to_i puts "#{a/10}" puts "#{a * 0.1}" 問６ print "実数：" num = gets.chomp.to_i puts Math.sqrt(num) プログラムはこんな感じで理解いただけると思います。 気づいたことについてですが、おそらく丸め誤差や情報落ちで検索していただければわかるかと思います。 例えば問４、５について 3 を入力すると a/10 は 0 になってしまい a * 0.1 は 0.30000・・・となることを意味しています。 そのようなことに気付いて欲しいという趣旨の問題かと思います。
こんにちは。 第２版 https://tanoshiiruby.github.io/2/ 第５版 https://tanoshiiruby.github.io/5/ 第２版の正誤表を見る限り練習問題に間違いがあります。 また、2006/08/07に出版されたもので、本自体は問題ありませんが、Rubyのバージョンが当時のものでなければなりません。 こういった書籍は言語や使う環境、OS等常に技術的な進化がある為、常に最新のものでなければ、動作しなかったり、今の新しいバージョンでは違うやり方があるのに、それに出来なかったりします。 つまり古いバージョンを使わなければならない場合には有効ですが、これから勉強するのであれば、一番新しいものを使う必要があるという事です。 ではでは。
そのプログラムが書かれているファイルがShift-JISで保存されているか確認してください。 ファイル自体のエンコーディングと、マジックコメントは一致させる必要があります。 例： --------- #coding: utf-8 p "このファイルはShift-JISです" #=> エラーになる --------- #coding: cp932 p "このファイルはUTF-8です" #=> エラーになる --------- #coding: cp932 p "このファイルはShift-JISです" #=> エラーにならない --------- #coding: utf-8 p "このファイルはUTF-8です" #=> エラーにならない
入力は文字列なので文字列メソッドsplitを使って空白で区切り配列に変換することができます。 rubyの多重代入の仕組みを使えば改行区切りで入力するのと同じように変数に代入できます。 例 s1,s2,s3=gets.split(' ') puts s2 + s3
解決方法が書いてあるページを自分で挙げているので、なににつまづいているのかわからないのですが。
どのOSで何と言うバージョンのRubyを動かしたのか解らないので、対処方法も解らないが、、、 「 # encode:windows31-j print "日本語".encoding print "日本語" p RUBY_VERSION p Encoding.default_external p Encoding.default_internal p Encoding.locale_charmap p Encoding.aliases.sort 」 これをIRBの画面にコピー＆ペーストしたら、どうゆうメッセージが出ますか？
こんばんは。 相性はとても良いと言えます。 素人とありますが、極小規模の会社で一人で管理され、１日の取引がそんなに無いならaccessでも管理出来そうですが…それともそれなりの規模で100人単位で処理があり開発会社との折衝されるのでしょうか。 ある程度の規模ならサーバーはミラーリングし、バックアップも作る必要があります。 また、その場合言語はjavaが好ましいです。javaの技術者は多いし、情報が豊富、dbはSQLserverか、oracleあたりが標準です。予算、コスパを考え、決める必要があるので、良いでしょうかと言うより、開発を任せるなら何社か見積りで競合させて情報を引っ張り出したり、ご自身でやられるなら、安く済ませ、ミラーリングの組み方、バックアップの復元まで体制をよく考えればjavaとmysqlでも良いかと思います。 javaで作れる方がrubyを使うのは良いですが、いきなりrubyを使うのは私はおすすめできません。
・独習Ruby がおすすめです。 初心者向けに書かれていて、章末に問題もあるので復習もサポートされています。 少し慣れてきたら ・Ruby レシピブック303 の技 をお勧めします。 レシピを実際叩いていくことで、自分で膨大なプログラムを書こうとした時に使えるものが出てきます。 資格に関しては、重箱の隅をつつくメソッドや、大して使わない機能を求めるところがあるので、プログラミングをできるようにはなりませんでした。（体験談） Ruby 初心者でも、他の言語をやったことがある人ならば、いきなりレシピブックに入ることもありだと思います。 ただし、オブジェクト指向だけは理解しておきましょう。 頑張ってください。
>空白のあとの「J」を抜き出したのい グループを使います \s([a-zA-Z]) この正規表現だと括弧に囲まれた部分がグループになるので、perlなどの$1での参照とおなじようなことを、.group()でします 要するに、マッチさせてからさらに後で.group()で抜き出します
Rubyの間違いでは？ http://www.amazon.co.jp/ruby-%E5%85%A5%E9%96%80-%E6%9C%AC/s?ie=UTF8...
どの言語で？ -- C #include <stdio.h> int main(void) { __printf("computer\n"); __return 0; } -- C++ #include <iostream> int main(void) { __std::cout << "computer" << std::endl; __return 0; } -- D import std.stdio; void main() { __"computer".writeln; } -- Ruby puts "computer" -- Python print("computer") -- HTML or PHP computer
もしRubyに挫折したら、PHPにおいで。 PHPなら、知恵袋でもわからない点でも、回答してくれるひとが多いから。 全くの初心者なら、仲間が多いほうがいいでしょ。 Rubyには利点も多いので、続けるのは、否定しないけど。 本は、大きめの本屋で立ち読んでから、わかりそうなのを買え！が持論。 人の意見は、変なバイアスがかかっていることがあるから、当てにすると痛い目をみたりもする。
hoge(); fuga(); piyo(); を // hoge(); // fuga(); // piyo(); のようにコメントで（一時的に）無効にするのをコメントアウトっていうんですよ。開発ツールによってはキーボード一発でできたりするので、探してみてね。
ええーと、投稿された画像は小さすぎてエラーメッセージが見えませんが・・・、 恐らく権限の問題ではないでしょうか？ sudo gem install rails このようにしてみてください。
「アルゴリズムとデータ構造」関連の本があるといいですね。 プログラミング言語を学んでから何を作るか迷うことが多いので…… あとはやっぱり公式ドキュメントを読む習慣はつけたほうがいいですね。 https://www.ruby-lang.org/ja/documentation/
沢山あり過ぎるのだが、、 P 配列名 配列名.each {|e| p e} 配列名.count.times {|index| p 配列名[index] }
ウェブ系の開発なら、railsがあるRubyの方が優れているし、ゲームの開発なら、Javaの方が優れているでしょう
>amakusayuuyuuさん2016/5/307:21:44 >6こある要素を数字以外で1こずつ取り出す方法教えてください そのような基本的な事は書籍に必ず書いてありますし、検索でいくらでも出てきます。 調べずに学習せずに目的を達成したいなら外注すれば良いと思います。
array.each {|e| puts e}
肝心のエラーが書いてません。 これは、何処にエラーがあるか？ の部分です。 ○○○.rb の 203 行目と、209 行目あたりです。と書いてあります。 どっちかは、影響で出たエラーで本物ではないかもしれません。
配列とコメントは、全く関係が有りません。
できるからね、！！！
解決法ではありませんが、ミニツクは現在サービス停止しているようです。 ミニツクオフィシャルTwitter - https://twitter.com/minituku/status/725526520144392192 諸事情が、何を示しているかは不明ですが、現在はネットワーク応用通信研究所から情報が出てくるのを待つしかない状態です。 http://www.netlab.jp/
>Railsの最新の本ってないの？ Amazonを見ればいいんじゃないかな。
>sw677777さん2016/4/3021:37:47 >rubyの意味おしえてください 検索をせずに頭に浮かんだ事を次々知りたい場合は、リファレンス本を購入しましょう。
おはようございます。 h = {"Name" => "undefined", "Data" => 999} h["Name"] = "sw677777" という感じです。 参考 http://docs.ruby-lang.org/ja/2.1.0/class/Hash.html
>sw677777さん2016/4/3008:44:32 >rubyで出力のコードわからずおしえてください まずは必要以外の言語より先に、主語等、日本語を学ぶ所から始め、その後ほかの言語を学んだ方がいいと思います。
>sw677777さん >るびーで unlessはどのようなことで使うかおしえてください ”asss" .upeseが失敗するんですが" "はたとえばどんなのいれたらいいですか 文字うち練習なら何を入れてもいいと思います。
>sw677777さん >一つの要素ごとに改行する形で出力させたのはどう意味かおしえてください るびー まずは必要以外の言語より先に、主語等、日本語を学ぶ所から始め、その後ほかの言語を学んだ方がいいと思います。
>sw677777さん2016/4/3021:37:47 >日本語だと表示できなく教えてください まずは日本語を学ぶ所から始め、その後ほかの言語を学んだ方がいいと思います。
>sw677777さん2016/4/3011:05:50 >ruby test rbおしえてください 目的が無ければ判ることだけで組めばいいと思います。
画面に出力？でよいん？ こことか参照。 http://qiita.com/machu/items/91038f4d4a3b9b5bd6f1 一年前だから古いか。 私もそうだが、みんなRubyって、まだ知名度ほどは知らない言語なんですね。 PHPなら、３分後に回答がついてもおかしくないのに。
>sw677777さん >配列のきそしかわからずおしえてください 目的が無いのなら基礎だけ覚えておけば十分です。
> resource :projects 「resources」ではないでしょうか？
sw677777さん elsifは使わなくても、下記と同じ動きになるプログラムは作ることもできます。 ＞これの使い方がいまいち分からず教えてください では、貴方の解る方法で、下記と同じ動きになるプログラムを作ってみましょう。 「 tuki=gets.chop.to_i if tuki==12 || (1<= tsuki && tsuki <=2) puts "冬です" elsif (3 <= tsuki && tsuki <= 5) puts "春です" elsif (6 <= tsuki && tsuki <= 8) puts "暑いでしょう" elsif (9 <= tsuki && tsuki <= 11) puts "秋です" else puts "1から12の月では無かったです" end 」 動作を確認するには、上記コードを下記URLの画面に入力して"run"ボタンを押せば、確認できます。 https://repl.it/
hatiken_l_elf さんの回答があまりにも的外れで笑えますね…Rubyには構造体も関数も存在しないというのに… クラスメソッドは、インスタンス変数を使用せず、メソッドというよりは関数に近い処理をする場合などに使われます。 (そして、基本的にはクラス内にインスタンス変数が一つも存在せず、メソッドが全てクラスメソッドとして実装可能な場合に用いられます) 例えばMathモジュールの実装を見ると参考になるかもしれません。 クラス変数は、「変数を複数のインスタンスの間で共有したい」場合や、「クラスのインスタンスが一つしか存在しないことが保障されている」場合などに使いますが、多くの場合はバッドノウハウだと判断されます。 クラスメソッドは良いのですが、特別な理由が無い限りクラス変数は使用しないでください。 すみません、インスタンスメソッドの利用を制限する…は意味がわかりかねますので、もう少し詳しく書いていただけますか。
クラスのインスタンスを生成する際に initialize メソッドが呼ばれることを解説しています。 例えば、 shop = Shop.new("apple") などとしたときに、initializeメソッドの中身が実行されます。
>sw677777さん2016/4/2919:38:38 >rubuのifはどのような使い道あるんですか 何も学習しない人には使い道は有りません。
>あとなにがあればrubyで開発できますか 視認性のよいフォントです 下記のサイトからフォントをインストールして下さい 見やすいプログラミング用フォント「Ricty Diminished」をWindowsにインストールしてSublime Textで利用する方法 http://nelog.jp/how-to-use-ricty-diminished-font もちろん、他のフォントを探して入れるのでも結構です。しかして、良いフォントはカネがかかります。 ＊＊＊ あとは、アンチエイリアスが効いてない環境ならば、MacTypeなども必要でしょう プログラミングでは長時間に渡って文字を見つめているので、文字がクソでダメだったら、あなたのやる気が削がれます。なので、私は文字表示を良くするMacTypeというものを入れていますが、Windows10だとMac並みに文字の表示が宜しいかもしれないので、入れる必要がないかもしれません。 Windows10 のフォント描画を綺麗にしよう！ ～ MacType の適用とシステムフォントの変更 - カモメのリズム http://www.kamomer.com/entry/windows10-font-mactype ＊＊＊ まずは見映えからキめるのがこの業界の掟です。往々にして、見映え（見てるモノ）が脳に作用するので、ソースコードの出来不出来を決めてしまいます。 あとはサクラエディタのシンタックスハイライトを使いこなすと、視覚的に有利なプログラミングができます。それを使いこなすには正規表現の知識が必要ですが、それはperlとかrubyで学ぶことが出来ます。
hashは、辞書の見出しみたいに短いkeyと、その辞書の用語説明みたいに長いvalueの対応付けを記録するために使用します。 「 p="3.1415926535" myHash1={} p.each_char.with_index {|c,i| myHash1[c]=i} p myHash1 myHash1.each_pair {|key, value| puts "#{key}は#{value}番目の文字でした"} 」 上記を実行すると、「”1は4番目の文字でした”」等が表示されます。
>rails は本当に難しい 具体的に分からないことを洗い出すところからやってみるのはどうでしょうか。 質問者さんはJavaやPHPについては理解できるということですので、 Railsの"設定より規約"というところがつまずきポイントなのではと思います。 （＝ルールを知らないと使えない。その代わり設定は少ない。） これはもう覚えるしかないので、分からないことを洗い出し、1つずつ覚えていくというのが遠回りのように見えて一番の近道かと思います。
一般的に、[ ] で囲まれている部分は省略可能という意味で使われることが多いです。 逆に、[ ] で囲まれていない "文字列"（リンクの表示部分）と "パス"（リンク先）は省略することができません。 Google で検索する限り「link_to(文字列, パス [, オプション, HTMLオプション])」は railsdoc.com から拾ってきたものと思われますが、内容に不正確な点があったり、さらに管理者が不明であるなど、正直参考にするのはお勧めできるものではありません。 個人的には公式のドキュメントの翻訳である railsguide.jp をお勧めしておきます。 http://railsguides.jp/
実行する際にコマンドプロンプトにドラック&ドロップしたとのことですが ruby プログラムの実行方法は、ruby filename.rb (filename:自分のプログラムの名前 , .rb は拡張子です。 プログラミング初心者とのことですが、どの程度初心者かはわかりませんが実行方法がわからないのであれば、Hello world! という誰もが一番最初に書くコードがあります。まずはそれを参照してみてはいかがでしょうか？ http://magazine.rubyist.net/?0002-FirstProgramming 少し本題から外れましたが このプログラムのエラーとしては、`(バックスラッシュ：shift押しながら@)を使っていることです。 puts や obj.new()の（）の中は、` ではなく、'(シングルコーテーション：shift押しながら7)や"(ダブルコーテーション：shift押しながら２)を用います。 ４６、４７行目を puts('Unmo System prototype : proto') #5 proto = Unmo.new('proto') 上記をコピペして書き換えてみてください。エラーがなくなるはずですよ。 頑張ってください。
for i in (0..10).to_a.reverse puts i end おそらく質問者さんと同じサイトの問題をやっていますが、元コードに一番手を加える量が少ないのはこんな感じですね。このサイトだと出力結果を自分で確認出来ないのですが、printでは改行なし、putsは改行ありで出力するということはしっかり覚えておいたほうが良いです。
Ruby のインスタンス変数（@ivar）は Java のインスタンス変数に相当します。ローカル変数も同じです。ですからインスタンス変数にアクセスできるのはそのインスタンスの中から、ローカル変数にアクセスできるのはそのメソッドの中からのみです。 Rails でコントローラで設定したはずのインスタンス変数がビューから見られるのは特殊な例で、レンダリングの前に instance_variable_get を利用してコントローラからインスタンス変数をコピーしています（かなりむりやりですね）。 https://github.com/rails/rails/blob/v4.2.6/actionpack/lib/abstract_... https://github.com/rails/rails/blob/v4.2.6/actionview/lib/action_vi... Ruby のシンボルに相当するものは Java には存在しないのでわかりにくいかもしれませんが...。 シンボルは任意の文字列と 1 対 1 で対応するオブジェクトです。「1 対 1」というところが重要で、どのように生成された場合でも同一のオブジェクトとなります。 そのため、シンボル同士の比較では文字列の中身を比較する必要がなく高速に行えたり、新しいオブジェクトを生成しなくて済むのでメモリや GC に優しいなどの理由で、Hash のキーや enum の代わりとして様々なところで利用されます。 例えば、次のコードでは合計 20 個の String が生成され、10 回の文字列比較が必要です: 10.times { "abc" == "abc" } が、次のコードでは Symbol は 1 個しか生成されず、10 回の整数比較で済みます: 10.times { :abc == :abc }
法律、消費者問題のカテゴリで相談された方が良いように思います。 知恵袋トップ>暮らしと生活ガイド>法律、消費者問題 http://chiebukuro.yahoo.co.jp/dir/list/d2078297944/
母種？ 募集の間違いでは？
どれも一般的に行なわれているかと思いますが、場合によって使い分けます。 * オープンクラス メリット: 最も手軽 デメリット: 問題が起きた際の切り分けがしづらい、上流のバージョンアップで壊れやすい * モジュールを作り include させる メリット: 手軽、特に Rails なら ActiveSupport::Concern が使える デメリット: オープンクラスとほぼ同様 * gem を fork する メリット: 予想外の挙動をしづらい デメリット: 面倒、上流の変更に追いつくのが大変である 書き換えたいメソッドの内容、そのメソッドを使用する場面にもよりますが、もし Refinement が使えるのならば使用するべきです。 もちろん書き換えないで済むのが一番ですから、もし自分以外にも役立ちそうな変更であれば、上流に直接パッチを投げても良いと思いますが。
amakusayuuyuuさん,sw677777さん Rubyの問題集の書籍は在るには在るが、 「ひらがなを覚えた後でないと、国語辞典を引くことすらできない」という段階に相当する、基本文法を学ぶことができそうな問題集は在りません。 ・Ruby技術者認定試験合格教本 Silver/Gold対応 Ruby公式資格教科書 単行本（ソフトカバー） – 2015/8/21 書籍を購入する前に、下記の問題集の例題位は、irbコマンドで実行させてみたほうが良いでしょう。 ・Ruby手ほどき ６題 http ://ideone. com/41yUao ・Rubyプログラミング５０題 http://klis.tsukuba.ac.jp/klib/index.php?plugin=attach&refer=KISL%2... また、色々な参考書を読む前に、下記のURLの記事を流し読みしておいたほうが良いでしょう。 引用「 ・第1章 Ruby言語ミニマム http://loveruby.net/ja/rhg/book/minimum.html ★オブジェクトに対してはメソッドが呼べる。 "content".upcase() ここでは文字列オブジェクト（内容は「content」）に対してupcaseメソッド を呼び出している。upcaseはアルファベットの小文字を大文字にした新しい文 字列を返すメソッドなので、次のような結果になる。 p("content".upcase()) # "CONTENT"と表示される ★メソッド呼び出しは連鎖してよい。 "content".upcase().downcase() この場合、"content".upcase()の返り値のオブジェクトに対してdowncaseメソッ ドを呼ぶ、ということになる。 」引用 終わり このサイトは、Rubyを作った人たちの一員が書いた資料で、「これでRubyの全てで、他の資料に書かれていることは、この応用か、単なる補足説明で文章が膨らんである内容だ」とも言える、高密度な資料です。 if文やfor文ですらメソッド呼び出しの記法を簡略化したものだと解釈できれば、覚えるべきことを随分減らすことができます。
その現象が発生するとき、共通の何かがありませんか？ 特定のコードを実行したときとか。 手元の環境だと特に何もないのですが。。。
エラー文の通りです。 rails new コマンドは引数（APP_PATH）として Rails アプリケーションのテンプレートを生成する先のパスを要求します。 詳しくは rails new --help を実行してください。 % rails new test_app       create       create README.rdoc       create Rakefile       ... こうすると、test_app というディレクトリが生成され、その中に Rails アプリケーションのテンプレートが展開されます。
> /var/lib/gems/2.1.0/gems/execjs-2.6.0/lib/execjs/runtimes.rb:48:in `autodetect': Could not find a JavaScript runtime. See https://github.com/rails/execjs for a list of available runtimes. (ExecJS::RuntimeUnavailable) JavaScript の処理系のインストールが必要です。 対応する処理系はいくつかありますが、最近では Node.js がおすすめです。なんらかの方法で Node.js をインストールすると動作するようになるかと思います。 使用している OS にもよりますが、公式パッケージリポジトリにある場合が多いのではないでしょうか。
year >= 1926 && year <= 1988 かな。
公開プロパティを先に教えればいい。 プロパティを非公開にする方法を教えれば、非公開のプロパティだが外からその値を参照したい、という場合どうするのか、という話に自然となるはずだ。 まあ、ゲッターなんぞなくともプログラムは書けるけどな。
postgresはデフォルトのクライアントエンコーディングはOS依存となります。 そのため、Windows環境の場合はShift-JIS(MS932)でエラーメッセージが出力されてしまいます。 postgresql.confのclient_encodingにUTF8を設定してみてください。
こちらは見られましたか？ http://d.hatena.ne.jp/iriya_0624/20130424/1366783019
こちらで回答済み。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1415767101...
if(の中)は複数の論理値は受け付けません。 ifelseの方なら可能です。 #私ならapply系関数[他言語で言うMap処理]で処理しますが、 seiseki <- data.frame(   ID=1:5,   tensu=c(89L, 70L, 58L, 42L, 16L),   flag=rep(0L,5)     ) seiseki$flag <-   sapply(seiseki$tensu,function(x)        if(80<=x) 5L   else if(60<=x) 4L   else if(40<=x) 3L   else if(20<=x) 2L   else           1L ) #やろうと思えば別にifelseでも処理可。 seiseki$flag <-   ifelse(80<=seiseki$tensu,5L,     ifelse(60<=seiseki$tensu,4L,       ifelse(40<=seiseki$tensu,3L,         ifelse(20<=seiseki$tensu,2L,           1L) ) ) ) ちなみに、 if(60<=x<80)～ ↑コレも不可能なので、 if(60<=x&&x<80)～ のように書く必要あり。 [前者を受け付ける環境(Python,Mathematica等)は少ない]
https://www.ruby-lang.org/ja/documentation/quickstart/ 本家がいいのでは？
InData=[0,3,0,0,1,2,0,3,1,2,2,0] t=[] t[0]=[0] t[1]=[1,2,3,4,5] t[2]=[6,7,8,9,10] t[3]=["a","b","C","d","g"] p t.map{|e| t[e].choice}
numをソートして、上から順番に拾っていけば問題なく動くかと思います。 今、v[1]からv[5]って恐らく敏捷値だけかと思いますが、代入の際にアクターのidを一緒に入れてやってください。 v[1] = [敏捷値,アクターid] 取り出す時はv[1][1]がアクターidです。一人目のidなら、num[0][1]、二人目ならnum[1][1]です。 似たようなのを先日回答してますんで、そちらの自分の回答もご参考にされてみてください。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1215837248... ---------------------- GYM（音源作ったりRGSS3素材を配布したりしています） http://gymaterials.jp/ ----------------------
end の位置が悪い def listID(na,num) の後ろに end があるけど，class Log を閉じるためには前に必要． class Log __attr_accessor :name,:pass,:ch __def initialize(name,pass) ____@name=name ____@pass=pass __end __def disp ____puts "名前: #{@name} 番号: #{@pass}" __end end # これね def listID(na,num) __lists={} __lists[na]=num end # end # これは要らない あと，知恵袋でコード乗せるときは半角アンダースコア（"_"）でインデントを加えることが多い． その方が見やすいので親切
Rubyっていうか、一部のRuby至上主義ユーザーがうざいので、スカラに乗っ取られていて、１０年後には、「Rubyって言語が一時期流行ったよねー」的な使いになっていることを希望。ｗｗｗ
> Too many open files - socket(2) OS は何を使用していますか？ 一般的な Linux ディストリビューションでは、プロセスあたりのファイルディスクリプタ数の上限が 1024 に設定されています(ulimit -n で確認できます)。 つまり、同時に開けるファイル・ソケットの数が 1024 に制限されています。 (Linux であれば) /etc/security/limits.conf に * soft nofile 65535 * hard nofile 65535 と追記し、再度ログインしなおせば上限を 65535 まで上げることができます。 # ただ Ruby の場合 GVL がありますから 2500 スレッド生成したところで同時に実行されるスレッドは 1 つだけなので、何か設計が間違っているような気はします。スレッド生成コストってかなり高いですし... # 大量にスレッドを生成せず大量のファイルディスクリプタを操作する(非同期 IO)ライブラリはいくつかあるので、それを試してみても良いと思います(EventMachine や Celluloid::IO など)
こんにちは。 eclipseやxampp等の統合環境を使えば良いですよ。 ruby on rails eclipse ruby on rails xampp 等の検索ワードで様々な環境構築方法が拾えますし 初めてであれば、関連書籍（なるべく新しいもの）も沢山ありますので御自身で分かりやすい入門書を入手するのが良いと思います。 参考 http://tikuflower.blogspot.jp/2015/01/ruby-on-rails-4windowseclipse...
下記URLに、Rubyで書かれたゲームがあって、”RUN”ボタンを押せば遊べるし、"CODE"ボタンを押せばプログラムの内容を見ることができます。 http://www.playmycode.com/play/game/cainy393/crappy-bird 何種類ものゲームのプログラムが掲載されているので、試してみて、 「面白いと感じるゲームのプログラムは、何行位か？」数えてみれば、自分で作る大変さが解るでしょう。 そこで挫折しなければ、ようやく、プログラミングに入門できるでしょう。
どうもなりませんが。
あなたが何をしたいのかによります。
Railsだったら https://c9.io/ > オフラインで書いたコードをテストできるソフト 同じくCloud9上で可能だと思います。
3 つめの例で出るエラーは TypeError: no implicit conversion of Fixnum into String ではないでしょうか。 Ruby では文字列（String）と整数（この場合は Fixnum）は直接 + で連結することはできません。ですので、先に整数を to_s メソッドによって文字列に変換してしまえば良いです。 str = "nya" num = 123 puts str + num.to_s # => nya123 今回は文字列がリテラルなので、式展開を使うこともできます。こちらであれば明示的な to_s は不要です。 num = 123 puts "nya#{num}" # => nya123 式展開についてはるりまのページもどうぞ: http://docs.ruby-lang.org/ja/2.3.0/doc/spec=2fliteral.html#exp
もう１０年後Rubyがまだあったら、就職にも有利です。たぶん。 現状まだ、Rubyってベンチャー案件でしょ。 で、ベンチャーってどういう意味だ？と改めて調べたら、 /// ベンチャーとは、ベンチャー企業、ベンチャービジネスの略であり、新技術や高度な知識を軸に、大企業では実施しにくくなる。 /// とのこと。 あと、ひとつの言語のみでは、就職は難しいか、Ruby好きな会社じゃないと無理な気がします。 しかし、言語的には優れているらしいので、知っておくと便利は便利なのかもしれないです。
>付属のテキストを読めば上記の仕様に変えられますか？ まず無理ですね。RUBYのソースが読めないと改造は難しいです。 キャラを1.5マスから2マスにするのはキャラチップの大きさの問題ですので、それはすぐできると思います。
答えは自分で書いてるじゃないですか。。。 -でも整数として管理される ->シンボルはメモリが経済的 -シンボルを変更は出来ない
Ruby言語を入門書を見ながら試しで使うだけなら、何もインストールする必要は無く、ブラウザ操作だけでも済みます。 (a) ブラウザの向こう側でRubyを動かす方法； 下記ＵＲＬを開いてRubyコードを”１行づつ”コピー＆ペーストすれば、Rubyコードが動いた結果をブラウザ上で見ることができます。 このリンク先の”来月のカレンダ表示”の例題コードを、貴方なりに改造して、ブラウザ越しで動けば良いでしょう。 転記元： http ://ideone. com/41yUao 転記先： https : //repl. it/ ペーストする前に、”行番号を取る”位は 考えてネ。 (b) グラフィカルな動きをスマホでも見たい場合 下記のサイトのアカウントを作って、知恵袋への投稿のように、コードを入力してRUNボタンを押すだけです。 http ://www.playmycode. com/build/edit/11810 (c) macのterminalの中でRubyを動かしたい場合； 上記まで やってみて、物足りなさを感じたら、いよいよ、macのterminalの中でrubyのIRBコマンドを起動して、Rubyコードを入力すれば良いでしょう。
>taketoshisamaさん2016/4/1202:00:02 >sublimetext3でrailsをコーディングしているのですが、その際に ><%◯◯◯%>と記載する文章をショートカットキーで作る手段ってないですか？ ドキュメントに書いていないのなら無いと思いましょう。
こんばんは。 １．iPhoneブラウザ(Safari)-フォーム入力画面 ２．CGI（DB処理） ３．iPhoneブラウザ（完了画面） といった感じでしょうか。 iPhoneブラウザ(Safari)からすると、送信したあと、結果のHTMLが分からない状態になっているようですね。 状況により様々考えられますが。 考えられる原因 １．の入力画面で送信する時の処理に問題があるパターン →１の送信時にjavascriptを使用している場合、submitはされたが遷移が出来なかった可能性。 ２．のDB処理後、確認のHTMLを生成しているが、その際のヘッダー処理がiPhoneブラウザ(Safari)が許容しない内容であった可能性。 ２．のDB処理後、iPhoneブラウザ(Safari)が解釈できないHTML構文を書いていた可能性。 iPhoneブラウザ(Safari)自体の動作不良（キャッシュを消すなりアプリを入れ直すなり） iPhoneブラウザ(Safari)自体の仕様を超えるページで合った場合（ページ容量が大きすぎた等） 参考まで。ではでは。
それらはローカル変数ではなく、Seat クラスのインスタンスメソッドです。つまりレシーバの省略されたメソッド呼び出しです。ですからこの場合は self.baggage() > self.flight().baggage_allowance() のように、self. と () を補っても動作するはずです。 正確には xxx によるメソッド呼び出し（関数形式と呼ばれます）と self.xxx による呼び出しは違うのですが、今回は baggage も flight も呼び出し制限（visibility）が public ですから違いはありません。
情報が足りなくてよくわからないのですが.... このコードの year には 2016 のような数字が格納されるものと考えますね。でしたら、100 で割ったときの剰余を取ればよいでしょう。 year2 = year % 100 #=> 16 ただこの場合、例えば year が 2008 であった場合 year2 は 8 になってしまいますが、実際は "08" となってほしいでしょうから、String#% を使って year2_str = "%02d" % year2 #=> "08" でどうでしょう。 String#% について詳しくはるりまを参照してください http://docs.ruby-lang.org/ja/2.3.0/method/String/i/=25.html
>なにか仕事ありますか？ ハローワークに行けば沢山有ります。
Ruby 本体にはありません。 ですが、標準添付される RubyGems（gem コマンド）の設定ファイルは存在します。 通常は /etc/gemrc と ~/.gemrc が読み込まれます。php.ini と違って変更する機会はめったにないかと思いますが...。 標準で使用する gem リポジトリや、各 gem サブコマンドを実行した際にデフォルトで有効にするオプションが設定できます。 http://guides.rubygems.org/command-reference/#gem-environment Rails にもグローバルな設定ファイルは存在しません。個々の Rails アプリケーションはそれぞれ独立したアプリケーションですから。
>C,Java,Rubyでの書き方 まずperlだと下のようになります use strict ; use warnings; my @array = (1..10); print join " ", @array, "\n" ; ＊＊＊ なのでrubyだとさらに下のようになります arr = [1,2,3,4,5,6,7,8,9,10] puts arr.join(" ") ＊＊＊ 従ってperlだと1から10までを足すときは"1+2+3+4+5+6+7+8+9+10"という文字列を作ってevalすると晴れて55が出ます 文字列をわざわざつくって評価しているところがスゴいですね。 use strict ; use warnings; my @array = (1..10); print eval( join "+", @array) , "\n" ; ＊＊＊ そしてrubyではそれを一気にやるための専用の関数たるreduceが用意されてるのでそれを使うと合計の55が出てきます arr = [1,2,3,4,5,6,7,8,9,10] puts arr.reduce(:+)
とりあえず、アマゾンなどのECサイトにチャレンジするのがいいです。 現実問題として、料理と作ったことのない人に、どんな料理が作りたいといっても、 正しい解答ができるわけがありません。 それよりもまず、具体的に何を作るのかを実戦するのがよいかと思います。 個人的には好きなものを作るは駄目だと思います。 理由は、好きなことというのは、自分が理解できているものに直結するので、 全部を理解しているならともかく、現状、あやふやな状態ではお勧めできません。 個人的にECサイトをお勧めするのは以下の理由です。 1．Webサイトでイメージしやすく、また見本が多い。 2．DB操作、ファイル管理、クッキー、セッションと、 Webサイトの基本となる操作が全部ある。 とはいえ、全部を一度に実装するのは大変なので、ログイン認証とか 個別機能を少しずつ実装していくのがよいと思います。
tabashyさん ”A"のデータの様に、二つの行だけではなくて、 ”C"のデータの様に、多数の行が重なる場合の処理について定義が足りないと思うが、、 コレで合っている？ ["A", 1, 10, 1, 13] ["A", 2, 13, 1, 13] ["A", 3, 9, 1, 10] ["A", 3, 100, 3, 100] ["B", 1, 10, 1, 10] ["C", 10, 20, 8, 23] ["C", 11, 12, 11, 12] ["C", 14, 23, 10, 23] ["C", 13, 22, 9, 23] ["C", 9, 19, 8, 22] ["C", 8, 17, 8, 20] だとすれば、そのRubyコードは、以下。 http ://ideone. com/Cq3URE
作りたければ、ちゃっちゃと自分で調べて、作ればいいじゃん。 https://prog-8.com/lessons/rails/beginner
その変数のobject_id（アドレスみたいな識別情報）が、呼び出し元と同じだったら参照渡し、違っていたら値渡しだと思えば良いでしょう。 >参照渡しなのか値渡しなのかはどのように区別したらよいのでしょうか。 「 def func1(a) p "before value=" + a.to_s p "before arg.object_id=" + a.object_id.to_s temp = a + 1 p "temp.object_id=" + temp.object_id.to_s a = temp p "after value=" + a.to_s p "after arg.object_id=" + a.object_id.to_s end a= 10 p "callers opbject_id=" + a.object_id.to_s func1(a) p a 」というのを実行してみると、 「 "callers opbject_id=21" "before value=10" "before arg.object_id=21" ここまでは、呼び出しもとの参照渡しになっている "temp.object_id=23" ## ここでtempという新たなオブジェクトができている "after value=11" "after arg.object_id=23" ＃＃ コレは奇怪でしょう。 aという引数のidがtempのidに変わっている。 つまり、呼び出し元のaという変数の中身は変わっていない 」 こうゆうのを”参照の値渡し”と言うのだそうです。 http://magazine.rubyist.net/?0032-CallByValueAndCallByReference ＞参照渡しのようにメソッドの中でnumの値を変える書き方はあるのでしょうか？ 関数指向な「単一代入。 値が変わったら別の変数名を 次々に使う」というスタイルで、mapメソッドとか 殆どのメソッドが使えるので、プリミティブ型の変数の内容は変えれなくても良いと思います。 でも、そうゆう押し付けガマシサが強くは無いのが、Rubyの特徴で、、、出来ないわけでは無い。 呼び出しもとの変数の値を入れ替えたい場合は、変数の存在を管理しているbindingというオブジェクトと、更新したい変数のシンボル（名前渡し）とを渡せば良いです。 「 def updateValue(scope,valSymbol) val = scope.local_variable_get(valSymbol) val = val + 1 scope.local_variable_set(valSymbol, val) p val end updateValue(binding,:a) p a 」実行結果は、http ://ideone.com/4Evs2e
http://ejje.weblio.jp/content/chomp
私はN88Basicをやりましたねぇｗ 大学の卒論のデータ解析の為に勉強して、作ってました。 その頃は、それがプログラミングとして一般的でした（古っ！！）
比べる対象が違いますよ。 比べる対象は、Visual Studio（.NET系開発環境）と 統合開発環境Eclipseを比べて下さい。 （もしくは、他の統合開発環境と比べる） Windowsを使うのならば、断然とVisual Studio（.NET系開発環境）がよいです。 オープンソースと言う意味では、統合開発環境Eclipseが、断然とよいです。
前者のforは 1.step(100,3){|i| # 処理 } 後者の逆順は (0..10).to_a.reverse ループで使うのでしたら 10.step(1,-1) 10.downto(1) でも可能 また 10.step(1,-1).to_a 10.downto(1).to_a とすると配列が得られます。
giggsister1996さん プロゲートとかいうサイトの教材というと、”たのしいRuby”という書籍の範囲を一寸下回る程度ですね。 であれば、知恵袋のRubyカテの住人には 私より詳しい人もいるが、、、 わざわざ”Ruby大師”さまの御出ましを待つほどのことは無いです。 (1) Rubyの手ほどき; 下記のリンク先に、６個の 手ほどきコードが入っているので、写本して実行してみよう。 http ://ideone. com/41yUao これらは、if/while/classなど 使っていないし、 ６題目の”来月のカレンダー表示”でも、６行のコードです。 でも、まず、「何故 このコードが、動くのか？」を理解できているか？復習 (2) "第1章 Ruby言語ミニマム"で、上記のコードの動きをオサライ； http ://i.loveruby. net/ja/rhg/book/minimum.html このサイトは、Rubyの実装にも関わっている御尊人様の記事で、高密度でRubyの説明がされています。 一番感銘を受けているRubyの文法の説明は以下。 「 ・オブジェクトに対してはメソッドが呼べる。 "content".upcase() ・メソッド呼び出しは連鎖してよい。 "content".upcase().downcase() 」 この意味を良くかみ締めて、if文ですら 「（条件式オブジェクト）.then{条件成立時に遅延実行されるブロック引数} .else{条件不成立時に遅延実行されるブロック引数}」 というメソッドの連鎖を簡易的に記述できるようにしたものだと理解する。 そして「｛地、水（氵さんずい)、火、風（几部きぶ）｝と、｛日｝という部首の組み合わせで、｛圼、汩汨沓、炅炚、凬｝という漢字を造るコトができるように、Rubyではメソッドと引数の連鎖で色々なことが、何通りかの方法で出来る」ということを、覚え直す。 (3) 基礎ばかりだと飽きるので、「５分野制覇」を体験； 他の言語では披露されたことが無い、下記の５分野の”入門的コード”を動かす”体験”をしてみよう。 (a) サーバ系通信ソフト： プロクシを挟むインターネット越し通信で、amazonサイトで販売されている書籍の数を数え上げるコードは、Rubyで約５０行 http://code.runnable.com/VbO19zhQEB0_gJHW/amazon-book-count-by-word... (b) デスクトップ対話型アプリ：「暗記帳」; BGM付きでグラフィカルに動き、Windows PCだけではなく、macでもiPhoneでもAndroidでも、共通して使えるツール。 Rubyで約３０行 ｈｔｔｐ://www.playmycode.ｃｏｍ/build/edit/11810 (c) パズルを解いたりや天気予報みたいに大量計算を伴う処理； Rubyなら虫食い算を解くコードが７０行。 http : / /ideone. com/qoVDih template=2??5 + ?38? * ??4/5?-?? = ?3?2 "((((2005+1380)*154)/55)-86)=9392" "((((2005+1380)*154)/55)-96)=9382" "((((2005+1383)*154)/56)-15)=9302" Rubyでは15秒で21個まで出力できている。 もし、”ナンチャッテC言語プログラマ”から「C言語なら爆速」とか言われたら、「コノRubyコードより早いコード書いて見せて！」と言い返せばよい。 C言語系だと、このコードより随分長いか遅いか、劣ったコードしかかけないもので、自身をモッテRubyを学ぼう。 (d) Microsoft社のEXCELみたいな電卓として； RubyのIRBコマンドを起動して、下記の１行を入力するだけで、分子＆分母合わせて８千桁の数値が出力される。 「 (1..10000).map{|n| rational(1,n)}.inject(:+) 」 http ://ideone. com/41yUao (e) 組込み機器分野；Raspberry PiとRubyでLED制御； https : //www.raspberrypi . org/documentation/linux/software/ これらの”入門的コード”に、貴方なりのアレンジが加えられれば、さらに良いでしょう。 (4) Rubyでアルゴリズムを学ぶ； アルゴリズムと言うのは、国語で言うと慣用句みたいなもので、少々実用的なコードを書きたいなら、覚えておいたほうが良いコードの見本です。 下記のリンク先には、C言語で書かれていたコードをRuby言語に直訳されたコードがあります。 それを、「モット Rubyらしく書き直す」というトレーニングをすれば、随分 実力アップできるでしょう。 http ://www.mnet. ne.jp/~tnomura/algorithm.html
どちらも役立つので好きな方を。
好きならば中学生でも十分できると思います。
たぶん正しい答え：なんでも（ただし実行速度が問題にならなければ） 簡単なところでいくと Web アプリケーション Twitter は昔 Ruby で動いてた
my_car.color=gets,chomp この行のgetsのあとがコンマになってますね。 ピリオドに変えればいけるんでは？
後者で問題がないのであればそれで良いのではないでしょうか。 -Ku は「UTF-8 を使用する」という意味ですから、現在の Ruby では不要です（デフォルトです） つまり、先頭の #! ruby -Ku require "kconv" の行は不要です。 また、明示的にエンコーディング変換が必要な場合は String#encode を使用します。 例えば、UTF-8 な文字列を ISO-2022-JP（いわゆる JIS）で出力する場合は "漢字".encode("ISO-2022-JP") です。 参考（るりま）: http://docs.ruby-lang.org/ja/2.3.0/doc/spec=2fm17n.html http://docs.ruby-lang.org/ja/2.3.0/method/String/i/encode.html --- Kconv は obsolete で、互換性のためだけに残されています（Ruby 1.9 以降ではもっと便利な M17N 対応が備わっているので使用する必要はありません） また、Ruby 2.0.0 以降では標準のエンコーディングは UTF-8 に変更されたので、通常 (en)coding マジックコメントは必要ありません。 なお、現在公式なサポートがある Ruby のバージョンは 2.1 系以降ですから気にする必要はないでしょう。
noobprojさん .to_symメソッドを使えば良いのでは 「 result = {:hoge => {:huga => 123},:bar=>{:bas=>456}} str="huga" puts result[:hoge][str.to_sym] 」
起動しなくなったのはいつからですか？ Ruby を 2.3.0 に更新した後なのか、apt-get/yum 等でシステムを更新した後なのか、bundle install をした後なのか、詳しく教えてください。 文面（image not found）を見る限り、以下のどれかが原因であることが多いと思われます。 * MeCab がインストールされていない（アンインストールしてしまった） → インストールしてください。 * インストールはされているが libmecab.so.2 を見つけられない → ld のキャッシュが壊れている可能性がある → sudo ldconfig を実行してください * libmecab.so.2 は存在し、見つけられるが開けない → システムと互換性のない形式である。libc 等システムの更新後に起こる場合があります。 → MeCab を再インストールしてください。 なお、find コマンドの出力する find: /dev/fd/3: Not a directory は今回関係ないので無視してください。
＞コマンドプロンプとを立ち上げ、ｃｄコードを入力とあるのですが、その通りに入力すると 質問者さんの環境による部分を考慮して入力されたでしょうか？ 例えば - デスクトップにrubyというフォルダを作った となれば C:\Users\ここにユーザー名\Desktop となります。※当然ですが、ここにユーザー名と入れてもダメですよ。 余談ですが CD cd %userprofile%\desktop とやればデスクトップに移動できます。 余談終わり コマンドプロンプトへドロップして表示できるということはパスが通っているようですね。 色が変化する件はちょっとわかりません。 画像があったら何かわかるかもしれませんが、もしアップする際はユーザー名とか個人的な情報が映りこむ可能性があるので注意してください。 (ユーザー名とかその他いろいろ)
チェックボックスというかラジオボタンの方がいいですよね。 value属性にそれぞれ0, 1, 2を指定して計算、出力すればいいんじゃないですかね。
fact(n-1)の部分で自分自身の呼び出しが起こり、 一つ小さい階乗を再計算しにいってるからです。 https://ja.wikipedia.org/wiki/%E5%86%8D%E5%B8%B0#.E5.86.8D.E5.B8.B0...
vagrantからchefを呼んでるんでしょうか？ ruby-buildというのはchefのクックブックですか？
StackOverFlowでも同様の質問が上がっていました。 http://stackoverflow.com/questions/30665912/no-ruby-devel-in-rhel7 どうやらオプションのリポジトリを有効にしないといけないっぽいですね。 本番のWebサーバでなく、開発用のワークステーションならば、rpmfindとかで適当な野良rpm拾ってくるとか、CentOSのリポジトリからもらってきて使うとかいう方法でも良さそうな気がしますけどね。
例えば、こんな感じでしょうかね。 #//codepad.org/517Vfukj def np(l,a=[],z=[])   if l==0     z<<a   else     [0,1].each{|j| np(l-1,a+[j],z)}   end   z end puts np(2).map{|e| e.join(',')} puts puts np(3).map{|e| e.join(',')}
RUBYは こんにちは。 大切なものです。
どの問題なのか分かりません[自分でリンク 踏んで見て下さい]が、恐らく以下の行で s = 0; a.times do |k| s を都度クリアしないと、 ・一列目と二列目が全く同一 -> ｘ＋＝２ ・一列目と二列目が一箇所だけ異なる -> ｘ＋＝１ にならないのでは 無いかと邪推。
フツーに再帰で順番に入れていくだけで良いような。 #//codepad.org/UBKbKS6C def np(a,i,m,n)   if n-1<=i     p a+[m]   else     (0..m).each{|j| np(a+[j],i+1,m-j,n)}   end end np([],0, 2,3)
何も判らない＆学習しないで行いたい場合は、ブラウザーメニューの ファイル→保存を使って保存すると良いと思います。
やはり、Linuxでしょ。 Rubyにバグがなくても、Rubyが重い、不安定と言われる原因は、本来はLinuxで使うRubyをCygwinによりWindowsで動かしていることが外因かと。 だから、本来のRubyの魅力は、Linuxこそだと思います。
RUBYは いいものであると 思います。
x = y だけじゃ参照のコピーにしか ならないから。 [質問者の想定する結果になる言語もあるけど] 実体のコピーが欲しけりゃ x = Array.new(y) とでも すべきかと。
tabashyさん 複数列のファイルを読み書きする場合は、CSVクラスを使うと便利です。 「 require 'csv' 1.upto(3) do |n| CSV.open('aftercalc' + n.to_s() + '.txt', mode => "w" , :col_sep => " " ,:encoding => "UTF-8") do |outputRow| CSV.foreach('original' + n.to_s + '.txt', mode => "r", :col_sep => " ",:encoding => "UTF-8") do |inputRow| outData = inputRow.map {|col1,col2,col3| [col1,col2.to_i, col3.to_i]} .map {|col1,col2num,col3num| [col1,col2num - 1*100, col3num - 2*100, col2num + 100 - 2*100]} p outData outputRow << outData end end end 」 <参考> 公式マニュアル http://docs.ruby-lang.org/ja/2.0.0/class/CSV.html
>> (1) インターネット検索結果表示； せっかくなのでスクレイピングのところはPHPで書いてみました．やってることは完全に同じではないですが，2つ合わせて50行以内で収まってます． <?php function xpath($url, $query = []) {     $dom = new \DOMDocument;     $html = file_get_contents($url . '?' . http_build_query($query, '', '&'));     @$dom->loadHTML(mb_convert_encoding($html, 'HTML-ENTITIES', 'UTF-8'));     return new \DOMXPath($dom); } function get_auc_list($query, $category) {     $xpath = xpath("http://auctions.search.yahoo.co.jp/search", [         'p' => $query,         'auccat' => $category,     ]);     return array_map(function ($node) use ($xpath) {         return [             'name' => $xpath->evaluate('normalize-space(.//h3)', $node),             'price' => current(explode(                 ' ',                 $xpath->evaluate('normalize-space(.//*[@class="pr1"])', $node),                 2             )),         ];     }, iterator_to_array($xpath->query('//*[@id="list01"]/table/tr[td[@class="i"]]'))); } function get_progbooks_list($query, $year) {     $xpath = xpath("http://www.amazon.co.jp/gp/search/ref=sr_adv_b", [         'node' => '466298',         'field-keywords' => $query,         'field-dateyear' => $year,         'field-datemod' => 0,         'field-dateop' => 'during',     ]);     return array_map(function ($node) use ($xpath) {         return [             'name' => $xpath->evaluate('normalize-space(.//*[contains(@class,"s-access-title")])', $node),             'price' => $xpath->evaluate('normalize-space(.//*[contains(@class,"s-price")])', $node),             'date' => $xpath->evaluate('normalize-space(./*[1]/*[3]/*[1]/*[3])', $node),         ];     }, iterator_to_array($xpath->query('//*[contains(@id,"result_")]'))); } var_dump([     'シャンプー' => get_auc_list('シャンプー', 42177),     '石鹸' => get_auc_list('石鹸', 42177), ]); var_dump([     'C言語 | 2013' => get_progbooks_list('C言語', 2013),     'PHP | 2014' => get_progbooks_list('PHP', 2014), ]); >> (2) アルゴリズム記述能力； 初見の問題で手間がかかりそうだったのでこれはパスします．しかしPHPとRubyに大きな速度差はなく，むしろPHP7であればPHPのほうが速くなっていることが期待できるぐらいなので，「Rubyだから15秒で」という主張には違和感を覚えます．Rubyは短く美しく書ける言語ですが，決して実行速度の速い言語ではありません． >> (3) デスクトップ対話型アプリ これはPHP(Phalanger)でやろうとすると茨の道なのでRubyのGTKのほうがまともでしょうね．しかし言語の難易度はさておき，スクリプト言語の仲間であるNode.jsを用いてElectronベースで作成したほうが，見た目の美しさや移植性の面で大きく優れていると思います．マルチスレッドをフル活用して高度な計算を行うようなアプリでなければ，1スレッドを賢く使うNode.jsのほうが非同期タスク処理の面でも優れているでしょう (この点での柔軟性は C# > Node.js > Ruby > PHPですね)．PHPよりはマシですが，RubyがGUIに最適な言語だとは到底思えません．まともなネイティブアプリを作ろうと思えば，ほぼC#一択だと思ってます． >> でも、PHPしか使えないらしき人から、Rubyにイッチャモンを付けて来るシツッコイ人も居ます。 (私を対象とした批判ではないようですが) あなたもPHPに対していちゃもん付け過ぎだと思うんですけどね．僕はRubyのほうが美しい言語であることは認めています．そろそろ不毛な質問や回答，終わらせませんか？いちいちいちゃもんに反応してたらキリがないですよ．
単に、Yahooでの検索字句とかに反応して広告がカスタマイズ?されているだけだと思う。私のところには出ないもの。なので、 あなたがRubyについて検索したから でしょう。 ヤフオクでちょっと検索したりするとすぐに広告に反映されるから、「変なもの」検索するときはYahooをログアウトしてブラウザをプライベートモードにしてみたり。
create_table :test, id: false do |t|   t.column :id, "BIGINT PRIMARY KEY" end でしょうか。 ただ、Ruby 1.9.3 と Rails 3.2 は大昔のバージョンであり、Ruby 1.9.3 はセキュリティフィックスを含む全てのサポートが、Rails 3.2 は重大なセキュリティフィックスを除く全てのサポートが打ち切られています。 Ruby 1.9.3 以降になされた非互換な変更はほぼなく、安全に移行できるはずですから一刻も早く Ruby 2.1 以降のバージョンにアップグレードするべきです。 なお Ruby 2.1 のサポートもあと 1 年で打ち切られるため、できることならば 2.3 へのアップグレードを強くお勧めします。 Rails 3.2 に関しては、未だに重大なセキュリティフィックスはなされているものの、Rails 5 のリリースをもって完全に打ち切られる予定です。 最低でも、Rails 3.2 系の最新版である Rails 3.2.22.2 へアップグレードするべきです。 Rails はセマンティクスバージョニングを採用しているため、Rails 3.2.13 から 3.2.22.2 へのアップグレードにおいて非互換による問題が発生することはありえません。
それだけだとエラーの原因が分からないので、 /Users/username/.rbenv/versions/2.0.0-p648/lib/ruby/gems/2.0.0/extensions/x86_64-darwin-13/2.0.0-static/poppler-3.0.7/gem_make.out の中身を見せてください。 長すぎてここに貼り付けられない場合は https://gist.github.com/ 等を利用してください。 また、Ruby 2.0.0 は 2016/02/24 をもって EOL（セキュリティフィックスを含めたあらゆるサポートの終了）となりました。 rbenv https://github.com/rbenv/rbenv 等を利用して、自分で最新の Ruby（2.3.0）をインストールすることを強くお勧めします。
完璧かと言われると難しいですが。 Ruby（>= 1.9）の文字列は個別はエンコーディング情報を持つので、文字列が単純なバイト列である PHP のような問題（マルチバイト非対応関数の問題や 0x5c 問題のような）は発生しません。 # PHP にも文字列の内部表現を UTF-16 化する計画（PHP 6）があったのですが、結局もう諦めたのでしょうか... 現在の Ruby（>= 2.0.0, 2.0.0 は既に EOL です）ではデフォルトのエンコーディングが UTF-8 なので、UTF-8 が標準のエンコーディングとして使用される今時の *nix 系 OS では特に意識する必要はないです。 しかし、例えば日本語版 Windows のコマンドプロンプトの標準エンコーディングは Windows-31J ですから、例えば標準入力を受けつけるプログラムでは、個別にエンコーディング変換（String#encode）を行う必要があるかもしれません。 他には、例えば OS X のファイルシステムの Unicode 正規化の問題があるでしょうか。 OS 間の差異については言語側でどうこうするのは難しい（勝手に正規化されたりエンコーディング変換されるのはいやです）から、仕方ないのではないかと思います。 私は UTF-8 が標準のエンコーディングの GNU/Linux 環境で使用していますが、この環境に限ればエンコーディングの問題で悩まされたことは一切ないです。
「 begin fileNo = 1 File.foreach('text1.txt') do |inData| File.write('result' + fileNo.to_s() ＋ '.txt' , inData) end rescue SystemCallError => e puts %Q(class=[#{e.class}] message=[#{e.message}]) end 」 デバック、頑張ってみてください
rubyのメソッドは数学で言う「関数」のようなものです。 例えば数学でf(x)=x+1と定義すると、f(1)=2、f(2)=3のように、( )の中に数字を入れると、入れた数字+1を返す（戻す）働きを持った関数ができます。この「返す数字」が戻り値（返り値）です。 ruby でもf(x)=x+1と同じような働きを持つメソッドを作ることができます。 def f(x) answer = x + 1 return answer end 一度定義したメソッドは、引数を与えてやれば、普通の値である戻り値を返すので、普通の文字列や数値などの値と同じように使うことができます。 例えば a=f(1)+1 とすると、f(1)が評価され、1+1=2になり、a=2+1→a=3ということになり、変数aには3が代入されます。 さらには関数の引数に関数を指定することもできます。 f(f(2)) とすると、まずf(2)=3となり、f(3)=4なので、最後には4が返ります。 他にもtrueやfalseを戻り値とする関数を作って、ifなどの条件文に複雑な条件をつけるときに整理しやすくするなど、色々な使い方ができます。 もともと関数の役割は「引数を元に、戻り値を返すこと」なので、rubyのメソッドも戻り値をもちます。printメソッドなどは戻り値を返すのが目的ではなく、画面に文字を表示するなどの『副作用』がメインのものですが、それでも「この戻り値に意味はない」ということを示すnilが戻り値になります。
設計によるでしょうね。 投稿表示にユーザーテーブルを利用しないのなら投稿ごとにDBに保存した方がいいでしょうし、IDから名前等をユーザーテーブルを参照して出すのなら、どちらでやってもおなじになります。
画像が小さすぎて読めないです... * Ubuntu のバージョン * Ruby のバージョン（ruby -v で表示された内容） * RubyGems のバージョン（gem -v で表示された内容） を教えてください
ベンダーに金払って聞いてください。趣旨はわかりますが多分まともに動かない
かつてdRubyという分散処理に特化した実装があったかと思います。 今はどうなっているのやら。
一般的なワークアラウンドでわるいけど まずRuby２．２．３をアンインストール もう一度１．８．７を上書きインストール で、１．８．７をアンインストール それから２．２．３をもう一度インストールしなおしが一番安全そう まあ １．８．７だけをインストールして、アンインストールでも １．８．７を消すだけならいけそうだけど どっちがわるくなってるかわからないから とりあえず、どっちもけしてみたほうが
Ruby, Perl は コマンドプロンプトっていう、 背景が黒で、文字で操作するやつで動かします。 スパイ映画とかでスパイとかハッカーが使ったりするやつありますよね。 あれみたいなやつです。 Command: CD data Command: Ruby main.rb -------------- THIS IS TEST FOR MAIN.RB -------------- Command:_ みたいな。 ディレクトリっていうのは、Windowsでいうフォルダのこと。 Windows以外ではディレクトリっていうそうです。 コマンドプロンプトの使い方は 「コマンドプロンプト 入門」とか、 「コマンドプロンプト 使い方」とかって検索してください。 カレントディレクトリっていうのは、簡単に言ってしまえば、 現在位置。 Cドライブの中にある abc っていうディレクトリの text っていうディレクトリなら、 C:\abc\text ってなります。 で、Ruby っていうか、コマンドプロンプトの起動方法。 Windows なら、 Windows ボタン *1 の プログラムとファイルの検索 みたいなやつで入力するところがあります。 これに CMD と打てば出てきます。 毎回やるのが面倒なら、 バッチファイルっていう ものを使って行う。 テキストファイルは main.txt みたいに .txt になっていると思います。これは拡張子といいます。 rubyのソース・ファイルは .rb です。 バッチファイルは .bat 。 RunCmd.bat っていうファイルを作って、 その中に cmd と書き込みます。 で、これをダブルクリック。するとコマンドプロンプトが起動します。 環境によってはこれでは無理なときがあります。中古PCで元は企業用とか、ネットカフェのPCとかだとできないようです。 *1: Windowsボタン... Windowsのロゴがあるボタン。 >>ネット上で、デモプログラムコードを打てる？みたいなサイトがあるらしいのですが... 聞いたことはありますが、使ったことないのでこれに関してはわかりません。
hoge_huga_piyoさん Cellsの使い方について、公式ドキュメントを観てみましたが、cookiesに関する機能は無いようですね。 ※”無い”ということを証明するのは、「お前が知らないダケだろう」と言われそうで、難しい。 http://trailblazer.to/gems/operation/api.html ということは、Cells側の拡張機能ではなくて、"Ruby on Rails"標準の機能のほうでcookiesを使うしかないということです。 普通にcookiesを使う場合、下記の3種類のコードが要るものですが、提示されたコードには(c)に相当するコードしか無いのが問題だと思います。 (a) マズ,サーバ側で初期値を組み立ててcookiesを送出すコードと、 (b) ブラウザ側から送り返されたcookiesの値を変数に転記するコードと、 (c) そのcookiesの値を参照＆更新するコード。 http://koseki.hatenablog.com/entry/20070109/cookiedelete
nobuhiro_k_0713さん ダウンロードしたファイルが足りなさそうです。 また、単にsqlite3 をダウントードするだけでは、Rubyから使うこともできません。 「 .Bitnami\rubystack-2.0.0-30\sqlite のディレクトリ 011/05/19 22:37 4,082 sqlite3.def 011/05/19 22:37 565,827 sqlite3.dll 011/05/19 22:36 475,136 sqlite3.exe 015/08/19 21:40 348,618 sqlite3.h 015/08/19 21:40 25,974 sqlite3ext.h 」 一旦Rubyとsqlite3 とをアンインストールして、下記サイトからワンタッチ・インストーラをダウンロードしたほうが、簡単に整合性が取れたバージョンの構成要素をインストールできて、関連する環境設定まで自動的に行ってくれます。 https://bitnami.com/stack/ruby/installer
言語によっては、 index = 0 を省略しても動くものもありますね。 でも、これをちゃんと書いておく様にした方が良いです。 初期値は、０です。と分かり易いです。 [] ですが、これは、配列です。 numbers[0] numbers[1] numbers[2] ・・・・・・ で、それぞれ別の値を保存出来るようになっています。 [] の中の数字を添え字と言います。 これを指定して、目的の値を取り出したり、設定したりするのです。 index = index + 1 としないと、index は、初期値０のままです。 そうすると、値がnumbers[0]にしか格納されません。 numbers.sort は、配列をソートしなさいという意味ですから、 ちゃんと配列に値を入れておかないと変になります。
Ruby on Rails というものを使うと大規模なものを作成可能です。 でも、凄く勉強しないとだめですよ。 ここから、入門でもして、頑張って勉強してください。 http://www.rubylife.jp/rails/ アマゾンの本を買って読むのも良いかもしれません。
原理的には出来ます。 が、簡単な場合と、とても難しい場合とがあります。 ・・・・・・・・・・ スクレイピングとは、「まるで人間がウェブブラウザを操作してそのサイトを閲覧しているかのように」振る舞うプログラム動作のことです。 ですから、正しい ID と正しいパスワードを、スクレイピング・プログラム（Ruby でも php でも Perl でも、好きな言語で書く）に与えておけば、「ID＆パスワード」制のサイトはスクレイピングできます。 これは技術的にさほど困難ではありません。 しかし、サイトの中には、（本物の人間が閲覧するのではなく、機械的に閲覧する）スクレイピングを禁じているところもあり、また、そういうサイトにはスクレイピングを困難にする仕組みが備わっている場合があります。 たとえば CAPTCHA などは、「スクレイピング除け」の一種です。 これはサイト毎に仕組みが異なっており、スクレイピングでこれを破るのは困難なだけでなく、サイトの利用規約に違反する事でもあります。
応急的な処置としてSRPGコンバータNEXT for Ace Ver. 1.16内にある class Game_Actor < Game_Battler内 @sukill_pointの部分二箇所（スキルとアイテム部分二行）をコメントアウトすればとりあえず動作する状態にできます。 （ただ、この部分はスキルやアイテムの空打ちを防止する処理になっているようで上記の方法だと何も無いマスにスキルやアイテムを空打ちさせることが可能になってしまうようです。） まぁ使えないよりマシだと思うのでスクリプトの併用を重視するのであればここは我慢しても良いかと思います。 実際に触ってみると行動待機を選ばずスキルを空打ちで順番を飛ばせるので操作ミスでイライラしないなら逆に便利かもしれません。
「 a= ['b', 'c', 'a'] b=a.map {|c| [c]*2}.flatten 」 以上
「練習」「リハーサル」「本番」みたいなものです。
実行したわけではないので憶測ですが、ポケモングローバルリンク というサイトの内の情報を取得するプログラムだと思います。 お目当ての情報を見るために、ウェブブラウザでサイト内のリンクを 色々クリックするのが面倒なので作ったのかもしれません。
masakadotvさん Rubyには、下記の特徴があります。 (1) ソコソコ性能も良くて、生産性が高い Twitter社が そのサービスを開発し始めるより前にJavaはソコソコ流行っていたにもかかわらず、Rubyを選んで開発されたのは、スタートアップに有利だったからでしょう。 それでいて、アメリカの大統領選の少し前までのトラフィックに耐えたのですから、スモールビジネスむけには十分すぎる性能を確保できると言うことです。 かたや、PHPはRubyを上回る性能をだせたことは無いでしょう。 http ://www.infoq. com/jp/news/2012/11/twitter-ruby-to-java (2) 多様な分野の”入門的なコード”が書けて、伸び悩みしない。 下記の様に多様な分野を、一つのプログラミング言語でカバーできる言語は、他に在ったかな？ (a) サーバソフト：40行。 (b) ディスクトップ対話型アプリ：30行。(c) 大量計算を伴うパズル； Rubyで７０行。 (d) 電卓として；(e) 組込み機器分野； http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1115428349... このように、広範な用途で使うことが出来るので、”廃人”を生まないのも、Rubyの特徴だと言えるでしょう。 下記の虫食い算を解くプログラムは、Ruby言語なら70行で解けて、そのコードを公開してモウ半年は過ぎています。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1114503132... ｈｔｔｐ://ideone.com/IkwIx7 template=2??5 + ?38? * ??4/5?-?? = ?3?2 "((((2005+1380)*154)/55)-86)=9392.0" "((((2005+1380)*154)/55)-96)=9382.0" "((((2005+1383)*154)/56)-15)=9302.0 半年もあれば、自称C言語の使い手や、自称PHP暦１０年だとか言う方でも、ソロソロ、各々の得意とする言語で、モット エレガントなコードを披露してくれそうだと思うでしょう。 それが”PHPやC言語では、伸び悩む証拠だ”と 何度か挑発してるにも関わらず、未だ エレガントなコードを披露してくれない。 質問者殿がモットも お勧めできるプログラミング言語で、上記の５分野のコードを書き換えて、「こっちの言語の方が良い」という証拠を見せてはくれないだろうか？
ruby は言語の中では簡単な方ですよ。 http://tryruby.org/ このサイトがブラウザ上で試せるので、 サンプルコードを貼り付けて遊んでみれば如何でしょう。
rubyだけでなく、ほとんどのコンピュータ言語でこの訳語が使われます。 英語で計算結果を「return」すると言うのね。 これを「返す」と日本語では表現します。 つまり、何らかの処理をして結果が出たよ！と呼び出し元に結果報告するということ。
テキスト形式でもXMLやjson等の規格化されたものがあるのでそれを使ってみる。 Rubyにも読み書き用のライブラリがあるはずです。 クラスをそのままの形式でファイル保存等をすることはシリアイズ化やシリアライゼーションなどと呼ばれています。 rubyではMarshalでシリアライズ化できるのでそちらを使ってもいいと思います。 シリアライズ化されたデータはバイナリなので人間が直接読むのには向いていません。 その他、シリアライゼーションライブラリがあるかもしれないのでもし不足があればググってみてもいいかもしれません。
RICHARDMARXは すばらしい歌手です。
私はオレンジマンゴーが好きですね。
変更したのが何時頃か分かっているのなら、findでいいのではないでしょうか。 # 3日前から現在の間に変更されたファイルのみアーカイブ tar zcvf modified.tar.gz `find /html -mtime -3 ` これを展開すれば、望み通りのものがディレクトリ構造を維持した状態で、解凍されます。
Rubyを始めたばかりだとのことですので： 配列にはソートという操作が行えます。 従って、ソートしたければ単に次のようにします。 fruits = ["orange", "apple", "banana", "pear", "grapes"] #arrayを作る p fruits.sort #ソートする 元のfruitsを破棄して、並べ替えた物をfruitsにしたければ、！を付けます fruits = ["orange", "apple", "banana", "pear", "grapes"] #arrayを作る fruits.sort! #ソートする（fruits自身を変更する） p fruits #fruitsの中身が変更された
共感したよ！２になった。
京、缶した。。。。。。
独立行政法人情報処理推進機構のセキュア・プログラミング講座によれば、 > サニタイジングのタイミングはHTML生成時 > サニタイジングは(2)HTML生成時のタイミングで行うべきである。 https://www.ipa.go.jp/security/awareness/vendor/programmingv1/a01_0... とのことですので、 > 3.クライアントサイドでつぶやきを表示する直前にHTMLエンティティ化する。 が適切だと思います。
todaydetail = datetime.datetime.today() 上記のスクリプトで、変数todaydetail に値を設定しているので、while文の中で呼び出しても、最初に代入した値が出てくるだけです。 呼び出すたびに新しい値を取り出したいなら、関数として設定しましょう。
chiebukuro_yamerubeki_71さん はい、C言語よりH言語が良いでしょう。
<(?i)walking up tile: \d> こんな感じでしょうか？
dokuzetsu_tarouさん 全蔵書データをconcat すれば良いのでは？ Rubyのconcatは優れもので、concat前の領域を参照するだけなので、concatした後に、concat前の変数の中身を変更しても、concatした変数の内容が追従します。 つまり、メモリは大して増えないということです。 「 yamada_book = [["実践", "山田", "やまだ", "リサーチ", "248ページ",] ] ooba_book = [["入門", "大庭", "おおば", "クリエイティブ" , "164ページ",]] allBooks=[] allBooks .concat ( yamada_book) allBooks .concat( ooba_book ) #concatした後に、 concat前の蔵書データの一部を修正する。 yamada_book[0][4] = "四百九重八 頁" # 蔵書データを表示すると、変更した "四百九重八 頁" が表示される。 allBooks.each {|yb| puts "書籍名 : #{yb[0]}", "著者名 : #{yb[1]}", "よみがな : #{yb[2]}", "出版社 : #{yb[3]}", "ページ数 : #{yb[4]}" puts "-------------------" } 」 http : / /ideone. c o m/FBAXUr
＞良ければプログラム例を出してもらえれば嬉しいです。 依頼ならプログラム制作会社に頼むと良いですよ。
ちょこっと調べました。 ガントチャートは /redmine_install_dir/app/controllers/gantts_controller.rb で生成するみたいです。 http://www.redmine.org/projects/redmine/repository/entry/trunk/test... テストコードを見ても使いかは分かりません｡｡｡ GET送信でこのgantts_controllerをイジるんだなってくらいは分かるのですがそもそもこのコントーラーへの入力パラーメーターの設定の仕方が分からないのでどの様にプログラムを書いてよいのかも良く分からないです。 通知メールを作成するプログラムは /redmine_install_dir/app/models/mailer.rb みたいです。 送信プログラムはちょっと見つかりませんでしたがどこかにあるかと思います。 手順としては ガントチャート生成に必要なパラメーターを調べる 通知メール作成プログラムがどのようにメッセージを作成するのかを調べる 通知メール送信プログラムがどのようにメッセージを送信するのかを調べる 通知メール作成プログラムをカスタマイズする って感じで出来そうですがどうなんでしょう。。。
gotoichinoseさん その@valは、”トップレベル”のオブジェクトのインスタンス変数です。 >どう理解したらよいのか 下記の様に、提示されたコードの外側にclass定義文があると考えれば良いでしょう。 さらに、class定義文の中であっても、上から下に見えたままの順序で実行される 「 class mainObject #--------------- p self def setdata ##これは、”トップレベル”のclassのメソッド p self @val = "set value" end p self def readdata ＃＃これも、”トップレベル”のclassのメソッド p self p @val ## このスコープはsetdataと同じ end @val = "" setdata readdata #----------------- end # of MainObject 」上記の実行結果 http : / /ideone. c o m /myX646 このような事項の理解の仕方の手がかりについては、Rubyの実装者の一人でも在る方の記事に、高密度で記載されています。 <参考> Ruby言語ミニマム http://i.loveruby.net/ja/rhg/book/minimum.html 「◆全ては実行される ここで全体を見据えて一つ書いておこう。 Rubyではプログラムのほとんどの部分が「実行される」。 定数定義・クラス定義文・メソッド定義文やその他 ほとんどのものは見た通りの順番で、実行される。 」 引用2「◆ローカル変数のスコープ これでようやくローカル変数のスコープについて話すことができる。 トップレベル、クラス定義文内、モジュール定義文内、メソッド本体、はそれぞれ 完全に独立したローカル変数スコープを持つ。 」 引用３「◆コンテキストとしてのself 例えばトップレベルでもselfがある。トップレベルのselfは、mainという。 なんの変哲もない、Objectクラスのインスタンスだ。 そんなわけでトップレベルのself即ちmainはObjectのインスタンスなの で、トップレベルでもObjectのメソッドが呼べるということになる。 」
ドットインストールあたりで学ぶと良いでしょう。
「どう」異なっているかがわからなければ、どのように修正すればいいのかはわからないですし、「どう」異なっているかがわかれば、それを修正すれば良いだけです。 背景にある数学的な仕組みを理解できてれば、それがライブラリの不具合であるのか自分のポカであるのかがわかると思います。
konkai7777さん 少なくとも２つの誤りが在ります。 ・ruby 1.9以降なら、Rubyの標準ライブラリにruby tkが入っています。 それとは一寸異なる tcl/tk 8.xライブラリも存在するようですが、単にguiを使いたいだけなら、標準ライブラリのruby tkだけを使えば良いでしょう。 ・「require './tk'」ではなく「require 'tk'」。 ・もし、どうしてもtcl/tk 8.xを使いたい場合、下記サイトから、安定バージョンのrubyワンタッチ・インストーラをダウンロードしてインストールしなおせば良いでしょう。 https://bitnami.com/stack/ruby/installer なお、本日現在の安定バージョンは、Ruby Stack 2.0.0-37 です。
＞これが漏れの編み出した、最速メソッドである！ という割には、下記の資料が含まれて居ないので、最速とは言えません。 この資料を一読しておけば、他の資料を読むときに、２５６倍、冗長な記述を読み飛ばして読むことができるようになります。 「第1章 Ruby言語ミニマム http ://i.loveruby. n e t/ja/rhg/book/minimum.html 」 ＞Rubyが分かるんですか？ 下記のコードにたどり着き難いので、Ruby道的に遠回りでしょう。 「 （１から１万までの数（n)を、逆数（分子が１分母がｎの分数(Rational)に変換(map)した並びに、演算子（:+)を挟んだ（inject)式 (1..10000).map{|n| Rational(1,n)}.inject(:+) 」 "第1章 Ruby言語ミニマム"の資料では、 「 オブジェクトに対してはメソッドが呼べる。 "content".upcase() メソッド呼び出しは連鎖してよい。 "content".upcase().downcase() 」 という文法が基本で、他はコノ応用だと説明しています。 ということは、if文ですら「(条件オブジェクト）.ifメソッド{then条件成立時に遅延評価されるブロック引数｝｛then条件”不”成立時に遅延評価されるブロック引数」だと理解すれば良い。 Java7以前の繰り返し処理が「繰り返す処理内容」に着目させていたのに対して、 Java8 Stream APIやRuby等の関数思考的的な考え方では、「繰り返し処理の結果得られるオブジェクトの値」に着目させていて、 「(配列風オブジェクト）.select{|x| 選択条件｝」というオブジェクトとブロック引数の組み合わせに帰着させることができる。 Java7以前では｛if”文”、for"文”、while"文"....}を夫々別々の機能として覚えさせていたのに対して、上記のように「メソッド呼び出しの応用」として理解できるほうが、「ひらがなのように１文字づつ別々の字形として５０種類覚える。 漢字も同様」という覚え方より、「５０種類未満の部首の組み合わせで、数万種類の漢字は読み書きできる」という覚え方の方が効率的なのが解るでしょう。 さらに、Python本を読ませることは、 例えば 「｛土、水（氵）、火、風（几）｝と｛日｝の組み合わせで ｛圼、汩汨沓、炅炚、凬｝のような漢字になる。 部首の組み合わせ方には制約があるから”意味”を推定することができるでしょう。 でも、組み合わせは一通りではない」 という体験に導かないので、アンチRuby的だと思います。
「空は何故青いの？夕焼けは何故赤いの？」的な、 マトモに答えるには可也広い知識が要る御題ですね。 ＞どんなことができますか？ まず、”どんなこと”の母集団を、下記サイトに列挙されている「コンピュータを使ってできるＩＴ界のモロモロの知識」として、明確化しましょう。 ・「ITスキル標準」「研修ロードマップ」 http://www.ipa.go.jp/jinzai/itss/download_V11.html ２０１６年現在、上記サイトに列挙された知識領域を、一版広く学ぶことが出来るのは、「Java言語で書かれたサンプルコードを読めることが前提になって居る書籍 」でなら８０％位までは学ぶことができるでしょう。 でも、Java言語以外では、こんなに広範な知識領域の書籍がソモソモ無いので、Rubyだけでは２０％位までしか、独学ダケでは学ぶことは出来ないでしょう。 例えば「性能を確保できるアルゴリズムやフレームワークの使い方」とか「品質とグレード（等級）の差異は？コードで示すと？」等、Java本なら書籍は沢山在ります。 他の言語だと、全知識領域の５％も学べず、独学での挫折率の高さもあるので、相対的にはRubyを学ぶは良いことだと言えます。 ＞独学（本屋に売っている本やネットの無料のサイト）で勉強できますか？ 独学の前提を、「無限大の期間」ではなくて、「誰ともコンタクトしなくて、５年程度」と限定したとしましょう。 ここで”５年”という期間は、下記の質問者が、java/C言語/C#をカジリ読みして、挫折で停滞したように観えた期間から想定しました。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1413670378... 初学者が独学でやりたいと思うかもしれない応用領域で、一人が５年以内に作れる程度の規模のコードなら、Ruby言語１つ覚えるだけでも出来るでしょう。 Ruby関連の書籍を独学で読んで手が届きそうな応用領域の例は、 ・プロキシを跨ぐインターネット通信 ・ナンプレなど設問は中学生でも理解できるが大量の計算が要るパズル、 ・ゲームのようなグラフィカルで対話操作を伴う処理 ・iPhoneとAndroidとの両方で動くコード ・Raspberry Ｐｉのような電子工作キット向けプログラム等、、 等々領域で、コード量は２万行未満でしょう。 ※この６行が、主回答です。 ５年もあれば、これら５種類の領域の中でも、テーマとする領域が変わることがあるでしょうが、その時でもRubyの知識が無駄にはナラナイでしょう。 他のプログラミング言語だと、これら５種類の領域の一つに特化していて、一旦覚えたことが無駄になって、先に例示したような可愛そうな質問者の例になる可能性が高いと思います。 でも、２万行を超えると、「砂場の砂山に砂を盛っても崩れて、水をかけて滑り止めするくらいでは乾燥の方が速くて、滑り落ちて、高くすることが出来なくなる」様に、独学ダケでは学び難い困難さの克服も要るでしょう。
転送の意図が正確に分かりませんが、SQUID＋独自プロキシの多段プロキシ構成にしてプロキシールーティングすれば、可能じゃないですか? まず、「HTTPS通信は転送ができること、また、場合によっては特定の証明書を適応できること」の意図が、 CONNECTメソッドで与えられるあて先のFQDNに応じて、インライン(MITMによる証明書埋め込み)にするか、フォワード(CONNECTメソッドを使った外部サーバとのSSLセッションの確立を承認)するかを選ぶことを意味するなら、 SQUIDで、以下のようにプロキシルーティングする。 HTTP及び、インラインで扱うFQDNのHTTPS通信の場合 ⇒独自プロキシにプロキシルーティング フォワードするFQDNのHTTPS通信の場合 ⇒そのまま あとは、独自プロキシを適当に作りこめばやりたいことは出来るんじゃない? Server Name Indicationで、どうしてもやりたいって言うなら話はもう少しややこしくなるが、それをやる意義は今回はないと思う。
getsは入力を文字列として取得します。 when 0などは数値型として比較しますのでエラーになります。 num = gets.to_i とすれば動くはずです。
これは、ruby の開発用パッケージが足りないからです。 sudo apt-get install ruby-dev で直りませんか？
dhura_y0608さん RubyのWebサーバ実行環境なら、下記URLからワンタッチ・インストーラをダウンロードして使えば良いでしょう。 https://bitnami.com/stack/ruby/installer Mac用の安定バージョンは、今なら、Ruby Stack 2.0.0-37 (64-bit) らしいです。 このサイトは、セキュリティ脆弱性対策も含めて、下記のように沢山の関連ソフトを整合性のある組み合わせで提供してくれていますので、夫々の本家サイトからかき集めるより楽です。 Version 2.0.0-37 2015-12-18 * Updated Ruby to 2.0.0-p648 (security release CVE-2015-7551) * Updated Apache to 2.4.18 * Updated Nginx to 1.9.8 * Updated MySQL to 5.6.28 * Updated Node.js to 5.2.0 Version 2.0.0-35 2015-12-08 * Updated Node.js to 5.1.1 (Security release CVE-2015-8027, CVE-2015-6764, CVE-2015-3193 and CVE-2015-3194) * Updated OpenSSL to 1.0.1q * Updated phpMyAdmin to 4.5.2 * Updated Node.js to 5.1.0 Version 2.0.0-34 2015-11-16 * Updated libpng to 1.5.24 (security issue) * Updated Node.js to 5.0.0 * Updated Varnish to 4.1.0 * Updated MySQL to 5.6.27 * Updated Node.js to 4.2.1 * Updated PostgreSQL to 9.4.5 * Updated Apache to 2.4.17 Version 2.0.0-33 2015-10-13 * Updated Ruby to 2.0.0-p647 for Windows
wavファイルじゃない、って言われているだけのような。 ターミナルで od -tx1z -Ax /home/ユーザー/workspace/rensyu/test.wav | head を実行して 000000 52 49 46 46 bd 39 00 00 57 41 56 45 66 6d 74 20 >RIFF (略) WAVEfmt < : : となりますか? wavファイルなら 最初の4バイト RIFF(16進バイナリで 52 49 46 46) 次の4バイト ファイルサイズ（リトルエンディアン） 次の4バイト WAVE(16進バイナリで 57 41 56 46) で始まっているはずですけど。
hanagegorira6さん Webサービスの実装はバックエンドからが良いでしょう。 現在公開されているWebサービスAPIは、バックエンド側だけでもWebサービスだと認められています。 ・日本の全エンジニアに捧ぐ！現在公開されているAPI一覧【2013年版】 http://www.find-job.net/startup/api-2013 とはいえ、「どのように使われたいWebサービスなのか？」という説明というか、「リファレンス・インプリメンテーションとしてのフロントエンドの”例”（実用にアラズ）」も要るでしょう。 a.概要設計：どのように使われたいかを示す画面のイメージ策定 この段階では、HTMLのみデータでも良くて、用語辞書も作れば良いかもしれない。 b.詳細設計orテスト駆動開発： どのように使われることを想定するかを、詳細に記述。 Ruby on RailsのActiveResourceで、WebサービスのREST APIのクライアント側コードを書いてみる。 c.実装：Ruby on Railsで、WebサービスのREST APIを実装。 その過程で、DBのレコードとかの定義情報は、a.の概要設計や、”用語辞書”での項目の定義内容（最大文字数とか書式とか）から抽出。 d.テスト 上記のｃで出来たサーバ側コードを、ｂで作ったクライアント側コードからアクセスする。 ここまでデハ、CSSなどブラウザを使うようなテストはしていない。 e.マニュアル・ドキュメント作成 先のaに 肉付けして、説明文書を作る。 ここまでで、ようやくhtml,cssなどのフロントエンド開発に着手可能になる。 なぜなら、フロントエンド側は、見た目や操作性など試行錯誤が多いが、機能性とか何かの足場がFixしていないと、全てがフワフワして、先に進めない。 g.フロントエンド側の機能拡張 「リファレンス・インプリメンテーションとしてのフロントエンドの”例”（実用にアラズ）」ではなくて、実用的な画面も作りたければ、機能拡張として作っても良い。
・ドキュメントルートディレクトリよりも上の階層に置く (最も一般的) ・.htaccess で非公開設定をする (Apache限定) ・「.ht」から始まる名前にする (Apache限定) また，データの保管にはテキストファイルよりもデータベースを使用するほうが一般的です．
タイマーの表示を弄るにはスクリプトをどうこうしないといけないんだよなあ……。 いまPCが手元にないので正確には言えませんが、スクリプトを弄るのならSpliteTimerかWindowTimer辺りを探ることになるとは思います。 ちなみに、並列処理で ウェイト60フレーム 変数-1 とすればタイマーのように使えなくもないです。これだと時間も出ませんし。
a=10 b=20 ans=0 (a..b).each{|e| ans+=e} puts ans rubyあまりやったことないので、汚いですけど。
Rubyで仕事をしています。(以前はPHPを書いていました) 個人の趣味なども含めて比較するとRubyは0.1も無いような気がします。 仕事で考えても誰かから依頼を受けて作る小さなシステムなんかではRubyはほとんど見たことがありません。 自社でWebサービスをやっているとかスタートアップみたいな会社ではそれなりに使われている印象です。(3くらい?) 質問の背景がわからないのでなんとも言えませんが、勉強する言語を決めかねているのでしたら、使用度ではなく目的で選んだほうがいいと思いますよ。 PHPとRubyに限定して書きますが、PHPの方がいいと思うのは小さなサイトを作りたい、HTML/CSS/JavaScriptなどをメインで書いていてサーバ側のプログラムも書いてみたい、SIerで仕事がしたいみたいなケースです。 逆にプログラミングの知識を深めていきたい、優秀なプログラマのいる環境で働きたいみたいなケースではRubyの方がいいと思います。 プログラミング言語としての性能やできることにそんなに差は無いですが、コミュニティの雰囲気が違います。 業界にもよりますが、現状であればどちらを選んでも仕事に困るということは無いように思います。 (少なくとも私は仕事の少ない方のRubyで仕事が見つからないという状況が想像できないです)
レンタルサーバにもサービスの種類があります。 Rubyが使いたければ、Ruby をサポートしているレンタルサーバを選択しましょう。 例えば heroku などはサポートしています。（アマゾンのAWS のように一定まで無料ですが、無料枠を超えて利用すると課金されます） Ruby自体は汎用的な言語です。別にWebサービスにかぎったものではありません。 目的と手段を履き違えないように自分が何をやりたいのか？そのためには何が必要なのか考えましょう。 RubyでWebアプリケーションを作りたければ、Rubyをサポートしているサーバを選択するには自然なことです。 契約しているレンタルサーバがあって、そこでWebアプリケーションを動かしたければ、契約しているレンタルサーバが何をサポートしているか把握することです。 Rubyという言語を理解したければ、別にWebアプリケーションである必要もありませんから、レンタルサーバもいりません。 そういった考えかたの組み立てをすることはとても大事なことです。 自分の目的が何なのかはっきりさせましょう。方向性のない努力は無駄になります。 方向性がきまったら、だったらどうするのか？を自分で考えるようにしましょう。 自分のことですから、人に聞いても意味がありません。
whwqs948さん RubyのIRBコマンドが使える程度の”基礎”までであれば、 下記の拙作回答のリンク先をご覧あれ。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1314493058... ・文法をナントナク覚えて、Ruby標準のIRBコマンドで 操作演習 ・「アルゴリズム」を学んで、メモリ中のデータを、自在に加工するトレーニング ・そこまで学べば、次は Rubyライブラリの辞書的 マニュアルを読めるようになるでしょう。 ＨＴＴＰs://www.ruby-lang.org/ja/documentation/ ＞ファイルの書き換えや通信など それは、多分 Rubyで４０行程度のコードで試せると思います。 下記のようなコードを見本として、辞書的マニュアルで 処理内容を追いかけるのも良いかもしれません。 ・ サーバソフト：プロクシを挟むインターネット越し通信で、ショッピングサイトの価格一覧出力 http : / /code.runnable. c o m/VWBvJvTF9EZ81rxo/yahoo_syouhinn_price_list_by_ruby
whwqs948さん Windows/mac/iOS系（iPad/iPhone)/Android系tabletの何れの環境でマウスカーソルを使おうとしているのか解らないが、ソレラ全部で共通して動くRubyコードの添削も出来るサイトでのコードを例示します。 getControls().isLeftClick() do |x, y| #上記で、マウスの左クリックしたときのカーソルの位置（x,y)を得る fillText( "Hello World! " +(x.tostring()) +" ," + (y.toString()), x, y) 上記で、変数xとyの内容を、表示できる end 入門段階なら、「何処まで出来て、どんな風に旨く動かなかったのか？」を正確に使えることが出来る添削用のサイトを使うと良いです。 下記サイト等、Windowsでもmacでも、画面が大きなパソコンがあれば、Rubyコードを投稿できて、iPhoneのように小さな画面でもRunボタンを押せば、動いている処を、第3者にも見せて、添削を依頼することもできます。 http://www.playmycode.com/build/edit/11291
＞rubyからjavascriptを使用するには、どのような環境が必要か教えていただきたいです。 どのような環境が必要かはどのような目的かによります。 練習なら、ブラウザー等のJAVASCRIPTエンジンを使っている物を用意すれば良いと思います。
Making Fruity Bat (a Flappy Bird clone) in Ruby https://www.youtube.com/watch?v=QtIlyU2Br3o Make 2D Games with Ruby and Gosu – Part 1: Project setup https://www.youtube.com/watch?v=2XqL_WYjtEo Tic Tac Toe In Ruby Using TDD & Gosu (Annotated) https://www.youtube.com/watch?v=tQjjHt0I3_o いくつか動画を見てみましたが、エディタを使っているようです（上から、vim,atom,vim）。 上の動画のように、作業を見せてくれる動画があるので探してみて下さい。
それでも動きますが、存在しないnoteに関連付けられたいいねが作れてしまうのが一番の問題ですかね。 (前者だと存在しないidをnote_idとしてリクエストするとエラーになりますが、後者はそのまま存在しないnoteに対するいいねを保存してしまう)
・ここまでの動作確認の場所で全てtrueになったのですが、次の灰色の画面が出ません。どうすればよいでしょうか？ 何でID非公開で質問してるの？ ランサーズで受けた仕事をここの人達にやらせようとしてるの？
なんでそんなフォーマットのファイルを扱いたいのかわからないですが 次のような方法が考えられます。 1. 元ファイルをカンマ区切りなどの扱いやすい形に変換してしまう → カンマ区切りにすれば、split(',')でデータを読めますね。 2. [や"などの記号をプログラム中で空文字に置き換えてからsplitしてやる → 1.では事前準備したところを、プログラムの中に埋め込んでしまう方法です。 3. evalする → なんでもevalで解決するのはナンセンスだと思いますけどね。
提示されたページの手順の何処かの過程で、実は先にエラーが出ていたのに、それを無視して進めようとしていたから、でしょう。 ＞エラーが発生する原因としては何が考えられるでしょうか？ ・提示された「Ruby/SDLで始めるゲームプログラミング【前編】」の記載内容に拠れば、 「 MacPorts を利用するのが一番簡単なようです。以下の順にインストールを行ってください。 •XCodeTools (OS のインストールディスク等から入手可能) •MacPorts •各種ライブラリ •Ruby/SDL 本体 (ソースからコンパイル)<----!!本当！ •rsdl <---「/gems/rsdl-0.1.5/rsdl」というエラーメッセージから、rsdlのインストールは出来ているように観える。 」 もし、本当にRuby/SDL 本体 の”ソースからコンパイル”が出来たのなら、こんなところで質問などしないで、自己解決できているでしょう。 単に、Rubyでゲームを作って、見知らぬ人に披露してみたいだけなら、下記のサイトにRubyコードを投稿しする方が、知恵袋への質問投稿と同様に、簡単です。 http://www.playmycode.com/play/game/cainy393/crappy-bird
- RubyとPHPってどっちが使いやすいですか？ 何をもって「使いやすい」とするかによって変わってくるので、何とも言えません。 - 勉強するならどっちの勉強をしたほうがいいですか？ あなたがプログラマーになりたいならRubyをおすすめします。 Webサイトを作りたいだけで、できるだけプログラムを書かずに済ませたいならPHPのほうが向いています。 - どっちもレンタルサーバーを借りたら簡単に使えますか？ レンタルサーバーで動かすならPHPのほうが簡単です。 Rubyの場合、対応しているレンタルサーバー自体が少なく、対応していても、Webアプリケーションを動作させるにはそれなりに知識が必要です。 Rubyで作ったWebアプリケーションを動かすなら、レンタルサーバーではなく、herokuのようなPaaS（構築済みの動作環境を提供するサービス）を利用したほうが簡単です。
PHPカテの住人ですから、PHP をお勧めします。 と言っても、PHP も Ruby もそれぞれ特徴があり優劣がある訳では無い（ruby な方々はそうは言わないかもしれませんが）ので、お好きな方を。 一般的に JavaScript はブラウザ上で動作します。 なので、ブラウザへ渡す HTML書類を生成するプログラムが何であるかは無関係です。（PHP でも Perl でも Ruby でも Java でも...etc....同じです） 質問者さんが、ブラウザで表示する事をお考えなら、HTML、スタイルシート、JavaScript については、PHP あるいは Ruby とは別口で学ぶ必要があります。
＞プログラミング言語Rubyをプログラミング知識０から独学で勉強しようと考えています。 独学というのは自分でやることをいうんですよ。
・どれくらいのことができるまでになりますか？だいたいこれくらいのことができるって教えて下さい。 何でID非公開で質問してるの？ 自分で受けた仕事の調査をここの人達にやらせようとしてるの？
＞templete = ERB.new(File.read('entried.erb')) ここで、「templete＝nil:NilClass」となっていたので、そのエラーメッセージが出たのが、直接原因。 ＞res.body << template.result( binding )##ここがserv.rb:70 次は、その行を下記のように分解すれば、モウヒトツ前の原因の切り分けができるでしょう。 「 f=File.read('entried.erb') p f templete = ERB.new(f) p template 」
それをするとMPは常に満タンに出来ますが良いのですか？ それが良いならMP満タンに出来るアイテムを用意しても同じような気がしますが
muractionさん 「routes.rbの正規表現アンカー」の説明を、よく読みましょう。 http://ruby.studio-kingdom.com/rails/guides/routing routes.rbでのget等のルーチングでは、正規表現アンカーも指定可能で、その標準値値としてドットやスラッシュ以外の全ての文字にマッチする正規表現アンカーが仮定されています。 さらに、「正規表現アンカーは、上から順にマッチするのが探される」となっています。 ということは、もしshowアクションへのルーティングを上に書くと、 '/notes/new'というURLも、'notes#show' の方にルーティングされます。 「 get '/notes/:id' => 'notes#show' ,as: 'note' {id: /[^\/]+/} get '/notes/new' => 'notes#new' 」 ＞なぜエラーが発生するのですか？ 本当にエラーになるか否かは、'notes#show' 内部の処理の"id"というパラメタに"new"という文字列が渡されたときに、正しく動けるか否かに依存します。 とはいえ'notes#new'側にルーティングされるパラメタが、実質的に無効となるのですから、全体として、旨くは動かないでしょう。 でも、下記の様に正規表現アンカー部に、「idでは数字の列しかマッチしない」という指定をすれば、'/notes/new’というURLは、'notes#show' にルーティングされなくて、無事'notes#new'側にルーティングされるようにすることもできます。 「 get '/notes/:id' => 'notes#show' ,as: 'note' {id: /\d+/} get '/notes/new' => 'notes#new' 」
これ、VisualBasicじゃないと思いますが、何の言語なんでしょうね。カテゴリはVBになってますよ。が、プログラムかじってたらすぐピンとくるネタですね。if (AAA == "01")elsif (AAA == "02")この書き方が冗長です。VBで言えばSelect～Case文、COBOLで言えばEVALUATE ～WHEN。言語ごとで異なりますが、１対１の判断ではなく、同時に判断が分岐する場合には多岐分岐などと呼ばれる書き方を用います。普通、その書き方だと、上から順次判断し、最終的にそれ以外で書けます。
stop_bit1234さん そのエラーメッセージが出たのは、 sort直後のカッコが丸いカッコ（）ではなくて、中カッコ｛｝でなかったのと、 ソートキーの宣言がカギカッコ[]ではなく、縦棒｜にしていなかったからです。 >array = fname.sort([(k1,v1),(k2,v2)] v2<=>v1) array = fname.sort {|(k1,v1),(k2,v2)| v2<=>v1} でも、他にも、直せば良さそうなところはあります。 ・ファイル読み込みが出来ていないのは、標準入力にするのかな？ ・「tmp = line.split(" ")」は、最初のカラムだけを抽出する為に 「tmp = line.split(" ")[0]」ではないかな？ ・arrayはモット早い段階から値を代入して、 「 array={} ##ここも、｛｝で空のハッシュ値で初期化しないと駄目 array["名前1"]=1 array["名前2"]=22 array["名前3"]=3 pp array.sort {|(k1,v1),(k2,v2)| v2<=>v1}.take(5) 」 としたほうが良いのではないかな？
ipuun_nozomiさん マルチスレッドの使いかたのコトかな？ コウユウ出力なら、 「 何かの処理中 まだ終わっていないsignal: 何かの処理中 まだ終わっていないsignal: まだ終わっていないsignal: 何かの処理中 まだ終わっていないsignal: まだ終わっていないsignal: 」 こうゆうコードです。 「 flag= 0 t1 = Thread.start { loop do sleep(1) puts "ã¾ã çµãã£ã¦ããªãsignal:" end until flag != 0 } 3.times() do puts "ä½ãã®å¦çä¸­ " sleep(2) end flag = 1 」 //ideone.com/1Hs8wH
ユーザー名の部分はご自身のWindowsのユーザー名になります。 普通に、エクスプローラーで Windowsの入っているドライブ(多くはC:)をダブルクリック ユーザー をダブルクリック あなたのユーザー名のフォルダをダブルクリック あとは Ruby のフォルダを作ってください。
私も難しく思います。 CやC++のほうが簡単。 確かにポインタとかでつまづきやすいですが、 応用がききやすい。 JavaScriptはオブジェクト指向 (厳密にはプロトタイプ式オブジェクト指向 ?) なのに、入門書にはクラス関係のことについて述べていない場合が多い。生成されたオブジェクト ( C++ なら cout に当たる ) やつか、関数しか... C++は扱いこなすのも大変ですが、Cと切り替えができるので楽です。 Javaは 一ファイルにつき一クラス. 必ず、何らかのメンバであること. 定義が多い。 C/C++ なら 一ファイル一クラスではないし、 グローバル関数としてもいいですし、何らかのメンバでもいいですし。 私もRuby, JavaScript, Java, Python は簡単っていうのは、 「ライブラリが豊富」、「(Cとくらべて)GUIが組み易い」、 「(つまづきやすい)ポインタがない」等で楽っていう理由だと思っています。
動画を全部見たわけではありませんが、 プロジェクトごとにIDを持っていて、 その配下にタスクがあってそのタスクごとにIDを持っている、という構造ですね？ おそらく。 2つの引数は、プロジェクトのID、タスクのIDです。 2つ必要な理由は、タスクのIDだけ見ても、プロジェクトがわからないからです。 たとえば、「私の住所は1丁目2番3号ですので商品を送ってください」と 言われても超能力者でもなければ無理ですよね？ どこの1丁目2番3号なのかを教えてもらわないと困りますね。 これも同じようにどのプロジェクトのタスクなのかがわからないと困ります。 なので、2つあるわけです。
>sergentdaiさん そのモジュールインストールしてないとかでないの？
環境を整えていないので、正確なことはわかりませんが ＞bash: ./trema: そのようなファイルやディレクトリはありません とあるので、tremaが存在していないようです。 whereis trema としてパスが返ってこないようなら、ちゃんと動作していない(インストールされていない)可能性があります。
せっかくのedomin２００４さんの回答。 ________print(" "[0:(10-i)/2]+"@@@@@@@@@@"[0:i+1]) スペースが一部抜けています。 ________print("__________ "[0:(10-i)/2]+"@@@@@@@@@@"[0:i+1])
＞どなたか原因のわかる方、教えていただけないでしょうか。 仕様ですよ。
その環境でのエディタ（IDE)にとってのカレントディレクトリと Rubyコマンドにとってのカレントディレクトリなどが解らないので、 まず カレントディレクトリ下のファイル名を表示するコードを実行させましょう。 「 p curDir = Dir::pwd Dir::glob(curDir + '*' ).each {|f| puts "#{f}: #{File::stat(f).size} bytes" } #カレントディレクトリ直下のファイル名の一覧 Dir::glob(curDir + '/*' ).each {|f| puts "#{f}: #{File::stat(f).size} bytes" } #カレントディレクトリの一つ下のファイル名の一覧 Dir::glob(curDir + '/*/*' ).each {|f| puts "#{f}: #{File::stat(f).size} bytes" } 」 この実行結果にtest.textが入っているディレクトリが見つかれば、そのパスを所望の引数に指定すれば良いでしょう。
print(','.join(x)) #もしくは# print('_'.join(map(str,x)))
最低限簡単に済ませるならgoogleのアプリケーションからあなたのサーバ上のRubyスクリプトを叩くと言う方法があります。 https://www.google.com/script/start/ またRuby自体cgiでも動かせるのでPerlみたいにApacheにcgiの設定を書き込んでファイルにApahceからの実行権限を与えるだけで動きます。 http://www.server-world.info/query?os=CentOS_6&p=httpd&f=3
setsunal_fujitaさん その二つの書き方の中では、後者の方が関数のみで構成されていてマシかな？とも思えます。 ですが、よりrubyらしい覚え方は、下記の二つの組み合わせとして理解したほうが良いです。 1.オブジェクトはメソッドを呼び出すことができる。 2.メソッドは（オブジェクトを返すので）、連鎖できる。 Rubyでのオブジェクトの種類には、数値や文字、配列だけではなくて、｛｝で囲まれた処理ブロックもまた、オブジェクトです。 例えば、「１から１０までの数（n)の列で、３で割った余り（％）が０の数の列」は、 (1..10).select{|n| n % 3 == 0} という(1..10)オブジェクトに対する.selectメソッドと、その引数とした「剰余が０か否か」を返す処理ブロックからなる式で、[3,6,9]という配列オブジェクトが計算されます。 ”if文”も,「(条件）．if｛処理ブロック１｝｛処理ブロック２｝」という、 (条件)オブジェクトのメソッドで、２個の｛遅延実行される処理ブロック｝を引数として持つと解釈し、質問に例示された文も 「((条件）．if｛something｝｛something_else｝).foo()」 と解釈できる式に直したほうが、良いでしょう。 古いプログラミング言語では、言語仕様が洗練されていなかったので、その学び方でも、 「ひらがな１文字毎にバラバラな字形として覚える」的な考え方の延長で、 「漢字も１文字毎にバラバラな字形として覚える」という小学生レベルの覚え方が強いられていたでしょうが、 Rubyでは、「漢字は部首の組み合わせだ」という、中学生レベルの漢字の加速的な学び方に飛躍することができます。 「｛土、水(氵)、火、風（几）｝と｛木｝の部首の組み合わせで ｛杢、沐、炑、凩｝という漢字を造る」的な解釈のトレーニングをしていれば、 「１から１万までの数（ｎ）の逆数（分子が１で分母がｎの分数）に変換(map)した数列の和（数の間に演算子（：＋）を挟んだ式」も 「（1..10000).map{|n| Rational(1,n)}.inject(:+)」 という和文より短い式で書けるようになります。 ＜参考＞ 第1章 Ruby言語ミニマム http://i.loveruby.net/ja/rhg/book/minimum.html
多分エディタのencodingとrubyのencodingの組み合わせが悪かったのでしょう 以下のいずれかで良いでしょう (1) エディタのencodingがutf-8で、Rubyの起動時のencodingをそれに合わせる場合 (a) コードは 「 # coding: UTF-8 myString = 'A' puts myString 」 (b) Ruby起動方法は 「ruby -KU ファイル名」 (2) Rubyの起動時のencodingを調べて、それにエディタなどのencodingを合わせる場合； (a) エンコードを調べるためのコードを書いて、実行 「 puts Encoding.default_external puts Encoding.default_internal 」 １行目"Windows-31J" ２行目""等が表示される (b) 「 # coding: (a)で表示された文字列を転記 myString = 'A' puts myString 」
>配列のなかで重複した要素を取り除く 面倒なら、perlのものを移植するという最終手段があります。 ＊＊＊ use strict ; use warnings ; my @a = qw(1 2 2 3 4 4 4 5 5 6 7 8 8 9 9 9 9); my %h; print join" ",@a; print"\n"; map{$h{$_}=1}@a; my @b = sort keys %h; print join" ",@b; print"\n"; ＊＊＊ a=[1,2,2,3,4,4,4,5,5,6,7,8,8,9,9,9,9] h={} p a a.map{|x| h[x]=1} b=h.keys p b
>wrong number of arguments(1 of 5) 引数は5個必要なのに、1個しかないから実行できないよってエラーメッセージですね。 Window_SkillReserveにバグがあるのではなく、@actorの中身が間違ってるんじゃないかと思います。
エラーログを見る限りはPassengerのエラーみたいな雰囲気です。 リンク先のバージョンのPassengerは3.x系ですが、質問者さんのPassengerは5.x系になっているのでgemでpassengerをインストールするときに3.xを入れてみてはいかがですか？ もしはCentOS6でもRedmineの3.x系はインストール出来ると思うのでそちらを入れてみるのも良いかと思います。
Rubyって中級者向けで、初心者には向かないと思うけど・・・。 Rubyは、ソースコードが見やすいけど、慣れるまでかなり意味が取りづらいでしょ。 他の言語を選択することは無理なん？ PHPとか、C#とか。 Rubyはまだ、本が出てるから、それを買うのが近道ですよー。
Perl では、正規表現置換に /g 修飾子を付けるだけです。 perl -e '$a="1234";$a=~s/[23]/[$&]/g;print "$a\n";' なお、質問とまったく同じ出力にするには、次のようにします。 perl -e '$a="1234";$a=~s/[23]/do{print "$&\n";"[$&]"}/eg;print "$a\n";'
だいたい合っています。 正確にはgemバージョン管理および、gemのインストール機能の提供 だと思います。
普通にscaffoldすれば添付の画像のようになり、validationは(エラーメッセージ)は表示されないかと思います。 質問で返すのは大変申し訳ありませんが、質問者さんがscaffoldを行ったコマンドを教えていただけないでしょうか？ 同じようにscaffoldを実施し、同じようにエラーメッセージが表示されればお答えできるかと思います。
＞高速にテキスト出力する方法を教えてください。 高速なコンピューターを使えば良いですよ。
"" で囲んだ文は文字列をして扱われるのですが、文字列自体に制御文字という処理があるわけではないので、制御文字を書いても変換されません。 単に文字列内で変数の値を表示しようとするなら #{} を使用しますと表示できます。 例： "今日は#{$game_variables[101]}だった。" 制御文字 \v の v は変数の英語表記 Variables の頭文字からきています。 $game_variables はイベントコマンドの変数として扱われているグローバル変数になります。[101] はそのまま 101 番目を意味しています(要素的には 102 番目扱いですけども)。 $game_variables[101] という記述は「変数 101 番目の値」を取得できますので、それを #{} 内に入れれば OK という感じです。 この回答の意味を深く考えず、とりあえず試してみたら「ああ、なるほど」と理解しやすいと思います(`･ω･`)
ピンとこなければ、それぞれを詳しく調べるとよいでしょう。 此処で逐一、解説しません。 「ホスティングプラットフォーム」は、インターネット接続サービスに、さらに種々のサービスを付加して提供するものを、そのように呼称しているようです。
NAME_SW = 2 2番のゲームスイッチがオンの時、ネームウィンドウを非表示にして、オフの時に表示にする、という意味です。もし、他のスクリプトやすでに作成したゲームで2番のスイッチを使っているのであれば、以下のように記述することでスイッチの番号を変更できます。 NAME_SW = 20 こう書けば20番のゲームスイッチのオンオフでネームウインドウの表示と非表示を切り替えることができます。 ゲームスイッチの切り替えは、コモンイベントやイベントのスイッチの操作から行ってください。
Gemfile.lockをなぜ消そうとするのでしょうか？ 本来必要なものですので、消しても作成されます。
http://www.atmarkit.co.jp/fcoding/articles/ruby191/ruby191a.html ここにirbに関する説明があります。 手順通りreadlineをインストールしてみてください。
>わけあってこのプログラムは本日23時までに完成されければなりません！！ >よろしくお願いします！！！！！ じゃ。その訳とやらを聴いてやるから話してみな。
どのような環境下で何を実行したときにおこるエラーなのでしょうか？ そのあたりを整理すると回答されやすいと思いますよ？ 何かしらが泣いています。なぜでしょう的な感じの質問になっていますよ。
このようにしてみてはどうでしょうか。 print "0--9の整数を入力>" input = gets.chomp if input == "give up" puts "正解は #{y} です" break end x = input.to_i n = n + 1
Rubyの資格といえば、ほかの質問者さんも上げてはいますが、 「Ruby技術者認定試験制度」ですね。 就職活動の補助で受けるのであればSilverで十分かと思います。 (そもそもGoldはSilverを持っていることが前提) だいたいの試験勉強時間ですが、プログラミング初心者であれば半年？ 経験者であれば2週間ほどだと思います。 （私はだいたい2週間の勉強で取得しました） ただし就職に劇的に有利になるわけではないかもしれません。 0ではないと思います。 ただ、(私の周りだけかもしれませんが)近年Rubyを扱う企業がまた増えてきているように感じますので、 余裕があればとっておいてもいいと思います。
試していませんが、コマンドプロンプトで assoc .rb=RubyScript ftype RubyScript=ruby.exe %1 %* とかはどうでしょうか。 詳しくは assoc /? ftype /? で。
sqlite3のgemは入ってますか？ DBIが古かったりしませんか？ 以下の記事が参考になるかと思います。 http://d.hatena.ne.jp/economixmeister/20091025/1256481211
これは、よくやるのが、 BIOS で、仮想化のサポートフラグをＯＮにしていないで、 64Bit の Linux を起動しようとすることです。 わたしも、一回やりました。 外していたらごめんなさい。
単純に split.join(～)で済むのでは？ #//codepad.org/5k2kv7FU puts $_.split.join('@') while DATA.gets __END__ 1 2 3 a  b  c x y z
atsuatsu0618さん 人による。 学校に行って、試す。
stu_komatsuさん ”Ruby on Rails Tutorial”というと、 その本家Michael Hartl 著作で、下記サイトに翻訳版が掲載されているのと、同じかな？ http://railstutorial.jp/ ＞current_userという関数がどこから呼ばれているのか current_userは、modelsに分類されるクラスの属性だから、 基本的にＣＲＵＤ（生成・参照・更新・削除）の４種類のメソッドが在って、 「views」や「controllers」に分類されるクラスから呼ばれるものです。 §8.2.3現在のユーザーに 「Views」の*.erb形式ファイル中で、current_userのname属性を表示するコードの例として下記のコードが在ります。 「 <%= current_user.name %> 」
どの程度のウェブサイトを作るのか、受講者の適性はどうか、講座内容はどうか、に依るので、一概には言えないのですが、 ゼロから３ヶ月で１つのウェブサイトを完成させる、というのは、そこそこ現実的な話だと思います。 今は、昔と違って、ウェブプログラミングのための様々な便利ツールや優れたプログラムが、無料で利用できます。 （これらは先人の努力の蓄積によるものです） こうした「知恵の蓄積」を利用すれば、ほぼ知識の無い人でも、３日程度で SNS サイトが作れてしまったりするのです。 ただし、「作れる」ということと、「分かって作れる」ことの間には、大きな差があります。 ３ヶ月で、その差を、どこまで・どのように埋めていけるのか、そこが講座の腕の見せ所でしょう。 学校に通うのと、独学するのとは、それぞれ、利点と短所が異なります。 学校は、設備や書籍の点で有利ですが、生徒達の間で馴れ合いが発生すると、「ダメ人間の吹き溜まり」になってしまうおそれがあります。 独学は、比較的安く出来ますし自分のペースで出来ますが、つまずいた時にどうしようもなくなってしまったりします。 Ruby でウェブプログラミングという事であれば、とりあえず下記の講座サイトを覗いてみてはいかがでしょう。 http://dotinstall.com/ ウェブプログラミングの基本は HTML と CSS ですので、まずはそこから。 その２つを修了したら、 http://dotinstall.com/lessons の下の方にある「サーバー環境を作れるようになろう」を学び、続いて、「Rubyでウェブサービスを作れるようになろう」に進んでみましょう。
モデルはどんなところでしょうか。 要はDB内の操作を行うときに使うのがモデルです。 以下のようなときにメソッドを定義するのがメジャーなコーディングです。 ・レコードを登録する ・レコードを更新する ・レコードを削除する ・1回の検索で取得できないようなレコードに対して検索を掛ける モデルがコントローラにデータを渡してやり、最終的にはコントローラで定義されたインスタンスの中身をビューで表示すると考えてください。 そう考えると、 データを取得するのがモデル データをなんやかんやするのがコントローラ データを表示するのがビュー という役割分担が見えてきますよね。
マニュアルを読みましょう。 http://docs.ruby-lang.org/ja/2.2.0/doc/spec=2fliteral.html >ダブルクォート(")で囲まれた文字列式、コマンド文 字列および正規表現の中では#{式}という形式で式 の内容(を文字列化したもの)を埋め込むことができます。 要するに、文字列の中であっても#{～}はRubyの式として評価され、その値が埋め込まれるということです。
> 以下が何を示しているのか 「何を示しているのか」だから、こういうことを聞いているのでは？ 0~6まで7個のN^2の数を表示するプログラムを示している。 出力： 0 = 0^2 1 = 1^2 4 = 2^2 9 = 3^2 16 = 4^2 ...
そうです。 https://rvm.io/os にあるとおり、UNIXライクなOSが対象で、Windowsではuruとかpikでしょうか。
＞クラスとは何なのか、実装するにはどうすればいいのか。 ＞分からないことがたくさんあります。 その言った人に聴けばいいんじゃないのかな。
whwqs948さん 国内ではまだ、Pythonの使い手の裾野が広がってきていないようなので、Rubyをお勧めします。 ＞やりたいことのライブラリがpythonしかなかったりします。 ハテ？ どんな機能のライブラリでしょう？ 標準ライブラリに昇格していないくて、来年動くと期待することも危ういライブラリとか、米国の学生たちがノリで作ったライブラリや、github掲載情報ならPythonの方が多いかもしれない。 品質保証をしようとしているコミッタや有償サポータも居る標準ライブラリの中だけで比べれば、分数など 数学の基本的なライブラリは、Rubyの方が木目細かいと思う。 ところで、何度かRuby以外の言語の使い手の人を挑発しているのだが、、 Rubyでタッタの百行未満だったコードの見本があっても、それと同等な速さと省メモリで動くコードを、PythonとかJavaとかC#で書き換えて披露してくれる人が 中々出てきていないのは何故？ Pythonは、「書き手に若干の苦労を強いてでも、第３者にとっての読みやすさ重視」ということは、短く言えば”書き難い”というコト。 またPhthonの基本性能はRubyより悪そうです。 ＜RubyとJavaの定量的比較＞ (a) 中学生にも解けるパズルを解くのに向いた言語の比較； http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1113650350... ・Ruby：75行のコードで、走行時間は6.56秒 ://ideone.com/1ssj1e ・Python：３０行のコードで、走行時間は13.33秒 ://ideone.com/SBLqWP (b) 不定箇所数が可変な虫食い算を解くプログラムをRubyで作ったら正味７０行。 １１箇所可変でも、省メモリで 最初の３個目までの回の列挙に１５秒という速さ。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1114503132... ＜JavaとRubyの比較＞ アメリカの大統領選の頃のトラフィックにも耐える性能の確保の為にJavaに切り替えたそうです。 Twitter社の人たちが、RubyとJavaの基本性能の差異を解っていなかったハズは無いのですが、初期の段階でRubyを使っていたのは「簡単にプログラムヲ作ることができる」という生産性の高さゆえでしょう。 ・Ruby から Java へのシフトで大統領選を乗り切った Twitter http://www.infoq.com/jp/news/2012/11/twitter-ruby-to-java
Cannot load ... って書いてあるんだから、まずは ・soファイルのPATH指定、ファイル名が間違っていないか？ ・パーミッションを確認する（READ権、実行権あるか？Ownerはrootがいい） でしょうか？ あと、HTTPDとかのサービスを起動するのはroot権限でやるので、サービス関連のファイルはユーザーディレクトリとかには置かないほうがいいと思います。/usr/localあたりに入れるのが定石です。
「rubygetch non blocking windows unix」で探したら見つかりましたヨ 「 require 'curses' ENV['LINES'] = '39' Curses.init_screen Curses.noecho Curses.stdscr.nodelay = 1 rows, columns = $stdin.winsize puts "Your screen is #{columns} wide and #{rows} tall" Curses.timeout = 0 charCode = ' '.ord begin key = Curses.getch charCode = key.ord if key puts "Key pressed: #{charCode.inspect}-#{key}\n" end until (!(charCode.nil? ) && charCode < ' '.ord) 」 他にも、Windows OS専用コードとか、unix専用コードもあります。 http://blog.x-aeon.com/2014/03/26/how-to-read-one-non-blocking-key-...
if __name__ == "__main__": の条件が成立しないからですね。 wav関数に入った直後、ifで分岐する直前に print(__name__)とか入れて、__name__になにが入っているか見てみると良いと思います。
hogepiyoの中で配列の要素を参照しないなら hoge.length.times{|i| hogepiyo(i) } でしょうか。
rubyプログラムをエディタで開いてください！ なんと！勝手に逆コンパイルされてソースが出てくるよ！
複数の装備タイプと言うのは例えば「盾：鎧」としたときに その防具は盾としても装備できるし鎧としても装備できる。 また、同じ防具が二つあるならば盾と鎧の両方に装備できる。 と言った感じでしょうか。 装備タイプを複数つけることは出来ないので、基本的にはスクリプトでの改造になるでしょう。 （スロット拡張のようなスクリプトはあるが、装備タイプを複数付与するようなものは見たことが無いです。） 装飾品の装備枠を1つ増やすだけとかなら簡単なんですけどね。
>ヤフオクAPIを使いこなすためにオススメのサイト、本、方法を教えて下さい http://developer.yahoo.co.jp/webapi/auctions/
background-image: url(bg-top-01.jpg); http://www.htmq.com/style/background-image.shtml
http://eternalwindows.jp/graphics/bitmap/bitmap16.html RubyからWin32APIを使う方法はググってみれば、見つかるはず
dsjhaduhaa_531hk4さん 提示された代入文の後でも、＄aはstringとして代入も更新も出来ましたヨ。 その実行結果は、下記URLで見ることができます。 http :/ /ideone. c o m/NTmKGo
単に結果を出力するのではなく、結果をJSONやXMLで返すようにすればうまく処理できると思います。 例えばJSONを使う例を挙げると、成功した場合は、 ㅤ{ "status": "OK", "result": ["apple", "orange"] } というような結果を返し、 失敗した場合は、 ㅤ{"status": "Error", "error-message": "..." } を返すということにすれば、エラーになっているかすぐ判別できます。 RubyでJSONを出力する方法については、以下が参考になると思います。 ◆ Hashをjson形式の文字列に変換する http://edywrite.blogspot.jp/2013/01/ruby-hashjson.html JavaScript側でJSONを受け取り、読み取る方法は、以下の記事を参照して下さい。 この例ではurlにjsonファイルを指定していますが、cgiの場合も同様です。 ◆1分でわかるjQuery $.ajaxによるJSON・JSONP読み込み方法 http://iwb.jp/jquery-ajax-jsonp/
ozwast_0725_eilanyaさん ruby-opencvというライブラリを使うと、簡単みたいです。 ・Rubyで14行の動画再生サンプルコード http : / /d.hatena. n e . j p /ara_k/20150415 ・上記のライブラリのダウンロードサイト http : / / www.rubydoc. i n f o/gems/ruby-opencv/file/README.md https://github.com/ruby-opencv/ruby-opencv •Ruby 1.9.3, 2.x and OpenCV 2.4.10 are supported.
# BookInfoクラスのインスタンスを初期化する def initialize( title, author, page, pablish_date ) @title = title @author = author @page = page @publish_date end を # BookInfoクラスのインスタンスを初期化する def initialize( title, author, page, publish_date ) #← p[a]blish_date になってました @title = title @author = author @page = page @publish_date = publish_date #← = publish_date が抜けてます end に訂正してください。
if x==x.x.upcase でできるはずです。 また、 if x[/^[A-Z]+$/] でも
f40saya_1987_f120aさん その行は「プログラムを構成する式」です。 ＜出展＞ http://docs.ruby-lang.org/ja/2.2.0/doc/spec=2fprogram.html ・プログラムは式を並べたものです。 Ruby の式には、変数と定数、さまざまなリテラル、それらの 演算子式、if や while などの制御構造、メソッド呼び出し(super・ブロック付き・yield)、 クラス／メソッドの定義があります。
いわゆるSoft Wrapのことですね。 ターミナルの表示でそれをしようとすると恐ろしく面倒なので、エディタにコピーして見るのがいいと思います。 ruby xxx.rb > out.txt MacかLinuxならlessを使うと便利です。 ruby xxx.rb | less （Qをタイプすると終了）
megamega147さん Ruby on railsの前提GEMの一つのBundlerがinstallされていないという問題のようです。 ではBundlerだけinstallすれば解決するか？というと、gems/2.1.0とかrailties-4.0.2とか、他にも色々使おうとしているので、gem間のバージョン不整合の問題が予想されます。 そこで、Ruby on rails関連の色々なgemのバージョンの整合性を確認した状態で、ワンタッチ・インストーラを提供しているサイトから、”Recommended ”マークされているバージョン、今だったらRuby Stack 2.0.0-29をダウンロードして、環境構築しなおした方が良いでしょう。 ｈｔｔｐｓ://bitnami.com/stack/ruby/installer このインストーラなら30分程度で、環境構築できます。
http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1014882566...
標準入力より1行ずつ読み込んで、 それを隣り合う二行ずつにまとめます。 その最初の行と次の行の2列目を取り出し、計算するために数値に変換して引き算します。 プログラムに書くと、 $stdin.each_line.each_cons(2){|a1,a2| puts a2.split(/\s+/)[1].to_f-a1.split(/\s+/)[1].to_f} となります。 $ ruby test.rb <data.txt のようにすると出力されます。何行あっても大丈夫なはずです。
同じ物が複数ある場合、常識的には配列を使う。 つまり、配列を格納した配列を作れ。
マニュアルぐらい読みましょう。 http://docs.ruby-lang.org/ja/2.2.0/method/Kernel/m/autoload.html [PARAM] const_name: 定数をString または Symbol で指定します。 Exe は String でも Symbol でもありません。 修正例1：autoload :Exe,"./exe.rb" 修正例2：autoload "Exe","./exe.rb"
OSとそのバージョン、どの命令を実行すればエラーが出るのかくらいは書いておきましょう。 エラーメッセージからするとOSX 10.9以降だと思いますが。 OSX 10.10.5でターミナルから $ sudo gem install opengl $ irb > require "opengl" true となりますから、問題なくインストールされています。 macportsを使ってインストールしたruby2.1でも同様に問題ありません。
何か、わたしの CentOS 6.7 でも同じ現象でした。 どうもモジュールの依存関係が混乱しているみたいです。 でも、 yum remove nodejs yum -y update yum -y install nodejs yum -y install nodejs-* yum -y install npm って、アンインストールアップデートして インストールをし直したら、直りました。
i が 1 になったら無限ループ化する[i が変わらなくなる]
>どうすれば投稿できるようになるのか、何が原因と考えられるかを、教えてください。 そこのページの人に聴けばいいですよ。
