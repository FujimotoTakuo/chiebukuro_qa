My Oracle Supportログイン後、[パッチと更新版] ページにリンクされているOracle Software Delivery Cloudからのダウンロードを利用ください。 Oracle Software Delivery Cloudに掲載されていない製品プログラムについては、My Oracle Supportログイン後 [問い合わせ] からサービス・リクエスト (SR) を作成してください。 SR内で提供可否と可能な場合にはダウンロード用URLの案内がオラクル社から来ます 。 サポート契約に基づいたバージョンアップ・ソフトウェア入手に関する問い合わせは、My Oracle Supportのサービス・リクエスト作成または、オラクル カスタマ・サポートの「技術以外のお問い合わせ」を利用ください。 ※2015年10月2日出荷を以て、バージョンアップ用メディア（媒体）の製造・出荷運用は終了しました。 ※My Oracle Supportの利用には、サポート契約の締結が必要です。
いろいろなやり方がありますけど、例えばBとCで絞り込んだ結果、BとCが一致する行が複数行ある場合はどうするのですか？ A｜B｜C｜D｜ ＾＾＾＾＾＾＾＾ E｜E｜1｜C｜ E｜E｜2｜C｜ P｜F｜2｜D｜ P｜F｜3｜D｜ X｜F｜3｜Y｜ こういうデータだと、答えは A｜B｜C｜D｜ ＾＾＾＾＾＾＾＾ E｜E｜2｜C｜ P｜F｜3｜D｜ X｜F｜3｜Y｜ この3行ですか？ 3行で良い、または重複が無いのなら、 SELECT * FROM table_name WHERE EXISTS ( SELECT 0 FROM table_name x GROUP BY x.B HAVING table_name.B = x.B AND table_name.C = MAX(x.C) ); こんな方法でも求められます。 BとCが主キーではないなど、重複があり得て、かつBとCで一意になるように（上記の例なら2行に）絞りたいというのであれば、さらなる条件を決めるか、ランダムに絞り込むことになりますね。 ※列を表すのなら、「コラム」ではなく「カラム」です。
Windowsでしたら、NASのアドレスをドライブ割り当てしてしまったほうが簡単なような気がします。
オラクル社ではサーバー上のCPUを仮想的に分割する機能をHard Partitioning とSoft Partitioningの2つに分類しています。 そのうち、Hard Partitioningに該当する場合には、オラクル製品がインストールされる（又は稼働する）プロセッサ分をライセンス対象とすることを許諾しています。 オラクル社がHard Partitioningと認めている技術は次のURLで随時公開しています。 Partitioningガイド http://www.oracle.com/jp/direct/partitioning-jp-168078-ja.pdf Soft Partitioningの場合はオラクル製品がインストールされる（又は稼働する）サーバーの全プロセッサがカウント対象となります。
あります。 オラクル社では、標準的な使用許諾の一環として1-5年間の期間限定ライセンスを提供しています。 詳細は販売代理店または、以下リンク先のOracle Directにお問い合わせ下さい。 http://www.oracle.com/jp/direct/index.html
ライセンス購入後、一度オラクル製品をサーバーにインストールした後でも、オラクル製品をアンインストール、またはサーバーを廃棄した場合には、インストール先のサーバーを変更することは可能です。 ただし、オラクル製品のライセンスは原則としてオラクル製品がインストールされている、又は稼働可能なサーバーについて必要となるため、2台のサーバーに同時にインストールする場合は、2台分のライセンスが必要となります。2台のサーバーにオラクル製品がインストールされている期間が限定されている場合は、期間限定ライセンスの適用が可能です。期間限定ライセンスの詳細は、販売代理店またはOracle Directにお問い合わせ下さい。 また、オラクル製品のバージョンやプラットフォームの変更（32bitから64bit、WindowsからLinuxへの変更など）のために更新版を入手する場合は、サポート契約が必要です。
バージョンアップの権利はサポート契約に含まれておりますので、サポート契約を締結している場合は、契約者は、バージョンアップ用ソフトウェアを無償でご入手頂けます。 ただし、バージョンアップ前と後でオラクル製品導入先のサーバーが異なり、それらのサーバーに同時にオラクル製品を導入している期間がある場合、その期間中は2台分のライセンスが必要です。 サポート契約未締結の場合、ライセンス購入時に指定したOS、及び製品バージョン以外のソフトウェアを利用する事は出来ません。この場合は既存ライセンスにてサポート契約を再契約するか、新たにライセンスを購入することになります。 なお、Oracle Database のバージョン 12.1.0.2 以降へバージョンアップする場合、Oracle Database Enterprise Edition または Oracle Database Standard Edition 2 のライセンスが必要です。 Oracle Database Standard Edition、Oracle Database Standard Edition Oneをお使いの場合は、Oracle Database Enterprise Edition または Oracle Database Standard Edition 2へライセンスを移行（マイグレーション）することで、バージョン 12.1.0.2を使用可能です。 Oracle Database Standard Edition、Oracle Database Standard Edition Oneともに、ライセンスは無償で Oracle Database Standard Edition 2 にマイグレーションできます。 ただし、Oracle Database Standard Edition 2の最少ユーザー数に満たないNamed User Plusライセンスをマイグレーションする場合は、最少ユーザー数に対する不足分について、Oracle Database Standard Edition 2のライセンスを追加購入する必要があります。 （Oracle Database Standard Edition 2の最少ユーザー数は、物理サーバー毎に10 Named User Plusです。） また、Oracle Database Standard Edition OneからOracle Database Standard Edition 2 にマイグレーションする場合は、サポート料金が現在の金額に対して20%加算されます。 なお、ライセンスのマイグレーションには、利用製品（Oracle Database Standard Edition、Oracle Database Standard Edition One）のサポート契約（Oracle Premier Support）が必要です。
Oracle Databaseの領域サイズ見積りツールに関しましては、既にサービスが終了しています。なお、残念ながら代替サービスの提供もありません。
以下の場合、それなりに時間がかかります。 ・大きな表に索引がたくさん作成されている。 ・Disk I/Oが遅い。競合している。 以下、診断方法です。 ・v$session_longopsでDataPumpの進行状況を確認する。 ・user_indexesの行数を定期的に調べて、行数が増えないようであればハングしている。 ・DataPumpプロセスのCPU使用状況をモニタする。
以下リンクより該当のソフトウェア(Oracle Databaseを含む)をお選びいただき、「ドキュメンテーション」のタブをクリックしていただきますと、そのソフトウェアに関するドキュメントをご覧いただけますので、ご参照ください。(一部の製品マニュアルは日本語化されていないものもございます) ■ソフトウェア・ダウンロードインデックス http://www.oracle.com/technetwork/jp/indexes/downloads/index.html
Oracleホームページ上に、Oracle製品の技術情報に関するコミュニティサイト「Oracle Technology Network（OTN Japan）」があります。 サポート契約をお持ちでない方も、掲示板での情報交換等のサービスをご利用できます。 ただし、公開される情報等には制約がありますので、サポート契約をお勧めします。 ※Oracle Technology Network（OTN Japan）： http://www.oracle.com/technology/global/jp/index.html OTN Japanはメンバーシップ制サイト（無料）であり、利用するには登録が必要です。
問題なく可能です。 ただし、すでにエクスポートが始まっているTABLEの内容は、更新前の内容だけがエクスポートされますので御注意ください。 複数のTABLEをエクスポートする際は、デフォルトだとTABLE間の一貫性を確保しない設定になっていると思いますので、エクスポート中に更新をCOMMITしてしまうと、あるTABLEは更新前、あるTABLEは更新後がエクスポートされるというようなことも起こり得ますから、御注意ください。適切に設定すれば、全てのTABLEをエクスポート開始時点の内容で固定して出すことが可能です。 参照は何の影響もありません。精々影響するとしたら、低スペックのハードウェアだと多少パフォーマンスが落ちる程度です。
OTNのソフトウエアにはサポートはついていません。すでにサポート契約をお持ちであっても、サポート対象となりません。そのためインストールや使用方法などについての技術的な問い合わせ窓口はないです。 正式な窓口ではありませんが、ユーザー様同士の情報交換の場として掲示板がありますので、こちらをご参考にしてください。 ■掲示板（日本語） https://forums.oracle.com/community/developer/japanese 新規の質問は、ご希望のカテゴリーをクリックいただいた後、画面右の、”ディスカッションを開始する”で作成できます。（投稿はオラクルアカウン トへのログインまたは新規登録が必要です。画面右上の”Login”または”Register”リンクをクリックしてください）
Oracle Database 11g Release2（11.2.0.4）およびOracle Database 12c（12.1.0.2）にて、Windows Server 2012 R2に対応しています。 Oracle Real Application Clusters（Oracle RAC）についても、11g Release2（11.2.0.4）および12c（12.1.0.2）にて、Windows Server 2012 R2に対応しています。 ただし、Oracle Database 12c（12.1.0.2）はOracle Database Enterprise Edition、Oracle Database Standard Edition 2でのみ提供です。 Oracle Database Standard Edition、Oracle Database Standard Edition Oneをお使いの場合は、Oracle Database Enterprise Edition、Oracle Database Standard Edition 2へのライセンス移行（マイグレーション）することで、Oracle Database 12c（12.1.0.2）を使用可能です。 Oracle Database Standard Edition、Oracle Database Standard Edition Oneともに、ライセンスは無償で Oracle Database Standard Edition 2 にマイグレーションできます。 ただし、Oracle Database Standard Edition 2の最少ユーザー数に満たないNamed User Plusライセンスをマイグレーションする場合は、最少ユーザー数に対する不足分について、Oracle Database Standard Edition 2のライセンスを追加購入する必要があります。 （Oracle Database Standard Edition 2の最少ユーザー数は、物理サーバー毎に10 Named User Plusです。） また、Oracle Database Standard Edition OneからOracle Database Standard Edition 2 にマイグレーションする場合は、サポート料金が現在の金額に対して20%加算されます。
製品により、ライセンス変更（マイグレーション、アップグレード）可能なものがあります。 例：Named User PlusからProcessor、Standard EditionからEnterprise Edition、旧製品ライセンスから現行製品ライセンスへの変更など 既存ライセンス、価格単位（ProcessorやNamed User Plusなど）、販売チャンネルなどの条件によってマイグレーション費用が計算されます。マイグレーション/アップグレードの可否、費用については、販売代理店またはOracle Direct にお問い合わせください。 なお、下位の製品およびEditionにダウングレードすることはできません。 また、ライセンスのマイグレーションおよびバージョンアップにはサポート 契約が必要となります。
できます。 Oracle Database Standard Edition 2の標準機能として、RAC（Real Application Clusters）を使用可能です。 なお、Oracle Database Standard Edition 2でRACを使用する場合、次の通りライセンス上の制限事項があります。 ・RACを構成する各物理サーバーの最大搭載可能CPUソケット数は2以下、クラスタを構成する物理サーバーは2台まで、各物理サーバーの実装CPU数は1である必要があります。 ・各サーバーで1つのデータベースが使用するCPUスレッドは、8までに制限されます。
>urotukkiさん >使い道、使い方、何ができるのかについて教えてください！ 使い道や使い方がわからない場合は、何もできません。
OTNライセンスに基づき提供されるソフトウェアは本番環境で使用できません。 正規ライセンスをお持ちの場合は、顧客専用のOracle Software Delivery Cloudから正規製品を取得して使用します。
旧契約の解約日翌日から再契約日（開始日）前日までの空白期間に対して、再契約料金を支払う事で再契約が可能です。 再契約料金は、解約したサポート契約の最終支払い金額（12ヶ月相当）の150%を 計算基礎として契約空白期間分を算出いたします。また、再契約後の年間契約料金は、解約したサポート契約の最終支払い金額（12ヶ月相当）にて年間サポート・サービスの提供となります。 また、旧契約がSoftware Updates契約だった場合、既にSoftware Updatesの販売（契約）は終了しているため、Software Updatesにて再契約することができません。 Oracle Premier Supportでの再契約となります。
VMware、Hyper-VなどはSoft Partitioningの分類となり、Oracle製品がインストールされる（又は稼働する）物理サーバーの全プロセッサがライセンスカウントの対象となります。 仮想化環境の設定を変更することで、物理サーバー間で仮想マシンが移動可能な場合には、Oracle製品の移動元/移動先の両方にライセンスが必要となります。 なお、障害発生時に仮想マシンを切り替える構成は、「データリカバリーポリシー」における「フェイルオーバー」の構成には該当しません。
質問の書き方を見ると、他の方法では問題無いので、質問者さん自身が書いたコードに問題ががありそうだと認識されているように思われますが、OracleやODP.NETやADO.NET(.NET Framework)のバージョンも、どういうコード(クラス・メソッド)を使っているかも書かれていないのはなかなか。。。なんというか、、、すごいですね。 まあ、予想ですけど、OracleCommandのInitialLONGFetchSizeプロパティを設定していないんじゃないでしょうか。
DBA_OBJECTSで、OWNERが一般ユーザとなっているものを対象にしてはどうでしょう。 CREATED列のタイムスタンプも参考になる、かも。
それは、オラクルの何の質問ですか？
UTL_RECOMPは無効（INVALID)のオブジェクトのみコンパイルします。マニュアルに明記はありませんが、何度も実行しなければいけないものではありませんので依存性を考慮してくれるのではないかと思います。
「フェイルオーバー」はライセンス許諾された本番コンピュータとその他のコンピュータとのクラスタ構成であり、且つ共有ディスクを保有するシステムが対象となります。 クラスタ構成は、クラスタ用ソフトウェア（クラスタウェア）を導入していることが前提となります。 「フェイルオーバー」構成の場合、各クラスタ構成内でライセンス許諾されていない1台の待機系コンピュータへのインストールが認められ、年間（1月1日から12月31日まで）合計10日までのプログラム稼動をする権利が含まれます。 「フェイルオーバー」が適用されないシステム構成の場合は、プログラムが導入される待機系（スタンバイ側）サーバーにもライセンスが必要となります。 また、「フェイルオーバー」は物理環境にのみ適用され、ソフトウェアによる仮想化環境には適用されません。
LOGTIMEの型はなんですか？ 年月日を持たない以上、timestampやdateではないですよね。varchar2ですか？ もし、文字列型ならsubstr(0,2)とかするだけでいいのでは。 SELECT LOGDATA,SUBSTR(LOGTIME,1,2),count(*) FROM テーブル GROUP BY LOGDATA,SUBSTR(LOGTIME,1,2)
原則として、Oracle製品がインストールされている全物理サーバー（インストール作業を伴わなくても、Oracle製品が稼働する物理サーバーはこれに含みます）にライセンスが必要です。 そのため、いわゆる HA構成についても、通常運用時に待機サーバーでOracle製品が起動するかどうかに関わらず、原則としてOracleをインストールする、または稼働させる全物理サーバーがライセンス課金対象となります。 但し、2009年4月1日以降に新規ご購入のライセンスに対しては、Oracle社が定義するデータ・リカバリ・ポリシーが適用されます。 データ・リカバリ・ポリシーで定義する構成に該当する場合、必要ライセンス数は次のように計算します。 ※待機サーバーの電源ON/OFFは関係致しません。 ※ソフトウェアによる仮想化環境はデータ・リカバリ・ポリシー適用対象外です。 【Named User Plusライセンスの場合】 本番サーバー・待機サーバーを1つのコンピュータとみなした上で、アクセスする全ユーザーをカウントします。 ※各製品で設定された最少ユーザー数を下回る数でのライセンス購入は出来ません。 ※最少ユーザー数がProcessor数やコンピュータ数に依存する製品については、本番サーバー・待機サーバー全体のCPUコア数、サーバー台数に基づき計算する必要があります。 ただし、後述の「フェイルオーバー構成」に該当する場合は、待機サーバー1台分 を除外して最少ユーザー数を計算します。 【Processorライセンスの場合】 本番サーバー・待機サーバーに搭載された総プロセッサ数をカウントします。 ※フェイルオーバー構成に該当する場合に限り、待機サーバー（待機サーバーが複数台ある場合はそのうち1台分のみ）のライセンスは不要です。 <<フェイルオーバ構成 適用条件（全て必須条件）>> ・クラスタ構成（クラスタウェアを利用した構成）であること ・共有ディスクを利用した構成であること ・待機サーバーでのOracle製品稼働日数が年間10日以内であること
質問されているような事は技術的には可能な内容と推測します。もっと、具体的な内容を示していただければ正確な回答が出来ると思います。基本的には同じ行のデータから導き出せる内容で有れば、CASEや関数を使って対応出来ます。異なる行の値を使用する場合はサブクエリ等を使います。
こちらのSQLで出力先のbindingの値を確認してください。 mandatory select dest_id, dest_name, binding from v$archive_dest; OPTIONAL(デフォルト)であれば書き込めなくてもOKです。 逆に、MANDATORYに設定している場合は必須です。MANDATORYの出力先に対してアーカイブできない場合、REDOを上書きできないので、REDOの上書きを試みた時点で書き込めるようになるまで待ちが発生します。この場合はハング状態ということになりますが、それでもインスタンスは停止しません。
違います。 redoは再度する(re+do) 。 だから、障害が起きたさい、復旧の時に、トランザクションを再度する→だから、ユーザがcommitしたトランザクションをジャーナルファイル(logファイル)から実行してdisk(データファイル)に書き込む。 undoは、un(否定)+doで、トランザクションをロールバックしたとき、戻すためにトランザクションを先書き込むファイルです。 一般教科書的には、どちらも、ジャーナルファイルで1ファイルの感覚なのですが、実装したさいは、redoログは、圧縮したり、メンテナンスを自動にして、undoとは異なるファイルになるのです。 圧縮しないと、延々出力される(オラクルは24時間稼働が商品謳い文句)redoログファイルが、始末に終えない。圧縮して退避させる運用になるので、undoとは異なるファイルになるのです。
各Editionの違いは、添付の表のとおりです。 ※1 CPUがx86互換プロセッサの場合は2、それ以外の場合は1 ※2 CPUがx86互換プロセッサの場合は4、それ以外の場合は2 なお、SE、SE1は、バージョン12.1.0.1が最終リリースであり、販売を終了しております。
出力の順序は「order by」で指定します。seqが0のデータを最後に出力したいのであれば、それを「order by」の最初で指定する必要が有ります。例えば「order by case seq when 0 then 1 else 0 end,...」です。
(google先生) 責任の5.制限。 いかなる場合においても、ORACLEは、利益の損失の一切の間接的、偶発的、特別懲罰的または間接的損害、または損害について責任を負わないものと、収入、データ、またはお客様または第三者が被ったデータ使用、に関わら契約または不法行為上での動作、ORACLEがそのような損害の可能性について知らされていた場合でも。 損害の本契約については、Oracleの全責任は、いかなる場合においても千ドル（米国$1,000）を超えないものとします。 Java使って、利益の損失だしても責任負いませんよ。 損害の契約しても、$1,000までですよ。 かな。
【製品機能など】 ・従来のOracle Database Standard Editionと同じ機能が使用可能です。Oracle Database Enterprise Edition固有の機能・オプションは使用できません。 ・RAC(Real Application Clusters)を標準機能として搭載しています。 ・Oracle Database 12c Release 1 (12.1.0.2) 以降を使用可能です。（旧バージョンも使用可能です。ライセンスの制限事項等については、バージョンに関わらず同一です。） 【ライセンス種類、必要数量】 ・Processorライセンス、またはNamed User Plusライセンスでご購入いただけます。 ・Named User Plusライセンスの場合は、Oracle Database Standard Edition 2を使用する権限を持つ、特定個人の人数分のライセンスを購入できますが、Oracle Database Standard Edition 2を導入する（または稼働させる）物理サーバー1台につき、少なくとも10ユーザー分のライセンスが必要です。 ・Oracle Database Standard Edition 2のProcessorライセンスは、Oracle Database Standard Edition 2を導入する（または稼働させる）物理サーバーに実装されたCPU数（コア数ではなく、プロセッサの数）と同数ご購入いただきます。Processorライセンスにてご購入された場合、ユーザー数の制限はありません。 ※Processor、Named User Plusの定義については契約書のライセンス定義をご参照下さい。 契約書のサンプルは次のURLにあります。 http://www.oracle.com/jp/corporate/ol-toma-v111412-jp20130107-sam-1... 【その他ライセンスの制限事項】 ・最大搭載可能CPUソケット数が2までの物理サーバーにインストールする（又は稼働させる）ことができます。 ・Real Application Clusters構成の場合は、各物理サーバーの最大搭載可能CPUソケット数が2以下、クラスタを構成する物理サーバーは2台まで、各物理サーバーの実装CPU数は1である必要があります。 ・Oracle Databaseが使用するCPUスレッドは、16（Real Application Clusters構成の場合は、各サーバー8）までに制限されます。
ROW_NUMBER関数を利用すれば簡単にできますよ。 SELECT ROW_NUMBER() OVER (ORDER BY 伝票番号) "NO", 伝票番号, 商品コード, ....... NO列を上記のようにROW_NUMBER関数で書けば、伝票番号の若い順で連番を振ります。ORDER BYの指定を変更すれば、番号の順序も変えられます。
Oracle製品については、以下のリンク先の「Oracle 日本国内価格表」をご覧ください。 http://www.oracle.com/jp/corporate/pricing/e-pl101005-101005a-n-176... サポート契約は、購入されたライセンス数と同数での購入が必要です。
SELECT distinct * FROM TBL_出荷 where 出荷日 between (SELECT max(出荷日) from TBL_出荷 where 出荷日< (SELECT max(出荷日) from TBL_出荷 where 出荷日< (SELECT max(出荷日) from TBL_出荷 where 出荷日<20160516))) and (SELECT min(出荷日) from TBL_出荷 where 出荷日> (SELECT min(出荷日) from TBL_出荷 where 出荷日> (SELECT min(出荷日) from TBL_出荷 where 出荷日>20160516))) order by 1 です。
uce_imさん もしかして、 ユアソフト社の「汎用バッチインプット」使っているんじゃない。 そこがなかなかうまく作成できないってことだよね。 実行トランザクション、 購買伝票登録（ME21N）、 入出庫伝票登録（MIGO）、 をたたいて画面遷移を確認して、 BDCを確認して作成していくしかないね。 NTTデータ GSLの「Easy-up」を使うと、 もっと簡単に作成可能なんだけど。 テスト時は、 全画面表示で実行して、画面遷移の動きを確かめながら、 不具合部分を修正していくしかないと思います。 バッチインプットでは、 対応した機能コードを指定するわけですが、 その機能コードがない場合もあるので、 そこは注意ですね。
TABLEには、容量があります。 CREATE TABLEする際に、何回まで拡張するか、 という設定を行っており、 その最大回数に達したため、エラーになっています。 対処としては、上記の回数を増やすことになるので、 ALTER TABLE文で、MAXEXTENTSを増やして下さい。 拡張する際のサイズもあるため、 もしかしたら、拡張サイズが小さいかもしれません。 http://www.ujp.jp/modules/mylinks/visit.php?cid=13&lid=228
>oraclekannrennさん2016/6/2923:06:09 >oracleのお勧めの開発環境を教えてください。 Windows
functionのソース行を格納したビューが有ります。 function内に、別のfuctionが書いてあれば、callですね(但し、コメントあれば、制御するしかない)。 あとは、上司と部下の関係の再帰select。 俺なら、3-4時間あれば、かなり、複雑なシステムでも、ディレクトリ構造で、関数の親子関係を、一目瞭然で、出せる 実際、vbのソースの中に、更新順序を守っていない(デッドロックが頻発していた)ソースの特定を、6時間で分析関数を使って、やっていた。
SQLで絶対にできないとは言いません。 これ、改行やスペースなど「区切り文字が連続する場合」はどう処理するのでしょうか？ 例えば、NCLOB型1300文字の内容が、「改行が3文字続いているだけ」の場合、どうするのでしょうか。分解結果をNULLで4行格納するのか、NULLは行を作らず何も入れないのか、その辺の定義が無いです。 1300文字全てが区切り文字だと想定しても、最大分割数は1300分割ですから、1行を最大1301行に増やして分解して行けば「理論上は」SQLでもできます。ただ、SQLを書くこと自体がもう「面倒くさい」と思いますよ。しかもパフォーマンスも劣る可能性がありますね。 素直にPL/SQLのカーソル等で開いて、1行ずつ処理して、1行を複数行に分解したものを用意し、FORALL文でINSERTするなどした方が、圧倒的に楽でしょう。理論の組み立て自体が楽になると思います。
システムのイベントログを確認して、 ネットマスクが変わる原因を理解し、 問題が起きない設定について学習して下さい。
島国根性日本人が同質性・共感性に執心し、そこに同調しない、若しくは出来ない者を排除するのが、いわゆる「虐めの構造」である。私は若い頃はさんざんそうした疎外感に苦しみ悩んだが、ある時突き抜けて解放され、以来わざと同調と共感を無視し、我が道を歩みだした。すると、不思議な事に私の突出した特異性に共感する者が現れ、一種の変態サロンが出来たのだ。あなたは何ら間違っていないから、自分を強く信じなさい。先の回答者が、「単に匂いが迷惑なだけ。」とアドバイスしていて、確かに一理は有るが、ならば「匂いがするスタミナ弁当を持ち込む人間を疎外して良いや否や？」という根本命題が解決しない。個人の特異性を嫌う日本の学校教育が、ゆがみ切っているのだ。スタミナ弁当のなにが悪いか？私なら教師にスタミナ弁当を注意されたら、翌日は大蒜ラーメンをその場で自炊する。世間は仲良しごっこの砂場ではなく、食うか食われるかの戦場なのだ。
上限というものはなかったと思われます。 ただし、非常に読みにくいものになることが多いので、 個人的にはなるべく使わないようにしています。 規約を徹底せずどんどんネストして大きくなると、 変数のスコープ等、非常に把握しにくくなります。
＞・その言語に関して知識を付ける。 ＞・仕様との見直しを徹底する。 ＞・少しでも疑問に感じたら仕様書作成者に聞く。 こういうことを考えるようになることを経験と言います。 そして、経験を積めば積むほど、「自分で勝手にわかった気になるのは危険」ということが身にしみますよ。 言語の知識なんてのはほんの小さなことです。 それよりも、質問する力のほうが大事だと思います。 もちろん、理解出来なかったり疑問を感じたときに質問することも大事ですが、理解できたと思った時にも質問することが大事です。 経験上、何かを説明されたときに何も質問が出来ない人は、説明されたことを理解できていない場合が多いと思います。ほとんどの人は自分が理解した「つもり」になっていれば質問をしません。でも、優秀な人は自分が理解したことを基にちょっと視点を変えて質問を返します。三角測量で正確な距離を測るような感じですね。質問することで、自分の理解と相手の説明が一致することを確認するのです。 あなたの職場では仕様やコードのレビューやウォークスルーのプロセスはありますか？ あるのなら、それは質問力を養う絶好の機会です。積極的に参加して、積極的に質問しましょう。 仕様やコードの品質をあげるには、出来るだけ多くの人の批評にさらすことです。質問することで学ぶことも多いですし、批判されることで学ぶことはもっと多いです。 プログラマであれSEであれ、プロとして続けるのであれば自分の成果物を常に他のプロの批評にさらすように心がけましょう。経験を積めば積むほど、レビューの中で何も質問が出なかったり、問題が指摘されなかったら、それは危険なサインだと思うようになります。自ら望んで批判を求める態度が重要です。
My Oracle Supportログイン後、[パッチと更新版] ページにリンクされているOracle Software Delivery Cloudからのダウンロードをご利用ください。 Oracle Software Delivery Cloudに掲載されていない製品プログラムについては、My Oracle Supportログイン後 [問い合わせ] からサービス・リクエスト (SR) を作成してください。 SR内で提供可否と可能な場合にはダウンロード用URLの案内がOracle社からあります。 サポート契約に基づいたバージョンアップ・ソフトウェア入手に関するお問い合わせは、My Oracle Supportのサービス・リクエスト作成または、オラクル カスタマ・サポートの「技術以外のお問い合わせ」をご利用ください。 ※2015年10月2日出荷を以て、バージョンアップ用メディア（媒体）の製造・出荷運用は終了しました。 ※My Oracle Supportのご利用には、サポート契約の締結が必要です。
とりあえず試したいときは sqlfiddle.com を使えばいいと思いますよ。 お尋ねのＳＱＬは同じ結果を返しません。 LEFT JOIN の条件を ON に置くか WHERE に置くかの違いは、非常によく問題になるので、LEFT JOIN と WHERE が一緒に出てきたときは気を付けるようにしたほうが良いです。 簡単な例で言えば、カラム K, V を持つテーブルＡ，Ｂ を考えます。 A = {K=1, V=A1}, {K=2, V=A2}, {K=3, V=A3} B = {K=1, V=B1}, {K=3, V=B2} ①SELECT * FROM A LEFT JOIN B ON B.K = A.K AND B.V = B1 ②SELECT * FROM A LEFT JOIN B ON B.K = A.K WHERE B.V = B1 ①の場合、LEFT JOIN は条件が位置しなければカラムの値は NULL になります。 結果は以下の三行が返ります。 {A.K = 1, A.V = A1, B.K = 1, B.V = B1} {A.K = 2, A.V = A2, B.K = NULL, B.V = NULL} {A.K = 3, A.V = A3, B.K = NULL, B.V = NULL} ②の場合は２段階に考えるとわかりやすいです。 まず WHERE がない状態での結果を考えます。 LEFT JOIN の ON には B.V の条件が指定されていないので、 {A.K = 1, A.V = A1, B.K = 1, B.V = B1} {A.K = 2, A.V = A2, B.K = 2, B.V = B2} {A.K = 3, A.V = A3, B.K = NULL, B.V = NULL} という結果が返ります。２行目の結果が違いますね。 この結果に対して WHERE 句の条件が適用されます。 その結果、②のクエリでは１行しか返りません。 {A.K = 1, A.V = A1, B.K = 1, B.V = B1} お尋ねのＳＱＬで言えば、テーブル１.AAA=0 を WHERE に書けば、ほかの JOIN の条件がどうあれ、テーブル１.AAA=0 ではない行は返されません。 しかし、テーブル１.AAA=0 を ON に書けば、ほかの JOIN の条件が一致していれば テーブル1 に由来するカラムは NULL になりますが、テーブル1.AAA が 0 出ない行や、テーブル1 に存在しない行も返されます。
select 項目1、項目2、項目3 , NVL2(TRIM(項目1), 1, 0) + NVL2(TRIM(項目2), 1, 0) + NVL2(TRIM(項目3), 1, 0) "カウント" from テーブルA ; 上記のようにSELECT時にカウントする列を追加すれば簡単に取れてしまいます。「空文字」というのが何のことだかサッパリわかりませんが、それを落とす処理をするとか、落としもせずCASE文などでNULLと空文字は0、その他1として3つの列の結果を加算した列を作れば、簡単に目的の値と列の値を同時に取れてしまいます。 あとは実際に使う側で切り離して使えば良いでしょう。
パッチだけを単体で入手することは出来ません。 Patch Set ReleaseはOracel社とサポート契約を締結することにより、無償で提供されています。 サポートの契約がない場合は、サポート契約を締結してください。 以前に購入していたライセンスを後日サポート契約する場合は、再契約料金が必要となりますので、ご注意ください。
Oracle10g以前をダウンロードで入手するのは、もう無理だと思います。 運がよければDB Magazine等バックナンバーの付録で入手できる可能性もなくはないのですが、かなり古いので入手困難かと思われます。 9iの購入先に相談されてみてはいかがでしょう。
原則として、許諾されたライセンスを他者に譲渡することはできません。
対象のサーバーが契約の範囲を超えていれば、同じ会社の同じ担当者であってもパッチやサポートサービス、ナレッジ情報等を横展開するのはライセンス違反に当たります。 なので開発環境にもライセンス契約が必要になります。 一般的には開発環境の構築に必要なコストも開発費として見積りに計上し、エンドユーザーに請求します。 それが無理、というならパッチレベルの差異による不具合が発生するリスクがあることを承知していただく必要がありますが、普通はそんなものは受注要件を満たさないためお断り、となるかと思います。
日本国内で購入した場合、原則として、ライセンスは日本国内での使用に限定されます。
クラウド・サービスにオラクル製品を導入して使用する場合も、原則としてオラクル製品がインストールされる、または稼働する物理サーバーにライセンスが必要となります。 クラウド・サービスが仮想化環境である場合、必要ライセンス数等は仮想化環境にオラクル製品を導入する場合と同様です。 ただし、オラクル社にて承認されたクラウド・サービスについては、クラウド環境のインスタンスに割り当てられたバーチャル・コアを物理コアと同等に換算し、ライセンス数を計算します。 詳細は、以下のリンクをご参考ください。 http://www.oracle.com/jp/store/cloud-lic-170290-ja.pdf
ブラウザ設定、もしくはバージョンに起因している可能性がありますので、下記をご確認ください。 ・Cookieが有効になっているか。 ・SSLが有効になっているか。 ・JavaScriptの設定が有効になっているか。 ・ブラウザのディスク・キャッシュをクリア後、再度お試しください。 ・ブラウザを完全に閉じて、立ち上げなおしてから再度お試し下さい。 ・お使いのブラウザとは異なる種類のブラウザをお試し下さい。 ・ネットワークが空いている時間帯に再度試してみてください。 ・いつもダウンロード中に接続が切れるなどして途中で終わってしまう場合は、 ダウンロードマネージャ（ダウンロード支援ツール）のご利用をお試し下さい。もしダウンロード途中で エラーが起こった場合、ダウンロードの再開･復活を行い、簡単にファイルをダウンロードできます。 ・ファイヤーウォールやプロキシー･サーバー経由でダウンロードしようとしている場合は、システム側の設定でダウンロードに制限がかかっていることがあります。システム管理者にご相談の上、一時的に制限を解除するなどの対応を行ってください。
select * from score_table y where y.score in(select min(score)from score_table union all select max(score) from score_table) で。
特定の1ユーザーのみの使用であれば、別のPCクライアントからアクセスが可能です。 ただし、Oracle Database Personal Edition はシングルユーザー用の製品であるため、クライアントPC台数や最大同時接続ユーザー数が1であっても、複数人での使用はできません。
この質問文には、問題点が2つあります。【SQLを組むための情報】が【揃っていない】のです。 ＞カラムに5文字であれば この「カラム」というのがどこテーブルのどこのカラムを指しているのかが、この質問文では明示的になっていません。 ＞XXXテーブル ＞YYYテーブル これらはどういう条件で結び付くのでしょうか。無いのでしょうか。これも不明です。 上記の不明な箇所をきちんと明示的にしてください。そうしないと、SQLは組み立てられません。 例えば、 1．XXXテーブルのAカラムが5文字である。 2．YYYテーブルのBカラムが10文字である 以上の条件を満たす全てのデータを、「複数行1列で一括して取得したい」というのなら、話は簡単です。XXXとYYYに結び付きの条件など無く、単純に別々に取り出した結果をまとめるだけですからね。この場合は、 SELECT A FROM XXX WHERE LENGTH(A) = 5 UNION ALL SELECT B FROM YYY WHERE LENGTH(B) = 10 ; これだけです。 でも、この質問が意図するところは、そうではないように思いますけどね。その場合は、きちんと日本語で正確に書き表さないと、日本語の翻訳でもあるSQLを作ることはできません。
マルチコア・プロセッサ、シングルコア・プロセッサは関係ありません。 いずれの場合にも、利用するハードウェアの最大搭載可能プロセッサのソケット数によって制限されます。 ただし、Oracle Database Standard Edition 2については、搭載コア数の制限はありませんが、実際に使用するCPUスレッドは1データベースあたり16（RAC構成の場合は各サーバー8）に制限され、その制限を超えて稼働することはできません。
そもそもSQLがめちくちゃでまともに動かないと思います。 SELECT x.name, y.speed FROM tableA x LEFT OUTER JOIN tableB y on SUBSTR(x.code,0,2)=SUBSTR(y.id,1,2) かな。substrの仕様忘れたので確認を。 union使わないで出す方法もないわけじゃないですが、無理がありますので、minとmaxのunion使ったほうがいいのではないかと。 ※max=minのときに重複を防ぐためunion allでなくunionにしています。 SELECT x.name, y.speed FROM tableA x LEFT OUTER JOIN tableB y on SUBSTR(x.code,0,2)=SUBSTR(y.id,1,2) WHERE y.speed=(SELECT MAX(speed) from tableB) UNION SELECT x.name, y.speed FROM tableA x LEFT OUTER JOIN tableB y on SUBSTR(x.code,0,2)=SUBSTR(y.id,1,2) WHERE y.speed=(SELECT MIN(speed) from tableB) union all使わないなら SELECT x.name, y.speed FROM tableA x LEFT OUTER JOIN tableB y on SUBSTR(x.code,0,2)=SUBSTR(y.id,1,2) WHERE y.speed=(SELECT MAX(speed) from tableB) OR y.speed=(SELECT MIN(speed) from tableB) ですね。
サーバに関する事は、ほとんどログにヒントが出ています。 確認はされましたか？ ウェブサーバを起動したときに何らかのエラーメッセージが出ていると思います。 ＿＿出ていなければ、使えているハズ
サポートされています。 オラクルのIaaS （Oracle Compute Cloud Service）では、Windows Server 2008 R2、Windows Server 2012 R2を使用することが可能です。 Oracle Cloud MarketplaceよりWindows環境イメージを取得して利用下さい。 Windows OSのライセンス、サポートはオラクル社より提供します。現在、Windows OSのライセンス持ち込み（BYOL）はできません。 Windows OS以外のMicrosoft製品については、Microsoft社のソフトウェア アシュアランスで提供されるライセンス モビリティにより、ライセンスを持ち込むことが可能です。 ライセンス モビリティの詳細は以下リンクをご参照下さい。 https://www.microsoft.com/ja-jp/licensing/licensing-programs/softwa... なお、Windows OS上にインストールされたMicrosoft社の製品、あるいはサードパーティの製品については、オラクル社はサポートしません。
Oracle Database Standard Edition 2の最少ユーザー数は、Oracle Database Standard Edition 2をインストールする（あるいは稼働させる）物理サーバー1台につき10ユーザーです。 例えば、物理サーバー2台によるRAC（Real Application Clusters）構成の場合は、各サーバー10ユーザー、2台合計で20ユーザーが最少ユーザー数となります。 なお、物理サーバー2台以上を使用するケースでも、次の条件を全て満たすクラスタ構成である場合は、待機サーバー1台分を除外して最少ユーザー数を計算します。つまり本番サーバー１台で10ユーザーが最少ユーザー数となります。 ・クラスタ構成（クラスタウェアを利用した構成）であること ・共有ディスクを利用した構成であること ・待機サーバーでのOracle製品稼働日数が年間10日以内であること ・ソフトウェアによる仮想化環境ではないこと 上記クラスタ構成でのライセンスについて、詳細はOracle データ・リカバリ・ポリシーをご参照下さい。 http://www.oracle.com/jp/corporate/datarecoverypolicy-079765-ja.pdf
今回の答えは、『内部結合』ではなく『外部結合』を使わないと解決しないと言うだけの話です。結合の基礎を勉強してください。 ＞SQLPlusの利益を表示させたいのですけど、 SQL*Plusというのは、Oracleデータベースに接続するためのインターフェースです。データベース機能そのものではありません。そして、「利益」というのはあなたの都合で勝手に示している言葉でしょう。これを「SQLPlusの利益」なんて言っても、他の人から見れば「この人は何を言っているんだろう」という話にしか見えませんよ。読み進めてSQLまで理解しないと意味不明なので、質問の一覧表示を見ただけで意味不明と判断して見てくれない人も居るかも知れません。これでは損ですよね。 また、「NUMBER」という列名は、Oracleの予約語であるためそのままでは使えません。仮の列名にする場合も、常に""で囲むなどして識別子（文字列）扱いにしなければ使えないです。実際の列名は違うのでしょうけど、使うべきではない列名です。 もう一つ、Oracle独自の結合書式、つまりFROMの後に複数のTABLE名をカンマ区切りで並べる書き方もやめることをお薦めしておきます。この書式は他のデータベースでは一切通用しませんし、そもそも理解しづらく可読性も悪いです。本来SQLのWHERE句には絞り込み条件だけが来るものですが、Oracle独自の結合書式ではここに結合条件まで混入してしまいますので、どうしたって可読性は落ちますよ。結果、わかりにくく難解になり、間違いにも気付きにくくなるのです。 今回の単純なSQLなら、結合条件だけがWHERE句にあるので可読性が劣るということはありませんが、複雑なSQLになると、見づらくなりますよ。 -- ▼WITHの中身は仮想TABLE、実際には除去して良い WITH "テーブルA" AS ( SELECT '001' teanumber, 'ニルギリ' teaname FROM DUAL UNION ALL SELECT '002', 'アッサム' FROM DUAL UNION ALL SELECT '003', 'セイロン' FROM DUAL UNION ALL SELECT '004', 'ウバ(試飲用)' FROM DUAL UNION ALL SELECT '005', 'ルイボス' FROM DUAL ) , "テーブルB" AS ( SELECT '0101' "NUMBER", 120 cost, 550 earnings FROM DUAL UNION ALL SELECT '0201', 120, 550 FROM DUAL UNION ALL SELECT '0202', 240, 1050 FROM DUAL UNION ALL SELECT '0301', 180, 680 FROM DUAL UNION ALL SELECT '0501', 110, 500 FROM DUAL ) -- ▲仮想TABLEここまで SELECT X.teaname , SUM(NVL(y.earnings-y.cost,0)) "利益" FROM "テーブルA" X -- ↑ベースTABLE LEFT OUTER JOIN "テーブルB" Y -- ↑一致するものだけを当てるTABLE ON (SUBSTR(x.teanumber,-2)=SUBSTR(y."NUMBER",0,2)) -- ↑結合条件、以下、集約・並び替え GROUP BY X.teaname ORDER BY MIN(X.teanumber) -- ↑並び替え指定はテーブルA側の列値を使わないと、望み通りにならない ; ここまでを実行すれば、望み通りの結果が出ています。 ※WITHを含めた全体を実行すれば、どの環境でも答えが出て来ます。 あなたが書いたSQLは、外部結合（LEFT OUTER JOIN）ではなく内部結合（INNER JOIN）で書かれたものになっていたんですよ。内部結合では、2つのTABLEの双方に当たる行しか抽出されなので、テーブルBに値が無い「ウバ(試飲用)」が落ちたのです。 ちなみに、Oracle独自の結合書式で書き表すと下記になります。（WITH部分省略） SELECT X.teaname , SUM(NVL(y.earnings-y.cost,0)) "利益" FROM "テーブルA" X, "テーブルB" Y WHERE SUBSTR(x.teanumber,-2)=SUBSTR(y."NUMBER"(+),0,2) GROUP BY X.teaname ORDER BY MIN(X.teanumber) ; 「(+)」印を付けると、内部結合から外部結合に変化します。『(+)印が付いたTABLE側に無い行も結果に出せ』という意味ですね。同じTABLE同士の結合条件が複数あるなら、その全てに(+)印が必要です。詳しくはOracleの結合に関する基礎を勉強してください。 ちなみに、ANSI書式では「FULL OUTER JOIN」と書くと、双方にある全行を出すことが可能ですが、Oracle独自の結合書式では(+)印を付けられるのは片側に限定されているので、「FULL OUTER JOIN」に相当する記述（両側に(+)付き）はできません。UNION ALLなどを使って別々に取り出したものを連結するなど、非効率な記述が必要です。 余談ながら、並び替えは必ず全行の値がある列を指定してください。テーブルBの列を使って並び替えてしまうと、テーブルBに値が無い「ウバ(試飲用)」はNULL扱いで並び替えられてしまいますよ。デフォルトでは最後に来てしまうということです。今回の望まれた答えの通りにするには、テーブルA側の値を使って並び替える必要があります。
山ほど行われています 実際に新商品として発売にこぎつけているところはまだ少ないですが、日本中のソフト開発会社の半分以上が手をつけているんじゃないかというくらい、どこでもやっています 試しに「ディープラーニング ソリューション 株式会社」とでも検索してみれば具体的な製品をたくさん見ることが出来るでしょう まだ消費者向けの製品はあまりないですね 我々に一番馴染み深いのはGoogle検索エンジンでしょう
うちではやってますよ。 パフォーマンス検証やサイジングだけで半年くらいかけたプロジェクトもあります。
基本的に合っていません。 どのレベルの断片化解消を図ろうとしているのでしょうか？ この話はTABLE単位であるように見受けられますが、それより大きな単位（データファイル等）であるなら、その対象が含まれる表領域全体をエクスポートしてからDROPなどという手順になるので、そもそもINDEX（索引）は消え去っていますよ。インポートは、何も無いところへ入れる場合、 CREATE TABLE → INSERT → CREATE INDEX この順序で動作しますので、索引はきれいな状態で作られています。以前の索引は存在しませんから、再構築の必要はありません。 TABLE単位の断片化（行連鎖・行移行）解消が目的であるなら、エクスポートした後、どうやって処理するか次第です。前述の表領域などと同じく、エクスポートした後に一旦キレイにDROPしてしまっていれば、上記と同じ結果になりますから必要ありません。 エクスポート後、TRUNCATEしてからIMPコマンドでIGNORE=Yオプション付きでのインポートであっても、TRUNCATE時にINDEXは空っぽになって初期サイズに縮小されますので、キレイな状態に戻っています。この後、INDEXの初期サイズを必要な大きさに拡張しておけば、あとはインポートする際にはゼロからの作り直しが行われてますから、少なくとも断片化はしませんよ。 エクスポート→TRUNCATE→DROP INDEX→インポートの順でやるか、もしくはTABLEをDROPしてしまえば、INDEXは【全データをインポートした（書き込んだ）後】に【新規作成】されます。つまり、再構築なんかしなくても、再構築したのと全く同じきれいな状態に自動的になっているのです。 唯一インポート後に【確実に再構築すべき】なのは、【全行DELETEしてからインポート】した場合だけです。これはTABLE・INDEXが初期状態に戻らない方法なので、必要になります。ハイウォーターマークが戻らないなど非効率極まりない方法ですので、【完全に非推奨】ですけどね。 作業手順としては、 1．エクスポート 2．DROP 3．インポート この順序がシンプルかつ確実です。ただし、TABLEに付属するトリガーなどもDROPされてしまいますので、その辺が絡むのであれば、DROPではなくTRUNCATEの方が良いでしょう。TRUNCATE後にINDEXを削除した方が、効率良くインポートもINDEX作成も行えます。なお、特に意図が無いなら、統計情報の更新を最後に実施することをお薦め致します。 データベースに十分な空き領域があるのなら、 ALTER TABLE table_name MOVE; ALTER INDEX index_name REBUILD; ANALYZE TABLE table_name COMPUTE STATISTICS; これだけで済ませても構わないと思いますけどね。TABLE単位の断片化解消は、データを保持したまま行うことも可能なのです。（ALTER TABLE MOVE文実行後のINDEXは再構築するまで無効）
インデックスの断片化は様々な断片化があります。 小さい方から、エクステントの断片化。これは、表領域の再作成で解除するでしょう。インデックスの再作成作成でも良くなることが多いと予想します。 表領域の断片化、これは、表領域をより大きなものに作り直すことで解消します。 データファイルの断片化、これは、一般に言われるファイルの断片化です。OSの断片化解消の仕組みで解消してください。 ハードディスクのクラスタの断片化、これは、一般には断片化解消はできません。強いて言えば、ストレージシステムの再構築で可能かもしれません。 オラクルの場合、インデックスのパフォーマンス問題であれば、断片化解消では無く、B-Treeインデックスの偏りが問題になることが多い様に思いますが、そちらではないですか？もしそうなら、インデックスの再構築で解消します。
いいえ。 同一ライセンスであれば、ライセンス料金はバージョン問わず一律となります。
できるよ。ページ設定からタテヨコの切り替えができる。
出来ます。 Oracle Database Standard Edition 2のライセンスで、以前のバージョンのOracle Database Standard Edition / Standard Edition Oneを使用可能です。 ただし、Oracle Database Standard Edition 2のライセンスで過去のリリースのOracle Databaseを使用する場合、Oracle Database Standrd Edition 2の適用条件を満たす必要があります。 Oracle Database Standrd Edition 2の適用条件は次の通りです。 ・Oracle Databaseがインストールされる（又は稼働する）物理サーバーの最大搭載可能CPUソケット数は2以下である必要があります。 ・RAC (Real Application Clusters)構成の場合は、各物理サーバーの最大搭載可能CPUソケット数は2以下、クラスタを構成する物理サーバーは2台まで、各物理サーバーの実装CPU数は1である必要があります。
SELECT C "来店回数", COUNT(*) "顧客数" FROM ( SELECT kaiinno, COUNT(*) "C" FROM table_name GROUP BY kaiinno ) GROUP BY C ; こんなもんでは？ SQL*Plusの問題ではなく、ただ単にSQLが書けるか否かの問題に過ぎないですよ…。
いいえ、できません。 Oracle Database Standard Edition 2は、物理サーバーの最大搭載可能CPUソケット数が2までのサーバにのみ、導入することが可能です。 物理サーバーにCPUを8基搭載できる場合には、その制限を超えるため、Oracle Database Standard Edition 2を導入することはできません。 CPUソケット数の制限は、物理サーバーに搭載可能なCPUソケット数に対する制限であるため、Hard Partitioningの技術で利用CPU数を制限しても影響しません。
表示の順番はorder byを陽に指定しないと順不動となります、昇順であれば列名、降順で有れば「列名 DESC」、以外の場合はCASE等で値を変更した物を使います。
オラクル製品には、アカデミック・ライセンス はありませんが、教育機関における研修用途に使用する製品ライセンス提供のためのプログラムがあります。詳細は、以下のリンクをご確認ください。 http://www.oracle.com/jp/corporate/license-management-services/oei-...
asを２個共取れば動くと思います。
購入後の技術的なご質問につきましては、Oracle社サポート・サービスにて行っています。サポートID（CSI番号）を用意し、サポート・サービスまで問い合わせください。 サポートの契約書番号がわからない場合、またはサポートID（CSI番号）がわからない場合は、契約書番号、またはサポート・サービス連絡先担当者の名前、電話番号等、契約関連情報を用意し、日本オラクル サポートビジネスセンターまで問い合わせるとサポートID（CSI番号）を教えてもらえます。 サポート契約がない場合は、技術的質問はできません。
http://www.oracle.com/jp/education/examinfo-172594-ja.html に書かれているとおり、ピアソンVUE社のサイトで申し込むことになります。同サイトでは「受験前に必要な手続き」「受験後に必要な手続き」という案内がありますので、それを読んでください。
http://www.oracle.com/technetwork/jp/database/windows/downloads/uti... こちらから『Oracle 10g Release 2 ODAC』をダウンロードすれば、中に『Oracle Objects for OLE 10.2.0.2.20』が含まれています。
以下を参考にしてみては？ ディスクの容量不足、もしくは、パーミッション設定が間違ってたりしませんか？ http://otn.oracle.co.jp/forum/thread.jspa?threadID=35005463
パッチの提供はありません。パッチを入手するには、正規ライセンスを購入し、Oracle社とサポート契約を締結する必要があります。
そういうのは普通SQL発行する前にVB側でチェックしてやるもんだと思いますが、どうしてもってんならTry~Catchでエラー番号(OracleExceptionのNumberプロパティ)分岐してやれば良いんじゃないでしょうか。 参考 http://otndnld.oracle.co.jp/document/products/oracle10g/102/windows...
サポートされていません。。 Oracle IaaSは、2016年5月時点で、次のOSに対応しています。 Oracle ・Oracle Linux 6.4 および 6.6 Ubuntu ・Ubuntu Server 14.04-LTS amd64 ・Ubuntu Server 15.10 amd64 ・Ubuntu Server 12.04-LTS amd64 CentOS ・CentOS 6 および 7 Debian ・Debian 8 (Jessie) Microsoft Windows ・2008 R2 ・2012 R2 Oracle Solaris ・Oracle Solaris 11.3
その例だけなら、 SUBSTR(元の文字列, 1, 4) || '-' || SUBSTR(元の文字列, 5, 4) といった簡単なもので処理可能です。文字列加工用の関数はいくつかありますから、それらを組み合わせれば基本的なことは全て出来ます。しっかり勉強してください。
原則として、許諾されたライセンスを他社（or 他人）に譲渡することはできません。
alter session set句で、nls_date_formatを以下のように変更してください。 SQL> alter session set nls_date_format = 'RR-MM-DD HH24:MI:SS'; SQL> select sysdate from dual; SYSDATE ---------------------- 16-06-28 09:01:18
そのボタンはメーカーの解除処理なしに押せる状態なのでしょうか？ 間違って押しても客の責任にするような爆弾ボタンを押せる状態で放置しているとしたら、それは不親切極まりないものですね。 データを取り出すだけであれば、何度押しても問題ないように思いますので、その場合は脅しに近いものにも聞こえます。 「壊す」ということは更新までできてしまう物だと推測できますが、話をはぐらかすということは、その担当がはっきりとわかっていない可能性が大ですね。 （担当者の資質の問題） 別の担当に聞いてみるか、説明書を読んだほうが早い気がします。
My Oracle Supportログイン後、[パッチと更新版] ページにリンクされているOracle Software Delivery Cloudからのダウンロードを利用してください。 Oracle Software Delivery Cloudに掲載されていない製品プログラムについては、My Oracle Supportログイン後 [問い合わせ] からサービス・リクエスト (SR) を作成します。 SR内で提供可否と可能な場合にはダウンロード用URLの案内がOracle社からあります。 サポート契約に基づいたバージョンアップ・ソフトウェア入手に関する問い合わせは、My Oracle Supportのサービス・リクエスト作成または、オラクル カスタマ・サポートの「技術以外のお問い合わせ」をご利用ください。 ※2015年10月2日出荷を以て、バージョンアップ用メディア（媒体）の製造・出荷運用は終了しました。 ※My Oracle Supportの利用には、サポート契約の締結が必要です。
http://forum.minecraftuser.jp/viewtopic.php?t=7032 から 「クラスメソッドが見つからない。 MODが必要とするファイルが見つからない場合に発生する可能性の高い例外です。 MODが他のMODと連携しようとして発生したり、jarMODの導入の仕方を間違えているなど、原因は多種に渡ります。 前提MODである可能性が高いので、トピックを読んでください。 MinecraftForgeのバージョンによっても発生する事があるので、 MODがどのバージョンのMinecraftForgeに対応しているか確認して、更新またはダウングレードする場合があります。」 確認したわけではないですが、参考になれば幸いです
SQL Server Management StudioからOracleのデータをSQL Serverに移行できます。 ただし、制限としてBLOB、CLOB、NCLOB、BFILE、UROWID型のデータが含まれているテーブルは移行できません（SQL SERVER側と仕様が異なるため）。 このへんが詳しいみたいです。 http://program.sugasaki.com/2011/11/11/oracle-%E2%86%92-sql-server-...
SELECT SYS_CONTEXT('USERENV', 'OS_USER') , SYS_CONTEXT('USERENV', 'SESSION_USER') , SYS_CONTEXT('USERENV', 'MODULE') , SYS_CONTEXT('USERENV', 'TERMINAL') , SYS_CONTEXT('USERENV', 'SID') FROM DUAL ; この辺を使えば、クライアントOSユーザー名、接続DBユーザー名、接続アプリ、クライアント名、SIDなどは簡単に取れてしまいます。 トリガーなどPL/SQLの中で利用するのなら、DUAL表を噛ませる必要も無く、単純にSYS_CONTEXTで値を取れてしまいます。 更新された日時、クライアント情報等、SIDからV$SESSION等を参照して情報を引っ張ってくることもできますので、その辺から取れる情報なら根こそぎ取ることも可能です。 詳しくは、 https://docs.oracle.com/cd/E16338_01/server.112/b56299/functions184... こちらも参照してみてください。 クライアントやそのログイン、及び更新時の接続アプリ（SQL*Plus等）なんかは取れてしまいますから、絞り込んで行けば特定することもできてくるでしょう。
契約開始日＝ソフトウェアは使用権許諾日 です。
3行目のOFFSET 5 PERCENT ROWSが間違っています。 OFFSET句にはPERCENTキーワードを指定できないため、このSELECT分はエラーになります。 なお、FETCH句のほうでは、PERCENTキーワードを指定できます。
アプリケーション・サーバー/Webサーバーを経由してアクセスする人数についてもライセンスカウント対象となります。 ユーザーが特定できる場合には Named User Plusライセンス、 ユーザー数が多い場合、または特定が出来ない場合には、インストールするサーバーに搭載されたプロセッサ数に比例し、人数制限なく利用できるProcessorライセンスが必要です。
Oracleホームページ上に、Oracle製品の技術情報に関するコミュニティサイト「Oracle Technology Network（OTN Japan）」があります。サポート契約がなくても、掲示板での情報交換等のサービスを利用できます。 ただし、公開される情報等には制約があるため、サポート契約をお勧めします。 ※Oracle Technology Network（OTN Japan）：http://www.oracle.com/technology/global/jp/index.html OTN Japanはメンバーシップ制サイト（無料）であり、利用するには登録が必要です。
DBにおいてデータはレコード（行）単位で処理されるという絶対条件があります。 レコード（行）をカラム（列）単位に直すのは簡単なやり方もうまいやり方も標準にはありません。 地道でベタなやり方をするか、プログラム側で処理するしかないです。 地道でベタなやり方としては select 取得年月,社員cd ,sum(decode(取得日,'01',日数,0)) ,sum(decode(取得日,'02',日数,0)) ,sum(decode(取得日,'03',日数,0)) (略) ,sum(decode(取得日,'31',日数,0)) from 有給テーブル group by 取得年月,社員cd のようなやり方が考えられます。 なお、この方法だと0日取得は0と出てしまうので、さらにdecodeする必要があるかもしれません。
原則として、Oracle製品がインストールされている全物理サーバー（インストール作業を伴わなくても、Oracle製品が稼働する物理サーバーはこれに含みます）にライセンスが必要です。そのため、いわゆる HA構成についても、通常運用時に待機サーバーでOracle製品が起動するかどうかに関わらず、原則としてOracleをインストールする、または稼働させる全物理サーバーがライセンス課金対象となります。但し、2009年4月1日以降に新規購入のライセンスに対しては、Oracle社が定義するデータ・リカバリ・ポリシーが適用されます。 データ・リカバリ・ポリシーで定義する構成に該当する場合、必要ライセンス数は次のように計算します。 ・待機サーバーの電源ON/OFFは関係致しません。 ・ソフトウェアによる仮想化環境はデータ・リカバリ・ポリシー適用対象外です。 【Named User Plusライセンスの場合】 本番サーバー・待機サーバーを1つのコンピュータとみなした上で、アクセスする全ユーザーをカウントします。 ・各製品で設定された最少ユーザー数を下回る数でのライセンス購入は出来ません。 ・最少ユーザー数がProcessor数やコンピュータ数に依存する製品については、本番サーバー・待機サーバー全体のCPUコア数、サーバー台数に基づき計算する必要があります。 ただし、後述の「フェイルオーバー構成」に該当する場合は、待機サーバー1台分 を除外して最少ユーザー数を計算します。 【Processorライセンスの場合】 本番サーバー・待機サーバーに搭載された総プロセッサ数をカウントします。 ・マルチコアプロセッサが搭載されているサーバー製品は”Standard Edition”、”Standard Edition One”の名称を含む製品を除き、コアの適用係数を掛け小数点以下を切り上げて算出した数値を、総プロセッサ数としてカウントします。 ・フェイルオーバー構成に該当する場合に限り、待機サーバー（待機サーバーが複数台ある場合はそのうち1台分のみ）のライセンスは不要です。 <<フェイルオーバ構成 適用条件（全て必須条件）>> ・クラスタ構成（クラスタウェアを利用した構成）であること ・共有ディスクを利用した構成であること ・待機サーバーでのOracle製品稼働日数が年間10日以内であること
無料で受けない➡もったいない。 また、英語が、正確に分からなくても解ける問題があるかもしれない。 友達はいい奴は、いない運命もある(友達が、いい人って、(゜Д゜≡゜Д゜)?から？)。友達には、悪いこと言わない。 復習込み、英語の勉強(データベース技術になると、英語の技術文を読まないと勝てないことがある)で、マスター試験英語本購入はグッとな方法です。俺なら、そうする。 英語の勉強は、ビジネス英会話は別です。 (評価が別です。英語の学生教科書には、英語には、日本語のように、細かい丁寧語がないと教える嘘錯覚があるが、丁寧語は、日本語のようにある。上司に、pleaseは、駄目です。あれは、「悪いけど、やってくんねぇ」が、正しい訳です。ビジネス英会話は、生半可に使ったら死にます。この辺りのニュアンスまで勉強しないと。英語圏ほど、階級社会はない。使ったら、そこで、終了 ちなみに、shall を使います)。 それ以外は、自分の好きな映画や漫画の英語版本が伸びます。日本語訳がなくても、赤ちゃんの気持ちで勉強出来ます(イギリスの赤ちゃんは、日本語訳してない。音と画で、言葉を覚えていくはず)。特に、sf(科学技術用語が多い。技術用語も入ってくる)ので、お薦めです。また、楽しめるながら、出来ます。 俺は、 英会話も出来るハイレベル(ハイリスクハイリターン)を求めるなら、映画方法は、お薦めしません。 それは、日本で専守防衛方法です(困ったとき、英語の技術書類を読んで解決する)。
「フェイルオーバー」はライセンス許諾された本番コンピュータとその他のコンピュータとのクラスタ構成であり、且つ共有ディスクを保有するシステムが対象となります。 クラスタ構成は、クラスタ用ソフトウェア（クラスタウェア）を導入していることが前提となります。「フェイルオーバー」構成の場合、各クラスタ構成内でライセンス許諾されていない1台の待機系コンピュータへのインストールが認められ、年間（1月1日から12月31日まで）合計10日までのプログラム稼動をする権利が含まれます。 「フェイルオーバー」が適用されないシステム構成の場合は、プログラムが導入される待機系（スタンバイ側）サーバーにもライセンスが必要となります。 また、「フェイルオーバー」は物理環境にのみ適用され、ソフトウェアによる仮想化環境には適用されません。
MyProfileは以下の手順にて作成できます。 1．以下URLをクリックし、プロファイルの作成画面に進みます。 - https://profile.oracle.com/myprofile/account/create-account.jspx 2. プロファイルの作成に必要な情報を入力し、「プロファイルの作成」をクリックします。 - 電子メール・アドレス： ご所属企業の企業ドメインアドレスを登録ください。 ※フリードメインアドレス（YahooやGmail等）は使用しないでください。 フリードメインアドレスでご登録した場合、クラウド環境のトライアル申し込み等の一部サービスをご利用出来ません。 - 姓名（ローマ字）： 全角ローマ字で登録ください。 3. 作成すると、登録したメール・アドレスに確認メールが送信されます。 メール本文内から「電子メールアドレスの確認」をクリックし、 Eメールアドレス確認作業実施後、プロファイルの登録は完了です
OFFSETとFETCHは、Oracle Database 12cで新たに追加された機能で、「SQL業制限」といいます。 ご質問のSELECT文では、EMPLOYEES表のデータをSAL列の値の大きい順にソートした上で、OFFSET 5 ROWSにより、上位５行をスキップし、FETCH FIRST 3 ROWS WITH TIESにより、6行目から3行分(8行目まで）のデータを取り出しています。 ここでは、FETCH句にWITH TIESを指定しているため、9行目以降のSALの値が8行目のSALの値と同じである場合は、それらの行も一緒に取り出されます。
外部キーが同じ表の親キー(同じ表の別の列)を参照する場合は、これを「自己参照型整合性制約」と言います。 外部キーとして指定した列には参照先の列（親キー）に格納されている値しか格納できません。このように、外部キーを設定することで、意味のないデータの登録を未然に防ぐことができます。
1> select * 2> from A a1 3> where not exists 4> ( select 列1 5> from A a2 6> where a1.列1 = a2.列1 7> and a2.列2 <> '＊' 8> group by a2.列1 9> ) まず、8行目はゴミですね。あっても無くても結果は同じです。 結果としては、認識に若干の誤りありだと思いますよ。結果としてSELECTされるのは、 「列2が '＊' か null の行しか持っていない列1の値と一致する全ての行」 です。NOT EXISTS句で【除外】されますので、結果的に残るのは限定されます。 その際、7行目はNULLも除外から引っ掛からないんですよ。だから、例えば 列1 列2 --- --- 101 'a' 101 '＊' 102 null 102 '＊' 103 'b' 103 null 104 'c' 104 'd' 105 null 106 '＊' 106 'x' 106 'y' 107 'z' こういうデータがあるとしたら、結果として残るのは、 列1 列2 --- --- 102 null 102 '＊' 105 null この3行、即ち列1が102と105を持つ行の全てです。 詳細に見て行くと、 列1 列2 --- --- 101 'a' 101 '＊' この2行は、上記1行目が「列2 <> '＊'」に 'a' がヒットするので、列1 = 101の全行が一括して落とされます。 列1 列2 --- --- 102 null 102 '＊' この2行は、どちらも「列2 <> '＊'」にヒットしませんので、残るのです。 列1 列2 --- --- 103 'b' 103 null これは101番と同じく「列2 <> '＊'」に1行目の 'b' がヒットするので、落ちます。 以降も同様で、105番だけ「列2 <> '＊'」にヒットしないため、残るのです。 【論より証拠】下記のSQLを実行すれば答えも見られます。WITHの中に上記の内容と一致する仮想TABLEを作り出していますので、どこで実行しても結果が出ますよ。 WITH A AS ( SELECT 101 列1, 'a' 列2 FROM DUAL UNION ALL SELECT 101, '＊' FROM DUAL UNION ALL SELECT 102, null FROM DUAL UNION ALL SELECT 102, '＊' FROM DUAL UNION ALL SELECT 103, 'b' FROM DUAL UNION ALL SELECT 103, null FROM DUAL UNION ALL SELECT 104, 'c' FROM DUAL UNION ALL SELECT 104, 'd' FROM DUAL UNION ALL SELECT 105, null FROM DUAL UNION ALL SELECT 106, '＊' FROM DUAL UNION ALL SELECT 106, 'x' FROM DUAL UNION ALL SELECT 106, 'y' FROM DUAL UNION ALL SELECT 107, 'z' FROM DUAL ) select * from A a1 where not exists ( select 列1 from A a2 where a1.列1 = a2.列1 and a2.列2 <> '＊' group by a2.列1 ) ; もしもあなたの中で理解しづらい箇所があるとしたら、NULLに関して正しく理解していなかったのではないでしょうか。NULLは <> ではヒットしないのです。
製品単位と組織単位で、一致させる必要があります。 製品単位とは、「ライセンス製品」がその最小単位となり、それぞれのライセンス製品に「オプション製品」があれば、それも含んだものとなります。 組織単位とは、法人単位を意味します。組織が公共団体の場合には、地方自治法 第一条の三に定める「地方公共団体」の単位となります。
バックアップを行っているのは誰でしょうか。貴方ですか？ 違います、oracleのプロセスです。 oracleのプロセス（サービス）がバックアップを行っています。 oracleのプロセスを動かしているユーザーが、ファイルを書きだします。 よって、ネットワークドライブ側にはあなたのアカウントのアクセス権限があっても無意味で、oracleを起動しているユーザー(OracleServiceなど)にアクセス権限が必要です。 ちなみにデフォルトでは恐らくネットワークアクセス権がありません。 サービスの起動アカウントを独自に作成し、そちらでOracleService、OracleListenerの各サービスを起動するように変更が必要です。
rownumを使えばできます。 update テーブル set 変えたいカラム=変えたい値 where カラム1=対象の値 and カラム2=対象の値 -- 以下、対象の２行になるまでwhere条件を入れる and rownum=1; これで１行だけ変わります。
STOPKEY評価と呼ばれる現象ですね。 ROWNUMによる評価は、falseになった時点で終了するという「ROWNUMだけの特殊ルール(STOPKEY評価)」があります。 where rownum=2 という条件は、selectの最初の1行目のrownumが1のため、該当しない(false)とみなされてそれ以降は検索しません。 同様に where rownum between 2 and 10 where rownum > 1 もデータ抽出されません。
使用するユーザー数が変わらずに端末数だけが増える場合にはライセンス追加する必要はありません。
見る限りでは ON a.EmployeeID = b,EmployeeID ↓ ON a.EmployeeID = b.EmployeeID
既に書かれていますが、11gからoo4oはodacの中に含まれるようになったので、そちらからダウンロードしてください。 http://www.oracle.com/technetwork/jp/topics/index-087744-ja.html Oracle11.1g用もあります。
はい、SE2のライセンスでRACの構成が可能です。 なお、Oracle Database SE 2でRACを使用する場合、次の通りライセンス上の制限事項があります。 ・RACを構成する各物理サーバーの最大搭載可能CPUソケット数は2以下、クラスタを構成する物理サーバーは2台まで、各物理サーバーの実装CPU数は1である必要があります。 ・各サーバーで1つのデータベースが使用するCPUスレッドは、8までに制限されます。
SQL文でNVL関数を使うのはいかがでしょうか。
待機系サーバーにてOracle Databaseがインストールされる、あるいは稼働する場合には、待機系サーバーにもOracle Databaseのライセンスが必要です。 また、待機系サーバーのライセンス契約は、本番サーバーと価格単位（ProcessorまたはNamed User Plus）を同一にする必要があり、本番サーバーにオプションのライセンス（PartitioningオプションやDiagnostics Packオプションなど）がある場合には、待機系サーバーにも同じオプションが必要となります。 なお、Named User Plusライセンスの場合、本番サーバー・待機サーバーを1つのコンピュータとみなした上で、アクセスする全ユーザーをカウントします。ただし、最少ユーザー数は本番サーバー、待機系サーバーの合計で算出する必要があります。
WindowsとLinuxでのみ動きます。
ダウンロードに対してライセンス料は発生しません。
社内利用は商用利用と考えた方が無難ですよ。直接の現金売上に結び付くわけではなくても、社内の効率化によって、結果的に利益に直結して行くのですからね。 ただ、御質問のシステム規模なら、 Oracle Database Express Edition 11g Release 2 http://www.oracle.com/technetwork/jp/database/database-technologies... こちらを使えば、【無償】にて利用できます。【商用利用も可能】ですから、社内で使うだけでなく、販売もできるということです。 データベースサイズが最大11GBに制限されますが、勤怠システムで11GBを超えるというのは、大抵は設計が糞であるだけだと思いますよ。何百万人もの社員について、過去数十年に渡ってあらゆる記録が残されているとかならそこそこのデータ量でしょうけど、正規化するなどきちんと設計されたシステムなら、データの肥大化を抑制できますし、そもそも何十年ものデータをオンラインで保持する必要性は無いはずです。直近数年分だけなら、何百万人といった社員が居たとしても、11GBに達するとは考えにくいですね。 従って、Express Editionで問題なくシステム構築可能であり、かつ、販売してしまうこともできるということです。これならライセンス料の問題は無いですよ。
原則として、Oracle製品がインストールされている全物理サーバー（インストール作業を伴わなくても、Oracle製品が稼働する物理サーバーはこれに含みます）にライセンスが必要です。 また、FTサーバーはデータ・リカバリ・ポリシーで定める「フェイルオーバー」の構成には該当せず、Partitioningガイドに記載の「Hard Partitioning」にも該当しません。 そのため、Processorライセンスの場合、FTサーバーに搭載されている全ての物理CPUがライセンス課金対象となります。 Named User Plusライセンスの場合、FTサーバーの筐体内にある2台の内部サーバーが（例えばメンテナンス時などに）それぞれ独立して稼働可能な場合、2台の物理サーバーにOracle Databaseを導入したとみなし、ライセンスは実ユーザー数×2台分必要となります（最少ユーザー数も2台の合計で計算します）。
Universal Installerでとーふ（□）に文字化けするのはUniversal Installer付属のJREがクズで日本語のフォントを持っていないせいです。 ※にも関わらずUniversal名乗るという。 Univeral Installer起動時に -jreLocオプションでjreのフォルダを指定できますので、普通のJavaのjreフォルダを指定してあげれば文字化けしなくなります。 この辺の詳細は"Univeral Installer jreLoc 文字化け"あたりで検索してみてください。
①ですね。 いつまでも、今の仕事していられるわけもないです。Oracleを勉強しておくのは、将来、きっと為になるでしょう。 自分の仕事に直接、関係あることしか、学ばない人は、仕事が変わると、全くできない人になってしまいます。かといって、何でもかんでも勉強すれば良いわけではありませんし、その時間も、ありません。 Oracleマスターは、さほど時間がかからない割には、持っていて得する資格だと思います。お勧めです。
あれ？ SQLを実行するときって user/pass@「SQLファイル名」 で普段走らせるけど 変数にしておいて引数で渡す事できたような気がするなぁ サポセンにいたのが昔の話だからはっきりとは覚えてないけど
オラクル社ではサーバー上のCPUを仮想的に分割する機能をHard Partitioning とSoft Partitioningの2つに分類しています。 そのうち、Hard Partitioningに該当する場合には、オラクル製品がインストールされる（又は稼働する）プロセッサ分をライセンス対象とすることを許諾しています。 オラクル社がHard Partitioningと認めている技術は次のURLで随時公開しています。 Partitioningガイド http://www.oracle.com/jp/direct/partitioning-jp-168078-ja.pdf Soft Partitioningの場合はオラクル製品がインストールされる（又は稼働する）サーバーの全プロセッサがカウント対象となります。
まずはどこに原因があるかを切り分けないと対処しようが無いですね。 外堀から疑うとして、 ・SQL自体が問題なのか？ →SQLが問題なのであれば実行計画を解析してみる。 SQLに問題が無ければ統計情報を更新してみる。 ・バッチで呼び出しているSQL実行処理は大丈夫？ →ループ処理でSQLを1回ずつ実行していたりすると遅くなります。 提示された内容から原因を探るとなるとこの程度でしょうか。。
SQLで値の入力を促すことは、基本的にできません。 SQLは構文であり言語ではないからです。 SQLを使用できるソフトウェアでの質問だと思いますが、使用しているソフトウェアが不明なので回答することができません。
現在は、Oracle Database 11.1のOTNライセンスは提供されていません。 OTN開発者ライセンスがついたソフトウェアのダウンロードについては、現在OTNで公開されているもののみとなります。公開されていないバージョンについては、提供はありません。 もともと、Oracle Database 11.1の正式ライセンスをお持ちの場合は、FTPやメディアで入手することができます。詳しくは以下のリンクをご参考ください。 https://support.oracle.com/epmos/faces/ui/km/DocumentDisplay.jspx?_...
できません。 Oracleのサポート契約期間は1年単位で、その後も1年毎に更新されます。
PaaSとして提供されています。正確には Database as a serviceですね。 料金は、以下のオラクル社のリンクをご参考ください。 https://cloud.oracle.com/ja_JP/database?resolvetemplatefordevice=tr...
TABLEBのcountはnameごとに同数最大は存在しないという前提でよろしいでしょうか。 Taro | 1 | 5 Taro | 2 | 5 と、同数最大が複数ある場合、lavelとして1を使うのか2を使うのかという問題が起きます。 もっとも、これはminなりmaxなりを使用して回避できます（後述）が。 まずはもっとも大きなcountとなっているlabelを求めてみましょう。 色々なやり方がありますが、わかりやすく自己結合でやってみます。 select name,max(count) from TABLEB group by name; このSQLはnameごとの最大のcountを求めます。 このmax(count)と同じ値を持つname,labelの組み合わせを求めるのですから、 select a.name,a.label from TABLEB a inner join (select name,max(count) maxcount from TABLEB group by name) b on a.name=b.name and a.count=b.maxcount これで、名前ごとのcountが最大なlabelが取れます。 先ほどの同数最大が存在する、というケースの場合、たとえばlabel最小のものを抽出するという条件なら select a.name,min(a.label) from TABLEB a inner join (select name,max(count) maxcount from TABLEB group by name) b on a.name=b.name and a.count=b.maxcount group by a.name とすればいいでしょう。 このSQLをTABLEAとjoinしてあげればいいのです。 select a.name,a.value from TABLEA a inner join ( select ax.name,min(ax.label) from TABLEB ax inner join (select name,count from TABLEB ) bx on ax.name=bx.name and ax.count=bx.count group by ax.name ) b inner join a.name=b.name and a.label=b.label もしnameが固定できるなら、もう少しシンプルに select value from TABLEA where name='XXX' and label= (select min(label) from TABLEB where name='XXX' and count=(select max(count) from TABLEB where name='XXX') ) と書けるでしょう。
Oracle VM Server for x86で Hard Partitioningの対象となる設定をした場合、Oracle databaseが稼働するように設定されたコアのみがライセンスカウントの対象となります。
アクセスが拒否されました、と出ているとおり、削除するファイルにアクセスできなかったからです。 恐らく理由はアンインストーラーを管理者権限で実行しなかったためです。 5番に書かれているとおり、「管理者として実行」しましたか？
select 'テーブルA' ,max(特定の項目x) from テーブルA union all select 'テーブルB' ,max(特定の項目x) from テーブルB union all ・・・ では駄目ですか PL/SQLであれば select テーブル名の変数1 ,max(項目名の変数x) from テーブル名の変数1 union all select テーブル名の変数2 ,max(項目名の変数x) from テーブル名の変数2 union all ・・・ と如何様にもできると思います
ここはＳＱＬサーバーとかを勉強する質問箱じゃねーよ。 大学受験生でＳＱＬ言語なんて知ってる奴いたら怖いよｗ
違います。外部結合を外積と紹介しているところもありますが、明らかな間違いです。少なくとも個人ブログ以外でそういう間違った解説をしているところはありません。 正しい解説の例： postgres:https://www.postgresql.jp/document/9.5/html/queries-table-expressio... access:https://support.office.com/ja-jp/article/%E3%83%86%E3%83%BC%E3%83%9... 外積はCROSS JOINで、無条件結合です。 たとえば テーブルＡ ID,NAME 1,あ 2,い 3,う テーブルB ID 1 3 というデータがあったとして、 SELECT A.ID,A.NAME,B.ID FROM A LEFT OUTER JOIN B ON A.ID=B.ID 結果： ID,NAME,ID 1,あ,1 2,い,NULL 3.う,3 というのが外部結合。 SELECT A.ID,A.NAME,B.ID FROM A,B 結果 ID,NAME,ID 1,あ,1 1,あ,3 2,い,1 2,い,3 3,う,1 3,う,3 というのが外積です。
＞java.io.FileNotFoundException: C:\Program Files\Oracle\Inventory\logs\deinstall_deconfig2016-05-15_04-19-35-PM.out (アクセスが拒否 されました。) 「FileNotFound」＝「ファイルが見つからない」って言われていますよ。実際に上記のファイルが無いのではありませんか？ あるいはアクセス許可が無くて開けないだけかも知れませんので、その場合は管理者権限で実行するなどしてください。 管理者権限で実行していないなら、正常にアンインストールできなくても不思議ではないです。管理者権限でも無理なのであれば、まあアンインストールは完璧なものではないこともままあることだと割り切った方が良いのではないでしょうか。どうにもならないならOSの入れ直しをお薦め致します。
次のURLに、Oracle社により、Oracle Databaseの動作が保証されている仮想化環境が記載されています。 http://www.oracle.com/technetwork/database/virtualizationmatrix-172... 上記URLに記載していない仮想化環境（VMwareなど）については、Oracle社は動作確認を行っていません。動作保証をしていないサーバー仮想化ソリューションに対するオラクル製品のサポートについて、次のURLをご参照下さい。 http://www.oracle.com/technetwork/jp/topics/ojkb120560-426058-ja.ht...
自動拡張や最大サイズがどうあろうと、データファイルは自動で追加されることはありませんし、そのような設定はできません。 表領域使用率を監視しつつ、不足したら手動でデータファイルを追加するしかありません。 自動で拡張させ続けたければBIGFILEを使用した表領域を使えばよいかと。
製品により、ライセンスを変更（マイグレーション、アップグレード）可能なものがあります。 例：Named User PlusからProcessor、Standard EditionからEnterprise Edition、旧製品ライセンスから現行製品ライセンスへの変更など 既存ライセンス、価格単位（ProcessorやNamed User Plusなど）、販売チャンネルなどの条件によってマイグレーション費用が計算されます。マイグレーション/アップグレードの可否、費用については、販売代理店またはOracle Direct にお問い合わせください。 なお、下位の製品およびEditionにダウングレードすることはできません。また、ライセンスのマイグレーションおよびバージョンアップにはサポート 契約が必要となります。
預言とか神託といった意味です。 神託機械論からOracle社が自社と自身のRDBMSにOracleという名前をつけたため、現在はそちらのほうが有名になっていますが……
AWSやAzureなどのオラクル社にて承認されたクラウド・サービスについては、クラウド環境のインスタンスに割り当てられたバーチャル・コアを物理コアと同等に換算し、ライセンス数を計算します。 Standard Edition One もしくはStandard Editionの場合、インスタンスが4バーチャル・コア以下の場合は1ソケットとしてカウントされ、4バーチャル・コアを超える場合は、４で割り、小数点以下を切り上げてカウントします。 （例） 5バーチャル・コアは、5÷4=.125 →2ソケット ただし、Standard Editionの場合は、バーチャル・コア数が16以下、Standard Edition Oneの場合は、8以下であることが条件です。 計算例１． Enterprize Edition Intel製のマルチコア・チップで8バーチャル・コアの場合 8バーチャル・コアｘ係数0.5 = 4 Processor 計算例２．Standard Edition バーチャル・コア数1以上4以下の場合 1ソケットでカウントされるため、 1Processor
何らかの理由でAAAテーブルにロックがかかっていたのでは？ そして、ロックかけていたトランザクションがcreate table中に完了すれば、その後の手動でのAAAへのinsertやバッチでのAAAへのinsertはロックされずに処理されるので、質問の現象になります。
まず無料なので、InteliJのような有償のIDEを使う予算がないときに。 無料IDEのEclipseとの比較ですと GUIビルダーが強力なのでswing使うようなアプレットの作成に。 Java8対応がEclipseより上なのでJava8使う場合に。 軽いのでチープなＰＣに。 といったシーンで使えます。
Oracle Databaseについては、クライアント側で別途購入しなければならないライセンスはありません。 サーバーのライセンスをご購入すると、サーバー及びクライアントにインストールするプログラムの使用権が付与されます。
以下がまず、お勧めですよ。 http://www.oracle.com/technetwork/jp/ondemand/database/db-new/12051...
根本的な誤解をされているのではないでしょうか。 SEQUENCEはNEXTVALで一度発行した番号を再発行することは、サイクリックしない限り無いです。それなのに、それを前提としたINSERT文を書くことがそもそもの間違いです。 また、外部キー制約（FOREIGN KEY）を設けたところで、データを入れるプログラム側が間違っていたら、正しい値が入ることなどありません。要は、FOREIGN KEYの問題ではないということですよ。ついでに言うと、SQL*Plusの問題でも無いです。SQL*Plus以外から実行したって、同じことが起こりますからね。 ＞このserviceNOには100が入って欲しいのですが、どのようにすれば宜しいですか？ その100という値が【どういう理由で決まるのか】が全くわかりません。だから答えようがないです。要は【設計上の問題】ですので、【なぜ100になるのか】をまず【定義】しないことには、【100に決めるための手段が無い】というわけですね。回答者がこの辺を把握できなければ、回答のしようがないとも言えます。 他の方への補足も見る限り、設計者であるあなたの頭の中で整理できていないし、情報開示も全然できていない、かつ、設計上の欠陥もあるだろうという結論にならざるを得ないように思いますよ。。。 正直言って、何の制約も設けていないプレーンなTABLEでも、あなたの望む動作はしないでしょう。 FOREIGN KEYやPRIMARY KEYは、完璧にエラー無く動作するプログラムであるなら、そんなもの付けなくても正常動作し、データが壊れることもありません。あくまでも補助機能的なものであって、本筋としてはプログラムが適切であれば無くても構わないんですよ。だから、外した状態で動かしても、取りあえず最低限の結果が得られるくらいの設計はできていないと、そもそもがダメなのです。 あなたの設計は、FOREIGN KEYやPRIMARY KEYを全部外しても、望み通りの結果は得られないと思いますよ。要は、【問題（考えるべきところ）がそこ（FOREIGN KEYやPRIMARY KEY）ではないから】ですね。。。 FOREIGN KEYやPRIMARY KEYなどの制約は、不正な値が混入することを防止するための補助機能であって、まずは正しい値を入れられるようにならないと話にならないのです。そして、この質問は、正しい値をどうやって作るのかが全くわからない質問になっています。「何かいろいろかんがえていることはあるのだろう」というのは補足を見て感じますが、その「考えていること」が「誰にも伝わっていない状態」ですよ。
一度合格していればOKです。 Oracle社の資格に何年で失効とか聞いたことありません。
[sqlplus / as sysdba]とするとWindowsのユーザ権限で接続出来ます。その後[alter user ユーザー名 identified by パスワード;]でパスワードを変更します。
＞SPOOL C:\testFile.txt 無名PL/SQLブロック内に、SQLではないSPOOLコマンドを埋め込むことはできません。DECLAREの前に追い出してください。 100％アウトなのがこれです。他の部分はチェックしていませんが、まずこれを除去しないと絶対に動かないです。
sysdbaで、SQL*Plusにログインして、以下のPL/SQLを実行すれば、変更できます。 $ sqlplus / as sysdba SQL> exec DBMS_WORKLOAD_REPOSITORY.MODIFY_SNAPSHOT_SETTINGS(11520,10); ※第1引数の11520はスナップショットの保持時間(分)です。11520分=8日間。 ※第2引数が間隔（分）です。
パスワードは、大文字小文字を含めて、一致していますか？ 11g以降は、大文字小文字を区別するように変更になりました。
自分のユーザーにSQL*Plusでログインして、以下のようにuser_tablesから参照します。 SQL> conn <user>/<password> SQL> select table_name from user_tables;
デフォルトであればOS認証が有効となり、パスワードは何を打っても通ったと思います。 それなのにORA-1031が出ているということは、何かしらの不備があるのかなと。 以下サイトの Windows環境の場合 を確認してみてください。 http://www.cosol.jp/tech/detail/ot0041_ora01031.shtml
ビューのオーナーユーザーで、ビューの定義となっているSQL文を直接実行してみれば何を参照できないのかわかるのではないでしょうか。
$> sqlplus / as sysdba; #DBA管理者でOracle DBにログイン SQL> @?/rdbms/admin/awrrpt.sql report_typeに値を入力して下さい: text → 出力形式 (text選択ください) num_daysに値を入力して下さい: → スナップショットIDをリストする日数 （指定した日数分のスナップショットＩＤがリストされます） begin_snapに値を入力して下さい: *** → 開始スナップショットID end_snapに値を入力して下さい: *** → 終了スナップショットID report_nameに値を入力して下さい: awr.txt → 出力ファイル名（任意.txt） ※AWRは、デフォルトで1時間おきにスナップショットが作成されているため、通常はそれを利用してAWRレポートを取得します。 パフォーマンスに課題がある時間帯がわかっている場合は、明示的に開始と終了の時刻にスナップショットを作成します。AWRレポートの出力時、それを使用することで、分析範囲が限定され、より精度の高いレポートを作成することが可能になります。 明示的な取得方法はこちら。 $> sqlplus / as sysdba; #DBA管理者でOracle DBにログイン SQL> exec DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT(); PL/SQL procedure successfully completed.
CHANGE(略称C)コマンドが便利ですよ。1つ前に実行したSQL文の内容を修正することができます。 (例） SQL> select empno, emame from emp; ←SQL文を発行(スペルミスあり） SQL> ORA-00904; xxxxx ←エラーメッセージ表示 SQL> c/emame/ename/ ←Cコマンドで内容を修正 SQL> / ←再度実行
バージョンアップの権利はサポート契約に含まれていますので、サポート契約を締結している場合は、バージョンアップ用ソフトウェアを原則、無償で入手できます。 ただし、バージョンアップ前と後でオラクル製品導入先のサーバーが異なり、それらのサーバーに同時にオラクル製品を導入している期間がある場合、その期間中は2台分のライセンスが必要です。 サポート契約未締結の場合、ライセンス購入時に指定したOS、及び製品バージョン以外のソフトウェアを利用する事は出来ません。この場合は既存ライセンスにてサポート契約を再契約するか、新たにライセンスを購入することになります。 なお、Oracle Database のバージョン 12.1.0.2 以降へバージョンアップする場合、Oracle Database Enterprise Edition または Oracle Database Standard Edition 2 のライセンスが必要です。 Oracle Database Standard Edition、Oracle Database Standard Edition Oneをお使いの場合は、Oracle Database Enterprise Edition または Oracle Database Standard Edition 2へライセンスを移行（マイグレーション）することで、バージョン 12.1.0.2を使用可能です。 Oracle Database Standard Edition、Oracle Database Standard Edition Oneともに、ライセンスは無償で Oracle Database Standard Edition 2 にマイグレーションできます。 ただし、Oracle Database Standard Edition 2の最少ユーザー数に満たないNamed User Plusライセンスをマイグレーションする場合は、最少ユーザー数に対する不足分について、Oracle Database Standard Edition 2のライセンスを追加購入する必要があります。 （Oracle Database Standard Edition 2の最少ユーザー数は、物理サーバー毎に10 Named User Plusです。） また、Oracle Database Standard Edition OneからOracle Database Standard Edition 2 にマイグレーションする場合は、サポート料金が現在の金額に対して20%加算されます。
本来は、バージョン毎に、認定されます。なので、12cのsilverに必要な12cの認定試験に合格しないと、12cのsilverとは認められないです。 何故、silverのタブがあるのか分かりません。 質問文を見た限り、何かしらの間違いに見えます。 9iのsilver所有者が、12cへのsilverアップグレード試験に合格したのであれば、12cのsilver 保有という事になります。
サポート契約の締結は基本的に必須ではありません。 ただし、同一ライセンス・セット内でサポート契約のあり/なしを統一する必要があります。 既に保有ライセンスやサポートの状況によっては、新たに購入するライセンスにサポート契約が必須となる場合があります。
hostnameコマンドで表示されるホスト名ではどうでしょうか？
こんにちは。 v$sessionを用いるとかでしょうか。 select * from v$session where type = 'USER'; SQL文が必要なら v$sqltextで、addressがキー。 という事でなければ統計を取っていないと。 v$mystatで事足りるのか、DBMS_STATS等 当然ですが統計については夜間等に行って下さいね。 参考になれば。 ではでは。
data source=hostname:1521/servicename の形式にしてみては？ http://otndnld.oracle.co.jp/document/products/oracle10g/102/windows...
JOIN使った例でも挙げときましょうか select a.番号 a.氏名 a.年齢, sum(b.利用回数) 利用回数の合計, sum(b.利用金額) 利用金額の合計 from テーブルA a inner join テーブルB b on a.番号 = b.番号 group by a.番号, a.氏名, a.年齢
DATEは日付けと時間がセットですので時間だけを登録する方法は有りません。 日付けも付けて登録するか、DATEを止めてCHAR(8)にして登録して下さい。
自体験ですが11g SQL基礎[11g SQL I](1Z0-051) はかなり難しいです。1回落ちました。初心者向けはBronze SQL基礎[Bronze SQL I](1Z0-017) です。ちなみに後者の方(1Z0-017) の白本はやっていないのですが(1Z0-051) の白本を勉強してます。2回目に(1Z0-017)を受けて合格しました。(1Z0-051)落ちてから1週間後(1Z0-017)を受けて合格しました。
iSCSIのネットワーク速度が1Gbpsということは、ネットワークを通るスループットの最大が125MB/s(1.000 Mbps / 8 = 125 MB/s)ということです。 これから、導かれるIOPSは、以下の式で算出できます。 IOPS = (MBps Throughput / KB per IO) * 1024 今回の場合、 125MBps / 8kB * 1024 = 16,000 IOPSとなります。 例えば 4IOPS/GBの250GBの共有ディスクであれば、16台(Total 4TB)が最大です。 しかしながら、スループットは、ネットワーク以外にも、OSやDBMS, スイッチ、NIC, 共有ディスクなど、様々な要因がありますので、125MB/sのスループットは現実にはあり得ないでしょう。 概ね 80MB/s位に見積もっておくのが、現実的ですね。その場合は、 80MBps / 8kB * 1024 ≒ 10,000 IOPS 位ですかね。 4IOPS/GBの250GBの共有ディスクであれば、10台 (Total 2.5TB)が最大位でしょう。
VMwareはSoft Partitioningの分類となり、Oracle製品がインストールされる（又は稼働する）物理サーバーの全プロセッサがライセンスカウントの対象となります。仮想化環境の設定を変更することで、物理サーバー間で仮想マシンが移動可能な場合には、Oracle製品の移動元/移動先の両方にライセンスが必要となります。
①まず、Owner = SOEにひもづいているオブジェクトをOwnerごと削除します。 SQL> drop user SOE cascade; ②そして、表領域 SOEを削除します。 SQL> drop tablespace SOE including contents and datafiles cascade constraints;
8KB(8192)です。初期化パラメータのDB_BLOCK_SIZEで確認ができます。この値はデータベース作成時に設定し、以降は変更ができません。このパラメータで、データベースの全ての表領域の標準ブロック・サイズが指定されます。有効な値の範囲は、2048から32768(OSに依存）です。 DB_BLOCK_SIZEの確認方法 SQL> show parameter db_block_size
rootユーザーで、以下のスクリプトを実行してください。/etc/oratabが作成されます。 # /u01/app/oracle/product/12.1.0/dbhome_1/root.sh
select distinct 教科, 点数 from TBL where 教科, 日付 IN ( select 教科, MAX(日付) from TBL group by 教科 ); で、いかがでしょうか？
クラッシュリカバリは通常インスタンス障害からのリカバリを指します。 startup時に自動的に行われるもので、アーカイブモードは関係ありません。 ノーアーカイブログモードで完全リカバリをする場合、ということであれば認識通りです。 > インスタンスを立ち上げて運用をはじめてREDOログが一周しないうちなら、データファイルとREDOログファイルでクラッシュ直前まで戻せると思うのですが、一周以上するとアーカイブREDOログがなければリカバリできないのではと思います。 こちらも認識通りです。 この場合、REDOログはリストアしない、が条件です。 制御ファイルもリストアの必要はありません。
※丸数字は行番号 ①＞A B inner join C on (C.xx=0 and B.yy=C.yy) 及び、 ③＞inner join A E on (E.yy'=C.yy') これら2行はSQLエラーのため実行不可です。以下の回答は、 ① SELECT * FROM A B inner join C on (C.xx=0 and B.yy=C.yy) 及び ③ inner join A E on (E.yy=C.yy) というSQLであるという前提で記載します。 ～～～～～～～ ① SELECT * FROM A B inner join C on (C.xx=0 and B.yy=C.yy) AにはBという仮の名前を付けて、C.xxが0の行で、かつB.yy=C.yyとなる行だけに絞り込んでA（仮の名前B）とCの双方を結合する。B.yy=C.yyとならない全行を双方から落とす。 ② right outer join D on (D.zz=C.zz and C.xx=0) Dに対して、①のうち、D.zz=C.zz、即ちD.zzとイコールになる①のC.zzの行を当て込む。その際、Dにしか無い行は残しておく（※③の段階で無意味になる）。C.xx=0はここで指定しても、すでに①で絞り込み済みのため、特に影響力は無い（＝書くだけ無駄）。 ③ inner join A E on (E.yy=C.yy) ②に対して、AにEという仮の名前を付けて、A（仮の名前E）のyyと②（＝①）のC.yyがイコールとなる行を結合する。この際、A（仮の名前E）または②のどちらか片方にしか無い行は双方から落とす。 ※②の段階で①と当たらないDの行を残しているが、この段階で①のC.yyがある行だけに絞ってしまうため、②のDにしか無い行はC.yyに相当する値が無いので全て落ちる。 ④ inner join F G on ((G.a=C.a and G.b=C.b and G.c=C.c and G.d=C.d)) カッコが二重になっているけど、外側は無効。 Fに対してGという仮の名前を付けて、F（仮の名前G）のaと、③（＝①）のC.aがイコールで、かつF（仮の名前G、以下カッコ内省略）のbと、③のC.bがイコールで、かつ、Fのcと③のC.cもイコールで、かつFのdと③のC.dもイコールになる行のみを結合し、Fあるいは③のどちらか片方にしか無い行は落とす。 ～～～～～～～ 以上のような感じになりますね。なお、全行に共通する事項として、結合条件に指定されている列にNULLが含まれる行は全て落ちます。 ②のright outer joinは、inner joinに変えても結果は変わりませんし、同じく②のand C.xx=0の指定を消しても結果は変わりません。④の二重括弧を外しても同様です。 ＞一般的にJOIN句の前後にはテーブルが一つづつ入るものだと理解しておりましたが その通りです。 ＞上記ではA B 、A E など二つのテーブルが並列している箇所があります。 B、及びEは実体のテーブル名を示すものではありません。仮に実テーブルとしてBやEが存在していても、ここではB・Eの双方がAを示しています。ただ、Aのままで2回登場させると区別が付かなくなるため、正確に区別するために、仮の名前に置き換えています。なお、片方は仮の名前に置き換えず、Aのままでも差し支えありません。区別が付けば良いのです。 ＞Aはその後登場しませんが、何故このような書き方をする必要があるのでしょうか? 前述の通り、Aが2回出てくることから、その区別をするためです。 ＞また、CはBに紐づくはずなのに、テーブルD、E、Gの抽出条件として使用できるのは何故ですか。 抽出条件として使用されているのは、①と②のC.xx=0だけです。その他は結合条件として利用されています。
利用期限はありません。試用、開発等終了後に消去することにより、OTN開発者ライセンスの使用権が消滅します。
SELECT A,B,C FROM XXX test1 WHERE NOT EXISTS( select a,b,c from XXX test2 where test1とtest2の結合条件 ) は、次のように書き換えることができます。 SELECT test1.A, test1.B, test1.C FROM XXX test1 INNER JOIN XXX test2 ON not (test1とtest2の結合条件) または、 SELECT test1.A, test1.B, test1.C FROM XXX test1 LEFT JOIN XXX test2 ON (test1とtest2の結合条件) WHERE test2.A is null
可能です。 ライセンス購入後、一度オラクル製品をサーバーにインストールした後でも、オラクル製品をアンインストール、またはサーバーを廃棄した場合には、インストール先のサーバーを変更することは可能です。 ただし、オラクル製品のライセンスは原則としてオラクル製品がインストールされている、又は稼働可能なサーバーについて必要となるため、2台のサーバーに同時にインストールする場合は、2台分のライセンスが必要となります。 また、オラクル製品のバージョンやプラットフォームの変更（32bitから64bit、WindowsからLinuxへの変更など）のために更新版を入手する場合は、サポート契約が必要となりますよ。
ログを書き出してください。 データベース側の処理ではなく、外部コマンド処理なので、データベースに外部処理の結果は残されていません。アーカイブログの中を漁るというのなら、解析すればわかるでしょうけど、アーカイブログモードになっていなければこれも無いです。 expdpやimpdpが返す終了コードを見て、直後にデータベースへ書き込むなどしておけば、データベースをSELECTすることでわかりますけど、それはバッチ処理をそういう形に組んでおく必要があります。expdpやimpdpの機能としてはありません。 基本はログを書き出すべきですね。これが一番手間の掛からない合理的かつ正確な方法です。
SELECT * FROM USER_CONSTRAINTS A LEFT OUTER JOIN USER_CONS_COLUMNS C ON (A.OWNER = C.OWNER AND A.CONSTRAINT_NAME = C.CONSTRAINT_NAME) 上記のように、USER_CONS_COLUMNSを利用することで、ADDの際に指定する列情報を拾い出せますよ。 ここまでできているのですから、列情報が加われば、あとは構成できるのではありませんか？
select LEFT(B,CHARINDEX('_',B,CHARINDEX('_',B)+1)) from A order by 1 です。
個人プレイではないですね。 経営課題を分析可能な課題にする 元データを取る仕組み作り データの加工 分析 分析結果から分析課題の解決 ビジネス反映 とかなり広い作業になりますので、一人では難しいです。
以下がOracel Databaseの技術的サポート窓口です。 ① web :My Oracle Support https://support.oracle.com/CSP/ui/flash.html ②電話番号 :0120-099-638 / 03-6834-6011（日本語または英語） ※技術的なお問い合わせを行う際には、サポート契約が必要です。サポート契約締結に基づき有効となったサポートID（旧CSI番号）をご用意の上、お問い合わせください。 また、代理店が提供する技術サポートを契約されている場合には、ご契約元の代理店へお問い合わせください。
> 最低限、この権限を与えないといけない権限ってあるのですか？ CREATE SESSION権限がないと、まずOracleに接続することもできません。 デフォルトのロールCONNECTに付与されています。 それ以外の権限に何が必要か不要かはOracleの知識云々じゃなく、ユーザーに何をする必要があるのか、何をしてほしくないか、のビジネス要件の問題です。 > 行う作業としてはINSERT/DELETE/SELECT等一般的に使用するSQL文くらいかと思います。 自分が所有している表に対してはSELECT/INSERT/DELETEの権限は不要です。 他のユーザー（スキーマ）が所有しているオブジェクトに対してはアクセスする必要があるのか？アクセスさせたくないのか？を考慮して権限を付与するかどうかを検討します。 といった具合です。
サポート契約期間は1年単位で、その後も1年毎に更新されます。
明らかに後ろにデータがあることが分かっているケースを引く場合、descで後方から検索することでindex走査が速くなることがあるため、まったく無意味というわけではありません。 あとは、「保証外」であることを覚悟の上で、ordar by descの代わりに使用するとか。 ※もう一度書きますが、「保証外」で、パーティショニングしてなければだいたいそうなりますが、正しく動作するとは限りません。
普通にselect文を選択して実行すると、実行計画が表示されます。 しかし、事実上2002年から開発が止まっているツールですので、Oracleなら7か8iとか、物凄くレガシーなDatabaseバージョンでない限り実行できるかは保証できません。 少なくとも私はcseの使用をお薦めしませんし、使っている人がいたら止めます。
効率的に利用するには、単一のINDEXにWHERE句で指定する全ての列が格納されている必要があります。そうでは無い場合、INDEXだけでは目的の答えを特定できなくなるので、複数のINDEXをマージする、もしくは実TABLEを参照するしかなくなるからです。 従って、答えは単一のINDEXで目的の行を全て特定できる2番のみですね。 さらに言うと、INDEXの列の指定順序は「伝票区分→伝票日付」の順であり、かつ、「キー圧縮」も入れた方がより効率的でしょう。伝票区分は3種類しかないので、明らかに伝票日付よりも少ないです。となると、まず先に伝票区分で大きく絞ってから、次に細かく絞る方が効率的です。その絞る際に、キー圧縮はより効率化を果たしてくれます。ただ、INDEX作成時にはロスとなるでしょう。 頻繁にINSERTするなら、INDEX無しの方が良い場合もあります。ゼロは問題かも知れませんけど、INDEXをやたらめったら増やせば良いわけではないのです。 主キーにできるなら主キーにしてしまう方が良いでしょう。主キーにしてあれば、1行見つけた時点で、他に無いか継続して検索する処理をしなくなります。主キー検索で同じ行が複数行見つかる可能性は無いからです。 もう一つ改良点を挙げるとすれば、データ量が【莫大】なら、列の定義をNUMBER(6, 0)＋CHAR(1)にでも変えた方がより効率的です。年月日はYYMMDDの6桁の数字でも表せますので、数字2桁を1byteで格納してくれるNUMBER型の方が効率的です。1900年代のデータがある、あるいは2100年代を想定するなら、NUMBER(8, 0)ですね。 伝票区分は3種類しかないのですから、1～3番とか、適当な1byteの文字に置き換え、日付もCHARなどではなくNUMBER型にした方が、伝票区分で内部的なサイズを3byte（文字コード次第では6byte）、日付で4~5byte（〃8～10byte）も圧縮できます。文字コードがSJISの場合、1行につき最大で8byteも圧縮できますから、データが1億件もあると、8億byte＝800MBも実データサイズが圧縮されるのです。この差は露骨に響きますよ。文字コードがUnicodeならこの倍の差を生みます。 ただ、1万行程度だと、差は80KB程度にしかなりませんので、それなら変換を掛けるだけロスでしょう。将来的な最大行数に対して、8byteの差がどれだけのサイズの差を生むかで考えて決めてください。1億行くらいになってくる見込みがあるなら、明らかに内部サイズの圧縮を考慮した方が、INDEXの速さにも影響します。
Oracleではクライアント向けライセンスは存在しません。 Oracleのサーバー製品のライセンスはサーバに対するライセンス許諾になります。 Named User Plus(NUP)と言うライセンス形態もあるのですが、それは、 Oracle製品がインストールされるサーバーにアクセスする可能性 がある全ての使用者の数で算出するのであって、あくまでもサーバー単位の課金で、 同時接続数、クライアント台数等はカウントしません。 例えば、サーバーが2つあり、それぞれ、10ずつのクライアントがアクセスする可能性のある場合は、20NUPのライセンスが発生します。これに対し、サーバーが１台で、10人のクライアントがアクセスする可能性がある場合は、10NUPのライセンスが発生します。
SELECTで指定した物で集計関数以外の物は,必ずGROUP BY以下に無いとエラーと成ります。
※実際の回答に当たる部分は、▲印より下のSELECT文だけになります。 WITH A AS ( SELECT 1 従業員番号, TO_DATE(20160201, 'YYYYMMDD') 年月日, TO_DATE(20160201.9, 'YYYYMMDD.HH24') 入室時間, NULL 退室時間 FROM DUAL UNION ALL SELECT 1, TO_DATE(20160201, 'YYYYMMDD'), NULL, TO_DATE(20160201.12, 'YYYYMMDD.HH24') FROM DUAL UNION ALL SELECT 1, TO_DATE(20160201, 'YYYYMMDD'), TO_DATE(20160201.13, 'YYYYMMDD.HH24'), NULL FROM DUAL UNION ALL SELECT 1, TO_DATE(20160202, 'YYYYMMDD'), NULL, TO_DATE(20160202.12, 'YYYYMMDD.HH24') FROM DUAL UNION ALL SELECT 1, TO_DATE(20160202, 'YYYYMMDD'), TO_DATE(20160202.13, 'YYYYMMDD.HH24'), NULL FROM DUAL UNION ALL SELECT 1, TO_DATE(20160203, 'YYYYMMDD'), NULL, TO_DATE(20160203.9, 'YYYYMMDD.HH24') FROM DUAL UNION ALL SELECT 1, TO_DATE(20160203, 'YYYYMMDD'), NULL, TO_DATE(20160203.17, 'YYYYMMDD.HH24') FROM DUAL UNION ALL SELECT 1, TO_DATE(20160204, 'YYYYMMDD'), NULL, TO_DATE(20160204.17, 'YYYYMMDD.HH24') FROM DUAL UNION ALL SELECT 1, TO_DATE(20160204, 'YYYYMMDD'), TO_DATE(20160204.9, 'YYYYMMDD.HH24'), NULL FROM DUAL UNION ALL SELECT 1, TO_DATE(20160204, 'YYYYMMDD'), NULL, TO_DATE(20160204.12, 'YYYYMMDD.HH24') FROM DUAL UNION ALL SELECT 1, TO_DATE(20160204, 'YYYYMMDD'), TO_DATE(20160204.13, 'YYYYMMDD.HH24'), NULL FROM DUAL ) -- ▲動作確認用の仮想TABLE（実際にはここまで不要） SELECT A.* FROM ( select 従業員番号, 年月日, 入室時間, LEAD(退室時間) OVER (PARTITION BY 従業員番号, 年月日 ORDER BY NVL(入室時間, 退室時間)) "退室時間" from A ) A WHERE A.入室時間 IS NOT NULL AND A.退室時間 IS NOT NULL ; 上記をWITH句ごとコピペすれば、どこの環境でも実行できます。この例だと、1日の9～12時と4日の9～12時、13～17時のデータのみがSELECTされ、1日の入室13時～2日の退室12時と、2日の入室13時～3日の退室9時、3日の退室17時のデータは、全てペアが不成立となって弾かれます。 ●入室→退室の順になるよう制御 ●入室後の直近の退室のみをペアと見なす ●年月日が違う場合はペアと見なさない 以上のような仕様になります。 ウィンドウ関数を使っているので、データが莫大になると遅い可能性もありますよ。その場合は、他の手立ても考えるべきかも知れません。
何をもって空きとするのかが不明ですし、そもそも標準SQLは「存在するデータ」を抽出するものであり、「存在しないデータ」を抽出するものではありません。 よって、そんなSQLは基本的に存在しません。 ただし、データベースによっては連番の仮想ビューを作成できるなど、拡張SQLにて可能なケースがあります。 まずは「何をもって空きとするのか」、「なんのDBを使用するのか」を記述してください。
10gの試験は既に終了しています。 また、Oracleマスターの資格はバージョンごとに期限がつくことに方針が変わっています。 つまり、一定期間が経つとOracleマスターのバージョンアップが必要になります。 例えば10gのOracleマスターの資格は先月Oracleマスターとしての資格の意味を失っています。 11gはまだ有効ですが、当然ながら12cよりは早く失効すると思います。 詳しくは以下のページをご確認ください。 http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?p...
データ量とメモリ量がわからないと何とも言えません。 indexは確かに高速化のテクニックではありますが、常にindex使えばよいというものではありません。 たとえばデータ量が少ないなら、わざわざindex使うよりfull scanのほうが速くなるのは当たり前です。 ※index only scanができないクエリーと仮定した場合。 indexを使うというのは、まずindexでレコードを絞り、絞ったレコードを実表から取る、という２ステップになります。これはテーブルサイズがメモリに入りきれないほど大きい場合、有効な手段です。しかし、テーブルがメモリに入りきれるほど小さい場合、テーブルを全てメモリにロードしてレコードを絞れば１ステップで済み、そちらのほうが速くなります。
Oracle Databaseが無料で利用できるライセンスは。OTNライセンスと呼ばれています。 OTNライセンスの利用可能な用途目的は、自社のアプリケーション開発、検査、プロトタイピング及び、デモンストレーションに限定して利用できます。 データ処理、事業目的、本番環境で使用する場合や、サポート契約（技術問い合わせ、パッチ入手等）が必要な場合には、正規製品版のライセンスの購入が必要です。
原因: （ ´∀｀）＜ ぬるぽ (Modのバグの可能性があります。) クラッシュレポート解析ツールによる。(http://cra.webcrow.jp/index.html) 対処法: 怪しいmodを抜きましょう
>オラクルのブロンズをとりたいのですが、何と何を受験すればいいのかわかりません。以下のStep1とStep2をクリア(100点満点中70点以上)すれば、晴れて、Oracle Bronzeを取得できます。 (Step1) 11g SQL基礎I [11g SQLI] (1Z0-051) （オンライン対象試験） または Bronze SQL基礎I [Bronze SQLI] (1Z0-017) （オンライン対象試験） または 12c SQL基礎 [12c SQL] (1Z0-061) （オンライン対象試験） https://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?... ※これから学習される場合は、12c SQL基礎 [12c SQL] (1Z0-061)を受験ください。 (Step2) Bronze DBA12c (1Z0-065) >勉強方法もわかりません。 以下の２冊の本を熟読すれば、必ず受かります。問題集がついているので、そこは、丸暗記してください。同じ問題が結構、出ます。 http://www.amazon.co.jp/%E3%80%90%E3%82%AA%E3%83%A9%E3%82%AF%E3%83%... http://www.amazon.co.jp/%E6%9C%AC-%E3%80%90%E3%82%AA%E3%83%A9%E3%82...
Grid Infrastructureを再導入しませんでしたか？前の環境が残っていると、このようなエラーが発生します。次の手順で前環境を完全に消去して、再導入してみてください。 [1]node1で共有ディスクの初期化をします。 dd if=/dev/zero of=/dev/xxx bs=1G count=nnn [2]各ノードで以下を実行します。 ① /etc/oracleを削除 ②/etc/oraenvを削除 ③/u01を削除 ④/u01ディレクトリの再作成 # mkdir -p /u01/app/grid # mkdir -p /u01/app/oracle # mkdir -p /u01/app/12.1.0/grid # chown -R grid:oinstall /u01 # chown -R oracle:oinstall /u01/app/oracle # chmod -R 775 /u01 ⑤gridとOracleの .bash_profileを編集して、Grid/Oracle関係の環境変数の設定箇所をコメントアウト化する ⑥ /usr/local/binの下のファイルを全て削除する。 ⑦ # reboot 特に⑦のrebootを忘れがちなので、気をつけてください。
以下のサイトで確認できます。 http://www.oracle.com/jp/system-requirement/db-matrix-195845-ja.htm...
単純にSELECT文で入れたい値を構成できれば、後はINSERT SELECT文で放り込めば良いだけですね。 INSERT INTO テーブルA SELECT TO_CHAR(ROWNUM + NVL(A.MAX_NO, 0), '000'), テーブルB.名称 FROM テーブルB LEFT OUTER JOIN ( SELECT MAX(TO_NUMBER(テーブルA.コード)) "MAX_NO" FROM テーブルA ) "A" ON (0 = 0) ; これでテーブルAのデータの有無に関係なく、テーブルBから新たな内容を放り込めます。なお、テーブルAのコードに1件でも数値以外が混在していた場合は、エラーになりますし、テーブルAのコードの最大数値＋テーブルBの件数が999件を超えた場合もエラーですが、後者はコードに一意制約が無ければそのまま破損データとして突っ込みます。 この設計だと、999件以上は扱えませんし、テーブルAに'999'のコードが存在している時点で、例え1行だけだったとしても、上記SQLは動作しません。設計を改めた方が良いとは思いますね。。。 コード系は桁埋めした数値ではなく、NUMBER型で扱った方が、上限に達した時の処理が非常に楽です。VIEW等で桁埋めして表示しておけば良いだけの話でもありますから、いざ999件に達したら、桁を拡張しつつ、VIEWのTO_CHAR書式設定を修正して4桁に増やすなどしてしまえば、データの値を書き換えなくても拡張が完了します。
Intel Xeon E3-1270 v3は、Single Processorであり、ソケット数も１です。CPU Threadも8(2台で16)ですので、2台までのRACなら、SE2の要件を満たします。可能です(^^)
＞sqlで各「社員」を「課」に割り振る方法を教えてください. この質問は【回答不能】でしょう。SQLで処理する【前】の段階で躓いていますから。 そもそも論で、【この質問に出てくるTABLE】は、【一つ】しかないんですよ。割り振りも何も無いんです。 ＞01 a い このように割り当ての組み合わせも決まっているのなら、あとは勝手にINSERTすれば良いんでしょうけど、相手先TABLE不明（TABLEの数も列定義も何もかも不明）では、何もできません。 複数TABLEならINSERT ALL文でも使えば一回で全TABLEに分散して入れられますし、単一TABLEならただ単にINSERTでしょうね。 ＞階層問い合わせを使えば解決出来そうな気がするのですが, 何で再帰とか階層化する必要があるのかもわかりません。例えば、「社 係 → 課」の組み合わせが決まって居なくて、それをSELECT文でどうにか決めようと思っているのなら、やはり【回答不能】になります。 ＞・同じ「係」に属する「社員」は同じ「課」に属する こちらの定義が曖昧ですからね。係と課の組み合わせ定義が無いのです。それなのに答えとされるであろうものでは決まっているようですよね。これでは組めないです。 この質問だけで答えを作るなら一つの係と一つの課をイコールで結べば済みます。課とは名ばかりの実態が係になるようにしてしまえば良いのです。それでもこの質問文だけだったら正解なんですよ。質問側で指定していないから何でもありです。でも、それって意味無いですよね。 正直言って、「何がしたいのか」すらわからないです。社員と係の組み合わせが決まっていて、それらをSQLで「いくつか適当にまとめて課を作りたい」というのなら、それはSQLの仕事では無いでしょう。 「係と課の組み合わせは決まっている」かつ「社員と係のTABLEもある」というのなら、その組み合わせをTABLEに放り込んであれば、質問文の後半に記載されたような「社 係 → 課」の組み合わせをSELECTするのは難なくできることです。この場合は、何もしなくても答えは決まっていますから、「割り振り作業」はしません。 【何がしたいのか】がわからないので、【回答不能】になります。
私は前職でデータサイエンティストに近い仕事をしていましたが、データサイエンティストとなるには統計的な知識や業務的な知識だけでなく、勘としか表現できないようなものが要求され、その勘を持っている人だけが「金がとれる」データサイエンティストになれるという特殊事情より、データサイエンティストの供給量が極めて少ないのは確かです。 ただ、特にBIツールの進化によって、低レベルの統計であればデータサイエンティストなしでもソフトウェアが勝手にやってくれるようになりました（ちょこっと数字に強い社員が片手間で操作するだけでも、それなりの結果が出る。つまり勘以外の部分は機械的に処理できる）ので、データサイエンティストを必要とするような仕事もほとんどありませんし、データサイエンティストが必要なレベルの仕事が今後増えるとも思えません。 ぶっちゃけ世の中はそこまで進んでないです。 よって確かに供給は少ないのですが、需要も少なく、ソフトウェアの進化速度よりデータサイエンティストの育成速度が速いとも思えないため、今後も需要と供給のバランスが崩れることはないでしょう。
以下のリンクが分かり易いですよ。 http://www.oracle.com/technetwork/jp/ondemand/database/db-new/oracl...
次のURLより日本国内価格表(P.4)をご確認ください。 http://www.oracle.com/jp/corporate/pricing/e-pl101005-101005a-n-176... Named User PlusとProcessor課金の2種類があるのですが、 Processor課金の場合、SE2がサーバーのソケット数ｘ210万円、EEの場合は、サーバーのコア数ｘ570万円になります。
できます。 Oracle Database SE2のライセンスで、以前のバージョンのOracle Database SE / SE1を使用可能です。ただし、Oracle Database SE2のライセンスで過去のリリースのOracle Databaseを使用する場合、Oracle Database SE2の適用条件を満たす必要があります。 Oracle Database SE2の適用条件は次の通りです。 ・Oracle Databaseがインストールされる（又は稼働する）物理サーバーの最大搭載可能CPUソケット数は2以下である必要があります。 ・RAC (Real Application Clusters)構成の場合は、各物理サーバーの最大搭載可能CPUソケット数は2以下、クラスタを構成する物理サーバーは2台まで、各物理サーバーの実装CPU数は1である必要があります。
hostname と IPアドレスの対応がとれていなようです。 DNSサーバーか、/etc/hostsかに、ローカルノードのホスト名とIPアドレスを定義すれば良いです。
dba_objectは、データ・ディクショナリであるため、ユーザーが直接、更新することは、許されていません。 変わりに、 cascadeをオプションにつけて、ユーザーを削除すると、そのユーザーが所有するオブジェクトが全て削除されます。 SQL> drop user SOE cascade;
select ID,PRC,MAX(FLAG) from tbl group by ID,PRC order by 1,2 です。
nmonとnmon Analyserがお勧めです。 ①nmon CPU、メモリー、ディスクI/O、ネットワーク等、システム・リソースの使用状況をリアルタイム（フォアグラウンド）で表示したり、ファイルに出力することができるパフォーマンス分析ツールです。 システム・リソースの使用率やピーク特性、システムのボトルネックがどこにあるかを把握するのに 役立ちます。 1：ダウンロード nmonをredhat サーバーへダウンロードします。 http://nmon.sourceforge.net/pmwiki.php $ mv nmon16d_x86.tar.gz /tmp $ cd /tmp $ tar tvfz nmon16d_x86.tar.gz $ su # mv nmon_x86_rhel6 /usr/bin/nmon # chmod 755 /usr/bin/nmon # rm -fr nmon_* # exit 2： 現在のシステムリソースの使用状況をモニターします $ nmon 3: システム・リソースの使用状況データをファイルに書き出します。 モニター内容を引数で指定します データ出力先のファイル名は、デフォルトで “ホスト名_日付_時間.nmon” となります。・ ・ 10秒間隔（-sフラグ） ・ 60回（-cフラグ） の計10分、 ・ TOPプロセスの情報（-t フラグ）を含めて ・ スプレッドシートフォーマット（-f フラグ）でファイルに保存します。 $ nmon –f –s 10 –c 60 –t ②nmon analyser nmon analyserは、nmonやtopasコマンドでファイルに出力したシステム・リソースの使用状況に関する情報を、Microsoft Excelのマクロを用いて簡単にグラフを作成するツールです。このツールで作成したグラフにより、CPU、メモリー、ディスクI/O、ネットワークなど のシステム・リソースの状況を直感的に把握することができます。 1: ダウンロード nmon Analyserをダウンロードし、デスクトップPCに保存します https://www.ibm.com/developerworks/community/wikis/home?lang=en#!/w... 2: redhat上で取得した .nmonファイルをPC上に転送します。 3: PC上でanalyserを起動します。 「マクロを有効にします（E）」を選択します。 初期画面（Analyser タブ）に表示される「Analyze nmon data」ボタンを押し、PC上に転送したファイルを選択します。
そのカッコ等に対するエスケープ処理は、前後のバッチ処理内容等によっては必要になる場合があります。 その行単体を見ても答えは決まりません。ただ、外せば動かなくなるというのなら、EXPコマンドが必要としているのではなく、その前後が必要としているということですよ。
コンテナ・データベース(CDB)として、データベースを作成していませんか？ swingbenchは、12cのマルチテナント・アーキテクチャーに対応していませんので、oewizardがOE表を作ろうとするが、PDBに対応できないため、プログラムが落ちてしまします。 DBCAで、いったん、データベースを削除して、CDBを使わない指定で、データベースを再作成すると、上手く行くと思いますよ。
最初の方の画面で「セキュリティ・アップデートをMy Oracle Support経由で受け取る」に 設定しているのでは？ 評価版ならMy Oracle Supportは利用できないと思いますのでプロキシの設定は必要ないと思いますが。 # 保守サポート契約を結んでいてもOCMを設定して利用している顧客は見たことありません…
/u01/appの下に、oraInventoryというディレクトリを作成できなかったのが原因かと思います。 /u01/appの所有者がrootになっていないか、まず確認してください。 $ ls -la /u01/app もし、rootになっている場合は、所有者をoracle:oinstallに変更します。 # chown oracle:oinstall /u01/app 最後に、oraInventoryのディレクトリを作成します。 $ mkdir /u01/app/oraInventory
スキーマX【以外】に、必要なSELECTのみができるVIEWを作り、そのVIEWに対してスキーマXへのSELECT権限を与えれば、そのVIEWの内容のみをSELECTすることができるでしょう。 スキーマX内にVIEWを作った場合、そのVIEWが他のスキーマのVIEWをSELECTしている分には問題ありませんが、TABLEを直接SELECTしている場合は、TABLEそのもののSELECT権限を持ってしまいます。だから、スキーマXには他のスキーマが持つVIEWのSELECT権限のみを付与してください。
エラーを見る限り、'/home/oracle/tmp/gconf-test-locking-file-X2FUFY'のファイルの作成に失敗しただけなので、/home/oracleの下に、tmpディレクトリを作成すれば、直ると思います。 $ mkdir /home/oracle/tmp $ chmod 777 /home/oracle/tmp 作成後、vmcserverを再起動してください。
まず、一時表領域のサイズを確認するには、SQL*Plusから以下のように入力します。 SQL> col file_name for a40 SQL> col tablespace_name for a20 SQL> col bytes for 999,999,999 SQL> select file_name, tablespace_name, bytes/1024/1024 MB from dba_temp_files; そうすると、例えば、以下のように表示されます。ここでは、203MB FILE_NAME TABLESPACE_NAME MB ---------------------------------------- -------------------- ---------- +DATA/ORCL/TEMPFILE/temp.289.908928935 TEMP 203 このサイズを例えば、1GBに変更するには、以下のように入力します。 SQL> alter database tempfile '+DATA/ORCL/TEMPFILE/temp.289.908928935' resize 1G; 再度、サイズが変更されたことを確認します。 SQL> select file_name, tablespace_name, bytes/1024/1024 MB from dba_temp_files; FILE_NAME TABLESPACE_NAME MB ---------------------------------------- -------------------- ---------- +DATA/ORCL/TEMPFILE/temp.289.908928935 TEMP 1024
SCAN名の解決に、GNSやDNSではなく、/etc/hostsを使用している場合は、このエラーは、必ず発生しますが、問題は特にありません。 エラーが発生してもデータベース自体は通常通り使用することができます。
primaryがpromaryになっているからです。
ワークテーブルに削除しない分をコピー＆テーブルをリネーム もしくはinsert して truncatやdropでパーティションごと削除が速いですね
RACの場合は、共有ストレージにデータファイルが格納されるため、OSから、直接ファイルを見ることができないです。 通常、データベースをインストールする際に、「データベースの位置」を「+DATA」に指定するかと思うのですが、この+DATAからの相対的なファイルの内容をSQL*PlusやEM Express等を通してみることができます。 以下は、SQL*Plusのコマンドを使用した例です。データファイルの情報は、DBA_DATA_FILESという表に格納されています。 SQL> select file_name, file_id, tablespace_name from dba_data_files; FILE_NAME FILE_ID TABLESPACE_NAME ---------------------------------------- ------- ------------------------------ +DATA/ORCL/DATAFILE/system.278.908415557 1 SYSTEM +DATA/ORCL/DATAFILE/sysaux.277.908415525 3 SYSAUX +DATA/ORCL/DATAFILE/undotbs1.280.9084156 4 UNDOTBS1 03 +DATA/ORCL/DATAFILE/users.279.908415601 6 USERS +DATA/ORCL/DATAFILE/undotbs2.288.9084159 8 UNDOTBS2 61
Oracle VM、VMware、Hyper-VなどはSoft Partitioningの分類となり、Oracle製品がインストールされる（又は稼働する）物理サーバーに搭載されている全ての物理プロセッサがライセンスカウントの対象となります。 ※Oracle製品がインストールされる（又は稼働する）仮想マシン（VM）の数は、必要ライセンス数には関係ありません。
VMWare上のOracle Databaseは、オラクル社は稼動保証していません。 VMWareに対するオラクル社のサポート指針は以下のおとりです。 オラクル・サポートは、以下のとおりVMware上でオラクル製品を稼働させている お客様を支援します。 オラクルは以下の場合にサポートを提供します。 発生した問題(事象)が - (仮想OSではない)実OS上で発生することが判明している場合 もしくは - VMware上での動作の結果として発生したものではないことが実証できる場合 もし発生した問題がすでに判明しているオラクル製品の問題である場合は、 オラクル・サポートは適切な解決方法を推奨します。 もし、オラクル社が提示した解決方法がVMware仮想環境で解決方法として 機能しない場合は、お客様へのサポートは、ヴイエムウェア社にご相談ください。 オラクル社が提示した解決方法が機能しない場合、必要に応じて オラクル社開発部門での調査などを含め、サポート提供を再開します。 http://www.oracle.com/technetwork/jp/topics/ojkb120560-426058-ja.ht...
PRVG-11550のエラーは、PRVE-10077のエラーが原因で起こっていますので、PRVE-10077のエラーを修正すれば、２つとも解決します。 PRVE-10077のエラーの修正は、エラーに表示されているとおり、"/etc/sysconfig/network"の中で、NOZEROCONFパラメータが'yes'に設定されていないことが原因です。ファイルを編集して、以下のようにしてください。ネットワークを再起動する必要はないです。 # vi /etc/sysconfig/network NOZEROCONF=yes
結果は変わらないし、恐らく実行計画上はサブクエリーの方が遅くなるでしょう。 可能性があるとすれば、ORマッパーが吐いたSQLというケース。 SELECT * FROM SampleTbl WHERE $COL1$ in( SELECT $COL2$ FROM $TABLE1$ WHERE $COL2$ <= $VAL1$ ) みたいなマップがあって、 $COL1$=key1 $COL2$=key1 $TABLE1$=SampleTbl $VAL1$=1001 と設定されているため、自己結合になってしまっているけど、別のテーブルのカラムでも絞り込みができるように設計されている、というケース。
原因: DISPLAY変数が設定されていないか、インストールを実行しているユーザーにX Windowを開く権限がありません。これは、リモート端末からインストールを実行している場合や、ディスプレイ上でX Windowを開く権限のあるユーザーからX Windowを開く権限のないユーザー・アカウントへsuコマンドを使用して変更している場合に起こります。 処置: VNCサーバーに"grid"ユーザーを追加して、VNCビューワーから、gridユーザーのディスプレイ番号を指定してログインしなおしてください。
ODBCドライバとしてMicrosoft ODBC for Oracleではなく、Oracle in XE を使用してください。
12.1.0.1までのバージョンなら使用できます。12.1.0.2以降は使用ができなくなりました。
問題ないものと、システムに必要なものがあります。 わからないなら、全て残してください。
ここでいう「joinを使用しない結合」とは、 テーブルAとテーブルBがあるとき、 select * from テーブルA as TA, テーブルB as TB where TA.key = TB.key ということですよね。 それなら、内部結合と等価で正しいです。
サポート契約期間は1年単位で、その後も1年毎に更新されます。
OracleならSQL Developer PostgresqlならPgAdminIII MS SQL ServerならManagement Studio と、DB標準のソフトを使うことが多いです。 理由は標準ツールでない場合、実務環境で使用が許可されないケースがあり、そのようなときに備えて標準ツールでの操作に慣れておく必要があるためです。 表の作成はDDL文を書いて、SQLとして実行しています。 ビルダー使ったほうが楽かもしれませんが、それでは勉強になりませんので。
Oracle Database 12c Release 1 (12.1.0.2)より、Oracle Database、Oracle Client共にWindows 10に対応しています。 ただし、Windows 10 Home Editionには対応しておりません。 また、Oracle Real Application Clusters (Oracle RAC)は、Windows 10では動作保証がされておりません。
Oracle Database Standard Edition 2では、1つのデータベースで使用可能なCPUスレッドが16（Real Application Clusters構成の場合は、各サーバーで1つのデータベースあたり8）に制限されます。 このCPUスレッドは、搭載されているCPUコア数とは必ずしも同一ではなく、例えばインテル社のCPUを搭載し、そのCPUでハイパー・スレッディングが有効な場合、OSが認識している論理的なCPUコアを指します。 Oracle Database Standard Edition 2でのCPUスレッドの制限はOracle Database 12c（12.1.0.2以降）のソフトウェアよる技術的な制限として実装されています。 なお、同一物理サーバー上で複数のデータベースを作成された場合は、各データベースごとに使用するCPUスレッドが16までに制限されます。
違いがあるもなにも・・・、 MD51とMD02はまったくの別物ですよ。 英語とドイツ語くらい違います。 名前やトランザクションコードの記述の仕方が似ているだけで、 中身は完全に異なるものです
試用、開発のOracleライセンスは、OTN開発者ライセンスと呼ばれているのですが、特に利用期限というものはなく、試用、開発等終了後に消去することにより、OTN開発者ライセンスの使用権が消滅するようです。
全ての入荷商品に外部のコードがあるのなら、それを流用する方が、新たなコードを振る手間は無いですけどね。 ＞①商品分析の観点で ＞②経営分析の観点で ＞③マスタ登録の運用の観点で これら全て、現状のコードのままでも十分可能です。大区分などが無いから付けたいというだけなら、コードに対する大区分等の分類を登録したマスタを一本追加すれば良いのですから。 そもそも論で、コードの書式を改める際の制約等は無いのでしょうか？ 例えば、現状のコードは10桁ですが、これより長くしても大丈夫なのですか？ それと、現状の在庫に対してコードを振り直す手間を掛けられるのですか？ 現物にはコードを貼っていなくて、データベース上でしかコードを使っていないのなら、きちんと移行処理をしてしまえば問題ないでしょう。でも、その程度の利用であるなら、コードをわざわざ改めても、結局コード自体を目にして何かすることはあまりないようにも思えますけどね。 コードが10桁の制約のままで、先頭から1桁目を大区分、2桁目と3桁目を中区分などと分類する方法はお薦めしません。現状なら、商品数は最大100000種類まで扱えますが、大区分1桁・中区分2桁・小区分2桁などと分けてしまうと、最大10万種類というところに変化が無くても、大区分の11個目、中区分や小区分の101個目が来た時点で番号がパンクします。大分類の5桁をランダムに振り続ける限り、10万種類を超えなければ番号のパンクは起こりません。 データベースの設計とアプリケーションの設計次第で、どうにでもなると言えばなりますよ。見た目のコードは0-12-34-56789とか、分類的な意味合いを持たせても良いかも知れませんが、現状の00012-56789というコードのままで、01234の部分を大分類－区分マスタに当てて0-12-34-56789などという見た目に変換したって良いのですから。 例えば、JANコードをいちいち商品一つずつに対して覚えている人なんて居ませんよね。でも、JANコードをシステムに入れればパッと大区分・中区分等に変換することは、マスタさえきちんと用意してあれば簡単にできるわけです。現在のコードには一切手を加えずに、あなたが望む大区分や部署等々を足すことも出来るのですから、そのような運用方法も検討してみては如何でしょうか。 ちなみに、同じコードで複数の部署を切り分けるような必要があるなら、同じコードのままでは無理ですね。入荷情報に部署とか在庫先等、何らかの区分でも追加すれば出来るでしょうけど、商品コード以外の分類手段がないなら切り分けは出来ません。
その書籍を持っていないので問題文がわからないので質問から推測します。 手順１．Aさんがある条件に該当するレコードに対してUpdateをかけました。 手順２．CさんがAさんと同じ条件のレコードに対してSelectしました。 手順３．AさんがCommitしました。 この場合にCさんが取得したレコードはUpdateをかけた後のものか前のものか。 こんな感じの問題なのかな？？？ 別トランザクションであれば答えはUpdateをかける前のものだと思いますが、Aさん、Cさんが同一のトランザクション内で作業をしているのであればCさんが取得したレコードはUpdate後のレコードになります。
知恵袋で説明できる範囲を超えているので短く、テーマビルダーというものがあるので最初はそれで作ってみるといいです。慣れたら少しづつビルダーを使わずやってみる事をすすめます。 ttp://www.ps3-themes.com/ps3-theme-builder
REDOログ・バッファはＳＧＡ内の循環バッファです。ここには、データベースに対して行われた変更に関する情報が保持されます。 この情報はＲＥＤＯエントリに格納されます。ＲＥＤＯエントリには、DML,DDLまたは内部的操作によってデータベースに対して行われた変更を再構築するために必要な情報が含まれています。ＲＥＤＯエントリは、必要に応じてデータベース・リカバリで使用されます。 サーバー・プロセスによってバッファ・キャッシュが変更されると、ＲＥＤＯエントリが生成され、ＳＧＡのＲＥＤＯログ・バッファに書き込まれます。ＲＥＤＯエントリによって、バッファ内の連続した領域が順次占有されます。 ＲＥＤＯログ・バッファは、ログ・ライター・バックグランド・プロセスによってディスク上のアクティブはＲＥＤＯログ・ファイルに書き込まれます。
元々定義されています。なので、create viewとかsqlを流したりしなくても下記のようにするだけで結果が得られます。(11gR2 11.2.0.2 scott.pk_empで検証しました) ANALYZE INDEX pk_emp VALIDATE STRUCTURE; SELECT name, height, lf_rows, del_lf_rows FROM index_stats; automug3さんがリンクされている記事は古いのか雑なのか・・・(;の後ろに「d」の誤字もあります) ちなみに、私がこの辺りを勉強したのは9iの頃ですが、index_statsビューを作成しなければならないと学んだ認識はありません。
Oracle Databaseライセンス購入におけるライセンスの種類やカウント方法などは、以下リンクのPDF資料に記載してあります。簡単な見積例も記載してありますので、お見積の方法がわからない場合などはこちらをご参照ください。 意外と知らない！？オラクル・ライセンス見積ABC －Oracle Database編－（PDF） ※2015年10月6日 更新 http://www.oracle.com/technetwork/jp/ondemand/database/db-new/oracl... ※上記資料に掲載されている価格等は、記載時点のものです。最新の情報につきましては、日本オラクルのホームページより製品・価格情報をご参照いただくか、Oracle Direct までお問い合わせください。 http://www.oracle.com/jp/direct/index.html
V$LOCKの動的パフォーマンス・ビューを使用して、以下のように検索します。 SQL>SELECT sid, ctime FROM v$lock WHERE block > 0;
SGAは、インスタンスのデータおよび制御情報が含まれているメモリー領域です。SGAには、次のデータ構造が含まれています。 ①共有プール：ユーザー間で共有できる様々な構造をキャッシュします。 ②データベース・バッファ・キャッシュ：データベースから取得されたデータ・ブロックをキャッシュします。 ③REDOログ・バッファ：ディスクに格納されている物理REDOログ・ファイルに書き込むことができるまで、REDO情報をキャッシュします。 ④ラージ・プール：特定の大きなプロセスに対して大容量のメモリー割当てを提供するオプション領域です。 ⑤Javaプール： Java仮想マシン内のすべてのセッション固有のJavaコードおよびデータに使用されます。 ⑥Streamsプール：取得プロセスおよび適応プロセスで必要な情報を格納するためにOracle Streamsで使用されます。 ⑦固定SGA: データベースおよびインスタンスの状態に関する一般情報およびプロセス間で通信される情報を含む内部ハウスキーピング領域です。
andの代わりにinを使う方法はちょっと思いつかない、というか存在しないと思いますので考慮しません。 orとinの対比だけで話します。 orでなくinを使うのは単に見やすいから以外の理由はないでしょう。 どちらも内部ではin list iteratorに変換されるため、処理は同じです。 in句を使用したほうがいいとされているのは古のルールベースoracleがorだとindexが効かず、inだとindexが効く、つまりinのほうが処理が速くなっていたからです。 現在は上述の通りin list iterator変換されるため、速度に差はありません。 そのため、inとorのどちらを使用しても内部的には変わりません。 もし速度に差が出るとしたら、とんでもなく遅いネットワークごしのoracleに対して限度となる1000個のinを並べて投げたときでしょうか。 SQL文が冗長になる分、orのほうが（ネットワーク転送の問題で）理論上遅くなります。
データベース上で保持できるのは、9桁です。 ただし、SYSTIMESTAMPで取得できる桁数は、OSやOracleのバージョンに依存します。デフォルトは6桁ですが、Windowsの場合は、3桁までしか取れず、それ以下は0で埋められます。それ以上の精度ではOSが返してくれないので、無いのです。Unix系の場合は最大で9桁です。 なお、データベースにTO_TIMESTAMP関数等を使って書き込むような場合は、OSを問わず9桁まで扱えます。桁数無指定時のデフォルトは6桁になります。
サーバー再起動を試して下さい。
マルチコンテナ・データベース(CDB)では、次のものの冗長性が回避されます。 ・バックグランド・プロセス ・メモリー割当て ・複数のデータ・ディクショナリに含まれるOracleメタデータ 複数のアプリケーションがグループ化されているCDBには１つのインスタンスがあり、したがって１セットのバックグランド・プロセス、ルート・コンテナ内の１つのＳＧＡ割当てと１つのデータ・ディクショナリがあり、各PDBでは、それぞれ独自のアプリケーション・データが保持されます。 アプリケーションにパッチの適応やアップグレードが必要な場合、メンテナンス操作は、CDBで一度のみ行われるため、全てのアプリケーションが同時に更新されます。
http://www.crosshead.co.jp/service/lecture/regular/itil_exin.html ファンデーションとマスターの２つ。 基本、金さえ払えばだれでも取得可能。それが嫌なら2万払って独学で取得。 上のURLは3日受講と15万で資格がもらえる。 金払えばだれでも取得できる資格、ようはゴミ。 ｼﾞｬｧﾉ(´･ω･｀)y━・。oO
パーティションキーでパーティションを特定できるような条件設定になっていないのでは。 もしくはハッシュパーティションを使っている、とかありませんか？
12cではDB ControlはEM Expressに変わっています。 XML DBのポートを構成するような手順しかありません。 emcaコマンドは存在しているようですが、使えないのかもしれません。 ※emctlコマンドは存在しません ＜ご参考＞ https://community.oracle.com/thread/2563495?start=0&tstart=0 http://docs.oracle.com/cd/E57425_01/121/ADMIN/cdb_create.htm#BABHJF...
DISPLAY環境変数に設定すべきはXサーバーのIPアドレスです。 自端末でXサーバーを起動しているなら、ご認識の通りですが。 ためしに xclock で時計が表示されるか、などしてXが使えるかどうかを予め確認しましょう。 xhost の実行も必要かもしれません。 詳しくは 「Xサーバー DISPLAY」などで検索して調べてみてください。 なお、Fedoraはサポート外のデストリなのでOUI起動後もどこかで問題が起きるかもしれません、念のため。
接続とは、ユーザー・プロセスとサーバー・プロセス(DBインスタンス）間の通信パスです。 セッションとは、DBインスタンスに対する現行のユーザー・ログインの状態を表すものです。たとえば、ユーザーがSQL*Plusの起動時に有効なユーザー名およびパスワードを入力すると、そのユーザー用のセッションが確立されます。セッションは、ユーザーが接続してから切断するまで、またがＤＢアプリケーションを終了するまで継続されます。 同じユーザー名を使用して、単一のOracle Databaseユーザー用に複数のセッションを作成して同時に存在させることができます。例えば、ユーザー名/パスワードがuser1/passwordのユーザーで、同じOracle Databaseインスタンスに複数回、接続できます。
難易度はそこそこです。実務経験があればそれほど難しくはありません。 いわゆる試験のための試験という面はゼロではありませんが、特に午後の問題は、理由を述べたうえでわざと正規化しないとか、かなり実践的な内容になっています。 もちろん現場ではDB固有の知識が必要となりますが、データベーススペシャリスト（およびそれを取得するための学習）はDBAとして無駄にはなりません。 ただ、データベーススペシャリストではolapまではやらないので、若干ビッグデータ領域とは異なります。ビッグデータ領域はデータマイニングとか統計の知識になってくるので。 まあ、rdbでビッグデータ扱うこともないわけではないので、まったく役に立たないというものでもないのですが。
前も指摘したように、この質問は、他人が理解できるものになっていません。 何が言いたいのかわからないのです。 ＞DEPARTMENT_IDと順位をパラメータにし、DEPARTMENT_IDと順位にあったSALARYの人のEMPLOYEE_IDを返すというものです。よろしくお願いします。 これが何を言いたいのかもわかりません。これが問題文で、答えがこのCREATE文だというのでしょうか？ そうであるなら、この問題からこの答えを出すのは無理です。なぜなら、この答えを出すために指定されるべき条件が不足しているからですよ。 この文章から、このCREATE文を作ったとしたら、「何をそんなに小難しく考えているの？」って思います。でも、例えばJavaアプリの中から呼び出して使うなどの条件があってのことなら、これもあり得るようになる可能性があるでしょう。 質問が元々の問題を正しく伝えていない以上、解説なんかできません。答えが正しく無いんじゃないか？という疑いすらあるCREATE文に過ぎないわけですからね。
原因はよくわからないのですが、よく起こり得るエラーです。ワークアラウンドとしては、以下のようにSCAN経由でアクセスすると接続できます。 $ sqlplus sys/<passwd>@<scanのhostname>:1521/orcl as sysdba
結論から、申し上げると、このエラーは無視してください。無視して、特に問題がありません。 /etc/security/limits.confに最大ロックメモリー制限のエントリーを記述する方法が以下のとおりです。必ず、rebootする必要があります。変更後は、ulimit -aコマンドで設定状況を確認できます。 # vi /etc/security/limits.conf @oinstall soft memlock unlimited #← unlimitedのところに数値を入れます @oinstall hard memlock unlimited #← unlimitedのところに数値を入れます # reboot # ulimit -a
create index インデックス名 on A(B) です。
サブクエリ（exist not exist）やJOINを使わずに、GROUP BYだけで要件を満たしますが？ >scheduleDate 2016-01-11と2016-01-12で両方に存在するproductIｄ SELECT productid FROM AA WHERE scheduleDate IN('2016-01-11','2016-01-12') GROUP BY productid HAVING COUNT(DISTINCT scheduleDate)=2 ; >逆に2016-01-11と2016-01-12で2016-01-11しか存在しないproductIｄ SELECT productid FROM AA WHERE scheduleDate IN('2016-01-11','2016-01-12') GROUP BY productid HAVING COUNT(DISTINCT scheduleDate)=1 AND MAX(scheduleDate)='2016-01-11' ; それとも、サブクエリやジョインを使ってみたいのでしょうか？
データベース-ユーティリティ-エクスポートのディレクトリ設定でなくて？
単純に修正すると DELETE from TABLE_A where TABLE_A.内示NO IN( select TABLE_A.内示NO from TABLE_A, TABLE_B where TABLE_A.内示NO = TABLE_B.内示NO ) ですが、これは実は DELETE from TABLE_A where TABLE_A.内示NO IN( select TABLE_B.内示NO from TABLE_B ) と等価です。 また、 DELETE from TABLE_A where exists(select null from TABLE_B where TABLEA.内示NO=TABLE_B.内示NO) というSQLとも等価です。
UPDATE テーブル SET 同じ項目に同じ値を設定して WHERE 条件 ; これ以上は、この質問が曖昧すぎて無理ですね。 テーブル T2が何のためにあるのかもサッパリわかりません。絞り込みに使うのなら、WHERE EXISTS～で絞っても良いでしょうし、MERGE文にしてしまうのもありです。 テーブル T1とテーブル T2は同一ですか？ この書式だと、「テーブル」という名のテーブルに対して、T1とT2という仮の名を付けているという扱いになるので、同一のテーブルを結合するSELECT文ということになるんですけどね。
osが64bit dllが32bit版なのに 64bit用のregsvr32を使用しているとかではないですか。 https://support.microsoft.com/ja-jp/kb/249873
/etc/hostsよりscan ipを管理しているのが原因です。DNS等でSCAN名を複数のアドレスに解決できない場合、インストール中にそのようなエラーが発生します。 エラーが発生してもデータベース自体は通常通り使用することができますので、無視していただいて結構です。が、エラーなくインストールを実施したい場合はDNSの設定を行えばエラーは発生しません。
接続先の指定が現在のサービス名と合わなくなったものと思います。 tnsnames.ora、もしくは接続に使用しているサービス名の設定と、 lsnrctl service コマンドの戻すサービス名が合ってないのが原因です。 インスタンス（SERVICE_NAMEパラメータ）の設定を合わせれば 解決できるかと思います。
rootで以下のコマンドを実行します。 # dd if=/dev/zero of=/dev/mapper/mpatha bs=1G count=250 # dd if=/dev/zero of=/dev/mapper/mpathb bs=1G count=250 # dd if=/dev/zero of=/dev/mapper/mpathc bs=1G count=250 どのノードで実行しても、初期化されますが、デバイス名の管理上、インストール・ノードで実行されることをお勧めします。
1．作業目的がテーブルにあるデータの転送のみであり、転送時に使うCSV等のテキストデータ自体は成果物としては必要無い。 2．読み取り元となるデータベースと、書き込み先となるデータベースのどちらにも接続できる環境（クライアント・サーバーを問わない）が存在している。 以上の条件を両方とも満たすのであれば、わざわざSELECTしたりSQL*Loaderを使わずとも、SQL*PlusのCOPYコマンドを使って簡単に転送できます。 そうではない場合、成果物として必要な物が不明瞭ですので、そこを明らかにしてください。 1．転送時に利用するテキストファイルは、「成果物」として必要な物なのか？ それとも一時処理用のファイルに過ぎず、最終的には破棄するのか？ 2．1．が成果物として必要な場合、そのフォーマットは？ 3．1．が成果物として不要な場合、コピー元と、コピー先のテーブル設計は同一なのか、異なるのか。 → 同一であるなら、EXP→IMPコマンドによる転送も可能。 4．「制御ファイルを自動で生成」とあるが、なぜ自動生成が必要なのか。 → 制御ファイルは、転送元・転送先のテーブル設計が毎回異なるというようなことでもない限り、作り直す必要が無いので、ファイルとして単独で置いておきたくない程度の理由なら、バッチ処理の中に埋め込んでおくことも可能。
E_FAIL (0x80004005) で検索するといくつかヒットしますが、基本的にインストールに失敗しているため、ということのようです。 http://qiita.com/komiya_atsushi/items/b92d1ab844b37a78ac1c 対策としては再インストールとなります。
SYSスキーマのUSER_TAB_STATISTICS、USER_IND_STATISTICSがそれに該当するのではないでしょうか。 ディクショナリ表の元表のオブジェクト、という形で参照できるものと思います。
開発言語などでわざわざ作らなくても、SQL*Plusのみでファイル出力までできますよ。。。 http://www.shift-the-oracle.com/sql/explain-plan.html この辺と、 http://www.shift-the-oracle.com/sqlplus/command/spool.html これを組み合わせれば、ファイルに出力完了です。 まずはデータベース側の理解をしなければ、どの言語であろうと結局作れないとも思います。。
普通にやるならamazonやamazon APIを使う形になると思います。
12.1.0.2から、カーネル・パラメータ”panic_on_oops”のチェックが追加されました。このパラメータは、システム障害発生時の、カーネルの動作を制御するためのパラメータです。このパラメータの値を１に設定すると、システム障害を発生する場合、システムがすぐに再起動されます。 Linuxの場合は、 設定ファイル /etc/sysctl.confを編集して、kernel.panic_on_oops = 1の1行を追加してください。 設定した値を即時に反映するには、rootユーザーで以下のコマンドを実行します。 # /sbin/sysctl -p
/etc/sysctl.confを編集して、kernel.panic_on_oops = 1の1行を追加し、sysctl -pを実行してください。 #vi /etc/sysctl.conf kernel.panic_on_oops = 1 #sysctl -p
ロールとは、ユーザーまたはその他のロールに付与されている関連権限の名前付きグループのことです。 ロールを使用してデータベース権限を管理できます。権限をロールに追加した後で、そのロールをユーザーに付与できます。その後、そのユーザーは、そのロールを有効にして、そのロールによって付与された権限を使用できます。ロールには、そのロールに付与されている全ての権限、およびそのロールに付与されているその他のロールの全ての権限が含まれています。 ロールの使用には、権限の管理に関する次の利点があります。 ①権限管理の簡略化：ロールを使用して権限管理を簡略化します。一連の同じ権限を複数のユーザーに付与するのではなく、それらの権限を１つのロールに付与してから、そのロールを各ユーザーに付与します。 ②動的権限管理：ロールに関連付けられている権限が変更された場合、そのロールを付与されている全てのユーザーは、変更された権限を自動的に即時取得します。 ③権限の選択的可用性：ロールを有効または無効化して、権限を一時的に有効または無効にできます。これによって、特定の状況でユーザーの権限を制御できます。
＞処理Bのコミットが終わるまでロックは無理ですか？ そうなります。 TABLEへの排他ロックとは、他の処理を完全排除するロック方法ですので、他の処理が介入している状態では排他ロック自体ができません。COMMITしていないというのは、TABLEへの処理中を意味しますので、一つでも処理中があるなら排他ロック不可です。
障害は一般的に次のカテゴリーに分類できます。 ①文障害 ②ユーザー・プロセス障害 ③ネットワーク障害 ④ユーザー・エラー ⑤インスタンス障害 ⑥メディア障害 ①文障害：単一のデータベース操作（選択、挿入、更新または削除）で障害が発生した場合 ②ユーザー・プロセス障害：単一のデータベース・セッションで障害が発生した場合。 ③ネットワーク障害：データベースへの接続が失われた場合 ④ユーザー・エラー：ユーザーは正常に操作を終了したが、その操作（表の削除または不正データの入力）が正しくない場合。 ⑤インスタンス障害：データベース・インスタンスが突然停止した場合 ⑥メディア障害：データベース操作に必要なファイルのいずれかが失われた（ファイルが削除されたか、またがディスクに障害が発生した）場合
定義誤りではないでしょうか？ （正）hoge number(6,2); （誤）hoge number(4,2);
Oracle Database 12c以降では、一時表のトランザクションにより生成されるUNDOを、一時表領域内の個別のUNDOストリームに直接格納して、UNDOがREDOストリームに記憶されないようにすることが可能になりました。このモードは一時UNDOと呼ばれます。 一時表は、中間結果をステージングするためのスクラッチ領域として広く使用されます。これは、一時表の変更は、それ以外の表の変更よりもはるかに速く行われるためです。パフォーマンスの増大は、主に、一時表での変更に関して直接生成されるREDOエントリがないことに起因します。 一時表のUNDOは、その一時オブジェクトの存続期間中の読取り一貫性およびトランザクションのロールバックに役立ちます。これ以外の用途ではUNDOは不要です。そのため、REDOストリームに存続する必要がないのです。
Microsoft odbc for oracle はOSの一部ですし、これだけ再インストールはできないと思いますが。 そもそもなぜMicrosoft odbc for oracleの再構成が必要なでしょう。 Microsoft odbc for oracle はかなり古いOracleでしか使用できないんですが。。
オラクル（Oracle Corporation）は、アメリカ合衆国カリフォルニア州に本拠を置く、民間法人や公的機関を対象とするビジネス用途に特化したソフトウェア会社である。同社の名を冠した「Oracle Database」は、世界市場のトップシェアを占めるデータベース管理システムソフトである。
オラクル（Oracle Corporation）は、アメリカ合衆国カリフォルニア州に本拠を置いています。
Oracle社のマニュアルによると、ネットワーク・インターフェースのHW要件として、少なくとも２個のネットワーク・アダプターまたはNICを用意する必要があります。１つは、パブリック・ネットワーク・インタフェース用で、もう１つは、プライベート・ネットワーク・インターフェース(インターコネクト)用です。 https://docs.oracle.com/database/121/CWLIN/networks.htm#CWLIN209 したがいまして、物理的ネットワークは最低限2本もたなければならないことになります。 上記の要件を満たせば、例えば、インターコネクトをVLANで複数に分割することは可能かと思います。
はいできます。 プライベート・ネットワークについては、Oracle Clusterwareの機能により、4本までのプライベート・ネットワークを冗長化およびロードバランスできます。Grid Infrastructureの導入時に、プライベート・ネットワークを複数、指定するだけでよく、ユーザー側で特別な導入や設定をする必要がありません。 パブリック・ネットワークについては、Oracle Clusterwareが冗長化・ロードバランスに対応していないため、サード・パーティのクラスタリング・ソフトを使用してGrid Infrastructureの導入前に別途、冗長化・ロードバランス化しておく必要があります。
USER_TABLESというデータ・ディクショナリを使用して以下のように検索します。 SQL> SELECT table_name, tablespace_name FROM user_tables;
hint句に記述が無くてもオプティマイザがそのindexを利用すれば速いと判断すれば使用されますし、そう思わなければ使用されません。 ただ、統計情報が更新されていない、オプティマイザの概算にミスがある、といった理由で、速い方のindexなどが利用されないことはあります。 hint句はそういうケースのためにあるのであって、書かなければindexを使用しないわけではありません。 また、hint句を書いたからと言ってそれが使用されるとも限りません。 ※オプティマイザが無視することもあります。 このへんはoracleのリファレンスを参照してください。 http://otndnld.oracle.co.jp/document/products/oracle10g/102/doc_cd/...
曖昧抽出や曖昧検索 ということ？ http://www.accessclub.jp/sql/09.html
ロック競合を解消するには、次のタスクを実行します。 ①ロックが設定されているセッションをコミットまたはロールバックします。 ロック競合を解消するには、ロックが設定されているセッションでそのロックが解除される必要があります。セッションでロックを解除する場合は、競合相手のユーザーに連絡して、トランザクションを完了するように依頼することが基本です。 ②ロックが設定されているセッションを終了します(緊急の場合) 緊急時には、管理者が、ロックが設定されているセッションを終了できます。セッションを中断すると、現在のトランザクション内での全ての作業が失われる（ロールバックされる）ことに注意する必要があります。セッションを中断されたユーザーは、再度ログインして、中断されたセッションで行われた最後のコミット以降の作業を再実行する必要があります。セッションを中断されたユーザーは、次回SQL文を発行しようとすると、次のエラーを受信します。 ORA-03135: 接続が失われました。
CADで配置決めすると言う事じゃないですかね。
セグメント作成の遅延とは、パーティション化されていないヒープ表を作成する時に、最初の行が挿入されるまで表セグメントの作成が遅延されることを言います。実表、LOB列および索引用のセグメントは、表に最初の行を挿入するときに作成されます。 この方法の利点は、次のとおりです。 ・インストール時に何百、何千という表が作成されても、その多くはデータが移入されない可能性のあるアプリケーションに対してディスク領域を大量に節約できる。 ・アプリケーションのインストール時間が削減できる。 この機能は、DEFERRED_SEGMENT_CREATION初期化パラメータがTRUEに設定されていることで、デフォルトで有効になっています。
あまりにもやっとした質問すぎて、具体的になにをしたいのかわかりませんが、実行したSQLを取得するという話ならV$SQLとかV$SQLTEXT使えば取れます。 たとえばテーブルを元にSELECT文を自動生成するような機能はORACLEに存在していません。 SQL Developerの機能であれば、接続メニューのテーブルをワークシートにドラッグ＆ドロップでSQLを組み立てることができます。
多くのデータベースにおける主な懸念は、既存のデータベースおよびアプリケーションのユーザーに過剰な権限が付与されていることです。 過剰な権限は「権限の最小化の原則」に違反します。権限の最小化の原則を遵守することは、未使用の権限を特定する必要があります。 Oracle Database 12cでは、使用された権限を分析するためのDBMS_PRIVILEGE_CAPTUREというパッケージが提供されています。 権限分析ポリシーを使用して、アプリケーション・モジュールの実行や特定のSQL文の実行に使用されたオブジェクト権限およびシステム権限、または定義済のロールにより使用された権限を特定できます。 分析中に、使用された権限および未使用の権限に関するレポートを生成できます。 セキュリティ担当者はレポートを使用して、使用された付与権限および未使用の付与権限のリストを比較し、不要な権限を取り消すことができます。
dba_usersというデータ・ディクショナリを使用して、SQL*Plusで以下のように検索します。 ACCOUNT_STATUSが’ＯＰＥＮ’のユーザーがログインできるユーザーです。 SQL> SELECT USERNAME, ACCOUNT_STATUS FROM dba_users WHERE ACCOUNT_STATUS = 'OPEN';
追加のネットワーク接続が必要になります。 NASデバイスまたはFibre Channel over IP(iSCSI)などを使用して接続されるストレージにでは、この追加のネットワーク通信チャネルは、Oracle RAC (パブリックおよびプライベート・ネットワーク通信)で使用されている他の通信チャネルとは独立させる必要があります。 詳しくは、以下をご参照ください。 http://docs.oracle.com/cd/E57425_01/121/RACAD/admcon.htm#CJHJDEHJ
OSがLinuxであるものとしてご回答します。 ①まず、oracleユーザーで、全てのノードのdatabaseインスタンスを以下のコマンドでシャットダウンします。 $ $ORACLE_HOME/bin/srvctl stop database -db <db_name> ※<db_name>は、グローバル・データベース名やSIDと呼ばれるものです。 ②次にrootユーザーで、Clusterwareのプロセスと、全てのノードのASMインスタンスを以下のコマンドでシャットダウンします。 # /u01/app/12.1.0/grid/bin/crsctl stop cluster -all
ライセンス契約なしでは基本的にパッチやアップデートは提供されません。 ただ、Oracle Database等とは違って完全な自社製品ではなくOSSですので、 OSも個々のコンポーネントもバージョンアップできないわけではありません。 しかもOracle Linuxは5.x、6.x、7.x といったような単位のUpdate済みのインストール メディアは上記Delivery Cloudからのダウンロードはできるかと思います。 これらアップデートメディアを利用したり、ネット上で公開されているrpm等をダウン ロードして適用したりすることは、「知識があれば勝手にどうぞ、保障もサポートも しませんが」といったスタンスだと思えばよいかと。
Oracleデータベースに接続する方法は複数の接続方法が有ります。Microsoftの提供している接続ソフトでも可能ですが、廃止を表明しており将来無くなる可能性が有るので、Oracleの提供しているODP.NETをインストールして使われると良いです。実際のプログラムはODP.NETをキーワードにインターネットで調べて下さい。
Oracle Database RACのシステム要件として、共有ディスクがサポートされていることがあるのですが、そもそも仮想空間では、共有ディスクはサポートされていません。 したがって、仮想システムだけからなるAWSやAzureでは、Oracle Database RACがサポートされていないのです。
ODBC経由して、ORACLE側でORACLEのテーブルのように扱うDB LINKでSQL SERVER固有のSQLが使えるわけないでしょ。 使えるのはORACLEの構文の中のチープＳＱＬだけです。 ロックに関してはODBCの分離レベル制御以外の制御はできません。
SQLの基礎知識があればできるでしょうね。 SELECT 商品ID, 人員ID , AVG((作業終了時間-作業開始時間) * 86400) FROM テーブル名 GROUP BY 商品ID, 人員ID ; これだけですから。
listener.ora と sqlnet.oraの２つのファイルが必要です。 Linux/Unixの場合、構成ファイルの保管場所は、以下のディレクトリです。 $ORACLE_HOME/network/admin
最新のパッチを適用していないなら、まずはそれを適用するところからになると思います。 あとは、どんなSELECT文でも起きるのか、特定のSELECT文のみなのかにも依るでしょう。 SELECT * FROM DUAL; これでも起きるのか否かをまずは確認してみては如何でしょうか。SQLを変えると起こらないというのなら、SQLの問題である可能性も否定はできなくなります。SQL*Plus等で実行すると起こらず、ODBCドライバー経由でのみ起こるのなら、ODBCドライバーにバグがある可能性もありますが、パッチ未適用ならまずはパッチですね。 問題の処理を実行すると、ORA-*****のエラーが返ってきて、接続自体は切れないというのなら、SELECT文が間違っているだけだろうとは思います。
サポートされています。 具体的にはAmazon RDS for Oracleを利用して、Oracle DBを管理・運用すると、AWS仮想サーバー上でもOracle ライセンスの使用が可能になるものです。 「ライセンス込み」と「ライセンスを自分で用意（BYOL）」の 2 つがあります。 「ライセンス込み」サービスモデルでは、Oracle のライセンスを別途購入する必要はありません。Oracle Database ソフトウェアのライセンスは、AWS によって付与されます。「ライセンス込み」料金は 1 時間当たり 0.04 USD からとなっており、ソフトウェア、ハードウェアリソース、および Amazon RDS 管理機能が含まれています。 あるいは、既に Oracle Database のライセンスを持っている場合は、「BYOL」モデルを使用して Oracle データベースを Amazon RDS 上で運用できます。料金は、1 時間当たり 0.025 USD からとなっています。「BYOL」モデルが適しているのは、Oracle データベースライセンスを既に持っている場合か、新しいライセンスを直接 Oracle から購入することを希望する場合です。 https://aws.amazon.com/jp/rds/oracle/ ただし、Oracle Database RAC(Real Application Clusters)のサポートはありませんので、ご注意ください。 http://www.oracle.com/technetwork/jp/topics/cloud/faq-088380-ja.htm...
本番環境では、Private Networkは、interconnect用とASMストレージ・アクセス用に2本に分けたほうが良いです。データベースへの負荷が高い場合、1本だけだと、interconnectの通信が困難になる場合があります。 ファイバー・チャネルを使用している時には、Private Networkが、interconnect用とASMストレージ・アクセス用に自然と2本に分かれるので問題ないのですが、NASやiSCSIを使用しているときは、意識的にPrivateを2本に分けることをお勧めします、
「OracleServiceXEがシステムに見つかりました。」とあるので、もうインストール済みとかではありませんか？
毎年、行われていますよ。 今年も、2016年1月22日 ～ 2016年5月31日の期間、キャンペーン実施中です。詳しくはこちら↓をご覧ください。 http://www.oracle.com/jp/education/campaign-1898205-ja.html#2016012...
すぐにわかります。 Oracle1Z0-065-JPN Bronze DBA 12cのほうも、SQL基礎と同じく、試験終了後、30分から１時間で、ネット(CertView)で得点を確認することができます。
① where A.CD = B.CD and B.CD = C.CD and B.CD2 = C.CD2 and a.cd = '111111' ↑ ここが b.cd = '111111' / c.cd = '111111' かどうかという話ですよね。 結果については変わりませんが・・・。 やはりテーブルが持っている論理的な意味によって変わってくるんでは 無いでしょうか。きれいな書き方というのは。 この場合、Aが先頭に来ているので、Aが主体となるデータ、 B/Cが補足的なデータだとすると、Aを指定するのがきれいな 書き方かなと思います。 ②も同様ですね。
できません。 同じマシン上にデータベース・インスタンスを複数置くことはできますが、EM Database Expressで監視する場合は、各データベース・インスタンスのポート番号をそれぞれ異なるポート番号に設定しなければなりません。 EM Database Expressでは、以下のようにhostname(or IPアドレス)とポート番号を指定してログインし、同時には１つのデータベース・インスタンスしか監視できません。 http://hostname.domain:5500/em
簡単な逃げ方は、 SELECT 'INSERT INTO DISTRICT VALUES ('''||districtcode||''','''||districtname||''');' ↓ SELECT 'INSERT INTO DISTRICT VALUES ('''||TRIM(districtcode)||''','''||TRIM(districtname)||''');' こうすれば解決します。あとはTABLEの型設定等の問題でもあるでしょうね。
Oracle Database 12cで事前定義されているロールは、「CONNECT」、「DBA」、「RESOURCE」、「SCHEDULER_ADMIN」、「SELECT_CATALOG_ROLE」の５種類です。含まる権限は以下のとおりです。 ①「CONNECT」：CREATE SESSION ②「DBA」：ほどんどのシステム権限および他のいつかのロールが含まれています。管理者以外には付与しないでください。 ③「RESOURCE」：CREATE CLUSTER, CREATE INDEXTYPE, CREATE OPERATOR, CREATE PROCEDURE, CREATE SEQUENCE, CREATE TABLE, CREATE TRIGGER, CREATE TYPE ④「SCHEDULER_ADMIN」: CREATE ANY JOB, CREATE EXTERNAL JOB, CREATE JOB, EXECUTE ANY CLASS, EXECUTE ANY PROGRAM, MANAGE SCHEDULER ⑤「SELECT_CATALOG_ROLE」：データ・ディクショナリ・オブジェクトに対するSELECT権限
なかなか回答がつかないので、回答します。 「Microsoft ODBC for Oracle」は６４ビット版は提供されていません。 また、前の質問でも回答しましたが、Oracleクライアントは64bit版をインストールしたとおっしゃってましたが、もう一度確認された方が良いように感じます。 前回の32bitのODBCでは、ドライバが表示されて、今回の64bitのODBCで表示されないというのであれば、インストールしたOracleクライアントが32bit版であるような気がするのです。
あと１つ、1Z0-065-JPN Bronze DBA 12cに合格しますと、晴れてブロンズになれますよ。 ・試験時間: 120分 ・出題数: 73問 ・合格ライン: 70% ・出題形式: 選択問題 ・試験料(税抜き): 26,600 円 ・試験申込み:公認テス トセンターでの受験となりますので、ピアソンVUE社のWebサイトでお申込みください。 http://www.pearsonvue.com/japan/IT/oracle_index.html ・受験チケット：オラクル認定資格試験の受験料のお支払いには、受験チケットもご利用になれます。ただし、試験会場で直接お支払いもできます。 http://www.oracle.com/jp/education/certification/evoucher-172585-ja... ※WebのSQL基礎より若干難しくなりますが、試験問題の内容は、毎回、あまり変わり映えしませんので、白本のテキストをきちんと読んでさえいれば受かります。巻末の試験問題の内容は、結構、同じ問題がでますので、丸暗記しておいてください。黒本より白本のほうがお勧めです。 がんばってください！！
オラクルマスターの参考書は残念ながら種類が少なく、通称（カバー色から）「黒本」「白本」と呼ばれる2つの参考書が殆どの売上をあげています。 白本は後ろに2回分の本番を想定した問題があるのでお勧めです。あと、白本はそのまま試験と同じ内容が出ますので丸暗記が通用します。解説もわかりやすいので勉強するなら黒本よりも白本が良いと思いますよ。
Public network側に全てアサインしてください。Public networkは、クライアント・アクセスのためにあるため、各nodeのVIPやSCAN用のVIP等はPublic networkへのアサインとなります。 これに対して、Private networkは、各node間のInterconnect用と、ASMストレージ・アクセス用に使用されます。
ペナルティとしては、Enterprise Editionライセンス料金の請求や、違反していた期間に対するテクニカル・サポート料金が請求される場合があります。その他、テクニカル・サポート・サービスおよびソフトウェアの更新の停止、ライセンス契約および関連するライセンスの終了。 オラクル・パートナーの資格およびサブライセンス権の取消などがあります。 以下はオラクル社のコンプライアンス・ポリシーからの抜粋です。 http://www.oracle.com/jp/corporate/license-management-services/lms-... ライセンス違反は、次のいずれかの方法により解消することができます。 コンプライアンス違反を解消するのに十分なライセンスを購入する。この場合、ライセンスなく使用していた期間に対するテクニカル・サポート料金が請求される場合があります。 オラクルのソフトウェアを削除するかまたはハードウェア環境を再構成した場合、ライセンスなく使用していた期間をカバーするため、期間ライセンスおよび当該期間に対応するサポートを購入することができます。 オラクルは、公正かつ正確な方法でライセンス上のコンプライアンス違反を解決する努力をしています。ビジネス上の解決が得られない場合、当該問題の解決はオラクルの法務部門を通じ関係当局に委ねられます。オラクルが取りうる救済措置には、以下のものが含まれますが、これらに限られません。 ライセンス違反を解消するために必要な追加ソフトウェア・ライセンスに対する全ての料金の請求 ライセンスなくソフトウェアを使用していた期間のテクニカル・サポート料金の請求 テクニカル・サポート・サービスおよびソフトウェアの更新（該当する場合）の停止 ライセンス契約および関連するライセンスの終了 オラクル・パートナーの資格およびサブライセンス権の取消
DBA_TABLESと言うデータ・デクショナリ・ビューを使って以下のように検索します。 SQL> SELECT table_name FROM dba_tables;
＞Select count(1) from aaa; この1行を下記にそっくり置き換えてください。 -- ▼ここから ------------- COLUMN file_name NEW_VALUE file_name_text NOPRINT -- ↓対象チェック・ファイル名設定 SELECT CASE C WHEN 1 THEN 'C:\書き出し先.TXT' END file_name FROM (SELECT COUNT(*) "C" FROM aaa WHERE ROWNUM <= 1); -- ↓空ファイル出力（0件の場合は何も出力しない） SPOOL &file_name_text. SPOOL OFF -- ▲ここまで ------------- これはSQL*Plus限定です。SQL*Plusのコマンドを使うため、他の手段では動きません。
Oracle Database 12c以降では、一時表のトランザクションにより生成されるUNDOを、一時表領域内のUNDOストリームに直接格納して、UNDOがREDOストリームに記録されないようにすることが可能になりました。このモードは一時UNDOと呼ばれます。 一時UNDOを有効にすることにより、次のような利点があります。 ・UNDO表領域に格納されるUNDOの量が削減されます。 ・REDOログのサイズが削減されます。 ・Oracle Active Data Guardオプションが指定されたフィジカル・スタンバイ・データベースでの一時表におけるDML操作が可能になります。 一時UNDOを有効化する方法は、初期化パラメータ TEMP_UNDO_ENABLEDをtrueにします。 ・セッションに対して一時UNDOを有効にする場合。 SQL> ALTER session SET temp_undo_enalbed = true; ・データベースインスタンスに対して一時UNDOを有効にする場合。 SQL> ALTER system SET temp_undo_enabled = true;
【条件】に書かれた内容をそのままwhere句にすれば良いような気がします。 where 【テーブル1】.6=【テーブル2】.1 and 【テーブル1】.4=【テーブル3】.3 and 【テーブル3】.1=03 and 【テーブル1】.1=【テーブル4】.1 and 【テーブル1】.6=【テーブル5】.1 and 【テーブル1】.14=【テーブル5】.7 and (( 【テーブル6】の3がNULL以外 and 【テーブル1】.8=【テーブル2】.3 and 【テーブル1】.7=【テーブル6】.1 ) or ( ( 【テーブル6】の3がNULL or 【テーブル1】.8<>【テーブル2】.3 ) and 【テーブル1】.7=【テーブル6】.1 )) 試してみて下さい。
PSRが取れるということは、ちゃんとサポート契約があるということだと思います。 PSRの書類の中に、適用手順があるはずなので、それを読むことで適用できると思います。PSRは、基本の手順としては、DBを停止して、プログラムに対して行う作業と、DBを起動してから、DBに適用する作業があります。 もしかしたら、英語の書類しかないかもしれません。その場合は、サポートに連絡して、手順を教えてもらうのが良いと思います。
Oracle Databaseは仮想サーバー上で物理的には動くのですが、ライセンス上の問題があり、動かすことはしてはだめです。 仮想区画はどの物理筐体上で稼動しているか等判別するのは困難かつ、VMotion等で仮想区画が別筐体に移動するような環境においては、移動する可能性のある全ての筐体をベースに必要ライセンス数を計算する必要があるというのが、オラクル社のライセンスのポリシーで、仮想サーバーは、事実上、サポートされていません。
Oracle VM VirtualBox 4.3.12-93733-win 自体はVirturl Boxの公式サイト（https://www.virtualbox.org/）から、 Downloads → VirtualBox older builds → VirtualBox 4.3 → VirtualBox 4.3 older builds のようにリンクをたどっていけば見つかると思います。 が、問題はVirtual Boxのバージョンではないような。 「IPアドレスもコピーして使った」とありますが、ホストマシンと仮想マシンのネットワークアドレスが合ってなくて直接の疎通ができない、とかないですかね。 このあたりはネットワークの知識もある程度必要になるので、VMにログインできない、といったようなキーワードで事例やQAを探したりしていろいろ試してみてはいかがかと。
どのようにアンインストールしたのかは不明ですが、レジストリに問題があるようですので10gのマニュアルにある、レジストリの削除を試してみてはいかがでしょう。 http://otndnld.oracle.co.jp/document/products/oracle10g/102/windows... 「すべてのOracleレジストリ・キーの削除」の項
Oracle製品のバージョンです。 Oracle12cの方が新しいので、そちらで良いかと思います。
DBA_TABLESというデータ・ディクショナリ・ビューを使用して、以下のように検索します。 SQL> SELECT table_name FROM dba_tables;
ちゃんとエラーメッセージを読んでいますか？ このエラーはDATE型の列ではなく、CHAR型の列で起きていますよ。DATE型の列をいくら調整しても無駄でしょう。DATE型の列に起因するエラーでは無いんですから。 Windows上で作られたデータを、UNIX等のOS上に置いて、そこでSQL*Loaderを実行しているのではありませんか？ UNIXのシステム標準改行コードがLFなのに、Windows標準の改行コードであるCR+LFのデータを入れようとしたら、最後の値は、 '99999999' || CHR(13) となってしまって、サイズオーバーになります。おそらくこれが原因ではありませんか？ 試しに、TANTOU_NAME列をVARCHAR2(9)に変更して取り込んでみれば良いんですよ。エラー無く取り込まれ、TANTOU_NAME列の値の末尾には漏れなくCR（CHR(13)）が付いているでしょう。 データの改行コードを変更するか、あるいは制御ファイルの一部を書き換える（下記）などの対策が考えられます。 TANTOU_NAME ) ↓ TANTOU_NAME CHAR(9) "RTRIM(:TANTOU_NAME, CHR(13))")
＞Oracle でカラムの論理名ではなく「コメント」に追加する方法が知りたいです。 質問の意味が分からないのですが、「コメント」に何を追加されたいのでしょうか。また、私が普段よく使う方法でコメントは以下の様につけているのでご参考までに実行例を記載します。 ★行コメントでコメントを書く例 SQL> SQL> CREATE TABLE "SCOTT"."TEST1" 2 ("DEPTNO" NUMBER(2,0), ---- 社員番号 3 "DNAME" VARCHAR2(14), ---- 社員名 4 "LOC" VARCHAR2(13)) ---- 場所; 表が作成されました。 SQL> ★ブロックコメントでコメントを書く例 SQL> SQL> /* ブロックコメント SQL> "DEPTNO" 社員番号 SQL> "DNAME" 社員名 SQL> "LOC" 場所 SQL> */ SQL> CREATE TABLE "SCOTT"."TEST3" 2 ("DEPTNO" NUMBER(2,0), 3 "DNAME" VARCHAR2(14), 4 "LOC" VARCHAR2(13)); 表が作成されました。 SQL> ★そのほかの方法 SQL> SQL> comment on table scott.TEST3 is '明けましておめでとう'; コメントが作成されました。 SQL> SQL> SQL> select * from USER_TAB_COMMENTS where TABLE_NAME = 'TEST3'; TEST3 TABLE 明けましておめでとう SQL>
セグメントには次のタイプがあります。 ①表およびクラスタ・セグメント ②索引セグメント ③UNDOセグメント ④一時セグメント ①表およびクラスタ・セグメント： クラスタ化されていない表には、それぞれデータ・セグメントが１つあります。表の全てのデータがそのデータ・セグメントのエクステントに格納されます。 パーティション表の場合は、各パーティションにデータ・セグメントが１つあります。各クラスタにデータ・セグメントが１つあります。クラスタ内の全ての表のデータが、クラスタのデータ・セグメントに格納されます。 ②索引セグメント： 各索引には、全てのデータを格納する索引セグメントが１つあります。パーティション化された索引の場合は、各パーティションに索引セグメントが含まれます。 ③UNDOセグメント： Oracle Databaseでは、データベースに対して行われた変更を元に戻すための情報が保持されます。この情報は、トランザクションで実行されたアクションのレコードで構成され、まとめてUNDOと呼ばれます。UNDOは、UNDO表領域内のUNDOセグメントに格納されます。 ④一時セグメント： 一時セグメントは、SQL文の実行を完了するために一時的なデータベース領域が必要になった場合に。Oracle Databaseサーバーによって作成されます。一時セグメント内のエクステントは、SQL文の実行が終了すると、将来使用できるようシステムに返されます。
SQL SERVERには厳密なTABLESPACEというものは存在していません。 その概念に該当するものはファイルグループとなります。 情報取得はこのへんが参考になるでしょう。 https://social.msdn.microsoft.com/Forums/sqlserver/ja-JP/8030626b-8...
データマイニングについて、ゼロから勉強しなおしましょう。 何と何を購入するか、その理由が明確あるいは仮説化できるなら、データマイニングとは言いません。 おそらくバスケット分析をしたいのでしょうけど、これは今まで未解析だった想定外の相関関係を発見するから意味があり、だからこそデータ”マイニング（鉱山堀り）”と言うのです。
UNDO情報は、次の３つのカテゴリに分類されます。 ①コミットされていないUNDO情報(アクティブ) 現在実行しているトランザクションをサポートします。ユーザーがロールバックを実行する場合またはトランザクションで障害が発生した場合に必要になります。コミットされていないUNDO情報は上書きされません。 ②コミットされたUNDO情報(期限内) 実行中のトランザクションをサポートするためには必要なくなりますが、UNDO保存期間を満たすためには継続して必要です。期限切れになったいないUNDO情報とも呼ばれます。コミットされたUNDO情報は、領域不足が原因でアクティブなトランザクションで障害が発生しない限り、できるだけ保存されます。 ③期限切れUNDO情報(期限切れ) 実行中のトランザクションをサポートするためには必要ありません。アクティブなトランザクションで領域が必要になると、期限切れUNDO情報は上書きされます。
＞EDSACってどんなコンピュータなんですか？(´･_･`)詳しく教えてください。 すごいやつ
DBのアクティビティやワークロードをモニターすることはできるかと思いますが、 12cからはDBConsoleから機能が大幅に削減されたEM Expressに変わっていて、 通知などの機能はなかったと思います。 おそらくEM Cloud Controlが必要かと思います。 EM Expressによる監視は以下を。 http://docs.oracle.com/cd/E57425_01/121/ADMQS/toc.htm EM Cloud Controlによる監視は以下を。 http://docs.oracle.com/cd/E26854_01/index.htm
どのような排他制御を、行いたいのでしょうか？ 多量のデータを操作するため、排他制御によるリソース圧迫やオーバヘッドを抑止したいとか、一定の区間で他のユーザからの操作を制限したい、など理由があると思います。 その説明がなければ、適切なアドバイスはできません。
クラスタとは、１つ以上の列を共有する１つ以上の表のデータで構成されるスキーマ・オブジェクトです。Oracleデータベースでは、同一のクラスター・キーを共有する全ての表の全ての行が、まとめて格納されます。
Enterprise Manager Database Express 12cからでもできますが、SQL*Plusで表示する方法をご紹介します。 データファイル情報は、DBA_DATA_FILEと言う表に格納されていて、データベース・ファイル名と表領域名は、それぞれ、file_name, tablespace_nameで照会できます。以下のSQL文で参照できます。 SQL> SELECT file_name, tablespace_name FROM dba_data_file;
初期化パラメータ CONTROL_FILESに指定されています。以下のようにSQL*Plusから確認できます。 SQL>show parameter control_files
多分あなたのレベルでは他の方が言われている一連のは使えないと思うんですよね。 あなたの言われる上のレベルってなんですか？ やりたい事ってなんですか？ 一言でデータベースといってもいろいろありますし向き不向きがあります。 そもそもAccessで不都合はありますか？ないですか？ 具体的に質問されることを強くおすすめします。
既存のログ・グループにメンバーを追加することによって、REDOログを多重化できます。REDOログ・グループにメンバーを追加するには、Enterprise Manager Database Expressで次の手順を実行します（データベースをオープン状態のままで実行できます）。 ①「記憶域」→「REDOログ・グループ」を選択します。 ②グループを選択し、「メンバーの追加」をクリックします。 「メンバーの追加」ページが表示されます。 ③ファイルシステムの場合、ファイル名とファイル・ディレクトリを入力し、「OK」をクリックします。 多重化する既存グループ全てに対して、①～③の手順を繰り返します。 ※REDOログ・メンバーをグループに追加すると、そのメンバーのステータスは、INVALIDとマークされます(V$LOGFILEビューで確認)。これは、グループの新しいメンバーはまだ書込みがおこなわれていないためです。ログ・スイッチが発生して、新しいメンバーを含むグループがCURRENTになると、そのメンバーのステータスはNULLに変わります。
残念ながら、デフォルトでは、UNDO領域の不足のためアクティブなトランザクションで障害が発生するような場合には、コミットされたトランザクションのUNDO情報は期限切れになっていない場合(UNDO_RETENTIONで指定された秒数以内)でも上書きされます。 この動作は、保存を保証することで変更できます。保存を保証すると、UNDOの領域不足でトランザクションで障害が発生した場合でも、その保存設定は必ず適用されます。 RETENTION GUARANTEEは、初期化パラメータではなく表領域属性です。この属性は、SQL*Plusを使用して変更できます。保存が保証されるようにUNDO表領域を変更する構文は、 SQL> ALTER TABLESPACE undotbs1 RETENTION GUARANTEE; 保証済みのUNDO表領域を通常の設定に戻すには、次のSQLを使用します。 SQL> ALTER TABLESPACE undotbs1 RETENTION ＮＯGUARANTEE;
$ORACLE_HOME/dbsディレクトリに初期化パラメータ・ファイルが保管されています。 初期化パラメータ・ファイルには、次の２つのタイプがあります。 ①サーバー・パラメータ・ファイル(SPFILE): このタイプの初期化パラメータ・ファイルが優先されます。バイナリー・ファイルで手動では編集できません。Oracleインスタンスが実行されているサーバーに存在し、停止してから起動するまでの間も存続します。デフォルトのファイル名は、spfile<SID>.oraです。※SIDはグローバル・データベース名 ②テキスト初期化パラメータ・ファイル： このタイプの初期化パラメータ・ファイルに対して、データベース・サーバーによる読取りは可能ですが、書込みはできません。初期化パラメータの設定は、テキスト・エディタを使用して手動で設定および変更する必要があります。デフォルトのファイル名は、init<SID>.oraです。起動時にSPFILEが検出されない場合に、この初期化パラメータ・ファイルが使用されます。 なお、インスタンスが起動すると、以下の$ORACLE_HOME/dbs内の初期化パラメータ・ファイルが検索されます。 １．spfile<SID>.oraを検索します。 ２．spfile<SID>.oraが検出できない場合は、spfile.oraを検索します。 ３．spfile.oraが検出されない場合は、init<SID>.oraを検索します。
バックアップからデータベースをリストアせずに、データの過去の状態の表示を行うことをサポートする機能の集まりです。フラッシュバックには、大きく分けて、①エラーの分析と②エラーのリカバリの以下機能があります。 ①ユーザーが誤った変更をコミットした場合は、次の機能を使用してエラーを分析できます。 ・フラッシュバック問合せ：コミットされたデータを過去のある時点の状態で表示します。AS OF句を指定してSELECTコマンドを使用すると、タイムスタンプまたはシステム変更番号(SCN)によって過去の時間が参照されます。 ・フラッシュバック・バージョン問合せ：特定の時間間隔のコミットされた履歴データを表示します。既存の索引でのパフォーマンス上の理由から、SELECTコマンドのVERSIONS BETWEEN句を使用します。 ・フラッシュバック・トランザクション問合せ：トランザクション・レベルで行われた全てのデータベースの変更を表示します。 ②ユーザー・エラーのリカバリに使用可能な解決方法 ・フラッシュバック・トランザクション・バックアウト：特定のトランザクションおよび依存トランザクションをロールバックします。 ・フラッシュバック表：他のデータベース・オブジェクトに影響を与えずに、１つ以上の表を過去の時点の内容に戻します。 ・フラッシュバック・ドロップ：削除した表を、依存オブジェクトとともに、ゴミ箱からデータベースに戻すことによって、表の削除の結果を元に戻します。 ・フラッシュバック・データベース：データベースを、過去のある時点またはSCNまで戻します。
ユーザーAが持つオブジェクト群の設定を詳細にデータディクショナリーから引っ張り出して、CREATE文を全部生成し、CREATEして、データをINSERTしてやるという方法が考えられますね。 オブジェクトの設定は、例えばテーブルならUSER_TABLES，USER_TAB_COLUMNS，USER_TAB_COMMENTS，USER_COL_COMMENTSなどから引っ張り出せます。テーブルの初期サイズを現状のデータ量に合わせたいなら、USER_SEGMENTS.BYTESの値を使うと良いでしょう。 USER_OBJECTSでそのユーザーが持つ全てのオブジェクトを参照できますから、それらをUSER_TABLES等を使って漏らさずSQL化してしまえば良いわけです。VIEWやPROCEDURE等は、CREATE時のSQLの大部分がデータディクショナリーから拾い出せます。SELECT文でCREATE用のSQLを作るだけのこととも言えますね。 エクスポート→インポートの方が圧倒的に楽ですが、データディクショナリーからCREATE文を作れるようになれば、CREATE用のSQLファイルを管理しなくて済むとも言えますね。 もちろん、これら全てをバッチ化して全自動でやらせることも可能です。その労力があるなら、エクスポート等で済ませて、他のことに時間を割いた方が良いとは思いますけどね。 データベースの丸ごとコピーなら方法はあります（極論はOSごとイメージバックアップ→リストアでもできる）が、ユーザー単位でオブジェクト一括に限定するとなると、他には手は無いと思いますよ。
WITH jisseki AS (-- 商品コード・日付(int)・販売数・残在庫のテーブル。 -- ↓実際の環境ではこのWITH jisseki AS ( )のカッコ内を【SELECT * FROM jisseki】だけに置き換えて実行する SELECT 49012345 shohincd, 20150801 yyyymmdd, 10 sales, 310 stock FROM DUAL UNION ALL SELECT 49012345, 20150802, 12, 298 FROM DUAL UNION ALL SELECT 49012345, 20150803, 15, 283 FROM DUAL UNION ALL SELECT 49012345, 20150804, 19, 264 FROM DUAL UNION ALL SELECT 49012345, 20150808, 10, 254 FROM DUAL UNION ALL SELECT 45987654, 20150805, 2, 150 FROM DUAL -- ↑実際の環境ではこのWITH jisseki AS ( )のカッコ内を【SELECT * FROM jisseki】だけに置き換えて実行する ) , checkdate AS (--商品コードと過去の日付を指定するテーブル。 SELECT 49012345 shohincd, 20150805 yyyymmdd FROM DUAL UNION ALL SELECT 45987654, 20150805 FROM DUAL ) SELECT BASE.shohincd, BASE.yyyymmdd, jisseki.stock FROM (-- ↓実績データの日付のうち、指定日に一致または最も近い過去の日付を拾い出す SELECT checkdate.shohincd, checkdate.yyyymmdd, MAX(jisseki.yyyymmdd) J_YMD FROM checkdate LEFT OUTER JOIN jisseki ON checkdate.shohincd = jisseki.shohincd AND jisseki.yyyymmdd <= checkdate.yyyymmdd GROUP BY checkdate.shohincd, checkdate.yyyymmdd ) BASE -- ↑実績データの日付のうち、指定日に一致または最も近い過去の日付を拾い出す -- ↓拾い出した結果と一致する実績データを取得 LEFT OUTER JOIN jisseki ON BASE.shohincd = jisseki.shohincd AND BASE.J_YMD = jisseki.yyyymmdd ; 上記はどのOracleデータベース（要はテーブル無しの環境）で実行しても、目的の答えが出ます。実際にテーブルがある環境なら、コメントにあるように、最初のWITH jisseki AS ( ) のカッコ内をそっくり置き換えてください。それだけで動きます。
Enterprise Manager(EM) Cloud Controlにsysdba権限でログインして、 ①「パフォーマンス」メニューの「メモリ・アドバイザ」を選択します。 ②「自動メモリー管理」の「有効化」をクリックします。 ③「自動メモリー管理有効化」ページが表示されます。「自動メモリー管理の合計メモリー・サイズ」及び「最大メモリー・サイズ」の値を設定します。 ※「最大メモリー・サイズ」を変更する場合は、データベース・インスタンスを再起動する必要があります。 ④「OK」をクリックします。
コンピュータのUIの50年くらいの歴史、ということでいいのでしょうか。 ・スイッチ ・パンチカード・紙テープ・プリンタ ・ディスプレイと文字とキーボード (CUI) ・アイコンとカーソールとマウス (GUI) ・映像・音声 (マルチメディア) ・タッチパネル (UX) 上から下に、なぜ変化の必要があったのでしょうか。 上記はいずれも、視覚・聴覚・触覚をつかったUIですね。ほかの感覚は、何が使えそうですか。 あとでインターネットで質問していたことがバレても大丈夫なくらいのレポートですよね？
参考。 http://www.accessclub.jp/bbs2/0054/beginter17848.html Accessで「隠しオブジェクト」「システムオブジェクト」を表示したい http://pasofaq.jp/office/access/access2007hidden.htm
大変、大まかですが、Oracle DBのチューニングには、パフォーマンス計画、インスタンス・チューニングおよびSQLチューニングという３つの側面があります。 パフォーマンス計画は、ハードウェア、ソフトフェア、ＯＳ，ネットワークなどの環境を確立するプロセスです。 インスタンス・チューニングでは、Oracle DBのパフォーマンスを向上させるために、Oracle DBパラメータおよびＯＳパラメータを実際に調整します。 SQLチューニングでは、アプリケーションによって効率的にSQL文が発行されるようにします。SQLチューニングは、個々の文に対してのみでなく、アプリケーション全体に対して実行されます。アプリケーション・レベルで、アプリケーションの様々な部分の作業が相互に利用され、不要にリソースの競合が発生しないようにする必要があります。
AWR設定には、「保存期間」、「収集間隔」、「収集レベル」があります。これらの設定のいずれかを低くすると、AWRに依存しているコンポーネント（アドバイザなど）の機能に影響を及ぼします。逆に高く設定すると、アドバイザによる推奨事項の質は向上しますが、スナップショットの格納に必要な領域が増大し、スナップショット情報収集時にパフォーマンスが低下します。 保存期間： ・デフォルトは８日間です。 ・ストレージの必要性を考慮の上、日単位で設定します。 ・Enterprise Manager Cloud Controlから設定します(「パフォーマンス」→「AWR」→「ＡＷＲ管理」→「編集」) 収集間隔： ・デフォルトは６０分です ・ストレージの必要性及びパフォーマンスの影響を考慮してリストから選択します。 ・Enterprise Manager Cloud Controlから設定します(「パフォーマンス」→「AWR」→「ＡＷＲ管理」→「編集」) 収集レベル： 以下の３つのレベルがあります。通常は、デフォルトのTYPICALで使用します。新しいアプリケーションを調整する場合は、収集レベルをALLに設定します。 BASIC: AWR統計およびメトリックの計算が無効になります。全てのアドバイザおよびサーバー生成アラートと同様に、自動オプティマイザ統計タスクも無効となります。 TYPICAL: データベースの自動管理に必要な主要統計が収集されます。これらの統計には、Oracle Databaseの動作の監視に通常必要とされる情報が示されます。 ALL: 可能なかぎり全ての統計が取得されます。この取得レベルでは、定期的ＯＳ統計および計画実行統計が追加されます。これらの統計は、ほとんどの場合に必要なく、最高のパフォーマンスを得るには無効にする必要があります。ただし、特定の診断テストにこれらの統計が必要になる場合もあります。 収集レベルの設定方法は、初期化パラメータ STATISTICS_LEVEL をSQL*Plusで変更します。 (例） SQL> ALTER SYSTEM SET STATISTICS_LEVEL=ALL; SQL> ALTER SYSTEM SET STATISTICS_LEVEL=TYPICAL;
SYSTEM, SYSAUX, TEMP, UNDOTBS1, USERSの5種類です、オプションでEXAMPLEが含まれることがあります。 SYETEM: SYSTEM表領域は、Oracleサーバーによってデータベースの管理に使用されます。 SYSAUX: SYSTEM表領域の補助表領域です。 TEMP: 一時表領域は、(大規模なソート、索引の作成などの)一時セグメントを作成する必要があるSQL文を実行する場合に使用されます。 UNDOTBS1: データベース・サーバーによってUNDO情報の格納に使用されるUNDO表領域です。 USERS: この表領域は、ユーザー・オブジェクトおよびデータの格納に使用されます。 EXAMPLE: データベースの作成時にインストール可能なサンプル・スキーマが含まれています。 現在の表領域のリストを見たい場合は、Enterprise Manager Database Express 12cから、「記憶域」→「表領域」を選択すると確認できます。 あるいは、SQL*Plusから、以下のSQL文を実行して確認できます。 SQL>SELECT tablespace_name FROM dba_tablespaces;
初期化パラメータの”processes”で、データベースに同時に接続できるOSユーザー・プロセスの最大数を管理しています。値の範囲は6～OS依存値。デフォルト値も、動的であり、ＣＰＵ数に依存します。 ①現在の同時に接続できるOSユーザー・プロセスの最大数を調べる方法。 SQL> SELECT name, value, from V$PARAMETER where name = 'processes'; ②変更する方法 ※この例では同時接続OSユーザーの最大値を350に変更 SQL> ALTER SYSTEM SET processes=350 SCOPE=SPFILE; SQL> shutdown immediate SQL> startup
現行バージョンにおける仕様ですが、将来のバージョンでも維持されるとは限りません。 また、代入元の変数の値とDB上のデータが異なってしまうというのは、 後のメンテナンス性を損なうように思います。 ですので、Oracleの仕様で四捨五入されることを前提とするのではなく、 明示的に関数で丸めてから代入するべきかと思います。
サンプルを求めていて「サンプルぽいコード」があって、何が不足なのでしょうか。 PL/SQLでメール送信するにはUTL_SMTPパッケージを使えばいいはずです。 単純なサンプルもありますが、これでも不足でしょうか。 http://docs.oracle.com/cd/E57425_01/121/ARPLS/u_smtp.htm#CHDHHBJD
少なくともコピーを２つ、配置するため、追加でそれぞれ個別のディスクを２つ用意します(ディスク・コントローラも別々にする)。 その上で、次のように手動で行います。 ①SQL*Plusから、初期化パラメータ control_filesの値を以下のように変更します。 SQL>ALTER SYSTEM SET control_files = '/u01/app/oracle/oradata/orcl/control01.ctl' , '/u02/app/oracle/oradata/orcl/control02.ctl' , '/u03/app/oracle/oradata/orcl/control03.ctl' SCOPE=SPFILE; ②データベース・インスタンスを停止します。 SQL>shutdown immediate ③新しくファイルを配置する場所に既存の制御ファイルをコピーします。 $cp /u01/app/oracle/oradata/orcl/control01.ctl /u02/app/oracle/oradata/orcl/control02.ctl $cp /u01/app/oracle/oradata/orcl/control01.ctl /u03/app/oracle/oradata/orcl/control03.ctl ④データベースをオープンします。 SQL> startup
そんな話ではありません。 ISOというのはディスク一枚分のデータの「設計図」であり、ただの「入れ物」でしかありません。 ですから「MP4をISO保存」したとすると、「ISO」という「フォルダ」に「MP4」が格納されているだけで、DVDにISOを焼くとMP4が焼かれるだけ、単にMP4を直接DVDに焼いた時と何も変わりません。 その昔、１０年以上前ですが、DVD-Video形式のデータを焼くとき、認識されるのに必要なファイルシステム、論理フォーマットをUDFで焼くにはISOにしてからでないと焼けない、という時代がありました。 そのころのイメージから「ISO＝DVD-Video」という誤解、あるいは「ISOにすればDVD-Videoになる」という「誤解」が未だに根強く残っていますが、あくまでも誤解です。 例えば現在ではWindowsOSの標準書き込み機能でも、UDFで焼くことが可能なので、DVD-Video形式のデータ、VideoTSフォルダを直接焼いてDVDプレイヤーで再生出来るDVDの作成が可能です。
私なら・・・ 品目コード | 工程種別 | 順序番号 | 工程コード | ワークセンター 123456789 | 1 | 1 | 00001 | チャッカー 123456789 | 2 | 1 | 00001 | バーフィーダー 123456789 | 0 | 2 | 00011 | 研磨 123456789 | 0 | 3 | 00031 | 完成 として、工程種別マスタ 工程種別コード | 工程種別名称 | 最少数量 0 | 共通 | 1 1 | 手作業 | 1 2 | 機械作業 | 1000 を増やすと思います。 そうすることで研磨と完成は1レコードずつで済みます。 メンテナンスはDBを直接編集すれば良いのではないでしょうか。またはエクセルVBAとか。 1人しか使わないシステムにWEBアプリを開発するお金や時間があるならPHPでしょうか。 但し、メンテナンスより前に、このデータを活用してる現行システムの改修を先に考えないと駄目なのではないでしょうか。
一つのデータベースに接続していれば、そのデータベース内の他のスキーマにテーブル等のオブジェクトを作るのは、権限さえあれば難なくできるのですから、同一データベースならCONNECTし直す必要はありません。 現在接続中のユーザー／スキーマは、 SYS_CONTEXT('USERENV', 'SESSION_USER') で簡単に取得できますから、現在接続中のユーザー／スキーマ名を上記で取得し、それに対して、CASE文等でCREATE先のスキーマ名などをコントロールして動的SQLでCREATEし、再接続せずに一つのデータベース内への構築を全部済ませれば済むことです。 そうすれば、データベースが3つなら、3回接続するだけですよね。その3回も、一つのSQLファイルにまとめておいて、バッチで3行書けば終わりますよ。 権限が無いならないで、SYS_CONTEXTで現在接続中のユーザー／スキーマ名を取得し、それに見合うCREATE文を動的に流すSQLを書いて、20個の接続先があるなら20回SQL*Plusを起動するなどすれば済むことでしょう。 あなたがいつまでもSQLファイル内での再CONNECTに執着するのなら、永遠に今のままかも知れませんね。どうも、そんな気がします。
午前0時に完全停止しているシステムであるなら、DROP→CREATEでも問題ありませんが、24時間稼働のシステムではできませんね。DROPすると、再CREATEされるまでの間にアクセスした処理は全て落ちます。 ALTER SEQUENCE シーケンス名 INCREMENT BY 10000; ALTER SEQUENCE シーケンス名 NOCACHE; ALTER SEQUENCE シーケンス名 MAXVALUE 10000; SELECT シーケンス名.NEXTVAL FROM DUAL; ALTER SEQUENCE シーケンス名 INCREMENT BY [元の値]; ALTER SEQUENCE シーケンス名 CACHE [元の値]; ALTER SEQUENCE シーケンス名 MAXVALUE [元の値]; 上記の手順で実行すれば、一瞬たりともシーケンスが消え去ること無くリセットできます。ただし、これもリセット中に取得された場合、おかしなことになる可能性は否定しません。それでも落ちることは無く、何か値が返ります。 なお、上記の元の値は、下記で取得できます。 SELECT USER_SEQUENCES.INCREMENT_BY -- 加算値 , USER_SEQUENCES.CACHE_SIZE -- キャッシュ数 , USER_SEQUENCES.MAX_VALUE -- 最大値 , USER_SEQUENCES.LAST_NUMBER -- 現在最大値 FROM USER_SEQUENCES WHERE USER_SEQUENCES.SEQUENCE_NAME = 'シーケンス名' ; このSQLで、もしもLAST_NUMBERが10000を超えているようなら、最初のALTER SEQUENCE文のMAXVALUE値は、LAST_NUMBERよりもさらに大きな値（かつLAST_NUMBER ＋ 暫定的なINCREMENT BY値より小さい値）としてください。そうしないとエラーになります。従って、事前にSQLを実行して元の値、及び現在最大値を取得した上で、実行しなければなりませんね。 これらをパッケージ化するなどしておけば、SELECTしたりする手間はありません。1日1回、自動的に実行するようタスクを組むなどしておけば、毎日初期化されます。 ただし、初期化中に割り込まれた場合は、変な値が返る可能性もありますので、そこは御注意ください。それすらも困る、24時間常に正しく動いてくれないと困るというのなら、次のような方法があるでしょう。 1．2つのシーケンスを用意して、日ごとに使うシーケンスを切り替え、使っていない方を午前2時頃など余裕を持った時間に初期化する。 2．排他処理を設けて、リセット中はシーケンス取得処理を待たせる。 初期化に掛かる時間は自動化すれば1秒以下で終わるはずです。排他処理を設けても、待機は1秒以内ですから、待機させるのも一つの方法ですね。 なお、RAC構成の場合、複数のサーバーの時刻が完全に同期していなければ、リセット時刻がずれることも起こり得ます。接続中データベースサーバーの時刻が23:59なのにリセット済みとか、0:01なのにまだリセットされていない（いずれもリセットを実行したサーバーは0:00に切り替わっている）なんていうことも起こり得ますので、その辺も配慮した設計が必要です。 0時ジャストで1秒もズレること無く完璧に切り替わる必要があるのなら、1番目の方が確実です。実行時刻を見て参照先を切り替えれば済むので、実行時刻に応じてリセットされた値、もしくはリセット前の続きの値を拾えます。
スキーマとは、オブジェクト(表や索引、プロシージャ等)の集合を意味します。また、DBユーザの事もスキーマと呼びます。 具体的には、以下の様になります。 ユーザ ＝ スキーマ スキーマ = ユーザの持つ表や索引、プロシージャの集合 また、「これは各ユーザーに与えられたデータベースオブジェクトを格納する収納ボックス」と言う理解も論理的な意味だとおおむね問題無いと思いますよ。 詳細は以下のマニュアルなども読んでください。 ＜※参考※＞ https://docs.oracle.com/cd/E15817_01/server.111/e05765/schema.htm#9... スキーマ・オブジェクトの概要 ==== スキーマとは、データの論理構造の集合、すなわちスキーマ・オブジェクトのことです。スキーマはデータベース・ユーザーによって所有され、そのユーザーと同じ名前を持ちます。各ユーザーが単一のスキーマを所有します。スキーマオブジェクトは、SQLで作成および操作できます。スキーマ・オブジェクトには、次のタイプのオブジェクトがあります。 ====
統合監査が有効になっているかどうかの確認は、SQL*Plusにログインして、以下のSQLを実行し、VALUEの結果がTRUEならば有効、FALSEならば無効です。 SQL> select value 2 from v$option 3 where parameter = 'Unified Auditing'; 統合監査を有効にするには、以下の①～⑤のステップで有効化します。 ①SQL*Plusで、データベース・インスタンスを停止します。 SQL> shutdown immediate ②リスナーを停止します。 $ lsnrctl stop ③$ORACLE_HOME/rdbms/libディレクトリに移動し、統合監査の実行可能ファイルを有効にします。 $ cd $ORACLE_HOME/rdbms/lib $ make -f ins_rdbms.mk uniaud_on ioracle ORACLE_HOME=$ORACLE_HOME ④リスナーを再起動します。 $ lsnrctl start ⑤SQL*Plusで、データベース・インスタンスを再起動します。 SQL> startup
次の手順でブロックしているセッションを検出し、中断できます。 ①V$SESSIONビューには、接続されているすべてのセッションの詳細が含まれています。BLOCK_SESSIONの値は、ブロックしているセッションのセッションID(SID)が返されます。次のSQL分で、ブロックしているセッションのSIDとSERIAL#を取得します。 SQL>SELECT sid, serial#, username 2 FROM v$session WHERE sid IN 3 (SELECT blocking_session FROM v$session); 結果(例） SID SERIAL# USERNAME ------------------------------------ 144 8982 user1 ②上記の①で得られたSIDとSERIAL#の値を使用してKILL SESSION操作を実行します。 SQL>ALTER SYSTEM KILL SESSION '144, 8982' immediate;
どうすればよいか、の前になぜ遅いのか、の方が先だと思いますが。 原因がわからなければ対策の立てようがありません。 とはいえ、Oracleのバージョンだけで原因を特定できる人はいません。 二つのサーバで何がどこまで同じで、何がどう違うのかの情報もわかりません。 質問内容からチューニングのイロハもないとお察しします。 チューニングは環境、データに依存する部分が大きいためそんなに単純で簡単ではありません。 まずは統計情報を最新にするところから始めてはいかがでしょう。 それでダメならOracle11gということなので少々お金がかかりますが、チューニングアドバイザという機能を利用するか、それでも難しければ専門のコンサルに依頼するのが逆にコストパフォーマンスに見合うかもしれません。
データベースがオープンでファイルにアクセスしている状態で、データファイルの名前を変更したり、ある種類のストレージ・システムから別の種類のストレージ・システムにオンライン・データファイルを移動することができますよ。データベースを停止したり、データファイルをオフライン設定する必要はないです。次の例のように、SQL*Plusからsysdba権限で実行できます。 (例） SQL>alter database move datafile '/disk1/myexample01.dbf' to '/disk2/myexample01.dbf'; 次のようにkeep句を指定した場合、移動操作後も古いファイルが保持されます。 SQL>alter database move datafile '/disk1/myexample01.dbf' to '/disk2/myexample01.dbf' keep; 実行中のオンライン移動操作の状態を表示するには、V$SESSION_LONGOPSビューを使用します。正常なオンライン移動操作の状態は、NORMAL,COPYING, SUCCESSと遷移し、最後にNORMALになりますよ。
script.sql の中で connect ユーザ名/パスワード@&1 というのを入れれば引数で指定したものを接続文字列（TNS名）として指定できます。 もしくは接続文字列は指定せず、SQL*PLusを起動するときに TWO_TASK という環境変数に接続文字列（TNS名）を指定しておけばそこに接続してくれます。
EXCELやoutlookとなんら変りありません。 ロックがかかっている為と移動の仕組み？を知らないからだと思います。
はい。 selectであれinsertであれ、表データへのアクセスは必ずインスタンス上のバッファキャッシュを使用します。 実際に検証して確認することもできるかと思います。
INSERT INTO 【新テーブル】 SELECT distinct K.契約単価, K.業務単価 FROM 【契約】 K, 【集約】 S WHERE -- ① K.メーカーコード = S.取引コード and K.管理番号 = S.管理番号 OR -- ② (K.メーカーコード is null or K.メーカーコード<> S.取引コード ) and K.物品名称 = S.物品名称
SYSDBA以外に、SYSOPER, SYSBACKUP, SYSDG,SYSKMの４つがありますよ。 SYSOPERは、SYSDBA管理権限とほぼ同じで、データベース・インスタンスの起動・停止・サーバー・パラメータ・ファイル(SPFILE)の作成、ARCHIVELOGモードの変更などの標準的なデータベース操作を実行するために使用されます。 SYSBACKUP, SYSDG,SYSKMは、Oracle Database 12cで新しく導入された管理権限です。前のリリースでは、以下のようなタスクにはSYSDBA権限が必要でした。以下の権限を使用すると、データベースがオープンしていない場合でも、データベースに接続できます。 SYSBACKUPは、Oracle Recovery Manager(RMAN)またはSQL*Plusを使用したRMANのバックアップ操作およびリカバリ操作を実行するために使用されます。 SYSDGは、Data Guard BrokerまたはDGMGRLコマンドライン・インターフェースを使用したData Guard操作を実行するために使用されます。 SYSKMは、透過的データ暗号化のウォレット操作の管理のために使用されます。
>Oracleとは？ 西野や白石のような名称だと思っていれば良いと思います。
論理的に、表には列値の行が格納されていますが、行は、最終的にデータベース・ブロックに行断片の形式で格納されるんですよ。 行断片と呼ばれる理由は、状況によっては、行全体を１つのブロックに格納できないためなんです。 これは、挿入された行が大きすぎて単一のブロックに収まらない場合(連鎖行といいます)、または更新によって既存の行が現在のブロックの使用可能な空き領域より大きくなった場合(移行行と呼びます)に発生します。 行断片はまた、表に255を超える列が含まれる場合にも使用されます。この場合、行断片は同じブロックに格納されるか(ブロック内連鎖)または複数のブロックに渡って格納されます。
通常はそうなりますが、SELECT INTOあるいはINSERT INTO SELECT構文を使う場合、WHERE条件を分けてUNION ALLするという手もあります。
まず、NOMOUNTモードとは、インスタンスだけが起動されて、制御ファイル等が開かれていない状態です。以下の場合は、インスタンスは必ずNOMOUNTモードで起動しなければなりません。 ・データベースの作成時 ・制御ファイルの再作成時 ・バックアップおよびリカバリの実行時 MOUNTモードとは、インスタンスの起動に加えて、制御ファイルを読み取って、データファイルとオンラインREDOログ・ステータスを取得した状態です（この状態では、データファイルとREDOログ・ファイルの検証は、まだおこなわない）。 以下のような特定のメンテナンス操作を実行する場合、MOUNTモードにします。 ・データファイルの名前の変更 ・オンラインREDOログ・ファイル・アーカイブ・オプションの有効化または無効化 ・全データベース・リカバリの実行
JoeやEmilyが作成した表は存在したままです。Joeは新しい表を作成することはできませんが、EmilyはCREATE TABLEシステム権限を所有したままです。 システム権限を取り消した場合、その権限にADMIN OPTIONが指定されていたかどうかに関係なく、連鎖的な影響は発生しません。
初期化パラメータのDB_BLOCK_SIZEで指定します。 ただし、この値は、データベース作成時に設定するもので、以降は変更ができないんです。すべての表領域で、DB_BLOCK_SIZEで指定されたサイズの値が使用されますよ。 値の範囲は、2048～32768(OSに依存）で、デフォルト値は8192です。 ちなみに、SQL*Plusから、以下のようにして確認できます。 SQL> select name, value from v$parameter where name = 'db_block_size';
データ・ディクショナリを使用して、以下のSQL文で調べられますよ。 SQL> select username, account_status from dba_users where account_status = 'OPEN'; ※ちなみに、Oracle databaseを導入した直後の状態では、SYSTEMとSYSの２つのユーザーがあるのみですよ。
アンロックするユーザーとパスワードを、仮にそれぞれ、user1, passwd1としますと、以下のようになりますよ。 $ sqlplus / as sysdba SQL> alter user "USER1" identified by passwd1 account unlock; ※ちなみに、アンロックされているユーザーをロックする場合は以下になります。 SQL> alter user "USER1" account lock container=ALL;
SQLだけで全部やろうとしてるのが間違い。 更新系はデータの不整合などが発生しないように事前にパラメータのチェックをするのは当たり前で、値に問題があるなら、SQL実行前にIF文とかでチェックしてはじけばいいのですよ。
Oracleでは、INSERTを開始すれば自動的にトランザクション処理となります。 「必要はありますか？」ではなく、必ずそうなってしまい、回避不可能です。 従って、例えばINSERTしたあと、COMMITせずに放置すれば、他の処理に悪影響を与えることもあり得ますよ。そのINSERT処理自体は問題無くても、他のトランザクション処理には影響することがあるのです。 意図的にAutoCommitするようにされている（極論、INSERT文の次にCOMMITを書いただけの無名PL/SQLもそうなる）のなら、意識しなくても良いかも知れませんが、少なくともINSERT中は確実にトランザクション処理になっています。そのINSERT途中に他のトランザクションが確定され、自分の処理したINSERT内容と主キー競合等を起こせば、AutoCommitも当然うまく行かずにROLLBACKとなってしまいます。 「トランザクション処理であることを明示的に示す必要性があるか否か」という質問であるなら、必要ありません。自動的、かつ強制的にトランザクション処理となるからです。
以下のようなシェルスクリプトを書き<<EOF～EOFまでの間に、実行するSQL文を挿入します。 sqlplus <user>/<passwd> <<EOF ～ SQL文 ～ EOF (例) sqlplus hr/password <<EOF select count(*) from employees; update employees set salary = salary * 1.10; commit; quit EOF
大体、以下の３点です。 ①プラガブル・データベース(PDB)：ユーザーおよびアプリケーションには個別のデータベースとして論理的に示される一連のデータベース・スキーマです。 ②マルチテナント・コンテナ・データベース：物理レベルでデータベース・インスタンスおよびデータベース・ファイルが格納されます。 ③すべてのプラガブル・データベースで次のものが共有されます。 ・バックグラウンド・プロセス ・共有/プロセス・メモリー ・Oracleメタデータ
ラージ・プールは、次のものに対する大容量のメモリー割り当てを提供します。 ・共有サーバーおよびOracle XAインターフェース用のセッション・メモリー ・I/Oサーバー・プロセス ・Oracle Databaseのバックアップおよびリストア操作 ・パラレル問合せ操作 ・アドバンスト・キューイングのメモリー表記憶域 Oracle Databaseでは、共有サーバー、Oracle XAまはたパラレル問合せバッファに対してラージ・プールからセッション・メモリーを割り当てることによって、主に共有SQLをキャッシュするために共有プールを使用して、共有SQLキャッシュの容量が減少することによるパフォーマンス・オーバーヘッドの発生を回避できます。
各Oracle Databaseには、SYSTEM表領域およびSYSAUX表領域が含まれている必要があります。これらはデータベース作成時に自動的に作成されます。 表領域は、オンライン(アクセス可能)またはオフライン(アクセス不可)にできますが、SYSTEM表領域は、データベースがオープンしている場合は常にオンラインです。SYSTEM表領域には、データベースのコア機能をサポートする表(データディクショナリ表など)が格納されます。 SYSAUXは、SYSTEM表領域の補助表領域です。SYSAUX表領域には、追加のデータベース・コンポーネントが格納されます。また、SYSAUX表領域は、すべてのデータベース・コンポーネントを正常に機能させるためにオンラインにする必要があります。 SYSTEMおよびSYSAUX表領域をアプリケーションのデータ格納用に使用することはできません。他の表領域をこの目的のため作成します。 SYSAUX表領域は表領域のリカバリ時にオフラインにすることはできますが、SYSTEM表領域ではできません。いずれの表領域も読取り専用にはできません。
select a.id, NVL(b.hoge, A.DATE) "HOGE" from test_tb1 a left join test_tb2 b on a.name=b.name; これでb.hogeがNULLの場合に限って、a.dateを出すことが可能です。 ただし、b.hogeとa.dateは型が一致していなければエラーですよ。
以下の手順で起動します。 １．リポジトリ・リスナーを起動します（未起動の場合にみ） $ORACLE_HOME/bin/lsnrctl start ２．リポジトリ・データベース・インスタンスを起動します（未起動の場合にみ） $ORACLE_HOME/bin/sqlplus / as sysdba SQL> startup ３．OMSを起動します $OMS_HOME/bin/emctl start oms ４. (OMS/リポジトリ・ホストで)エージェントを起動します。 $AGENT_HOME/bin/emctl start agent ５. 管理対象サーバーでエージェントを起動します。 $AGENT_HOME/bin/emctl start agent
11gR2からはPSRを上書きインストールすることができなくなりました。 なので、R11.2.0.1～R11.2.0.3をあらかじめインストールする必要はありません。 というか、むしろインストールしておかない方がいいです。 R11.2.0.4をインストールするためにはR11.2.0.4のsetup.exeをダウンロードし、直接新規インストールします。 ただ、R11.2.0.4の入手にはCSI番号（保守契約番号）が必要です。 http://support.oracle.com/ にOTNのアカウントをでログインし、有効なCSI番号を入力することで入手が可能です。
知恵袋では、画像は自動縮小が掛けられてしまうので、文字は読めませんから、質問内に文字として書き直して頂かないと、誰も理解できないと思います。 表があって、その中に文字であろう点の集合体があるのはわかりますが、具体的になにがあるのかは見えないです。拡大しても元の画質が完全に失われていますので、読めるものにはなりません。
'1, 3, 5' は文字列です。数値ではありません。 複数の値を一つの引数や変数（バインド変数）に渡すことはできません。また、一つの文字列 '1, 3, 5' を、複数の数値等に分解することも、自動ではできません。自作しなければ無理です。 ＞2) open cEmp for 'select emp_no, emp_name from emp_table where emp_id in (:idList)' using idList; ここまでできているなら、「動的SQL」としてちゃんと動くように組めば簡単にできますよ。 → open cEmp for 'select emp_no, emp_name from emp_table where emp_id in (' || idList || ')'; これで動きますね。バインド変数として渡そうとするから動かないんです。SQLの文字列に、引数を文字列のままで埋め込んでしまえば良いんですよ。
ARCnは、ログ・スイッチが発生した後に、指定されたストレージ・デバイスにREDOログ・ファイルをコピーします。ARCnプロセスは、データベースがARCHIVELOGモードで、自動アーカイブが有効になっている場合にのみ存在します。 アーカイブに高い負荷がかかることが予想される場合は、アーカイバ・プロセスの最大数を増やすことができます。アーカイブ・ログ収納先を複数にすることができます。各収納先にアーカイブ・プロセスを少なくとも１つ指定することをお勧めします。
接続文字列は何のエイリアスがどこを指すのかはtnsnames.oraで定義するので、 tnsnames.oraがなければ接続文字列に何を記述しなければいけないかがわからない はずなのですが・・・。 サンプル（システム添付のサンプルやネット参照）やマニュアルを参考にtnsnames.ora を作ってもいいですし、デフォルトではEZCONNECTが使えるかと思いますので、 "<ホスト名>:<ポート番号>/<サービス名>" を指定してもいけるかも。 ちなみにサービス名に何を指定すればよいかはサーバ側でlsnrctl コマンドから確認 できます(サービス名はtnsnames.oraを使う場合でも必要になります)。 例） lsnrctl service ： サービス"xe"には、1件のインスタンスがあります。 ： 上記例では"xe"がサービス名になります
リスナー登録プロセス(LREG)は、データベース・インスタンスおよびディスパッチャー・プロセスに関する情報をOracle Net Listenerに登録します。LREGからリスナーに、次の情報が提供されます。 ・データベース・サービスの名前 ・サービスに関連付けられているデーターベース・インスタンの名前とその現在の負荷および最大負荷 ・インスタンスで使用可能なサービス・ハンドラ。そのタイプ、プロトコル・アドレスおよび現在の負荷と最大負荷を含む。 インスタンスが起動すると、LREGにより、リスナーへ接続が試行されます。リスナーの実行中は、LREGからリスナーに情報が渡されます。リスナーが実行されていない場合、LREGによりリスナーへの接続が定期的に試行されます。
指摘を受けたということは少なからず、パフォーマンスにうるさいところなんですね。 大量データで計測されても良いかと思いますが、後者の方が速いでしょうね。 何れにせよそのテーブルは全件更新がかかるのだから、1回の更新で済ませてしまった方が、待ちがなくて良いでしょう。 テーブルやインデックスキーの更新待ちも1回で済みますし。
LGWRでは、次の場合に、REDOログ・バッファをディクス上のREDOログ・ファイルに書き込みます。 - ユーザー・プロセスによってトランザクションがコミットされた時。 - オンラインREDOログ。スイッチが発生したとき - REDOログ・バッファの３分の１に達したか、バッファされたデータが1MBになったとき。 - 変更されたバッファがDBWnプロセスによってディクスに書き込まれる前に - 前回の書き込みから３秒が経過したとき。
ALRER TABLEで、DROP CONSTRAINT FOREIGN KEYという構文は誤りでは？ PRIMARY KEYは表に一つですので、PRIMARY KEYというキーワードで削除できます。 外部キー制約は複数定義可能なので、DROP CONSTRAINT 制約名 [CASCADE]という構文になると思います。
PKとかOKなんて略は通じませんよ。Primary Keyとか、PacKageとか、人によって違うものを指したりしますからね。 INSERT文なんて、PACKAGE等に埋め込むなら、動的に生成することも可能です。送り側・受け側の列構造が同じなら、*で省略してしまうのも手ですし、違っていても、送り側の列名、受け側の列名を保管するTABLEを用意して、PACKAGEが実行する際には、そのTABLEを参照してSQLを自動生成して実行させるようにすれば、TABLEの設定値を変えるだけで、列の変化には対応できるようになります。 ＞項目IDを全て列挙という方法 これは何を言っているのかわかりません。列の値のことなのか、列のことなのか、不明です。 まあ、設計の見直しが最善だと思いますよ。DROPまでやってしまうのは、さすがに問題ありです。バグが起きて重要なTABLEを誤ってDROPしてしまったらどうしますか？ ハイリスクだと思います。
PMONは、ユーザー・プロセスで障害が発生した場合に、プロセス・リカバリを実行します。データベース・バッファ・キャッシュをクリーン・アップし、ユーザー・プロセスによって使用されたいたリソースを解放します。例えば、アクティブなトランザクション表のステータスをリセット、ロック解除し、アクティブ・プロセスのリストからプロセスIDの削除を実行します。 PMONは、ディスパッチャおよびサーバー・プロセスの状態を定期的に確認し、稼働停止しているもを再起動します。 別プロセスから、PMONをコールすることもできます。
そんなに難しくは無いと思いますが、visualstudioの使い方から習いたい場合は、資料を作る必要が有るので、コンサルのあるシステム屋に頼むかクラウドソーシングで指導してくれる人を見つけるかになるのではないでしょうかね。
＞CREATE TABLE 作りたいテーブル名 AS SELECT * FROM XXX WHERE XXX = 'xxxx'; ↓ EXECUTE IMMEDIATE 'CREATE TABLE 作りたいテーブル名 AS SELECT * FROM XXX WHERE XXX = ''xxxx'''; これで作れますが、設計を見直すべきかと思います。TABLEをアプリが自動的に作るのは、大抵、設計が成っていないだけかと思いますよ。
システム・モニター・プロセス(SMON)では、必要に応じてインスタンスの起動時にリカバリを実行します。また、使用されなくなった一時セグメントのクリーン・アップなどを実行します。 ファイル読取りエラーまたはオフライン・エラーが原因で、終了したトランザクションがインスタンス・リカバリ中にスキップされた場合は、表領域またはファイルがオンラインの状態に戻った時にそれらのリカバリがSMONによって行われます。 SMONでは、処理が必要かどうかが定期的に確認します。他プロセスは、SMONが必要であると判断された場合、SMONをコールすることができます。
基本的にはスタンドアローン用でもネットワーク対応用でも全く同じプログラムです。開発言語用の接続ソフトの種類でライブラリーの追加インストールが必要な場合があります。C#の場合はMicrosoft純正の接続ソフトの場合不要ですが、これは将来廃止予定なので、Oracle用のODP.NETが必要です。Javaの場合もJDBCが必要です。
チェックポイントとは、データベースのREDOスレッド内にシステム変更番号(SCN)を定義するデータ構造のことです。チェックポイントは、制御ファイルおよび各データファイルのヘッダーに記録されます。このチェックポイントはリカバリの際の重要な要素となります。 チェックポイントが発生した場合、Oracle Databaseでは全てのデータファイルのヘッダーを更新してチェックポイントの詳細を記録する必要があります。これを行うのがCKPTプロセスです。 CKPTプロセスは、ディスクへのブロックの書込みは行いません。これは常にDBWnプロセスによって行われます。ファイル・ヘッダーに記録されたSCNは、そのSCNより前にデータベース・ブロックに対して行われた全ての変更がディスクに書き込まれていることを保証します。
select coalesce(名前, '設定なし') from .... でいけます。 （oracle固有のNVL()でもできますが、coalesce() のほうが標準SQLに則っているのでお勧めです）
TO_CHAR(日付型の値, 'YYYY"年"MM"月"DD"日"') これで出ますね。
絶対に無いとは言いませんが、確実に非効率になるだけでしょう。意味がないと思います。 例えば、NVL2関数を使えばNULLか否かを簡単に切り分けられます。でも、ダイレクトにNULLを見分ける方が効率的です。
REDOログ・バッファはSGA内の循環バッファです。ここに、データベースに対して行われた変更に関する情報が保持されます。この情報はREDOエントリとして格納されます。REDOエントリには、DML,DDLまたは内部的な操作によってデータベースに対して行われた変更を再構築するために必要な情報が含まれています。REDOエントリは必要に応じてデータベース・リカバリに使用されます。 サーバー・プロセスによって、データベース・バッファ・キャッシュが変更されると、REDOエントリが生成され、SGAのREDOログ・バッファに書き込まれます。REDOエントリによって、バッファ内の連続した領域が順次占有されます。REDOログ・バッファは、ログ・ライター・プロセス(LGWR)によってディスク上のアクティブなREDOログ・ファイルに書き込まれます。 簡単に言うと、障害が発生した時にデータベースをリカバリするための、メモリー上のバッファです。
受けられます。 11gR2ですが、以下のマニュアルの12.9.5 INLIST ITERATORおよびEXPLAIN PLANの例 が近い情報かと思います。 http://docs.oracle.com/cd/E16338_01/server.112/b56312/toc.htm 「パフォーマンスチューニングガイド 11.2」
パーティション500個は多すぎるような・・・。 百万件あっても１つあたり2000件、ということですよね。 それに管理が大変そう。。 パーティションはセグメントを分けてしまうので、本当に大量のデータを格納するのでなければデータの格納効率やアクセス効率が悪くなってしまうことがあります。 例えばデータが5件しかなくても5つのパーティションに分かれていればエクステントが最低5つは必要ですし、5件の取得にディスクI/Oが5回発生してしまうことになると思います。 > 意味のないパーティション分割や当分は使わないパーティションなどは > なるべく作らないほうがよろしいのでしょうか？ ある程度の件数を見込める パーティションキーに該当する件数が少ない場合はDEFAULTパーティションにしておいて、数が多くなってきたら分割する、という運用の方が現実的ではないかと。 データの件数や傾向によってパーティションにすべきか通常の索引にすべきか、十分な検証、検討が必要です。
初期化パラメータには静的パラメータと動的パラメータの２つのタイプがあります。 静的パラメータは、テキスト初期化パラメータ・ファイル($ORACLE_HOME/dbs/ini<SID>.ora)またはサーバー・パラメータ・ファイル(＄ORACLE_HOME/dbs/spfile<SID>.ora)の内容を変更することによってのみ変更できます。静的パラメータを有効にするには、データベースを停止して再起動する必要があります。現行のインスタンスに対して変更はできません。 動的パラメータは、データベースがオンラインの場合に変更ができます。セッション・レベルのパラメータとシステム・レベルのパラメータの２つのタイプがあります。 セッション・レベルのパラメータは、ユーザー・セッションにのみ影響します。セッションが終了すると期限切れになります。ALTER SESSIONコマンドを使用して、以下のように変更します。 （例） SQL>ALTER SESSION SET NLS_DATE_FORMAT = 'mon dd yyyy'; システム・レベルのパラメータはデータベース全体および全てのセッションに影響します。ALTER SYSTEMコマンドを使用して、以下のように変更します。 (例) SQL> ALTER SYSTEM SET SEC_MAX_FAILED_LOGIN_ATTEMPTS = 2 SCOPE = SPFILES; ※変更範囲は、オプションのSCOPE句で次のように指定します。 ①SCOPE=SPFILE: サーバー・パラメータ・ファイルにのみ変更が適用されます。現行のインスタンスに対して変更は行われません。動的および静的パラメーターのいずれの場合も、次回起動したときに変更が有効になり、永続化します。静的パラメーターでは、このSCOPE指定のみ使用可です。 ②SCOPE=MEMORY: メモリーにのみ変更が適用されます。現行のインスタンスに対して変更が行われ、すぐに有効化されます。しかしながら、サーバー・パラメータ・ファイルが更新されないため永続化はしません。静的パラメータでは、この指定を使用できません。 ③SCOPE=BOTH: サーバー・パラメータ・ファイルとメモリーの両方に変更が適用されます。現行のインスタンスに対して変更が行われ、すぐに有効化されます。動的パラメータでは、サーバー・パラメータ・ファイルが更新されるため変更が永続化します。静的パラメータでは、この指定を使用できません。
select * from テーブルA where フラグ = 1 AND ID is not null
DBWnは、データベース・バッファ・キャッシュの内容をデータファイルに書き込むプロセスです。DBWnプロセスによって、データベース・バッファ・キャッシュ内の変更されたバッファがディスクに書き込まれます。 ほとんどのシステムでは１つのデーターベース・ライター・プロセス(DBW0)で十分ですが、システムでのデータの変更頻度が高い場合は、書込みのパフォーマンスが向上するように追加のプロセスを構成できます。 追加のプロセスには、DBW1～DBW9、DBWa～DBWzおよびBW36～BW99までの名前が付けられます。これらの追加のDBWnプロセスは、シングルプロセッサー・システムでは効果がありません。 DBWnプロセスの数はDB_WRITER_PROCESS初期化パラメータで指定します。データベース・ライター・プロセスの最大数は100です。起動時にユーザーがこのパラメータを指定しない場合、Oracle Databaseでは、CPU及びプロセッサー・グループの数に基づいて、DB_WRITER_PROCESSの設定を決定します。
結局SELECT時にスキャンする物理データ量が同じなら、大差ないと思いますよ。 所詮、「誤差の範囲内」でしょう。1ミリ秒の差を争いたいというのなら、詳しく精査する価値もあるかも知れませんが、私は1ミリ秒など誤差だと思いますし、ギガバイト単位の大量データなら、数秒でも誤差ですから、そこまで考えません。 分離されたテーブル群が異なる物理ディスクに置かれ、その物理ディスクの性能が違っているとか、様々な条件が絡みますから、提示された条件だけだと、本当に同じか疑わしい部分が残ってしまうのも事実です。 そんなことより、きちんと正規化した設計にしたり、適切なINDEXを付けるなどする方が圧倒的な速度差を生みます。地区ごとにテーブルを分けるメリットは無さそうな気がしますけどね。最初から目的のデータがどのテーブルにあるのかわかっているのなら、そこだけをSELECTする方が速くもなるでしょうけど、設計上常にUNION ALLで連結しているのなら、特別な意図が無い限り、意味も無いと思います。
PGAが、UGAを含むのは、専用サーバー環境のみです。共有サーバー環境では、複数のクライアント・ユーザーによってサーバー・プロセスが共有されます。この場合、UGAがSGA(共有プールまたは構成されている場合はラージプール）に移動され、PGAには、スタック領域のみが残ります。 UGAの構成は以下のとおりです。 ・カーソルのランタイム情報を格納するカーソル領域。 ・セッションに関する制御情報用のユーザー・セッション・データ記憶域 ・SQL文を処理するSQL作業領域。以下の内容です。 - データを順序付けするOREDER BYやGROUP BYなどの機能のためのソート領域 - 表のハッシュ結合を実行するためのハッシュ領域 - データ・ウェアハウスで使われることの多いビットマップ索引を作成する際に使用されるビットマップ作成領域 - ビットマップ索引計画の実行を解決するてめに使用されるビットマップ・マージ領域
次のものがありますよ。 ohasd(Oracle高可用性サービス・デーモン): Oracle Clusterwareプロセスを起動します。 ocssd: クラスタ同期サービス・デーモン dskmon(ディスク監視デーモン): Oracle Exadata Storageの入出力フェンシングを行なう。 cssdagent: CSSデーモンocssdの起動、停止およびステータスの確認を行なう。 oraagent: Oracle固有の要件および複雑なリソースをサポートするためにクラスタウェアを拡張します。 orarootagent: ネットワークなどのrootが所有するリソースの管理に役立つ特殊なOracleエージェント・プロセス
PKは主キーの意味でしょうか、主キーの場合は重複は許されないので、質問のようなINSERTは出来ません。SELECTした結果をINSERTする場合はVALUES(...)の代わりにSELECT文を書けば良いだけです。
Oracleが回答で引用するようなナレッジといえばおそらくKROWNかMetalinkではないでしょうか。 それらを参照するにはMOS（My Oracle Support）へのログインが必要です。 MOSのURLは http://support.oracle.com/ です。 ただ、MOSにログインするアカウントはSCI（有効な保守契約番号）に紐づけられている必要があります。 つまり、Oracleの回答を直接参照できないとナレッジも参照できない、ということです。 # たまにナレッジを勝手に引用して公開している人がいますので、ドキュメントNoやキーワードでググると見つかることもたまにありますが
SELECT MAX(番号) AS 番号,種類 FROM テーブルZ GROUP BY 種類 GROUP BYで要望の結果を得られますが、「種類毎に最大の番号」の「行の他の列値も得たい」となると、もっと複雑になります。
コマンドからと、SQL*Plusから、２通りの方法で確認できますよ。 ①コマンド oracleユーザーで以下のコマンドを実行します。 $ srvctl status database -db <db名> ②SQL*Plus 特権ユーザーで接続して、以下の文を実行します。 SQL>SELECT * FROM V$ACTIVE_INSTANCES;
こんにちは、 たぶん、古いプロセスが起動したままになっている可能性があります。古い環境を削除された時に、システムを一旦、リブートされましたか？ リブートされてない場合は、面倒でも、もう一度、今の環境を削除し、一旦、システムを再起動した後、再導入することをお勧めします。
はい、間違いありません。 そのような異例系のテストはしてくださいね。 取引中、途中切断でデータが入らないこと。
小さなシステムでは分けるメリットは特に無い場合が多いです。 大きなシステムになると、ハードディスクを何本、何十本と使って構築するようになります。そうなった場合、ディスクの性能やRAID構成の相違などによって、速度差が出て来たりします。 例えば、滅多に読み込まないけどオンラインで持っていたいデータは回転数の高くない安価な大容量HDDを使い、頻繁に読み書きするデータは高くて容量が少なめだけど高速なHDD、一時処理用のTEMP表領域などはSSDやRAMディスクに割り当てるなどといったようにすることを実現するために、表領域を分けます。 上記のような切り分けも、表領域がそれぞれの場所に作られていれば、Oracle上のオブジェクトを作る時には、表領域さえ正しく指定すれば、自動的に適切な物理ディスク上に配置されるようになるというわけです。 表領域が存在しない場合、オブジェクトを実際にディスク上のどこに配置するかをいちいちファイル名で指定するか、指定そのものができないかのどちらかになってしまいますね。でも、表領域があれば、通常は最初に適切な表領域の配置をしておくことで、それ以降は表領域の指定さえすれば、適切な配置で最適なパフォーマンスを発揮させられるんです。 なお、ディスクが1本しかないハードウェアでも、表領域の存在意義はあります。初期サイズや自動拡張などの設定値を表領域ごとに変えられますので、大きめのオブジェクトを配置するための表領域、小さめのオブジェクトを配置するための表領域、一時処理等を担うオブジェクトを配置する表領域などに分けておくと、テーブル等のオブジェクトを作る時に、いちいち細かい設定値を指定しなくても、適切な表領域に作るだけで、自動的に細かい設定値が初期化されるようになります。 【管理の簡略化】というのが最大のメリットでしょう。裏を返せば、名前が異なるだけで同じ設定の表領域を、同じ物理ディスク上にたくさん作っても、基本的には何の意味も無いということです。
たぶん、 /usr/local/binの下に、古いファイルが残っているのが原因のようですね。２つのサーバーの/usr/local/binの下の、dbhome、oraenv、coraenvを削除してから、再インストールしてみてください。ついでに、/etc/oratabも削除くださいね。
上手くいかないですか？ちょっと邪道ですが、以下を試してみてください。 #parted /dev/mapper/mpatha (parted) mklabel gpt Yes/No? y (parted) quit #mkfs.ext3 /dev/mapper/mpatha #parted /dev/mapper/mpatha (parted) mklabel gpt Yes/No? y (parted) mkpart primary 0 80G (parted) quit 上手くいったら、残り２台分を行います。
理屈上は性別マスターに分割という考え方もありますが、現実的に性別が間違って登録される、性別が変わった（！）といったケースが頻繁かつ広範囲で起こるとは考えにくいです。 仮に発生しても、該当者だけをUPDATEすれば済む話かと。 実際、性別マスター表を定義している業務システムを、私は見たことはありません。 私が関係したシステムの多くは性別列(CHAR(1)型、またはNUMBER(1)型）に1=男、2=女、null=不明として登録して表示はアプリ側にお任せ、というパターンでした。 テーブルの結合はSQL実行において一般的にコストが高い処理なので、意図的にテーブル分割せず冗長化するのも技法の一つです。
あくまでも旧環境が正常稼働していたとの前提ですが、大体、以下で上手く行くかと思います。 ①それぞれのserver nodeにおいて、 /u01ディレクトリと/etc/oracleディレクトリを削除してください。/u01については、あらためて初期化します。 # mkdir -p /u01/app/grid # mkdir -p /u01/app/oracle # mkdir -p /u01/app/12.1.0/grid # chown -R grid:oinstall /u01 # chown -R oracle:oinstall /u01/app/oracle # chmod -R 775 /u01 ②それぞれのserver nodeにおいて、そして、girdユーザー、oracleユーザーの .bash_profileにおいて、Oracle関係の設定を全て、コメントアウトします。 ③Strorage３台分を全て初期化する必要があります。初期化には、 partedコマンドを用いて、再パーティショニングしてください(3台分）
VARCHARA2型との事ですのでOracleと推測して回答します。 SELECT * FROM "TABLE" WHERE YMD > SYSDATE-80 です。尚、日付け計算はRDBMS毎に文法が大きく異なるので注意が必要です。
以下の文で検索できますよ。 SQL> select user from dual; ここで、userは、データ・ストアに現在接続しているユーザーの名前を返えす関数です。また、dualは、関数の値を返すための表です。
SQLの勉強始めたばかりなので、自信が無いですが、 GROUP BY に複数列指定するのはどうでしょうかと思います。 SELECT DATA,MAX(cnt),DATE,BarClose FROM table GROUP BY DATA, DATE, BarClose これで、BarOpenが取れるかどうかわかりません。select文にSUMを使うと確実に取れないだろうと思いますが、maxだったら取れても良いような気がします。
ホスト名は一緒でも、FQDNじゃなくてもよいということを確認しておくべきかも。 認証で問題になり、「TNS-12638:資格証明の取出しに失敗しました」エラーになる場合はsqlnet.oraのSQLNET.AUTHENTICATION_SERVICES パラメータを変更する必要がある、という事例もいくつかあります。 また、Enterprise Managerを構築している場合はドメイン参加前にいったん削除し、参加後に再構築する方が無難です。
動作未確認です。 SELECT カテゴリ大, カテゴリ小, count(distinct クラス), count(distinct 名前) FROM テーブル GROUP BY カテゴリ大, カテゴリ小
$ORACLE_HOME/bin/dbcaスクリプトのJRE_DIRの値を次のように書き換えて、dbcaを再実行してください。 (変更前) JRE_DIR=/u01/app/oracle/product/12.1.0/dbhome_1/jdk/jre ↓ (変更後) JRE_DIR=/usr/java/jre1.8.0_66
日本語でOUIを起動するためには、JREの導入が必要です。 以下のリンクから、最新のJREをダウンロードして導入してください。 http://java.com/en/download/ そして、runInstallerのオプションに"-jreLoc"をつけて、JREの導入された場所を指定します。 （例） $ ./runInstaller -jreLoc /usr/java/jre1.8.0.66/ ※JREの場所は、/usr/java/<Jreバージョン>/となります。念のため、ディレクトリ名を確認してから、OUIを起動してください。 $ ls -l /usr/java
1 AAA 緑 50 2 BBB 緑 45 3 CCC 緑 30 4 DDD 緑 25 5 EEE 緑 20 6 FFF 緑 10 7 GGG 緑 5 こういうパターンがあった場合、結果は 1 AAA 緑 0 2 BBB 緑 10 3 CCC 緑 20 4 DDD 緑 30 5 EEE 緑 40 6 FFF 緑 50 7 GGG 緑 60 こうなりますか？ GGGは50を超えてしまいますが、いいんですか？
CLOBならできると思いますが。 今のバージョンのマニュアルにはSQLの最大の長さの記載がありませんが、無制限ではないかもしれません。 あんまり長すぎないよう一応気をつけた方がいいかもしれません。 # Parseにも負荷がかかりそうですし
どちらも内部結合のクエリですので、上下のクエリとも同じ結果が返ってくると思います。
Columnコマンドで列の長さを地道に調整するしかないですね。 SQL>COLUMN name FORMAT a40 SQL>COLUMN value FORMAT a20 位で良いかな。後は、a40（40文字）とa20(20文字)の箇所をご自身で調整してください。コマンドは短縮して、以下のようにしても大丈夫です。 SQL>col name for a40 SQL>col value for a20
WHERE句の条件列をIDとDATEの２つにしては？ select ID, name, date from テーブル名 where (id, date) in (select id, MAX(date) from テーブル group by id);
１．インデックスがなければどのみちテーブルスキャンしなければならないので、GROUP BY の順番はほとんどパフォーマンスに影響しないと思います。インデックスを作る場合には人名を最初に持ってきたほうがパフォーマンスは上がるでしょう。 ２．（３）と（４）ではそもそも帰ってくる結果が違いますね。（４）のほうが多くの結果を返すので（４）のほうが遅くなると思います。 ３．この例の場合は必要ありません。パフォーマンスに対する影響もないといっていいでしょう。厳密にいえば明示的にテーブルを指定したほうが複雑なクエリをコンパイルする際にコンパイル時間が短くなるということはあるかもしれませんが、クエリ実行にかかるそう時間から見ればほとんどの場合無視して構わない差です。
Oracleユーザーで、以下のコマンドで調べられます。 $oerr ora nnnn SQL*Plusの中からは"!"をコマンドの前につけて参照してくださいね。 SQL>!oerr ora nnnn
今回の質問は、 「PACKAGE内の個々のFUNCTIONやPROCEDURE単位での依存性を拾い出す方法」 を知りたいということですよね。結論は方法が【存在しない】ということで差し支え無いと思います。 SELECT * FROM DBA_DEPENDENCIES; 上記で、【PACKAGE単位】の依存性は拾い出せます。ログインしているUSERが持つオブジェクトだけで良ければ、DBA_DEPENDENCIESではなく、USER_DEPENDENCIESをSELECTしてください。 PACKAGE内に含まれる個々のPROCEDUREの使用するオブジェクトについては、データディクショナリーからは拾い出せないと思います。Oracleでは、【PACKAGE内の個々のPROCEDUREごとにコンパイルするといった動作をしない】ので、PACKAGEとしての依存性は影響しても、【PACKAGE内のPROCEDUREごとの依存性は関係無い】んですよ。そういう単位の動作（コンパイル）が無いからです。 それをどうしても機械的に知りたいなら、PACKAGE化せず、中のPROCEDUREをそれぞれ単体のPROCEDUREにするか、自分で解析プログラムを組んで、PACKAGE化するなどして利用するしかないでしょうね。。。 Oracle 11gからPL/Scopeという機能が追加されているのですが、これでもこの質問が目指すところは取れませんでした。DBA_DEPENDENCIESも目的のものは出ませんし、簡単に取得できる手段は無いと思います。
サーバーにするには物足りませんが、勉強に使う程度なら十分かと。 実際、こちらはデスクトップとはいえもっと低い性能のPCにVMwareでLinux32bit ＋ Oracleを仕事で使っています。 同時にいくつもアプリを起動してしまうとページングが発生して重くなってしまいますが、VMを単体でしばらく使う程度であれば問題ないと思います。 参考スペック） CPU=Intel Core2Duo OS=Windows7 64bit メモリ=2GB HDD=160GB VM=VMware4 仮想マシン=Oracle Linux 5.6 ＋ Oracle 10g XE
DBAグループのユーザでログインしていませんか？ DBAグループのユーザによるSYSでのログインはOS認証が優先されてしまい、デタラメなパスワードを入れても無視されてログインできてしまいます。 ＊DBAグループに属していないユーザは正しいパスワードでしかログインできませんが
以下の感じでできるのでは。 select 商品番号, 年代, 数量 from テーブル where (商品番号, 年代) in (select 商品番号, max(年代) from テーブル group by 商品番号); サブクエリでは商品番号ごとの最大の年代を持ってきて、それを条件に利用しています。
SELECT a列, b列, c列, d列 FROM ( select a列, b列, c列, d列, rank() over (partition by a列,c列 order by d列) as rnk from テーブル ) Q WHERE rnk = 1 and d列 = '02'
まずDBLinkを使用したインポートにはダンプファイルは使用されません。 （NETWORK_LINKパラメータとDUMPFILEパラメータは同時に指定できません） DBLink先から直接の接続先へのDB間コピーになります。 マニュアルのパラメータの説明に明記されています。 http://docs.oracle.com/cd/E16338_01/server.112/b56303/dp_overview.h...
select 顧客ID,顧客名 ,sum(case 利用店舗 when 1 then 1 else 0 end)as A店利用回数 ,sum(case 利用店舗 when 2 then 1 else 0 end)as B店利用回数 ,sum(case 利用店舗 when 3 then 1 else 0 end)as C店利用回数 from A group by 顧客ID,顧客名 order by 1 です。
"Cloud computing"の"c"です。ちなみに、11gと10gの"g"は、"Grid computing"の"g"で、8iと9iの"i"は、"Internet"の"i"です。
ボタンを押してくだよー がんばれだよw
V$PARAMETERビューで確認できます。 SQL>select name,value from v$parameter; しかしながら、もっと簡単にshow parameterコマンドで確認ができます。 SQL>show parameter show parameterの後に、任意の文字列を指定すると、その文字を含むパラメータを全て表示することもできます。 SQL>show parameter _pool_
順序はどうでもいい、というならば update テーブル名 set 更新日 = 更新日 + rownum / 86400; としてみては。 rownumの代わりに順序を使ってもできます。
V$BGPROCESSビューから確認できますよ。以下のようにsysdbaで接続してご確認ください。 $sqlplus / as sysdba SQL>select name, description from v$bgprocess;
3つ必要となります。 まず、各サーバーのPublic Network側にそれぞれ1つずつ必要ですが、サーバーの数が２つであるため、ここでは２個VIPが必要です。 次に、SCANアドレスの数だけVIPが必要ですが、DNSサーバーを使用せず、/etc/hostsファイルで管理されるため、SCANアドレスの数は１となり、SCANアドレスに必要なVIPは１個となります。 以上、サーバーで２個、SCANで1個の、計３つのVIPが必要です。
あなたは A.「SQLをしっかり理解したい（そのための努力を惜しまない）」 と考えていますか？それとも、 B.「どうせ理解できやしないんだから、とにかく正解を教えてくれ」 と考えていますか？ 補足か返信でお答えください。 それに応じて私も返信で答えます。 （Aなら３日くらいかけて丁寧に説明するし、Bなら簡単に回答を示す）
何をしたいのか良く分からないですが、一応回答します。 ①製造から開発へ資材を追加したい(全レコードINSERT) 製造には資材の列名が無いので追加出来ません、単にIDを追加したいのであれば 「INSERT INTO 製造（ID) SELECT ID FROM 共通 INNER JOIN ON 製造.物品コード=共通.物品コード」です。 尚、テーブルの持ち方に問題が有ると思います、全レコードINSERTをする必要が有る事は基本設計に問題が有ると考えます。通常データは発生時点でINSERTされ、不要になった時点でDELETEし、重大な変更が無い限り他のテーブルにINSERTされる事が無いテーブル構造にします。
３つのディスクが必要です。 標準の冗長構成をとる ASM ディスク・グループにOCR(Oracle Cluster Registry)と投票ディスクを格納する場合は、OCRが2つと投票ディスクが3つ作成されるため、これらのファイルを格納するために、最低でも3つのディスクを ASM ディスク・グループの構成に使用する必要があります。
最小構成は、PublicとPrivateの２つです。更にPrivateは、インターコネクト用とストレージ用に別々に分けたほうが望ましいですが、分けなくても導入は可能です。
ここはOracleのカテゴリですが、phpMyAdminを使っているということは、MySQLを使用していますか？ a/bの整数部の桁数が、最大どのくらいか分かりませんが、例えば5桁とすれば、例えば次の方法はどうでしょう。 SELECT CAST(a AS DEC(18,13))/CAST(b AS DEC(18,13)) as x (SELECT count(*) as a from group by test) AS A inner join (SELECT count(*) as b from ) AS B COUNT(*)を求める時点で、 CAST(COUNT(*) AS DEC(18,13)) AS a のようにしてもいいかもしれません。 MySQLだけでなく、各RDBMSでは数値定数の書き方、数値データ型の演算時の各列のデータ型で、内部的にデータ型を決めます。 COUNT(*)の結果のデータ型は、整数型(INT系）になります。a/bで整数型同士の演算でも、データ型の組み合わせで結果のデータ型が決められます。 したがって、a/bの前に、aとbをDEC(18,13)に型変換することで、小数点以下の値も保持できるのです。 DEC(m,n)は、数値全体がm桁、その内、小数点以下がn桁という意味です。
SQL DEVELOPERに設定したSIDがsqlplusと異なっており、別のスキーマあるいはＤＢに接続していませんか。 あるいはSQL DEVELOPER経由でログイン時に使用しているアカウントのロールが不足していませんか。
ちゃんと全貌を示して頂きたいです。 前半のカーソルに対して、後半の日本語混じりのIF文が何を言いたいのかサッパリわかりません。未出荷とかキャンセルとか、何かの変数ですか？ 言っていることがわからないので、誰も回答できないし、可否すら答えられないのです。
現役エンジニアです。JTreeとJDBCの関連付けをしようというのは、 少し意味不明です。JDBCは、あくまでデータを仲介しているだけの Driverなので、この話では、無関係のような気もします。もちろん JDBCはデータベースを扱うかぎりは使いますが。つまり、自分で ロジックを作るか、SQLの結合によって作るかの２つだと思います。 同じ表同士でも結合できるので副問い合わせのJOINによっても可能か と思います。しかし、これだけでは、データベースの表構造が見た だけでしかわかりません。 http://wtar00.blog.fc2.com/blog-entry-47.html
TO_NUMBER関数で書式を正しく指定しない限りエラーですよ。 そもそもOracleの数値型にカンマは使えません。カンマが入っているのはただの文字列であり、書式指定が無いとTO_NUMBER関数による変換エラーとなります。TO_NUMBER関数を省略した場合も、暗黙の変換が掛かり、結局同じエラーです。 TO_NUMBER('1,0000,000', '9,9999,999') 上記のように書いた場合は、エラーが起こらずにそのまま10000000としてデータベースに入ります。 1,0000,000 '1,0000,000' "1,0000,000" TO_NUMBER('1,0000,000') これらは全てエラーです。
> A1.制御ファイルの場所と名前は初期化パラメータファイルに記載してあり、NOMOUNT時に読み込まれる 「制御ファイルの場所と名前は初期化パラメータファイルに記載」の部分は正しいですが、制御ファイルはMOUNTしようとする時になって初めて読み込まれます。NOMOUTではりません。 SQL*Plusからstartupを実行（もしくはそれと同等な操作）すると、以下の段階を経て起動が進んでいきます。 (1) NOMOUNT 初期化パラメータを読み込んでインスタンスの起動が完了（共有メモリを確保し、バックグラウンドプロセスを起動した）した状態がNOMOUNT状態です。 この時点で、初期化パラメータ CONTROL_FILES の値から制御ファイルの場所とファイル名の設定を確認した、というだけで制御ファイル自体にはアクセスしません。 なので、パラメータで指定した場所に制御ファイルが存在していなくてもNOMOUNTは失敗しません（そうでなければ初めてデータベースを作るときは事前に制御ファイルを作成しておかなければならないことになってしまいます）。 アクセスできるのはV$INSTANCE等のインスタンスに関する情報だけで、制御ファイルに記録されているデータベース及びデータベースの構成（表領域やデータファイル名など）の情報にはアクセスできません。 (2) MOUNT 制御ファイルを読み込んでデータベースの構成に関する情報にアクセスできるようになるのがMOUNT状態です。MOUNTが成功するためには制御ファイルにアクセス可能で内容が正常な状態である必要があります。 MOUNTに成功すると、V$DATABASE、V$TABLESPACE、V$DATAFILEなどのデータベース構成情報にアクセスできるようになります。 但しテーブルや索引等のデータにはアクセスできません。 アーカイブモードの変更やリカバリはこのモードで行います。 (3) OPEN 制御ファイルに記録されている各ファイルにアクセスし、構成情報をチェックします。 すべてのファイルの整合性が合っていることが確認できてはじめてOPENできます。 OPEN後はテーブルデータを含むすべてのデータにアクセスできます。 正常な状態でないファイルが存在することを検知するとリカバリを要求し、OPENは失敗します。
Oracleデータベースを構築できる無料サーバーなんかまず無いでしょうね。あり得ないと思いますよ。 Oracleデータベースは非力なノートPCでも別段問題なく動きます。ちょっとしたテストなどであれば、余裕で動きますよ。現に私がATOMに毛が生えた程度のCore M搭載ノートPCで動かしていますから。常時起動していますが、IEなどの方がよっぽど重いですね。 常駐させている場合、メモリは一定量食いますけど、CPU負荷は何か動かさない限り原則無いに等しいです。私の構築したDBは、何もしていない場合、タスクマネージャーで見る限り、oracle.exeのCPU負荷は常に0％、メモリ消費量は210MB前後をたまに変化しているという感じですね。当然、ノートPCなので移動中も使えるし、インターネット接続が無くても何の問題も無く使えます。外部サーバーを考えるくらいなら、自分のPCに入れちゃった方が良いと思いますよ。
遅くなってくる原因がわからないと何とも言えませんが…。 本当にインスタンス再起動で解決するなら、共有プール等のフラッシュでも効果があるかも知れません。 但し、ほかの処理に悪影響を及ぼす可能性があるので、試してみるならタイミングに注意。
ORACLEから離れてだいぶたつので、誤っていたらすみません。 COMMITまたはROLLBACKは、 TRANSACTIONが明示的または暗黙的に設定された時に使用できます。 エラーは、たぶんご使用のカーソルでTRANSACTIONがかけられていない為と推測されます。 ちなみに、更新日の設定は、PL/SQLのトリガーで行うのが普通だと思います。 (構文は・・・・忘れました・・・・(+_+))
「文字列」の文字コードを確認する術はありません。文字列単位ではなく、TABLEの「列」単位だからです。TABLE内の列ごとに文字コードの混在は可能ですが、同じ列（COLUMN）内での混在はあり得ません。 SELECT * FROM NLS_DATABASE_PARAMETERS WHERE PARAMETER LIKE '%CHARACTERSET'; 上記SQLを実行して、PARAMETER列が「NLS_CHARACTERSET」の行で返ってきたVALUE列の値が、CHAR，VARCHAR2，CLOB型等の文字コードを示し、「NLS_NCHAR_CHARACTERSET」の行で返ってきたVALUE列の値が、NCHAR，NVARCHAR2，NCLOB型の文字コードを示します。
> ORA-01033 Oracle initialization or shutdown in progress インスタンスが起動中または停止中だと言ってます。 ダウンしかけているのか、起動に失敗している状況かもしれません。 > shutdown normal > startup mount > alter database open これらを実行した結果、どのようなメッセージが返ってきたのでしょうか。 コマンドが成功しないようなら、alertログを見て何かエラーが出てないかを確認すべきです。 > ORA-00283: recovery session canceled due to errors > ORA-00264: no recovery requierd これは単にリカバリが必要な状況ではない、と言っているだけです。 # このような重要なコマンドを意味もわからないまま実行したりすると取り返しがつかなくなるかもしれませんよ。。
XE11gは11.2.0.1しかありません。 11.2.0.4が必要ならEEかSE、SE Oneで保守契約を結ぶしかないと思います。
相手が R9.2.0.4以上であれば11g以下のクライアントで接続はできます。 ただ、データベースリンクでSQL Serverに直接つなぐにはHeterogeneous Connectivity（異機種接続サービス）の構成が必要と思われます。 日本語の資料はほとんどないので英語のドキュメントを読み解かなければなりません。 それより、SQL Server Management Studio でより簡単にできるようです。 以下をご覧になり、不明な点はSQL Serverのカテで質問されてはいかがでしょうか。 http://program.sugasaki.com/2011/11/11/oracle-%E2%86%92-sql-server-...
そのクエリーの2145文字目を確認してください。
groupの出し方が不明ですよ。年月日ごとに適当な番号でも振るのでしょうか？ そうであるなら、「適当な」やり方の一つとしては、 SELECT "t".年月日, ROWNUM "n" FROM (SELECT DISTINCT 年月日 FROM Table-test1) "t" これで年月日ごとのランダムな番号を出せますから、これを結合してしまえば良いだけですね。 日付順に1番から降順で振りたいとかいうなら、DISTINCT＋ROWNUMではなくROW_NUMBERを使ってください。それ以外なら、具体的に指示が無いと何を作りたいのかわからないです。
nullは値が存在しない特別な意味を持っているので、条件判定するには「IS NULL」または「IS NOT NULL」を使う必要が有ります。よって、質問の場合は抽出対象にはなりません。
delete from 日本 where 都道府県名!= (select 名称 from コードマスタ where コードマスタ.コード=日本.コード and 区分=5) でどうでしょうか。
こんにちは。 示しているページの最後の部分に、 エクセルのダウンロードのサンプルプログラム：[UserOutput.cfm] <cfprocessingdirective suppressWhitespace="yes"> <cfsilent> <cfprocessingdirective pageEncoding="utf-8" /> <!--- 読取情報 ---> <cfset temp_dir = ExpandPath("temp\")> <!---ファイルパス---> <cfset temp_file_name = "UserTemplate.xls"> <!---ファイル名---> <cfset sheet_name = "list"> <!---シート名---> <!--- 出力情報 ---> <cfset output_dir = ExpandPath("temp\")> <!---ファイルパス---> <cfset output_file_name = "社員一覧" & #DateFormat(Now(),"yyyymmdd")# & #TimeFormat(Now(),"HHmmss")# &".xls"> <!---ファイル名---> <!--- 社員マスタデータを取得 ---> <cfquery name = "qGetList" datasource="#Application.dsname#"> SELECT USER_ID AS COLUMN_1 ,USER_NM AS COLUMN_2 ,USERKANA_NM AS COLUMN_3 ,SEX AS COLUMN_4 ,AGE AS COLUMN_5 ,BIRTHDAY AS COLUMN_6 FROM M_USER ORDER BY USER_ID </cfquery> <cfset iRow = qGetList.recordcount> <!---出力件数---> <cfset iColumn = listlen(qGetList.columnList)> <!---出力項目数---> </cfsilent> <!---エクセル生成---> <cfscript> //スプレッドシートオブジェクトを作成 spObj = spreadsheetread("#temp_dir##temp_file_name#","#sheet_name#"); //クエリを出力 for(j = 1;j lte #iRow# ;j=j+1){ for(i = 1;i lte #iColumn# ;i=i+1){ SpreadsheetSetCellValue(spObj,#qGetlist["COLUMN_#i#"][j]#,j+2,i); //値出力 } } //サーバにエクセル生成 SpreadsheetWrite(spObj,"#output_dir##output_file_name#","yes"); </cfscript> <!--- ダウンロード指示 ---> <cfheader name="Content-Disposition" value="attachment; filename=#output_file_name#"> <cfcontent type="text/comma-separated-values" file="#output_dir##output_file_name#" deleteFile="YES"> </cfprocessingdirective> がありますよね、このコードを自分のシステムに合わせた調整を行う。 という作業のことになるのですが、「分からない」というのは、なにがわからないのでしょうか。 >エクセルに出力する関数など御存知であれば教えていただけないでしょうか。 示しているコードが、そのままですよ。 説明にも書いてますし。
準同期というのがどういったものかわかりませんが、OracleのData Guardはスタンバイサーバを最大30まで構成できます。 具体的な情報は各バージョンのマニュアル「Data Guard概要および管理」を参照してください。 http://www.oracle.com/technetwork/jp/indexes/documentation/index.ht...
Oracle 11g Express Edition（Oracle XE）は無料で利用可能です。 https://docs.oracle.com/cd/E36055_01/install.112/b66470/toc.htm こちらがその公式解説ページになりますが、他にもOracle XEの解説サイト等を探して見て、その解説を見ながら進めてください。
explain planの実行やSQLトレースの取得で確認できます。 (1) explain plan explain plan for SQL SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY()); (2) SQLトレース alter session set sql_trace=TRUE; SQL alter session set sql_trace=FALSE; アラートログと同じディレクトリに trc ファイルが出力されるので、下記をやって出力ファイルを確認。 tkprof (trcファイル名) (出力ファイル名) ※どちらもplustraceほどは手軽ではありません。
> ■質問1 監視はパフォーマンスの出ないSQL文を検出するのが目的ですので、実行時間が短すぎるものは監視できません。 監視を強制することは可能ですが、有償オプションを購入している必要があります。 > ■質問2 データ自体によっても変わりますし、WHERE句の条件によっても変わります。 一見同じSQL文に見えても、比較している値によっても違ってきますよ。 例） SELECT ～ FROM ～ WHERE COL1 = :hensu1; 例えば上記↑のバインド変数hensu1の内容が1なのか10なのかによって実行計画が変わることがある、という意味です。
一般的なパソコンでローカル環境でも使えるデータベースソフトを入れて、そちらで処理してみては？ たとえばsqliteとか、SQL SERVER EXPRESS…は重いか…、MySQL、PostgreSQLあたり。どれもODBC接続に対応していますので、EXCELから操作可能です。
こんな感じです。 update 日本 set 都道府県 = case 都道府県 when '東京' then '東京都' when '大阪' then '大阪府' end where 都道府県 in ('東京','大阪')
× PERTITION BY ○ PARTITION BY エラーメッセージが的確ではありませんが、原因は綴りミスですね。 「PERTITION」という指示語は無い ↓ "OVER ("の次に来るべき語句が来ない ↓ おかしい ↓ カッコが閉じられていないんじゃないのか？ こういう感じで、ORA-00907のエラーが出たのでしょう。 実際にはただの綴りミスですよ。
メディアというか、いくつでもインスタンスは作れます。 OSのリソース（ディスク容量、物理メモリ）の許す限り。
# あまり詳しいわけではありませんが、 要するに分散トランザクションのいずれかで問題が発生した、ということかと。 分散トランザクションは両方のトランザクションが成功して初めてグローバルトランザクション(トランザクション全体)が成功しますので。 エラーの説明にある通り、トランザクションに関しては対処法は不要でしょう。 アプリでエラーが出ているならその対処は必要かもしれませんが。
意味は違うでしょ? 同一と見なすことだ出来るので、再検討の対象になると言うだけです。
共有プールの不足という情報が転がっていますね。 あとはOracle社のサポートに直接お問い合わせ頂いた方がよろしいかと思います。
Windowsにログオンしてるユーザーの問題でしょ。 OracleインストールしたユーザーやdbaグループのユーザーならOS認証できるかと。
